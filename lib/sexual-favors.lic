=begin

   I think you know what this script does...

   This script keeps track of favor gained and used.
   Set the script to start on login.
   Type "favor" with the script running to see how much favor you have.
   Type "favor clear" to set symbol favor to 0.
   Type "favor set <amount>" to set symbol favor to something else.
   Touch the globe to raise or lower symbol favor to the correct range.
      To disable this, use  ;vars set globe_sets_favor=no

   1 favor is defined as the amount of favor it takes to do "sym thought ab",
   which is equivalent to 1/1000th of a globe revolution.

   Favor gain formula is accurate, but the undead level is not always known.  The
   script may use the undead's TD to calculate the exact level.  Calculating the
   exact level for other hunting methods may not be practical.

   The script can tell the difference between kill favor and spectator favor, but
   only for attacks that the script knows about.  If you land the killing blow and
   the script reports it as spectator favor, send me a log of it and I'll fix it.

   The script will check the weapon name when you use symbol of blessing to figure
   out which blessing cost to use.  It's only looking for a magical metal or wood
   in the weapon name.  If it's wrong, let me know and I'll try to fix it.

     author: Tillmen (tillmen@lichproject.org)
       game: Gemstone
       tags: voln
    version: 0.34

   changelog:
      0.34 (2018-06-23):
         don't divide by 0 at Voln rank 0
         abort script if you're not in Voln
      0.33 (2018-01-12):
         added Bramble Patch (SpiffyJr)
      0.32 (2016-05-05):
         add another message to recognize Maelstrom

=end
=begin

      0.31 (2016-04-25):
         update lesser vruul td offsets
      0.30 (2016-04-19):
         add new Frozen Bramble area monsters
      0.29 (2015-07-22):
         add support for Pestilence (716)
      0.28 (2015-07-12):
         fix gross f/h in favor verb
         add percentage completed to step to favor verb
      0.27 (2015-05-14):
         favor clear bug again
      0.26 (2015-04-14):
         fix "favor clear" bug
      0.25 (2014-12-20):
         added frenzied monk
      0.24 (2014-12-20):
         added bog spectre
      0.23 (2014-11-23):
         added sacristan spirit
      0.22 (2014-11-21):
         add more td offsets
      0.21 (2014-11-21):
         add more messages for symbol of turning
         add more td offsets
      0.17-0.20 (2014-11-18):
         add more td offsets
      0.16 (2014-11-14):
         fix bug with "favor set"
      0.15 (2014-11-13):
         added accurate symbol cost for level 99
      0.14 (2014-11-10):
         added accurate symbol cost for level 98
         added minor elemental/spirit and sorcerer TD offset for triton defender
      0.13 (2014-10-12):
         changed the critter levels for deadfall, still just estimates
      0.12 (2014-10-12):
         fix bone shatter insta-death message
      0.11 (2014-10-11):
         added more npcs
      0.10 (2014-10-11):
         added message for bone shatter insta-death
      0.9 (2014-10-04):
         added accurate symbol cost for level 97

=end

if Society.status !~ /Voln/
   dothistimeout 'society', 15, /You may view your society|You may reset your society|Past society affiliations/
   if Society.status !~ /Voln/
      echo "You don't seem to be a member of Voln.  This script isn't for you."
      exit
   end
end

hide_me
script.want_downstream = false
script.want_downstream_xml = true

$favor                    = CharSettings.to_hash
$favor[:symbol]         ||= 0
$favor[:step]           ||= 0
$favor[:symbol_error]   ||= 0
$favor[:step_error]     ||= 0
# level                                          3,     4,     5,     6,    7,    8,    9,   10,     11,     12,    13,     14,     15,     16,    17,    18,    19,    20,     21,     22,     23,    24,    25,     26,     27,    28,     29,    30,     31,    32,     33,    34,     35,    36,     37,     38,    39,     40,    41,    42,     43,     44,     45,     46,    47,    48,     49,     50,    51,      52,      53,      54,     55,     56,      57,      58,      59,    60,     61,      62,      63,      64,     65,     66,      67,      68,      69,      70,     71,    72,      73,      74,      75,      76,      77,     78,     79,     80,      81,      82,      83,      84,      85,     86,     87,     88,     89,      90,      91,      92,      93,      94,      95,     96,     97,     98,     99,     100
level_factor              = [ nil, nil, nil, 1.225, 2.133, 3.133, 4.275, 5.55, 6.95, 8.45, 9.95, 11.633, 13.317, 15.05, 16.867, 18.725, 20.633, 22.55, 24.55, 26.55, 28.55, 30.633, 32.725, 34.817, 36.95, 39.05, 41.225, 43.367, 45.55, 47.775, 49.95, 52.225, 54.45, 56.725, 58.95, 61.225, 63.55, 65.817, 68.133, 70.45, 72.725, 75.05, 77.367, 79.683, 82.05, 84.367, 86.725, 89.05, 91.45, 93.775, 96.133, 98.55, 100.867, 103.275, 105.633, 108.05, 110.45, 112.817, 115.225, 117.633, 120.0, 122.45, 124.817, 127.225, 129.633, 132.05, 134.45, 136.867, 139.275, 141.683, 144.133, 146.55, 149.4, 151.367, 153.817, 156.225, 158.683, 161.133, 163.55, 165.95, 168.45, 170.867, 173.275, 175.725, 178.183, 180.633, 183.05, 185.55, 187.95, 190.45, 192.867, 195.317, 197.775, 200.225, 202.633, 205.133, 207.55, 210.05, 212.45, 214.95, 217.337 ]
globe_offset              = [ nil, nil, nil,     0,     0,     0,     0,    0,    0,    0,     0,     1,      1,     1,      1,      1,      2,     2,     2,     2,     2,      3,      3,      3,     3,     3,      4,      4,     4,      4,     4,      5,     5,      5,     5,      6,     6,      6,      6,     7,      7,     7,     7,      7,      8,      8,      8,     8,     9,      9,      9,     9,      10,      10,      10,     10,     11,      11,      11,      11,    11,     12,      12,      12,      12,     13,     13,      13,      13,      14,      14,     14,    14,      15,      15,      15,      15,      16,     16,     16,     16,      17,      17,      17,      17,      17,     18,     18,     18,     19,      19,      19,      19,      20,      20,      20,     20,     21,     21,     21,      21 ]
script_start              = Time.now
step_start                = Time.now
symbol_favor_gained       = 0
step_favor_gained         = 0
favor_used                = 0
npc_td                    = LimitedArray.new
npc_td.max_size           = 50
immolated                 = LimitedArray.new
immolated.max_size        = 15
pestilenced               = LimitedArray.new
pestilenced.max_size      = 15
weapon_fired              = LimitedArray.new
weapon_fired.max_size     = 15
maelstromed               = LimitedArray.new
maelstromed.max_size      = 15
lightning_called          = LimitedArray.new
lightning_called.max_size = 15
holy_bolted               = LimitedArray.new
holy_bolted.max_size      = 15
banshee_defense           = LimitedArray.new
banshee_defense.max_size  = 15
deity                     = nil
divine_wrath_active       = false
na                        = nil

npc = {
   'lesser ghoul'         => { :lvl =>   1 },
   'skeleton'             => { :lvl =>   1 },
   'zombie rolton'        => { :lvl =>   1 },
   'frost shade'          => { :lvl =>   2 },
   'moaning phantom'      => { :lvl =>   2 },
   'ghost'                => { :lvl =>   2 },
   'lesser shade'         => { :lvl =>   2 },
   'phantom'              => { :lvl =>   2 },
   'greater ghoul'        => { :lvl =>   3 },
   'ice skeleton'         => { :lvl =>   3 },
   'revenant'             => { :lvl =>   4 },
   'mist wraith'          => { :lvl =>   4 },
   'dark apparition'      => { :lvl =>   5 },
   'spectral fisherman'   => { :lvl =>   6 },
   'lesser mummy'         => { :lvl =>   6 },
   'firephantom'          => { :lvl =>   6 },
   'bone golem'           => { :lvl =>   8 },
   'snow spectre'         => { :lvl =>   9 },
   'death dirge'          => { :lvl =>   9 },
   'werebear'             => { :lvl =>  10 },
   'darkwoode'            => { :lvl =>  13 },
   'shadowy spectre'      => { :lvl =>  14 },
   'spectre'              => { :lvl =>  14 },
   'wolfshade'            => { :lvl =>  15 },
   'tomb wight'           => { :lvl =>  15 },
   'wraith'               => { :lvl =>  15 },
   'ghoul master'         => { :lvl =>  16 },
   'ghost wolf'           => { :lvl =>  16 },
   'elder ghoul master'   => { :lvl =>  18 },
   'ghostly warrior'      => { :lvl =>  18 },
   'nedum vereri'         => { :lvl =>  18 },
   'krolvin pirate'       => { :lvl =>  18 },
#                                                             mnsp mjsp clrc mnel mjel rngr sorc      wzrd bard emph mnme                pldn
   'arch wight'           => { :lvl =>  20, :td_mod => [  na,   0,   0,   0,   0,   0, nil,   0,  na,   0, nil, -19, nil,  na,  na,  na, nil ] }, # Graveyard, Wehnimer's Landing
   'wood wight'           => { :lvl =>  20, :td_mod => [  na,   0,   0,   0,   3,   2, nil,   1,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Marshtown, Solhaven
   'ancient ghoul master' => { :lvl =>  21, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na, nil, nil, nil, nil,  na,  na,  na, nil ] }, # Graveyard, Wehnimer's Landing
   'zombie'               => { :lvl =>  23, :td_mod => [  na,   3,   3,   1,   8,   7,   0,   5,  na,  na,   0,   3, nil,  na,  na,  na, nil ] }, # Danjirland, Wehnimer's Landing + Icemule Environs, Icemule Trace
   'nonomino'             => { :lvl =>  23, :td_mod => [  na,   0,   0,  -2,   9,   8, nil,   3,  na,   8, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Anwyn, Wehnimer's Landing
   'niirsha'              => { :lvl =>  23, :td_mod => [  na,  -5,  -5,  -7,   9,   8, nil,   3,  na,   8, nil, nil, nil,  na,  na,  na, nil ] }, # Lunule Weald, Ta'Vaalor
   'crazed zombie'        => { :lvl =>  23, :td_mod => [  na,   3,   3,   1,   8,   7, nil,   5,  na,   7, nil, nil, nil,  na,  na,  na, nil ] }, # Lunule Weald, Ta'Vaalor
   'rotting woodsman'     => { :lvl =>  23, :td_mod => [  na,   3,   3,   1,   8,   7, nil,   5,  na,   7, nil, nil, nil,  na,  na,  na, nil ] }, # Marshtown, Solhaven
   'night hound'          => { :lvl =>  24, :td_mod => [  na,  29,  29,  27,  35,  40, nil,  32,  na,  na, nil,  18, nil,  na,  na,  na, nil ] }, # Graveyard, Wehnimer's Landing
   'spectral monk'        => { :lvl =>  25, :td_mod => [  na,  15,  15,  13,  23,  23, nil,  21,  na,  23, nil, nil, nil,  na,  na,  na, nil ] }, # The Monastery, Wehnimer's Landing
   'carceris'             => { :lvl =>  25, :td_mod => [  na,   7,   7,   5,  11,  11, nil,   9,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Anwyn, Wehnimer's Landing
   'sacristan spirit'     => { :lvl =>  25, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na, nil, nil, nil, nil,  na,  na,  na, nil ] }, # Lunule Weald, Ta'Vaalor
   'tree spirit'          => { :lvl =>  26, :td_mod => [  na,   6,   6,   4,  13,  13, nil,  10,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Lunule Weald, Ta'Vaalor + Foggy Valley, Solhaven + Danjirland, Wehnimer's Landing
   'monastic lich'        => { :lvl =>  27, :td_mod => [  na,  24,  24,  23,  34,  34, nil,  31,  na,  34, nil, nil, nil,  na,  na,  na, nil ] }, # The Monastary, Wehnimer's landing
   'frenzied monk'        => { :lvl =>  27, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na, nil, nil, nil, nil,  na,  na,  na, nil ] }, # Lunule Weald, Ta'Vaalor
   'moaning spirit'       => { :lvl =>  28, :td_mod => [  na,   9,   9,   7,  17,  18, nil,  13,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Anwyn, Wehnimer's landing + The Graveyard, Wehnimer's Landing
   'elder tree spirit'    => { :lvl =>  30, :td_mod => [  na,  21,  21,  19,  30,  30,   3,  25,  na,  na,   9,  21, nil,  na,  na,  na, nil ] }, # Icemule Environs, Icemule Trace
   'ice troll'            => { :lvl =>  31, :td_mod => [  na,   0,   0,   0,   0,   0, nil,   0,  na,   0, nil, nil, nil,  na,  na,  na, nil ] }, # Frozen Battlefield, Icemule Trace
   'ghostly mara'         => { :lvl =>  32, :td_mod => [  na,  11,  11,  10,  13,  14, nil,  14,  na,  14, nil, nil, nil,  na,  na,  na, nil ] }, # Wraithenmist, Ta'Illistim
   'rotting farmhand'     => { :lvl =>  32, :td_mod => [  na,   8,   8,   7,  18,  19,   0,  13,  na,  19,   0,   8, nil,  na,  na,  na, nil ] }, # Icemule Environs, Icemule Trace
   'rotting corpse'       => { :lvl =>  32, :td_mod => [  na,  13,  13,  12,  23,  24, nil,  18,  na,  24, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Varunar, Wehnimer's Landing/Solhaven
   'skeletal giant'       => { :lvl =>  33, :td_mod => [  na,   7,   7,   6,  18,  19, nil,  13,  na,  19, nil, nil, nil,  na,  na,  na, nil ] }, # Sentoph, Wehnimer's Landing
   'ghostly pooka'        => { :lvl =>  33, :td_mod => [  na,  14, nil, nil,  27, nil, nil,  23,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Shadow Valley, Wehnimer's Landing
#                                                             mnsp mjsp clrc mnel mjel rngr sorc      wzrd bard emph mnme                pldn
   'troll zombie'         => { :lvl =>  34, :td_mod => [  na,  15,  15,  14,  27,  27, nil,  21,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Troll Burial Grounds, Zul Logoth
   'skeletal soldier'     => { :lvl =>  34, :td_mod => [  na,   7,   7,   6,  19,  19, nil,  13,  na,  19, nil, nil, nil,  na,  na,  na, nil ] }, # Miasmal Forest, River's Rest
   'spectral warrior'     => { :lvl =>  34, :td_mod => [  na,   0,   0,   0,   1,   1, nil,   0,  na,   1, nil, nil, nil,  na,  na,  na, nil ] }, # The Citadel, River's Rest
   'troll wraith'         => { :lvl =>  35, :td_mod => [  na,  11,  11,  11,   8,   8, nil,  12,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Troll Burial Grounds, Zul Logoth
   'spectral shade'       => { :lvl =>  35, :td_mod => [  na,  24,  24,  24,  35,  35, nil,  30,  na,  35, nil, nil, nil,  na,  na,  na, nil ] }, # Foggy Valley, Solhaven
   'barghest'             => { :lvl =>  35, :td_mod => [  na,  16,  16,  16,  29,  29, nil,  23,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Black Moor, Ta'Illistim
   'spectral woodsman'    => { :lvl =>  35, :td_mod => [  na,  19,  19,  19,  30,  30, nil,  25,  na,  30, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule Environs, Icemule Trace
   'spectral lord'        => { :lvl =>  36, :td_mod => [  na,   0,   0,   0,   5,   6, nil,   0,  na,   6, nil, nil, nil,  na,  na,  na, nil ] }, # Wraithenmist, Ta'Illistim
   'icy bush'             => { :lvl =>  36, :td_mod => [  na,  21, nil, nil,  33,  34, nil,  27,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule, Frozen Bramble
   'shadow mare'          => { :lvl =>  37, :td_mod => [  na,  -1,  -1,  -2,  22,  22, nil,  10,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Shadow Valley, Wehnimer's Landing
   'skeletal warhorse'    => { :lvl =>  37, :td_mod => [  na,   3, nil, nil,   3, nil, nil,   3,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Varunar, Wehnimer's Landing/Solhaven
   'lesser moor wight'    => { :lvl =>  37, :td_mod => [  na,  -1,  -1,  -2,  14,  14, nil,   8,  na,  14, nil, nil, nil,  na,  na,  na, nil ] }, # Miasmal Forest, River's Rest
   'shadow steed'         => { :lvl =>  38, :td_mod => [  na,  18,  18,  17,  30,  30, nil,  24,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Shadow Valley, Wehnimer's Landing
   'decaying tumbleweed'  => { :lvl =>  38, :td_mod => [ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil ] }, # Bramble Patch
   'vourkha'              => { :lvl =>  39, :td_mod => [  na,  21,  21,  21,  25,  26, nil,  23,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Black Moor, Ta'Illistim
   'greater moor wight'   => { :lvl =>  39, :td_mod => [  na,  28,  28,  28,  44,  45, nil,  38,  na,  45, nil, nil, nil,  na,  na,  na, nil ] }, # Black Moor, Ta'Illistim + Miasmal Forest, River's Rest
   'decaying tumbleweed'  => { :lvl =>  39, :td_mod => [  na,  24, nil, nil,  38,  39, nil,  31,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule, Frozen Bramble
   'spectral miner'       => { :lvl =>  40, :td_mod => [  na,   7,   7,   7,  31,  32, nil,  21,  na,  32, nil, nil, nil,  na,  na,  na, nil ] }, # Shadow Valley, Wehnimer's Landing
   'frost-glazed vine'    => { :lvl =>  40, :td_mod => [  na,  45, nil, nil,  60,  61, nil,  53,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule, Frozen Bramble
   'bog wraith'           => { :lvl =>  41, :td_mod => [  na, -50, -50, -50,  13,  13, nil, -18,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Miasmal Forest, River's Rest
   'skeletal lord'        => { :lvl =>  41, :td_mod => [  na,   3, nil, nil,  18, nil, nil,  10,  na, nil, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Varunar, Wehnimer's Landing/Solhaven
   'phantasma'            => { :lvl =>  42, :td_mod => [  na,   0,   0,   1,  16,  16, nil,  12,  na,  16, nil, nil, nil,  na,  na,  na, nil ] }, # Castle Varunar, Wehnimer's Landing/Solhaven
   'baesrukha'            => { :lvl =>  42, :td_mod => [  na,  15,  16,  16,  12,  12, nil,  16,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Black Moor, Ta'Illistim
   'frozen corpse'        => { :lvl =>  42, :td_mod => [  na,  16,  16,  17,  33,  33, nil,  25,  na,  33, nil, nil, nil,  na,  na,  na, nil ] }, # Nightmare Gorge, Wehnimer's Landing + Artic Tundra, Icemule
#                                                             mnsp mjsp clrc mnel mjel rngr sorc      wzrd bard emph mnme                pldn
   'night mare'           => { :lvl =>  43, :td_mod => [  na, -14, -14, -13,  20,  21, nil,   7,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Shadow Valley, Wehnimer's Landing
   'spectral servant'     => { :lvl =>  44, :td_mod => [  na,  36,  36,  37,  54,  55, nil,  45,  na,  55, nil, nil, nil,  na,  na,  na, nil ] }, # Marsh Keep, River's Rest
   'bog wight'            => { :lvl =>  44, :td_mod => [  na,  12,  12,  13,  30,  31, nil,  21,  na,  31, nil, nil, nil,  na,  na,  na, nil ] }, # Fethayl Bog, Ta'Vaalor
   'frosty plant'         => { :lvl =>  44, :td_mod => [ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil ] }, # Bramble Patch
   'ice wraith'           => { :lvl =>  45, :td_mod => [  na,  31,  31,  31,  37,  37, nil,  34,  na,  37, nil, nil, nil,  na,  na,  na, nil ] }, # Nightmare Gorge + Artic Tundra, Icemule
   'lesser vruul'         => { :lvl =>  45, :td_mod => [  na,  -2, nil, nil,  na,  na, nil,  21,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # The Broken Lands, Wehnimer's Landing
   'frosty plant'         => { :lvl =>  45, :td_mod => [  na,  51, nil, nil,  69,  69, nil,  60,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule, Frozen Bramble
   'rotting chimera'      => { :lvl =>  46, :td_mod => [  na,  29,  29,  30,  47,  48, nil,  38,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Marsh Keep, River's Rest
   'bog spectre'          => { :lvl =>  47, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Fethayl Bog, Ta'Vaalor
   'dybbuk'               => { :lvl =>  48, :td_mod => [  na,  31,  31,  32,  51,  52, nil,  41,  na,  52, nil, nil, nil,  na,  na,  na, nil ] }, # Bonespear Tower, Solhaven
   'necrotic snake'       => { :lvl =>  48, :td_mod => [  na,  31,  31,  32,  51,  52, nil,  41,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Marsh Keep, River's Rest
   'warrior shade'        => { :lvl =>  48, :td_mod => [  na,  31,  31,  32,  51,  52, nil,  41,  na,  52, nil, nil, nil,  na,  na,  na, nil ] }, # Fethayl Bog, Ta'Vaalor
   'thorned shrub'        => { :lvl =>  48, :td_mod => [  na,  34, nil, nil,  54,  55, nil,  44,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule, Frozen Bramble
   'waern'                => { :lvl =>  49, :td_mod => [  na,  32,  32,  33,  52,  53, nil,  43,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Bonespear Tower, Solhaven
   'icy creeper'          => { :lvl =>  49, :td_mod => [ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil ] }, # Bramble Patch
   'thorned shrub'        => { :lvl =>  49, :td_mod => [ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil ] }, # Bramble Patch
   'banshee'              => { :lvl =>  50, :td_mod => [  na,  43,  43,  45,  64,  65, nil,  54,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Darkstone Castle, Wehnimer's Landing + Fhorian Village
   'flesh golem'          => { :lvl =>  50, :td_mod => [  na,  33,  33,  35,  54,  55, nil,  44,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Marsh Keep, River's Rest
   'icy creeper'          => { :lvl =>  50, :td_mod => [  na,  36, nil, nil,  57,  58, nil,  47,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Icemule, Frozen Bramble
   'seeker'               => { :lvl =>  52, :td_mod => [  na,  31,  31,  33,  58,  60,  19,  47,  na,  60,  22,  46, nil,  na,  na,  na, nil ] }, # Mount Aenatumgana, Icemule
   'mage apprentice'      => { :lvl =>  54, :td_mod => [  na,  48,  48,  50,  71,  72, nil,  60,  na,  72, nil, nil, nil,  na,  na,  na, nil ] }, # The Citadel, River's Rest
   'nightmare steed'      => { :lvl =>  55, :td_mod => [  na,  49,  49,  51,  72,  74, nil,  61,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Darkstone Castle, Wehnimer's Landing + The Broken Lands, Wehnimer's Landing
   'eidolon'              => { :lvl =>  55, :td_mod => [  na,  27,  27,  29,  52,  54, nil,  44,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Bonespear Tower, Solhaven
   'Citadel guardsman'    => { :lvl =>  56, :td_mod => [  na,  13,  13,  15,  37,  38, nil,  26,  na,  38, nil, nil, nil,  na,  na,  na, nil ] }, # The Citadel, River's Rest
   'Citadel arbalester'   => { :lvl =>  58, :td_mod => [  na,  25,  25,  28,  50,  52, nil,  38,  na,  52, nil, nil, nil,  na,  na,  na, nil ] }, # The Citadel, River's Rest
   'Citadel herald'       => { :lvl =>  60, :td_mod => [  na,  56,  56,  59,  83,  84, nil,  70,  na,  84, nil, nil, nil,  na,  na,  na, nil ] }, # The Citadel, River's Rest
#                                                             mnsp mjsp clrc mnel mjel rngr sorc      wzrd bard emph mnme                pldn
   'bestial swordsman'    => { :lvl =>  62, :td_mod => [  na,  47,  47,  50,  74,  76, nil,  61,  na,  76, nil, nil, nil,  na,  na,  na, nil ] }, # The Citadel, River's Rest
   'soul golem'           => { :lvl =>  63, :td_mod => [  na,  na, nil, nil,  na,  na, nil,  na,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Temple of Luukos, Teras Isle
   'wind wraith'          => { :lvl =>  63, :td_mod => [  na,  58, nil, nil,  86,  87, nil,  73,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # Temple of Luukos, Teras Isle
   'greater vruul'        => { :lvl =>  75, :td_mod => [  na,  -5,  -5,  -5,  na,  na, nil, nil,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # The Broken Lands, Wehnimer's Landing
   'naisirc'              => { :lvl =>  75, :td_mod => [  na,  51,  51,  56,  95,  97, nil,  75,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'shrickhen'            => { :lvl =>  76, :td_mod => [  na,  63,  63,  68,  88,  91, nil,  79,  na,  91, nil, nil, nil,  na,  na,  na, nil ] }, # Blighted Forest, Ta'Illistim
   'seraceris'            => { :lvl =>  78, :td_mod => [  na,  41,  41,  46,  84,  86, nil,  68,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   "lich qyn'arj"         => { :lvl =>  84, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na, nil, nil, nil, nil,  na,  na,  na, nil ] },
   "n'ecare"              => { :lvl =>  87, :td_mod => [  na,  59,  59,  65,  98, 101, nil,  81,  na, 101, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'lost soul'            => { :lvl =>  91, :td_mod => [  na,  82,  82,  89, 106, 109, nil,  99,  na, 109, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'vaespilon'            => { :lvl =>  93, :td_mod => [  na,  46,  46,  54,  90,  93, nil,  75,  na,  93, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'fallen crusader'      => { :lvl =>  97, :td_mod => [  na,  27,  -8,   0,  92,  60, nil,  64,  na,  60, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'triton defender'      => { :lvl =>  98, :td_mod => [  na,  59, nil, nil, 102, 106, nil,  85,  na, 106, nil, nil, nil,  na,  na,  na, nil ] }, # Temple Nelemar, Teras Isle
   'triton sentry'        => { :lvl => 103, :td_mod => [  na,  63, nil, nil, 122, 127, nil,  98,  na, 127, nil, nil, nil,  na,  na,  na, nil ] }, # Temple Nelemar, Teras Isle
   'soul siphon'          => { :lvl => 106, :td_mod => [  na, 103, 103, 112, 135, 139, nil, 125,  na,  na, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'infernal lich'        => { :lvl => 110, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na, nil, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   'frostborne lich'      => { :lvl => 110, :td_mod => [  na, nil, nil, nil, nil, nil, nil, nil,  na, nil, nil, nil, nil,  na,  na,  na, nil ] }, # The Rift, Icemule
   "Wehnimer's militiaman"=> { :lvl => 104 }, # level not checked
   "Taladorian mage"      => { :lvl => 104 }, # level not checked
   "Taladorian knights"   => { :lvl => 104 }, # level not checked
   "night serpent"        => { :lvl =>  97 }, # level not checked
}

spell_bonus = {
#                                                                   mnsp mjsp clrc mnel mjel rngr sorc      wzrd bard emph mnme                pldn
   /^The light blue glow leaves/                          => [  na,  10,  10,  10,   5,   5,  10,   8,  na,   5,   5,  10, nil,  na,  na,  na,  10 ], # 101
   /^The deep blue glow leaves/                           => [  na,  15,  15,  15,   7,   7,  15,  11,  na,   7,   7,  15, nil,  na,  na,  na,  15 ], # 107
   /^The very powerful look leaves/                       => [  na,  20,  20,  20,  10,  10,  20,  15,  na,  10,  10,  20, nil,  na,  na,  na,  20 ], # 120
#   /^The white light leaves/                              => [  na,  20,  20,  20,  10,  10,  20,  15,  na,  10,  10,  20, nil,  na,  na,  na,  20 ], # 120 gives two messages
   /^The opalescent aura fades from around/               => [  na,  30,  30,  30,  15,  15,  30,  23,  na,  15,  15,  30, nil,  na,  na,  na,  30 ], # 219
   /seems slightly different\.$/                          => [  na,  20,  20,  20,  10,  10,  20,  15,  na,  10,  10,  20, nil,  na,  na,  na,  20 ], # 310
   /^A subtle light fades from/                           => [  na,  10,  10,  10,   5,   5,  10,   7,  na,   5,   5,  10, nil,  na,  na,  na,  10 ], # 313
   /^The silvery luminescence fades from around/          => [  na,   2,   2,   2,   5,   5,   2,   3,  na,   5,   5,   2, nil,  na,  na,  na,   2 ], # 401
   /^The bright luminescence fades from around/           => [  na,   5,   5,   5,  10,  10,   5,   8,  na,  10,  10,   5, nil,  na,  na,  na,   5 ], # 406
   /^The brilliant luminescence fades from around/        => [  na,   7,   7,   7,  15,  15,   7,  11,  na,  15,  15,   7, nil,  na,  na,  na,   7 ], # 414
   /^The tingling sensation and sense of security leaves/ => [  na,  15,  15,  15,  30,  30,  15,  23,  na,  30,  30,  15, nil,  na,  na,  na,  15 ], # 430 # fixme: guessed sorc
   /appears somehow different\.$/                         => [  na,  10,  10,  10,  20,  20,  10,  15,  na,  20,  20,  10, nil,  na,  na,  na,  10 ], # 508
   /seems to lose an aura of confidence\.$/               => [  na,  20,  20,  20,  10,  10,  20,  15,  na,  10,  10,  20, nil,  na,  na,  na,  20 ], # 613
   # fixme: 625
   /^A shadow seems to detach itself from/                => [  na,  27,  27,  27,  13,  13,  20,  15, nil,  13,  13,  27, nil,  na,  na,  na,  27 ], # 712 # fixme
#   /^A luminescent aura fades from around/                => [ ? ] # 913
   # fixme: 1109
   # fixme: 1119
   # fixme: 1208
   # fixme: 1601
   # fixme: 1619
}

divine_wrath_message = {
   'Charl'           => /^White sparks flicker around you, and you sense electrical energy gathering in the instant before a massive bolt of lightning spears toward/,
   'Cholen'          => /^A throwing knife formed of shimmering golden light hurtles from the hand of one of the spirit jesters toward/,
   'Eonak'           => /^Within the reddish haze swirling beside/,
   'Imaera'          => /^A brown stag materializes in midair, leaping out of nowhere to try to impale/,
   'Jastev'          => /^A beam of .*? light lances away from the rainbow around you to strike/,
   'Koar'            => /^An aura of divine golden light blazes into existence around/,
   'Lorminstra'      => /^As several faintly glowing snowflakes settle upon/,
   'Lumnis'          => /^Guided by the knowledge within you, you concentrate upon/,
   'Ronan'           => /^Seen only by your spirit gaze, one of the dream unicorns lowers its head and charges fiercely toward/,
   'Tonis'           => /^Accompanied by a particularly impressive gust of wind, a fleeting golden blur flashes past/,
   'Gosaena'         => /^An ethereal pair of feathered white wings materializes from midair and closes around/,
   'Zelia'           => /^You notice .*? nearby\. How marvelous!/,
   'Eorgina'         => /^Shimmering black flames lash out toward/,
   'Fash\'lo\'nae'   => /^A matte grey scalpel appears from midair, and it moves with evident purpose to take a deliberate, methodical slice at/,
   'Luukos'          => /^Long, spectral talons materialize from midair to tear viciously at the body of/,
   'Marlu'           => /^A tendril of black mist suddenly senses the proximity of/,
   'Mularos'         => /^The ethereal barbed whip that lies loosely coiled around you uncoils at terrifying speed\. It snaps out toward/,
   'Sheru'           => /^Suddenly, .*? tries to bolt away, but instead smashes into a wall of spectral force hidden within the shadows!/,
   'V\'tull'         => /^Divine will surges through you, and you command the scimitar to strike at/,
   'the Huntress'    => /^A silver-bladed scythe materializes from thin air, spinning end over end as it hurtles toward/,
   'Laethe'          => /^A shadowy black rose touches/,
   'Leya'            => /^A dagger of ivory light suddenly flashes away from the aura surrounding you to strike at/,
   'Niima'           => /^As the song from the pillar of water crescendos, it reaches a pitch that normally only trained bards can achieve, and the intense waves of elegant sound focus upon/,
   'Voaris'          => /^A glowing golden rose touches/,
   # fixme: missing Kai, Oleani, Phoen, Andelas, Ivas, Aeia, Amasalen, Arachne, Jaston, Kuon, Onar, Tilamaire, Voln
}

spell_circle_list = [ 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 16 ]

add_commas = proc { |num|
   num.to_s.reverse.scan(/(?:\d*\.)?\d{1,3}-?/).join(',').reverse
}

subtract_favor = proc { |symbol_factor|
   if level_factor[XMLData.level]
      cost = (level_factor[XMLData.level] * symbol_factor).ceil
      $favor[:symbol] -= cost
      favor_used += cost
      output = "- #{cost} = #{add_commas.call($favor[:symbol])}"
      if $favor[:symbol_error] > 0
         output.concat " (+/- #{add_commas.call($favor[:symbol_error])})"
      end
      echo output
   else
      echo "error: out of cheese"
      exit
   end
}

favor_to_step = proc {
   (Society.rank*100) + (((XMLData.level**2)*(((Society.rank+2)/3)*5))/3)
}

fix_name = proc { |name|
   if name == 'moor wight'
      if get =~ /greater/
         name = 'greater moor wight'
      else
         name = 'lesser moor wight'
      end
   elsif name == 'ghoul master'
      next_line = get
      if next_line =~ /ancient/
         name = 'ancient ghoul master'
      elsif next_line =~ /elder/
         name = 'elder ghoul master'
      end
   end
   name
}

globe_adjust_favor = proc { |globe_low, globe_high|
   unless (UserVars.globe_sets_favor == 'no' or UserVars.globe_sets_favor == 'false')
      orig_symbol = $favor[:symbol]
      orig_error = $favor[:symbol_error]
      favor_high = [[($favor[:symbol] + $favor[:symbol_error]), globe_high].min, globe_low].max
      favor_low = [[($favor[:symbol] - $favor[:symbol_error]), globe_low].max, globe_high].min
      $favor[:symbol] = (favor_high + favor_low)/2
      $favor[:symbol_error] = ((favor_high - favor_low)/2.0).ceil
      if $favor[:symbol] > orig_symbol
         echo "symbol favor + #{$favor[:symbol] - orig_symbol} = #{add_commas.call($favor[:symbol])}"
      elsif $favor[:symbol] < orig_symbol
         echo "symbol favor - #{orig_symbol - $favor[:symbol]} = #{add_commas.call($favor[:symbol])}"
      end
      if $favor[:symbol_error] > orig_error
         echo "symbol favor error + #{$favor[:symbol_error] - orig_error} = #{add_commas.call($favor[:symbol_error])}"
      elsif $favor[:symbol_error] < orig_error
         echo "symbol favor error - #{orig_error - $favor[:symbol_error]} = #{add_commas.call($favor[:symbol_error])}"
      end
   end
}

hook_proc = proc { |client_string|
   begin
      if client_string =~ /^(?:<c>)?favor(.*)/i
         cmd = $1
         if cmd.downcase.strip == 'clear'
            $favor[:symbol]     = 0
            $favor[:symbol_error] = 0
            script_start        = Time.now - 1
            symbol_favor_gained = 0
            favor_used          = 0
         elsif cmd =~ /^\s+set\s+([0-9]+)\s*$/i
            $favor[:symbol]     = $1.to_i
            script_start        = Time.now - 1
            symbol_favor_gained = 0
            favor_used          = 0
         elsif not cmd.empty?
            output = "\n"
            output.concat "Usage:\n"
            output.concat "\n"
            output.concat "   favor                  show current favors\n"
            output.concat "   favor clear            set current favor to zero\n"
            output.concat "   favor set <amount>     set current favor to the given amount\n"
            output.concat "\n"
            respond output
         end
         output = "Symbol Favor: #{add_commas.call($favor[:symbol])}"
         if $favor[:symbol_error] > 0
            output.concat " (+/- #{add_commas.call($favor[:symbol_error])})\n"
         else
            output.concat "\n"
         end
         output.concat "      gained: #{symbol_favor_gained} favor in #{((Time.now - script_start)/60.0).as_time} (#{(symbol_favor_gained/((Time.now - script_start)/3600.0)).round} f/h)\n"
         output.concat "        used: #{favor_used} favor in #{((Time.now - script_start)/60.0).as_time} (#{(favor_used/((Time.now - script_start)/3600.0)).round} f/h)\n"
         output.concat "    net gain: #{(symbol_favor_gained - favor_used)} favor in #{((Time.now - script_start)/60.0).as_time} (#{((symbol_favor_gained - favor_used)/((Time.now - script_start)/3600.0)).round} f/h)\n\n"
         if Society.rank < 26
            output.concat "Step Favor: #{add_commas.call($favor[:step])}"
            if $favor[:step_error] > 0
               output.concat "(+/- #{add_commas.call($favor[:step_error])})"
            end
            output.concat "/#{add_commas.call(favor_to_step.call)}"
            if favor_to_step.call > 0
               output.concat " (#{($favor[:step]/favor_to_step.call.to_f*100).floor}%)"
            end
            output.concat "\n"
            output.concat "    gained: #{step_favor_gained} favor in #{((Time.now - step_start)/60.0).as_time} (#{(step_favor_gained/((Time.now - step_start)/3600.0)).round} f/h)\n"
         end
         respond output
         nil
      else
         client_string
      end
   rescue
      respond $!
      respond $!.backtrace
      UpstreamHook.remove('sexual-favors')
      client_string
   end
}
before_dying { UpstreamHook.remove('sexual-favors') }
UpstreamHook.add('sexual-favors', hook_proc)

while (line = get)
   # fixme: open implode
   if line =~ /^The glow fades from .*?exist="(.*?)"/
      banshee_defense.delete($1)
   elsif (line =~ /You (?:swing|gesture|sing|weave another verse|continue to sing|channel|fire|wave|tap|rub|hurl|thrust|slash|throw|punch|attempt to punch|attempt to kick|attempt to throw|quickly dart behind .*? and try to hamstring|mentally attempt to locate your implanted essence|rush forward|exhale a virulent green mist toward)|You .*?attempt to (?:kick|punch|jab|grapple)|A wave of power flows out of you and toward .+ bursts into flames|Your (?:<.*?>)?raging sandstorm(?:<.*?>)? swirls around|^The flames surrounding <pushBold\/>an? <a exist="(?:#{immolated.join('|')})" noun=".*?">.*?<\/a><popBold\/> flare up violently\.\.\.|^<pushBold\/>An? <a exist="(?:#{pestilenced.join('|')})" noun=".*?">.*?<\/a><popBold\/> (?:.*? as virulent green mist passes through|convulses with a crippling affliction|skin necrotizes and falls away as an indiscernible mass|skin hardens into a black rot and begins to crumble causing)|^(?:The sickly green miasma around|Light and dark pockmarks appear on|A spiritual malady wracks|Pus-filled sores erupt on|Pustules break out all over|Painful, pus-filled bumps begin to appear on) <pushBold\/>an? <a exist="(?:#{pestilenced.join('|')})" noun=".*?">.*?<\/a><popBold\/> (?:flares|causing)|A .*? leaps from a <a.*?>.*?<\/a> <pushBold\/>.*?<a exist="(?:#{weapon_fired.join('|')})".*?>.*?<\/a><popBold\/> is wielding\.|^(?:Brilliant flashes of lightning surround|Large hailstones pound relentlessly on|Violent winds tighten around|Large rocks swirl around) <pushBold\/>.*?<a exist="(?:#{maelstromed.join('|')})" noun=".*?">.*?<\/a><popBold\/>\.|Suddenly a lightning bolt explodes from the small thundercloud and strikes <pushBold\/>.*?<a exist="(?:#{lightning_called.join('|')})" noun=".*?">.*?<\/a><popBold\/> with a brilliant flash!|^Holy water continues to burn away at .*?exist="(?:#{holy_bolted.join('|')})"/) or (divine_wrath_active and divine_wrath_message[deity] and line =~ divine_wrath_message[deity])
      next if line =~ /You gesture sharply/
      # symbol of holiness
      if line =~ /^A wave of power flows out of you and toward .+ bursts into flames/
         subtract_favor.call(3)
      end
      if line =~ /You exhale a virulent green mist toward <pushBold\/>.*?<a exist="(.*?)" noun=".*?">.*?<\/a><popBold\/>, instantly infecting/
         pestilenced.push($1) unless pestilenced.include?($1)
      end
      if line =~ /You gesture at.*?exist=['"](.*?)['"]/
         target_npc_id = $1
      else
         target_npc_id = nil
      end
      possible_holy_bolted = nil
      while (line = get) and (line !~ /<prompt/)
         if (Skills.slreligion >= 30) and (line =~ /You hurl a stream of holy water at <pushBold\/>.*?<a exist="(.*?)" noun=".*?">.*?<\/a><popBold\/>!/)
            possible_holy_bolted = $1
         elsif line =~ /Wisps of black smoke swirl around <pushBold\/>.*?<a exist="(.*?)" noun=".*?">.*?<\/a><popBold\/> and s?he bursts into flame!/
            immolated.push($1) unless immolated.include?($1)
         elsif line =~ /You exhale a virulent green mist toward <pushBold\/>.*?<a exist="(.*?)" noun=".*?">.*?<\/a><popBold\/>, instantly infecting/
            pestilenced.push($1) unless pestilenced.include?($1)
         elsif line =~ /You successfully hit <pushBold\/>.*?<a exist="(.*?)".*?>.*?<\/a><popBold\/> <a.*?>.*?<\/a> with the spell\./
            weapon_fired.push($1) unless weapon_fired.include?($1)
         elsif line =~ /A stiff breeze begins to swirl around <pushBold\/>.*?<a exist="(.*?)" noun=".*?">.*?<\/a><popBold\/>\./
            maelstromed.push($1) unless maelstromed.include?($1)
         elsif line =~ /You notice a small cloud form above <pushBold\/>.*?<a exist="(.*?)" noun=".*?">.*?<\/a><popBold\/>\./
            lightning_called.push($1)
         elsif line =~ /^As you pour your soul into an appeal to (.*?), /
            deity = $1
            divine_wrath_active = true
         elsif line =~ /^A final rumble of thunder rolls through the area, and, as its last echoes fade away, your skin ceases to tingle as your connection to Charl lessens\.|^Your connection to Cholen lessens\. The airy, brisk trill of a well-played fife and a quick cymbal crash heralds the departure of the spirit jesters\.|^The ruddy haze near you dissipates, and the sound of the forging hammer dies away\. As the forge-fire's heat leaves your skin, your connection to Eonak lessens\.|^You sense the last of the spirit animals running away unseen, and the aroma of forest loam fades as your connection to Imaera lessens\.|^The iridescent lights surrounding you pop like soap bubbles, one by one, until the last one bursts in a small flare of starry radiance and is gone\. Your connection to Jastev lessens\.|^Your connection to Koar lessens, and the divine light fades around you\. The ground shudders one last time before falling still\.|^As your connection to Lorminstra lessens, the snowflakes stop falling, and the few that still cling to you melt away\. The icy cold gradually lifts from your body\.|^As your connection to Lumnis lessens, the world of divine insight slips away from you, destroying the subtle understanding that you so briefly managed to grasp\.|^You lose sight of the dream unicorns and the barren plain upon which they run as your connection to Ronan lessens\. The waking world seems brighter again as the sense of dreamlike lassitude leaves you\.|^You glimpse the golden blur one last time, but then you lose track of it entirely as your connection to Tonis lessens\. The wind's force lessens as well, and then the air falls still\.|^You realize that you had ceased to hear the sound of your own heartbeat only when you become aware of it again, and other sounds filter back into your awareness as well\. Warmth returns to your body as your connection to Gosaena lessens\.|^Suddenly, the important insights slip away, leaving you drained and exhausted as you plummet back to a more mundane state of mind\. Your throat and sides are slightly sore, and your cheeks are wet with tears\. Your connection to Zelia has lessened\.|^Your connection to Eorgina lessens, and the black flames instantly vanish, leaving you stranded and bereft of the presence of the Arkati's power\.|^Your connection to Fash'lo'nae lessens\.  The quiet sound of a blade being honed persists a moment longer before fading away into silence\.|^A spectral howl echoes through the air, resonant with pain and anguish\. Your skin prickles again as your connection to Luukos lessens\.|^As your connection to Mularos lessens, the cold, invisible collar locked about your throat fades into a compassionate caress, and a similar caress traces its way across the side of your cheek\. Beneath that gentle touch, the wounds upon your face heal immediately\. The ethereal barbed whip twitches one last time before dissolving back into air\.|^Your connection to Sheru lessens, and the murky shadows brought by your appeal fade away, yet the feeling of being watched does not\. On any night, in any dream or nightmare, those amber eyes will follow you endlessly\.\.\. but such is the prize and the price of your devotion\.|^As your connection to the Huntress lessens, the foreign anger that lent you strength passes from your body as well, and your heartbeat returns to its regular pace\.|^You feel the kiss of benediction once more upon your brow, and then your connection to Laethe lessens\. The shadowy black roses dissolve into tendrils of black, rose-scented smoke that dissipate rapidly\.|^The ivory light around you fades and glimmers out, and the strength and control of your movements lessens along with your connection to Leya\.|^The singing from the watery pillar begins to fade as your connection to Niima lessens\. The pillar thins, then suddenly drops with a great splash! You are utterly drenched in water\.|^You feel the kiss of benediction once more upon your brow, and then your connection to Voaris lessens\. One of the glowing golden roses lights with scarlet flame, and the fire spreads rapidly down the vine until every rose is burning\. The flames consume the roses swiftly and without smoke, until, in less than a second, the roses are gone entirely\./
            # fixme: missing Kai, Oleani, Phoen, Andelas, Ivas, Marlu, V'tull, Aeia, Amasalen, Arachne, Jaston, Kuon, Onar, Tilamaire, Voln
            divine_wrath_active = false
         elsif line =~ /^The .*?exist="(.*?)".*? eyes grow wide as .*? watches your gestures!  Suddenly .*? makes hurried movements as .*? recognizes that .*? is about to be attacked by magic!/
            banshee_defense.push($1)
         elsif line =~ /^\s*AS\: [\+\-][0-9]+ vs DS\: [\+\-][0-9]+ with AvD\: [\+\-][0-9]+ \+ d100 roll\: \+[0-9]+ = ([\+\-])([0-9]+)/
            if possible_holy_bolted and ($1 == '+') and ($2.to_i > 100)
               holy_bolted.push(possible_holy_bolted) unless holy_bolted.include?(possible_holy_bolted)
            end
         elsif line =~ /^\s*CS\: [\+\-][0-9]+ \- TD\: \+([0-9]+) \+ CvA\: [\+\-][0-9]+ \+ d100\: \+[0-9]+ == [\+\-][0-9]+/
            td = $1.to_i
            unless target_npc_id.nil?
               if line = $_SERVERBUFFER_.reverse.find { |l| l =~ /<spell[^>]*>(?!None)/ }
                  spell_name = line.match(/<spell.*?>(.*?)<\/spell>/).captures.first
                  if (spell_name != 'Corrupt Essence') and (spell_circle = Spell[spell_name].circle) # corrupt essence td pushdown is critter level based and not helpful
                     if spell_name == 'Arcane Blast'
                        spell_circle = { 'Sorcerer' => 7, 'Wizard' => 9, 'Cleric' => 3, 'Empath' => 11 }[Char.prof]
                     end
                     unless info = npc_td.find { |foo| foo['id'] == target_npc_id }
                        info = { 'id' => target_npc_id }
                        npc_td.push(info)
                     end
                     td -= 75 if banshee_defense.include?(target_npc_id)
                     info[spell_circle.to_i] = td
                     echo "npc id: #{target_npc_id}, spell: #{spell_name}, circle: #{spell_circle}, td: #{td}" if $sexual_favors_debug
                  end
               end
            end
         elsif line =~ /^(?:The internal skeletal structure of .*? implodes inward upon .*?, leaving behind no support for .*? body or life\.  )?You hear a sound like a weeping child as a white glow separates itself from the <.*exist=['"](.*?)['"].*>(.+)'s<.*?> body/
            npc_id = $1
            if GameObj.npcs.find { |n| n.id == npc_id }.name == 'elder tree spirit'
               npc_name = 'elder tree spirit'
            else
               npc_name = fix_name.call($2)
            end
            sleep 0.1
            if $sexual_favors_debug
               echo "npc_name: #{npc_name.inspect}"
               echo "npc[npc_name][:lvl]: #{npc[npc_name][:lvl].inspect}"
            end
            if level = npc[npc_name][:lvl]
               calculated_level = nil
               echo "level: #{level.inspect}" if $sexual_favors_debug
               if level > 19
                  level_variation = [(level/10), 5].min
                  if spell_circle = spell_circle_list.find { |c| npc[npc_name][:td_mod][c] and npc_td.any? { |foo| (foo['id'] == npc_id) and foo[c] } }
                     echo "spell_circle: #{spell_circle}" if $sexual_favors_debug
                     offset = npc[npc_name][:td_mod][spell_circle]
                     echo "offset: #{offset}" if $sexual_favors_debug
                     td = npc_td.find { |foo| foo['id'] == npc_id }[spell_circle]
                     echo "td: #{td}" if $sexual_favors_debug
                     while (line = get)
                        if line =~ /exist=['"]#{npc_id}['"]/
                           for message,bonus in spell_bonus
                              if line =~ message
                                 echo "td - #{bonus[spell_circle]} = #{td - bonus[spell_circle]}" if $sexual_favors_debug
                                 td -= bonus[spell_circle]
                                 break
                              end
                           end
                        else
                           script.downstream_buffer.unshift(line)
                           break
                        end
                     end
                     if ((td - offset) % 3 == 0) and (clvl = (td - offset) / 3) and (clvl <= (level + level_variation)) and (clvl >= (level - level_variation))
                        favor_gain = (clvl*XMLData.level/15.0).ceil
                        favor_error = 0
                        calculated_level = clvl
                     else
                        favor_gain = (level*XMLData.level/15.0).ceil
                        favor_error = [(favor_gain - ((level-level_variation)*XMLData.level/15.0).ceil), (((level+level_variation)*XMLData.level/15.0).ceil - favor_gain)].max
                     end
                  else
                     favor_gain = (level*XMLData.level/15.0).ceil
                     favor_error = [(favor_gain - ((level-level_variation)*XMLData.level/15.0).ceil), (((level+level_variation)*XMLData.level/15.0).ceil - favor_gain)].max
                  end
               else
                  favor_error = 0
                  favor_gain = (level*XMLData.level/15.0).ceil
               end
               $favor[:symbol]       += favor_gain
               $favor[:symbol_error] += favor_error
               $favor[:step]         += favor_gain
               $favor[:step_error]   += favor_error
               symbol_favor_gained   += favor_gain
               step_favor_gained     += favor_gain
               if favor_error > 0
                  output = "+ #{favor_gain} (+/- #{add_commas.call(favor_error)}) = #{add_commas.call($favor[:symbol])} (+/- #{add_commas.call($favor[:symbol_error])})"
               elsif calculated_level
                  output = "+ #{favor_gain} (lvl #{calculated_level}) = #{add_commas.call($favor[:symbol])}"
                  if $favor[:symbol_error] > 0
                     output.concat " (+/- #{add_commas.call($favor[:symbol_error])})"
                  end
               else
                  output = "+ #{favor_gain} = #{add_commas.call($favor[:symbol])}"
                  if $favor[:symbol_error] > 0
                     output.concat " (+/- #{add_commas.call($favor[:symbol_error])})"
                  end
               end
               if Society.rank < 26
                  output.concat "   step favor: #{add_commas.call($favor[:step])}/#{add_commas.call(favor_to_step.call)}"
                  if favor_to_step.call > 0
                     output.concat "  (#{($favor[:step]*100)/favor_to_step.call}%)"
                  end
               end
               echo output
               npc_td.delete_if { |foo| foo['id'] == npc_id }
            else
               echo "unknown level for #{npc_name}"
            end
         end
      end
   elsif line =~ /^(?:The internal skeletal structure of .*? implodes inward upon .*?, leaving behind no support for .*? body or life\.  )?You hear a sound like a weeping child as a white glow separates itself from the <.*exist=['"](.*?)['"].*>(.+)'s<.*?> body/
      npc_id = $1
      if GameObj.npcs.find { |n| n.id == npc_id }.name == 'elder tree spirit'
         npc_name = 'elder tree spirit'
      else
         npc_name = fix_name.call($2)
      end
      sleep 0.1
      if level = npc[npc_name][:lvl]
         calculated_level = nil
         if level > 19
            level_variation = [(level/10), 5].min
            if spell_circle = spell_circle_list.find { |c| npc[npc_name][:td_mod][c] and npc_td.any? { |foo| (foo['id'] == npc_id) and foo[c] } }
               echo "spell_circle: #{spell_circle}" if $sexual_favors_debug
               offset = npc[npc_name][:td_mod][spell_circle]
               td = npc_td.find { |foo| foo['id'] == npc_id }[spell_circle]
               while (line = get)
                  if line =~ /exist=['"]#{npc_id}['"]/
                     for message,bonus in spell_bonus
                        if line =~ message
                           echo "td -= #{bonus[spell_circle]}" if $sexual_favors_debug
                           td -= bonus[spell_circle]
                           break
                        end
                     end
                  else
                     script.downstream_buffer.unshift(line)
                     break
                  end
               end
               if ((td - offset) % 3 == 0) and (clvl = (td - offset) / 3) and (clvl <= (level + level_variation)) and (clvl >= (level - level_variation))
                  favor_gain = (([clvl, XMLData.level].min*XMLData.level/15.0).ceil/3.0).ceil
                  favor_error = 0
                  calculated_level = clvl
               else
                  favor_gain = (([level, XMLData.level].min*XMLData.level/15.0).ceil/3.0).ceil
                  favor_error = [ favor_gain - (([level-level_variation, XMLData.level].min*XMLData.level/15.0).ceil/3.0).ceil, ((([level+level_variation, XMLData.level].min*XMLData.level/15.0).ceil/3.0).ceil - favor_gain) ].max
               end
            else
               favor_gain = (([level, XMLData.level].min*XMLData.level/15.0).ceil/3.0).ceil
               favor_error = [ favor_gain - (([(level - level_variation), XMLData.level].min * XMLData.level / 15.0).ceil / 3.0).ceil, ((([(level + level_variation), XMLData.level].min * XMLData.level / 15.0).ceil / 3.0).ceil - favor_gain) ].max
            end
         else
            favor_error = 0
            favor_gain = (([level, XMLData.level].min*XMLData.level/15.0).ceil/3.0).ceil
         end
         $favor[:symbol]       += favor_gain
         $favor[:symbol_error] += favor_error
         $favor[:step]         += favor_gain
         $favor[:step_error]   += favor_error
         symbol_favor_gained   += favor_gain
         step_favor_gained     += favor_gain
         if favor_error > 0
            output = "+ #{favor_gain} (+/- #{add_commas.call(favor_error)}) (spectator) = #{add_commas.call($favor[:symbol])} (+/- #{add_commas.call($favor[:symbol_error])})"
         elsif calculated_level
            output = "+ #{favor_gain} (lvl #{calculated_level}) (spectator) = #{add_commas.call($favor[:symbol])}"
            if $favor[:symbol_error] > 0
               output.concat " (+/- #{add_commas.call($favor[:symbol_error])})"
            end
         else
            output = "+ #{favor_gain} (spectator) = #{add_commas.call($favor[:symbol])}"
            if $favor[:symbol_error] > 0
               output.concat " (+/- #{add_commas.call($favor[:symbol_error])})"
            end
         end
         if Society.rank < 26
            output.concat "   step favor: #{add_commas.call($favor[:step])}"
            if $favor[:step_error] > 0
               output.concat "(+/- #{add_commas.call($favor[:step_error])})"
            end
            output.concat "/#{add_commas.call(favor_to_step.call)}"
            if favor_to_step.call > 0
               output.concat "  (#{($favor[:step]*100)/favor_to_step.call}%)"
            end
         end
         echo output
      else
         echo "unknown level for #{npc_name}"
      end
   elsif line =~ /^(?:<.*?>)?The (?:<.*?>)?monk(?:<.*?>)? concludes ceremoniously.*Go now and continue your work\./
      $favor[:step] = 0
      step_favor_gained = 0
      step_start = Time.now

   #
   # symbol of blessing
   #
   elsif line =~ /^A wave of power flows outward from you towards/
      sleep 0.1
      if next_line = get?
         # if (next_line =~ /^A soft white glow surrounds|^A brilliant white light wraps around/) and (next_line !~ /gently dissipates|returns to its original color/)
         if (next_line =~ /^A brilliant white light (?:streaked with silvery wisps )?wraps around/) and (next_line !~ /returns to its original color/)
            # fixme: find a more accurate way to tell if the weapon is magical
            if line =~ /(?:carmiln|deringo|faewood|fireleaf|glowbark|hoarbeam|ilthorn|ipantor|kakore|lor|mesille|mossbark|orase|rowan|ruic|sephwir|villswood|witchwood|wyrwood|yew|coraesine|drakar|eahnor|eonake|faenor|glaes|mein|golvern|gornar|imflass|kelyn|krodera|mithglin|mithril|ora|razern|rhimar|rolaren|urglaes|urnon|vaalorn|veil iron|vultite|zorchar)[^\-]/
               subtract_favor.call(2)
            elsif item = [GameObj.right_hand, GameObj.left_hand].find { |o| line =~ /#{o.noun}/ }
               # fixme
               result = dothistimeout "look ##{item.id}", 3, /^You see nothing unusual/
               if result =~ /except for a small enchanter's glyph/
                  subtract_favor.call(2)
               else
                  subtract_favor.call(0.4)
               end
            else
               subtract_favor.call(0.4)
            end
         end
      end
   #
   # symbol of thought
   #
   elsif line =~ /^You concentrate on the Symbol of Thought/
      sleep 0.1
      unless get? =~ /^You strain/
         if thought = $_CLIENTBUFFER_.reverse.find { |line| line =~ /^(?:\[.+?\]>)?(?:<c>)?sym(?:b|bo|bol)?\s+(?:of\s+)?th(?:o|ou|oug|ough|ought)?/ }
            if thought =~ /^(?:\[.+?\]>)?(?:<c>)?sym(?:b|bo|bol)?\s+(?:of\s+)?th(?:o|ou|oug|ough|ought)?\s+(.*)/
               message = $1
               this_favor = [((message.length-1)/3.0).ceil, 83].min
               $favor[:symbol] = ($favor[:symbol] - this_favor).to_i
               favor_used += this_favor.to_i
               echo "- #{this_favor} = #{add_commas.call($favor[:symbol])}"
            end
         end
      end

   elsif line =~ /^You draw a glowing pattern in the air before/
      sleep 0.1
      next_line = get?

      #
      # symbol of diminishment
      #
      if next_line =~ /^(?:<.*?>)?(?:The|A|An) .*? (?:appears diminished|is unaffected)!$/
         subtract_favor.call(3)

      #
      # symbol of sleep
      #
      elsif next_line =~ /eyes roll up into|eyes glass over as a distant look takes over|is unaffected by your Symbol of Sleep/
         subtract_favor.call(2)

      #
      # symbol of turning
      #
      elsif next_line =~ /lets out a blood curdling scream|lets out a scream of terror|backs away from the pattern for a few moments/
         # fixme: more messages maybe
         subtract_favor.call(3)

      end

   #
   # symbol of courage
   #
   elsif line =~ /^You feel more courageous/
      subtract_favor.call(1)

   #
   # protection
   #
   elsif line =~ /^You feel a layer of protection surround you/
      subtract_favor.call(1)

   #
   # symbol of submission
   #
   elsif line =~ /^You feel the power of the symbol project toward/
      subtract_favor.call(3)

   #
   # symbol of holiness: moved up to kill tracking
   #

   #
   # symbol of recall
   #
   elsif line =~ /^You focus on recalling magical assistance that will be of use when you rise again, and feel the power of Lorminstra suffusing your spirit\./
      subtract_favor.call(4)

   #
   # symbol of transcendence
   #
   elsif line =~ /^You step into the space between the corporeal and ethereal realms\.|^With difficulty, you manage to will yourself into the space between the corporeal and ethereal realms\./
      subtract_favor.call(6)

   #
   # symbol of mana
   #
   elsif line =~ /^(?:<.*?>)?You feel a surge of mana flow through you/
      subtract_favor.call(3)

   #
   # symbol of sight
   #
   elsif line =~ /^You concentrate on establishing the link and suddenly you see/
      subtract_favor.call(3)

   #
   # symbol of retribution (alive)
   #
   elsif line =~ /^You feel an aura of righteous wrath surround you\./
      subtract_favor.call(3)

   #
   # symbol of retribution (dead)
   #
   elsif line =~ /^You sense deep within your soul, a rage that burns upward and out of your lips in a terrible scream of rage against the undead!/
      subtract_favor.call(0.4)

   #
   # symbol of supremacy
   #
   elsif line =~ /^You feel infused with a collective knowledge on the undead and their weaknesses\./
      subtract_favor.call(5)

   #
   # restoration
   #
   elsif line =~ /^(?:<.*?>)?You feel the power of the symbol course through your body/
      subtract_favor.call(4)

   #
   # symbol of need
   # 
   elsif line =~ /^You concentrate on the Symbol of Need\./
      subtract_favor.call(4)

   # symbol of renewal
   #
   elsif line =~ /^(?:<.*?>)?You feel a surge of life flow through you\./
      subtract_favor.call(5) # fixme: test

   #
   # symbol of disruption
   #
   elsif line =~ /^A churning spectral aura surrounds you/
      # fixme: extra cost for group members
      subtract_favor.call(3) # fixme: test

   #
   # symbol of preservation
   #
   elsif line =~ /^You concentrate and sense the power of the Symbol of Preservation well up within you|^You send a wave of energy toward .*?\.  It coalesces around .*? body and then seeps in leaving a glow that strengthens the bond between body and spirit\./
      subtract_favor.call(6)

   #
   # symbol of dreams
   #
   elsif line =~ /^(?:<.*?>)?You feel suddenly tired and lie down for a nap\./
      subtract_favor.call(6) # fixme: test

   #
   # symbol of return
   #
   elsif line =~ /^Your surroundings blur into a white fog \. \. \./
      if symbol = $_CLIENTBUFFER_[[-10,0-$_CLIENTBUFFER_.length].max..-1].reverse.find { |cmd| cmd =~ /^(?:\[.*?\]>)?(?:<c>)?(?:sy|sym|symb|symbo|symbol)\s+(?:of\s+)?(?:retu|see)/i }
         unless symbol =~ /\(checked\)$/
            symbol.concat ' (checked)'
            if symbol =~ /^(?:\[.*?\]>)?(?:<c>)?(?:sy|sym|symb|symbo|symbol)\s+(?:of\s+)?retu/i
               subtract_favor.call(10)
            end
         end
      end

   # fixme: need River's Rest messages
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a flower that has not yet begun to open\./
      echo '0-10%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a baby eagle barely hatched from its egg\./
      echo '10-20%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a butterfly drying its wings on a leaf\./
      echo '20-30%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of the headwaters of a mighty river\.\s? Here it has joined with several other streams and is growing quickly\./
      echo '30-40%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a weaver on a loom, nearly half way in the creation of an intricate tapestry\./
      echo '40-50%'
   elsif line =~ /^After a few moments of prayer and reflection you see a brief vision of twin bowls of wine\.\s? You reach out and empty the contents of one into the other filling it up\.\s? You have a sudden desire to fill up the empty bowl too\./
      echo '50-60%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a hiker as he clears the peak of a hill and begins to descend the other side\./
      echo '60-70%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a lute, finely crafted, but missing a third of its strings\./
      echo '70-80%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a rainbow forming as a thunder storm begins to abate\./
      echo '80-90%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a path as it winds its way through a forest and to the edge of a clear pool\.\s? You have a sudden desire to jump in but cannot\./
      echo '90-100%'
   elsif line =~ /^After a few moments of prayer and reflection you see a vision of a pool of clear water\.\s? You dive in and swim to the bottom where you find a gold coin engraved with the image of Voln\.\s? An overwhelming feeling makes you realize that you are indeed ready to take the next step along the Path to Enlightenment\./
      echo '100%'
   elsif line =~ /^The (?:<.*?>)?globe(?:<.*?>)? feels cold beneath your touch\./
      high = 999 - globe_offset[XMLData.level]
      low = 0
      echo "0 revolutions = 0 to #{high} favor"
      globe_adjust_favor.call(low, high)
   elsif line =~ /^The (?:<.*?>)?globe(?:<.*?>)? hums and turns slowly once under your fingers\./
      high = 1999 - globe_offset[XMLData.level]
      low = 1000 - globe_offset[XMLData.level]
      echo "1 revolution = #{add_commas.call(low)} to #{add_commas.call(high)} favor"
      globe_adjust_favor.call(low, high)
   elsif line =~ /^You try to count the number of spins and (?:are certain it was|figure it was around|figure it was at least) ([0-9]+) revolutions\./
      count = $1.to_i
      if count < 10
         high = (count*1000) + 999 - globe_offset[XMLData.level]
         low = (count*1000) - globe_offset[XMLData.level]
      elsif count < 100
         high = (count*1000) + 9999 - globe_offset[XMLData.level]
         low = (count*1000) - globe_offset[XMLData.level]
      else
         high = (count*1000) + 49999 - globe_offset[XMLData.level]
         low = (count*1000) - globe_offset[XMLData.level]
      end
      echo "#{count} revolutions = #{add_commas.call(low)} to #{add_commas.call(high)} favor"
      globe_adjust_favor.call(low, high)
   end
end

=begin

        ---------- symbol favor cost (as measured) ----------    globe
level   0.4x    1x     2x     3x     4x     5x     6x     10x   offset
-----   ----   ----   ----   ----   ----   ----   ----   ----   ------
    3      1      2      3      4      5      7      8     13        0       
    4      1      3      5      7      9     11     13     22        0
    5      2      4      7     10     13     16     19     32        0
    6      2      5      9     13     18     22     26     43        0
    7      3      6     12     17     23     28     34     56        0
    8      3      7     14     21     28     35     42     70        0
    9      4      9     17     26     34     43     51     85        0
   10      4     10     20     30     40     50     60    100        0
   11      5     12     24     35     47     59     70    117        1
   12      6     14     27     40     54     67     80    134        1
   13      7     16     31     46     61     76     91    151        1
   14      7     17     34     51     68     85    102    169        1
   15      8     19     38     57     75     94    113    188        1
   16      9     21     42     62     83    104    124    207        2
   17     10     23     46     68     91    113    136    226        2
   18     10     25     50     74     99    123    148    246        2
   19     11     27     54     80    107    133    160    266        2
   20     12     29     58     86    115    143    172    286        2
   21     13     31     62     92    123    154    184    307        3
   22     14     33     66     99    131    164    197    328        3
   23     14     35     70    105    140    175    209    349        3
   24     15     37     74    111    148    185    222    370        3
   25     16     40     79    118    157    196    235    391        3
   26     17     42     83    124    165    207    248    413        4
   27     18     44     87    131    174    217    261    434        4
   28     19     46     92    137    183    228    274    456        4
   29     20     48     96    144    192    239    287    478        4
   30     20     50    100    150    200    250    300    500        4
   31     21     53    105    157    209    262    314    523        5
   32     22     55    109    164    218    273    327    545        5
   33     23     57    114    171    227    284    341    568        5
   34     24     59    118    177    236    295    354    590        5
   35     25     62    123    184    245    307    368    613        6
   36     26     64    128    191    255    318    382    636        6
   37     27     66    132    198    264    330    395    659        6
   38     28     69    137    205    273    341    409    682        6
   39     29     71    141    212    282    353    423    705        7
   40     30     73    146    219    291    364    437    728        7
   41     31     76    151    226    301    376    451    751        7
   42     31     78    155    233    310    387    465    774        7
   43     32     80    160    240    319    399    479    797        7
   44     33     83    165    247    329    411    493    821        8
   45     34     85    169    254    338    422    507    844        8
   46     35     87    174    261    347    434    521    868        8
   47     36     90    179    268    357    446    535    891        8
   48     37     92    183    275    366    458    549    915        9
   49     38     94    188    282    376    469    563    938        9
   50     39     97    193    289    385    481    577    962        9
   51     40     99    198    296    395    493    592    986       10   (fixme: retest globe offset)
   52     41    101    202    303    404    505    606   1009       10
   53     42    104    207    310    414    517    620   1033       10
   54     43    106    212    317    423    529    634   1057       10
   55     44    109    217    325    433    541    649   1081       10
   56     45    111    221    332    442    553    663   1105       11
   57     46    113    226    339    452    565    677   1129       11
   58     47    116    231    346    461    577    692   1153       11
   59     48    118    236    353    471    589    706   1177       11
   60     48    120    240    360    480    600    729   1200       11
   61     49    123    245    368    490    613    735   1225       12
   62     50    125    250    375    500    625    749   1249       12
   63     51    128    255    382    509    637    764   1273       12
   64     52    130    260    389    519    649    778   1297       12
   65     53    133    265    397    529    661    793   1321       13
   66     54    135    269    404    538    673    807   1345       13
   67     55    137    274    411    548    685    822   1369       13
   68     56    140    279    418    558    697    836   1393       13
   69     57    142    284    426    567    709    851   1417       14
   70     58    145    289    433    577    721    865   1442       14
   71     59    147    294    440    587    733    880   1466       14
   72     60    149    298    447    596    750    894   1490       14
   73     61    152    303    455    606    757    909   1514       15
   74     62    154    308    462    616    770    923   1539       15
   75     63    157    313    469    625    782    938   1563       15
   76     64    159    318    477    635    794    953   1587       15
   77     65    162    323    484    645    806    967   1612       16
   78     66    164    328    491    655    818    982   1636       16
   79     67    166    332    498    664    830    996   1660       16
   80     68    169    337    506    674    843   1011   1685       16 
   81     69    171    342    513    684    855   1026   1709       17
   82     70    174    347    520    694    867   1040   1733       17
   83     71    176    352    528    703    879   1055   1758       17
   84     72    179    357    535    713    891   1070   1782       17
   85     73    181    362    542    723    904   1084   1807       17
   86     74    184    367    550    733    916   1099   1831       18
   87     75    186    372    557    743    928   1114   1856       18
   88     76    188    376    564    752    940   1128   1880       18
   89     77    191    381    572    762    953   1143   1905       19
   90     78    193    386    579    772    965   1158   1929       19
   91     79    196    391    586    782    977   1172   1954       19
   92     80    198    396    594    792    989   1187   1978       19
   93     81    201    401    601    801   1002   1202   2003       20
   94     82    203    406    608    811   1014   1216   2027       20
   95     83    206    411    616    821   1026   1231   2052       20
   96     84    208    416    623    831   1038   1246   2076       20
   97     85    211    421    631    841   1051   1261   2101       21
   98     85    213    425    638    850   1063   1275   2125       21
   99     86    215    430    645    860   1075   1290   2150       21
  100     87    218    435    653    870   1087   1305   2174       21

globe offset: 
   The globe feels cold beneath your touch.                 = 0 to (999 - offset) favor
   The globe hums and turns slowly once under your fingers. = (1000 - offset) to (1999 - offset) favor

=end


=begin
   # stupid fame only works some of the time for various reasons
check_fame = proc {
   fame = nil
   started = false
   hook_proc = proc { |server_string|
      if started
         if server_string =~ /^\s*Mental TPs: [0-9]+\s+Fame\: ([0-9]+)/
            fame = $1.to_i
            nil
         elsif server_string =~ /<prompt/
            DownstreamHook.remove('check-fame')
            nil
         elsif server_string =~ /<output/
            server_string
         end
      else
         if server_string =~ /^\s*Level\: [0-9]+\s+Deeds\: \-?[0-9]+/
            started = true
            nil
         else
            server_string
         end
      end
   }
   DownstreamHook.add('check-fame', hook_proc)
   silence_me unless undo_silence = silence_me
   put 'experience'
   silence_me if undo_silence
   wait_until { fame }
   fame
}

last_fame = nil
get_fame_change = proc {
   if last_fame.nil?
      last_fame = check_fame.call
      0
   else
      new_fame = check_fame.call
      change = new_fame - last_fame
      last_fame = new_fame
      change
   end
}


# fixme: td boost (+150)
You gesture at a night mare.
A night mare exudes a sickly yellow mist, creating a shimmering haze all around her!
  CS: +187 - TD: +262 + CvA: +25 + d100: +18 == -32
  Warded off!
Cast Roundtime 3 Seconds.

=end
