# SitNPick

def grabLoot(name, cont, hand)
	startcont = 0
	fput "get #{name}"
	waitfor "You pick up", "Get what", "You can't pick that up!", "You are unable to handle the additional load", "crumble and decay away", "crumbles and decays away", "crumbles into a pile of dust!"
	while ((hand == "left" and lefthand? != nil) or (hand == "right" and righthand? != nil)) and startcont < 2 do
		fput "put my #{name} in #{cont[startcont]}"
		waitfor "you put", "I could not find what you were referring to", "won't fit in"
		if ((hand == "left" and lefthand? != nil) or (hand == "right" and righthand? != nil)) and startcont < 3 then startcont += 1
		elsif ((hand == "left" and lefthand? != nil) or (hand == "right" and righthand? != nil)) and startcont > 2 then fput "drop my #{name}" end
	end
end

snp_Got_Loot = false
snp_Box_Picked = 0
$snp_Box_Client = nil
$snp_Box_Cant_Disarm = false
$snp_Box_Cant_Pick = false
loop {
	line = get
	if line =~ /^([A-Z,a-z]+) offers you a.+(trunk|coffer|strongbox|box|chest)\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\.$/
		$snp_Box_Client = $1
		$snp_Box_Accept = true
	elsif line =~ /^([A-Z,a-z]+) offers you (a |an |)(.+)\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\.$/
		$snp_Box_Client = $1
		offer = $3
		if offer =~ /#{$list_gemk.join('|')}|#{$list_gems.join('|')}|#{$list_alch.join('|')}|#{$list_mags.join('|')}|#{$list_magk.join('|')}/
			fput "accept"
			fput "stow right" if !GameObj.right_hand.id.nil?
			fput "stow left" if !GameObj.left_hand.id.nil?
		else
			fput "decline"
		end
		fput "nod #{$snp_Box_Client}"
	elsif line =~ /^You accept ([A-Z,a-z]+)'s offer and are now holding a.+(trunk|coffer|strongbox|box|chest)\.$/
		$snp_Box_Client = $1
		snp_Got_Loot = false
		start_script "Pick", ["my", righthand?]
		wait_while { running?("Pick") }
		snp_Box_Picked += 1
		if $snp_Box_Cant_Disarm then fput "Whisper #{$snp_Box_Client} I can't disarm this" end
		if $snp_Box_Cant_Pick then fput "Whisper #{$snp_Box_Client} I can't pick this" end
		if $snp_Box_Already_Open then fput "Whisper #{$snp_Box_Client} This is already open" end
		fput "give #{$snp_Box_Client}"
	elsif line =~ /^You accept ([A-Z,a-z]+)'s offer and are now holding (a |an |)(.+)\.$/
		$snp_Box_Client = $1
		offer = $3
		if offer =~ /#{$list_gemk.join('|')}|#{$list_gems.join('|')}|#{$list_alch.join('|')}|#{$list_mags.join('|')}|#{$list_magk.join('|')}/
			fput "stow right" if !GameObj.right_hand.id.nil?
			fput "stow left" if !GameObj.left_hand.id.nil?
		else
			fput "give #{$snp_Box_Client} right" if !GameObj.right_hand.id.nil?
			fput "give #{$snp_Box_Client} left" if !GameObj.left_hand.id.nil?
		end
		fput "nod #{$snp_Box_Client}"
	elsif line =~ /^You offer your .+ to ([A-Z,a-z]+), who has 30 seconds to accept the offer\.  Click CANCEL to prematurely cancel the offer\.$/
		$snp_Box_Client = $1
	elsif line =~ /^([A-Z,a-z]+) has accepted your offer and is now holding a.+\.$/
		$snp_Box_Client = nil
		fput "accept"
	elsif line =~ /^Your offer to ([A-Z,a-z]+) has expired\.$/
		$snp_Box_Client = $1
		fput "give #{$snp_Box_Client}"
	elsif line =~ /^([A-Z,a-z]+) has declined the offer\.$/
		fput "stow right" if !GameObj.right_hand.id.nil?
		fput "stow left" if !GameObj.left_hand.id.nil?
		fput "nod #{$snp_Box_Client}"
	elsif line =~ /^To whom\?$/
		wait_while { !checkpcs.include?($snp_Box_Client) }
		fput "give #{$snp_Box_Client}"
	end
	if lefthand? == nil and righthand == nil and $snp_Box_Accept
		fput "accept"
		$snp_Box_Accept = false
	elsif lefthand? == nil and righthand == nil and snp_Box_Picked > 2 and checkpcs == nil
		while righthand? != "calipers" and lefthand? != "calipers"
			fput "get my calipers"
			pause("1s")
		end
		fput "lm calibrate my calipers"
		loop {
			line = get
			if line =~ /^You can't help but think that the calipers are as finely-tuned as you are possibly going to get them\.  They practically glow with calibration!$|^Those calipers could not be more perfectly calibrated\.  You should leave them alone\.  You'll just mess them up\.$/
				snp_Box_Picked = 0
				break
			elsif line =~ /^Roundtime: .+ sec\.$/
				waitrt?
				fput "lm calibrate my calipers"
			end
		}
		waitrt?
		fput "put my calipers in my black sat"
	end
}