=begin
    author: anonymoose420
=end

#jewels.lic
#combat script

Script.start "repo", "download stand" if not Script.exists? "stand"
Script.start "gsigns", "download stand" if not Script.exists? "gsigns"
Script.start "weaponreact", "download stand" if not Script.exists? "weaponreact"
Script.start "song-manager", "download stand" if not Script.exists? "song-manager"

Script.start("stand")
Script.start("gsigns")
Script.start("weaponreact")
Script.start("song-manager")

def changeStance(stance)
	while checkstance != stance
		fput "stance #{stance}"
	end
end

swing = proc {
	 	#disable script
		GameObj.targets.each() { |target| Script.run "sweep", "##{target.id}" unless target.status =~ /lying down|prone|rooted|entangled|sleeping|stunned|immobilized|frozen|sitting|kneeling|dead/ }
		waitrt?
		fput "target ##{GameObj.targets[0].id}" if XMLData.current_target_id.nil?

        #list threats
        threats = []
	    for target in GameObj.targets
		    threats << target unless target.status =~ controlled
	    end

		#attack script
		Script.run "xfire" if threats.length() <= 0
}

checkline = proc { |line|
	case line
		#when monsterDeath
			#Threads << Thread.new { loot.call() }
		when hasSwung, hasMulti
			Threads << Thread.new { swing.call() }
	end
	Threads.each { |thread| thread.join }
}

##########################################

Threads = []
while true
	line = get

	#if line != nil
	#	checkline.call(line)
	#end

	Threads << Thread.new { swing.call() } if GameObj.targets.length() > 0 
    Threads.each { |thread| thread.join }
end