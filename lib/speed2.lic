=begin

    speed2 by SpiffyJr

     author: SpiffyJr
       name: speed2
       tags: travel

    This script will quick travel using the Chronomage day passes. All available towns
    should be supported. ;speed2 help for town locations.

    changelog:
        2019.01.13 - initial version
=end

lootsack = GameObj.inv.find do |i| 
    i.noun =~ /\b#{UserVars.lootsack}\b/i or
    i.name =~ /#{UserVars.lootsack}/i
end

if lootsack.nil?
    echo '** set \"lootsack\" before using this script: ;vars set lootsack=<item>'
    exit
end

if Room.current.id.nil?
    echo '** you are not in a mapped room'
    exit
end

if Room.current.location == 'Pinefar Trading Post'
    echo "-- sending you to Icemule Trace"
    sleep(1)
    Script.run('go2', '2300')
end

check_silvers = proc do
    silvers = nil
    action = proc do |server_string|
        if server_string !~ /^\s*Mana\:\s+\-?[0-9]+\s+Silver\:\s+([0-9]+)/
            nil
        elsif server_string =~ /^\s*Mana\:\s+\-?[0-9]+\s+Silver\:\s+([0-9]+)/
            silvers = $1.to_i
            DownstreamHook.remove("sloot_check_silvers")
            nil
        else
            server_string
        end
    end

    DownstreamHook.add("sloot_check_silvers", action)
    $_SERVER_.puts "#{$cmd_prefix}info\n"
    wait_until { silvers }
    silvers
end

get_pass = proc do |destination|
    if lootsack.contents.nil?
        fput "look in ##{lootsack.id}"
    end
    
    available = {}

    # check for existing pass first (and clean up old ones)
    lootsack.contents.find_all { |i| i.name =~ / pass$/ }.each do |pass|
        res = dothistimeout("look at ##{pass.id}", 3, /Bold calligraphy states simply|Bold red block letters/)
        if res =~ /Bold red block letters/
            fput "get ##{pass.id}"
            fput "drop ##{pass.id}"
        elsif res =~ /travel between the towns of (.*) and (.*), commencing at the time of purchase/
            loc1 = $1
            loc2 = $2

            if Room.current.location =~ /#{loc1}/ or Room.current.location =~ /#{loc2}/
                available[loc1] = pass
                available[loc2] = pass
            end
        else
            echo '** unknown pass result: this should not happen'
            exit
        end
    end

    if available[destination]
        fput "get ##{available[destination].id}"
        next
    end

    silvers = check_silvers.call()
    if silvers < 5000
        Script.run('go2', 'bank')
        res = dothistimeout("withdraw #{5000-silvers} silver", 3, /carefully records|through the books/)
        if res =~ /through the books/
            echo '** Sorry, not enough cheddar to travel. Get some more coin.'
            exit
        elsif res =~ /carefully records/
            ; # intentionally left blank
        else
            echo '** unknown bank result: this should not happen'
            exit
        end
    end

    Script.run('go2', 'chronomage')

    clerk = GameObj.npcs.find { |npc| npc.name =~ /clerk|halfling/i }
    if clerk.nil?
        echo '** failed to find clerk: send a message to Kips with the npc name'
        exit
    end

    res = dothistimeout("ask ##{clerk.id} for #{destination}", 3, /A roundtrip day pass|A one-way ticket to/)
    if res !~ /A roundtrip day pass/
        echo '** unknown result from chronomage: this should not happen'
        exit
    end

    res = dothistimeout("ask ##{clerk.id} for #{destination}", 3, /quickly hands you/)
    if res !~ /quickly hands you/
        echo '** unknown result from chronomage: this should not happen'
        exit
    end
end

destination = nil

if script.vars[1] == 'help'
    respond("#{script.name} by SpiffyJr (Kips)")
    respond("")
    respond("Usage: #{$lich_char}#{script.name} [town]")
    respond("")
    respond("Available towns:")
    respond("wl - Wehnimer's Landing")
    respond("it - Icemule Trace")
    respond("sh - Solhaven")
    respond("tv - Ta'Vaalor")
    respond("ti - Ta'Illistim")
    respond("cy - Cysaegir")
    exit
elsif script.vars[1] == 'wl'
    destination = "Wehnimer's Landing"
elsif script.vars[1] == 'it'
    destination = 'Icemule Trace'
elsif script.vars[1] == 'sh'
    destination = 'Solhaven'
elsif script.vars[1] == 'tv'
    destination = "Ta'Vaalor"
elsif script.vars[1] == 'ti'
    destination = "Ta'Illistim"
elsif script.vars[1] == 'cy'
    destination = 'Cysaegir'
else
    if Room.current.location == 'Icemule Trace'
        destination = "Wehnimer's Landing"
    elsif Room.current.location =~ /Wehnimer\'s Landing/i
        destination = "Icemule Trace"
    elsif Room.current.location =~ /Solhaven/i
        destination = "Wehnimer's Landing"
    elsif Room.current.location =~ /Ta'Illistim|Moonglae Inn/
        destination = "Ta'Vaalor"
    elsif Room.current.location =~ /Ta'Vaalor/
        destination = "Ta'Illistim"
    else
        echo "I don't know how to travel from this location: #{Room.current.location}"
        exit
    end
end

if destination.nil?
    echo '** no destination set and I could not determine one automatically'
    exit
end

empty_hands()

before_dying do
    if checkleft or checkright
        fput "stow all"
    end
    fill_hands()
end

get_pass.call(destination)

Script.run('go2', 'travel waiting room')
res = dothistimeout("raise ##{GameObj.right_hand.id}", 3, /You raise your pass up, presenting it for|Your pass is not valid/)
if res !~ /You raise your pass up, presenting it for/
    echo '** unknown travel result: this should not happen'
    exit
end

fput "stow right"
Script.run('go2', 'town')