=begin

	Fun with Dreaven script!
	
	This script is for entertainment purposes. This script and how everything works in it is explained in Dreaven's video here: https://youtu.be/z9a-bzoOZxk
	
	Author: Tgo01
	Version 1

=end

fee_cost = 5000
customer = nil
person_offering_you_item = nil
have_potion = nil
silvers_received = nil
math = nil
item_being_offered = nil
item_being_worked_on = nil
orb_prepared = nil
orb_has_been_created = nil
starting_mana = nil
item_is_finished_charging = nil

empty_hands

until checkright.nil?
	waitrt?
	fput "stow right"
	sleep 0.1
end

until checkleft.nil?
	waitrt?
	fput "stow left"
	sleep 0.1
end

while line = get
	if line =~ /^([a-zA-Z]+) whispers\, \"Charge\.\"$/
		customer = $1
		orb_has_been_created = nil
		fput "tap my grot potion"
		while line = get
			if line =~ /^You tap/
				have_potion = true
				break
			elsif line =~ /^What were you referring to\?$/
				have_potion = nil
				break
			end
		end
		if have_potion
			fput "whisper ooc #{customer} Please keep in mind your ITEM MIGHT BE DESTROYED during the charging process. Only proceed if you are willing to risk the loss of your item."
			fput "whisper ooc #{customer} In order to charge an item I need #{fee_cost} silvers, an orb gem, and the item you want charged. Please hand me the #{fee_cost} silvers first."
			while line = get
				if line =~ /^([a-zA-Z]+) offers you .*\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\.$/
					person_offering_you_item = $1
					if customer == person_offering_you_item
						fput "whisper ooc #{person_offering_you_item} I need the #{fee_cost} silvers fee first before you hand me items."
					else
						fput "whisper ooc #{person_offering_you_item} Sorry I am currently helping someone else at the moment."
					end
					fput "decline"
				elsif line =~ /^([a-zA-Z]+) just gave you (\d+) coins which you quickly pocket\.$/
					person_offering_you_item = $1
					silvers_received = $2.to_i
					if customer == person_offering_you_item
						if silvers_received == fee_cost
							fput "whisper ooc #{customer} That is the correct amount. Please now GIVE me the item you want to be charged."
							break
						elsif silvers_received > fee_cost
							math = silvers_received - fee_cost
							fput "whisper ooc #{customer} You have handed me too many silvers, here are the extra silvers back. Please now GIVE me the item you want to be charged."
							fput "give #{person_offering_you_item} #{math}"
							break
						elsif silvers_received < fee_cost
							fput "whisper ooc #{customer} Sorry that is not enough silvers. The fee cost is #{fee_cost} silvers."
							fput "give #{person_offering_you_item} #{silvers_received}"
						end
					else
						fput "whisper ooc #{person_offering_you_item} Sorry I am currently helping someone else at the moment."
						fput "give #{person_offering_you_item} #{silvers_received}"
					end
				end
			end
			while line = get
				if line =~ /^([a-zA-Z]+) offers you .*\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\.$/
					person_offering_you_item = $1
					if customer == person_offering_you_item
						fput "accept"
						fput "whisper ooc #{person_offering_you_item} Excellent. Now please GIVE me the orb gem you wish to use for charging."
						break
					else
						fput "whisper ooc #{person_offering_you_item} Sorry I am currently helping someone else at the moment."
						fput "decline"
					end
				end
			end
			while line = get
				if line =~ /^([a-zA-Z]+) offers you .*\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\.$/
					person_offering_you_item = $1
					if customer == person_offering_you_item
						fput "accept"
						wait_until { checkleft }
						if GameObj.left_hand.type == "gem"
							fput "whisper ooc #{person_offering_you_item} Perfect. Let's get your item charged."
							break
						else
							fput "whisper ooc #{person_offering_you_item} This is not a gem. I need an orb gem to charge your item. Please accept your item back and GIVE me an orb gem."
							until checkleft.nil?
								fput "give #{checkleft} to #{person_offering_you_item}"
								while line = get
									break if line =~ /^#{person_offering_you_item} has accepted your offer and is now holding .*\.$|^#{person_offering_you_item} has declined the offer\.$|^Your offer to #{person_offering_you_item} has expired\.$/
								end
								sleep 1
							end
							fput "decline"
							fput "cancel"
						end
					else
						fput "whisper ooc #{person_offering_you_item} Sorry I am currently helping someone else at the moment."
						fput "decline"
					end
				end
			end
			item_being_worked_on = GameObj.right_hand.id
			fput "stow ##{item_being_worked_on}"
			fput "get my grot potion"
			fput "pour my grot potion on my #{checkleft}"
			while line = get
				if line =~ /^The liquid quickly evaporates\.$/
					fput "whisper ooc #{customer} Sorry, this gem is not an orb gem. An orb gem is required to charge an item. Please accept your items back."
					fput "get ##{item_being_worked_on}"
					until checkright.nil?
						fput "give #{checkright} to #{customer}"
						while line = get
							break if line =~ /^#{customer} has accepted your offer and is now holding .*\.$|^#{customer} has declined the offer\.$|^Your offer to #{customer} has expired\.$/
						end
						sleep 1
					end
					fput "decline"
					fput "cancel"
					until checkleft.nil?
						fput "give #{checkleft} to #{customer}"
						while line = get
							break if line =~ /^#{customer} has accepted your offer and is now holding .*\.$|^#{customer} has declined the offer\.$|^Your offer to #{customer} has expired\.$/
						end
						sleep 1
					end
					fput "decline"
					fput "cancel"
					break
				elsif line =~ /^You carefully work the liquid in until it is all absorbed\.$/
					Spell[517].cast("at my #{checkleft}")
					orb_has_been_created = true
					break
				end
			end
			if orb_has_been_created
				item_is_finished_charging = nil
				fput "get ##{item_being_worked_on}"
				wait_until { checkmana(17) }
				orb_prepared = nil
				loop{
					wait_until { checkmana(1) }
					waitrt?
					waitcastrt?
					until checkprep == "Charge Item"
						fput "release" if checkprep !~ /Charge Item|None/
						fput "prep 517"
						sleep 0.2
					end
					fput "cast at orb"
					while line = get
						if line =~ /^It grows in size\!$|^You are unable to concentrate completely\.$/
							orb_prepared = nil
							break
						elsif line =~ /^It shines brightly for a moment\, flickering in color and humming tones of enchantment\!$|^The orb is already prepared for enchanting\.$/
							orb_prepared = true
							break
						elsif line =~ /^The pulsating orb quickly implodes into oblivion\!$/
							orb_prepared = "destroyed"
						end
					end
					break if orb_prepared
				}
				if orb_prepared == "destroyed"
					fput "whisper ooc #{customer} Sorry your orb gem was destroyed before it could be used for charging."
					exit
				end
				fput "whisper ooc #{customer} If you are able to please keep sending me all mana you have until the charging process is finished."
				loop{
					wait_until { checkmana(1) }
					fput "rub orb"
					while line = get
						if line =~ /^The .* glows with a bright hue as the fingers of essence caress it\.$|^You are unable to properly channel the flows\.$/
							break
						elsif line =~ /^You do not have enough mana\.$/
							starting_mana = checkmana
							wait_until { starting_mana != checkmana }
							break
						elsif line =~ /^It flares a sickening green and then goes dim\.$/
							fput "whisper ooc #{customer} Sorry, your item has lost all charges and is now unrechargable."
							item_is_finished_charging = "yes"
							break
						elsif line =~ /^The .* begins to shake violently and then suddenly disintegrates\!$/
							fput "whisper ooc #{customer} Sorry, your item has been destroyed."
							item_is_finished_charging = "destroyed"
							break
						elsif line =~ /^You are unable to add any more charges\.$/
							fput "whisper ooc #{customer} I am unable to add anymore charges to this item, either because the orb has ran out of power or because the item can't hold anymore charges."
							item_is_finished_charging = "yes"
							break
						elsif line =~ /^The orb isn't properly prepared for recharging\.$/
							wait_until { checkmana(1) }
							waitrt?
							waitcastrt?
							until checkprep == "Charge Item"
								fput "release" if checkprep !~ /Charge Item|None/
								fput "prep 517"
								sleep 0.2
							end
							fput "cast at orb"
							break
						end
					end
					break if item_is_finished_charging
				}
				if item_is_finished_charging == "yes"
					until checkright.nil?
						fput "give #{checkright} to #{customer}"
						while line = get
							break if line =~ /^#{customer} has accepted your offer and is now holding .*\.$|^#{customer} has declined the offer\.$|^Your offer to #{customer} has expired\.$/
						end
						sleep 1
					end
					fput "decline"
					fput "cancel"
				end
			end
		else
			fput "whisper ooc #{customer} Sorry, I don't currently have the necessary potion to charge an item."
			break
		end
	end
end
