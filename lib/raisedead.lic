=begin

#Raise Dead Script

Author: Jara

This will help a Cleric raise a dead body.  ;raisedead name chrismname - You can use no for chrismname.

=end
waitrt?
Lich::Util.issue_command("spell active", /Spells|Buffs|Debuffs|Cooldowns/, silent: true, quiet: true)

if Char.prof != "Cleric"
	respond
	respond "Sorry #{Char.name}, this script is for Clerics only."
	respond
	exit
end

if Char.level < 18
	respond
	respond "Sorry #{Char.name}, this script requires you to be level 18 or higher."
	respond
	exit
end

if Spell[340].known?
	raisepower = 3
elsif Spell[325].known?
	raisepower = 2
elsif Spell[318].known?
	raisepower = 1
else
	respond
	respond "Sorry #{Char.name}, this script requires you to have knowledge of spell 318."
	respond
	exit
end

if Vars.chrismsack == nil
	respond
	respond "#{Char.name}, please set your chrism sack name with the command ;vars set chrismsack=containername"
	respond
	exit
end

if Vars.raisedeadrp == nil
	Vars.raisedeadrp = "None"
	respond
	respond "#{Char.name}, if you want to setup a custom raise SAY, use ;vars setup and update raisedeadrp from None to whatever you want to say."
	respond
	sleep 3
end

if script.vars[1].downcase =~ /help/
	respond
	_respond "#{monsterbold_start}*** Raisedead Help Menu ***#{monsterbold_end}"
	respond
	respond "Usage: ;raisedead playername chrismname"
	respond "If you don't want a chrism, use no for chrismname"
	respond
	respond "If you want to setup a custom raise SAY, use ;vars setup and update raisedeadrp from None to whatever you want to say."
	respond
	exit
end
	
if script.vars[1].downcase == nil
	respond
	_respond "#{monsterbold_start}*** Raisedead Help Menu ***#{monsterbold_end}"
	respond
	respond "Usage: ;raisedead playername chrismname"
	respond "If you don't want a chrism, use no for chrismname"
	respond
	respond "If you want to setup a custom raise SAY, use ;vars setup and update raisedeadrp from None to whatever you want to say."
	respond
	exit
end

if script.vars[2].downcase == nil
	respond
	_respond "#{monsterbold_start}*** Raisedead Help Menu ***#{monsterbold_end}"
	respond
	respond "Usage: ;raisedead playername chrismname"
	respond "If you don't want a chrism, use no for chrismname"
	respond
	respond "If you want to setup a custom raise SAY, use ;vars setup and update raisedeadrp from None to whatever you want to say."
	respond
	exit
end

playername = "#{script.vars[1].downcase}"

playername = playername.capitalize

if script.vars[2].downcase =~ /no/
	chrismname = "None"
else
	chrismname = "#{script.vars[2].downcase}"
end

if Wounds.nerves >= 2 || Scars.nerves >= 2
	respond
	respond "#{Char.name}, please heal your nerve wounds or scarring before using this script."
	respond
	exit
end

Lich::Util.issue_command("look #{playername}", /I could not find|You see/, silent: true, quiet: true)
result = reget 5, "I could not find"
if result
	respond
	respond "#{playername} doesn't appear to be around here."
	respond
	exit
end

result = reget 5, "seems to be DEAD"
if result
	nil	
else
	respond
	respond "#{Char.name}, #{playername} does not appear to be dead."
	respond
	exit
end

Lich::Util.issue_command("appraise #{playername}", /Usage|maximum of (\d+)\,/, silent: true, quiet: true)
keepcheck = reget 5, "not currently preserved"
if keepcheck
	multifput "prep 305", "cast #{playername}" if Spell[305].known? && Spell[305].affordable?
	sleep 5
end



#First Pass
if Effects::Cooldowns.active?(200308)
	linkfade = Effects::Cooldowns.time_left(200308)
	if linkfade >= 5
		Lich::Util.issue_command("unlink confirm", /break the bond|not quite dead/, silent: true, quiet: true)
		sleep 5
	end
end

Lich::Util.issue_command("spell active", /Spells|Buffs|Debuffs|Cooldowns/, silent: true, quiet: true)
sleep 1

#Second Pass
if Effects::Cooldowns.active?(200308)
	linkfade = Effects::Cooldowns.time_left(200308)
	if linkfade >= 2
		respond
		respond "#{Char.name}, you have a raise dead link cooldown listed with SPELL ACTIVE that's greater than 2 minutes and I was not able to resolve it for you.  You'll need to wait before you can raise again."
		respond
		exit
	elsif linkfade <= 1
		respond
		respond "#{Char.name}, you have a raise dead link cooldown that expires in about 1 minute.  Please stand by..."
		respond
		sleep 60
	end
end

result = dothistimeout "appraise #{playername}", 5, /Usage|maximum of (\d+)\,/
if result =~ /Usage/
	respond
	respond "I could not find that player #{playername}."
	respond
	exit
elsif result =~ /maximum of (\d+)\,/
	playerspirit = $1
end

playerspirit = playerspirit.to_i
requiredspirit = requiredspirit.to_i

if raisepower == 3
	if playerspirit >= 12
		requiredspirit = 4
	elsif playerspirit <= 11 && playerspirit >= 8
		requiredspirit = 3
	elsif playerspirit <= 7 && playerspirit >= 4
		requiredspirit = 2
	elsif playerspirit <= 3 && playerspirit >= 1
		requiredspirit = 0
	end
elsif raisepower == 2
	if playerspirit >= 12
		requiredspirit = 7
	elsif playerspirit <= 11 && playerspirit >= 10
		requiredspirit = 6
	elsif playerspirit <= 9 && playerspirit >= 8
		requiredspirit = 4
	elsif playerspirit <= 7 && playerspirit >= 6
		requiredspirit = 4
	elsif playerspirit <= 5 && playerspirit >= 4
		requiredspirit = 3
	elsif playerspirit <= 3 && playerspirit >= 2
		requiredspirit = 2
	elsif playerspirit <= 1 && playerspirit >= 1
		requiredspirit = 0
	end
elsif raisepower == 1
	if playerspirit >= 12
		requiredspirit = 10
	elsif playerspirit == 11
		requiredspirit = 9
	elsif playerspirit == 10
		requiredspirit = 8
	elsif playerspirit <= 9 && playerspirit >= 8
		requiredspirit = 7	
	elsif playerspirit == 7
		requiredspirit = 6
	elsif playerspirit == 6
		requiredspirit = 5
	elsif playerspirit <= 5 && playerspirit >= 4
		requiredspirit = 4
	elsif playerspirit == 3
		requiredspirit = 3
	elsif playerspirit == 2
		requiredspirit = 2
	elsif playerspirit == 1
		requiredspirit = 0
	end
end


if requiredspirit > maxspirit
	respond
	respond "#{Char.name}, you will not be able to raise #{playername} because you would require #{requiredspirit} spirit and your max is only #{maxspirit} spirit."
	respond
	exit
end

if checkspirit < requiredspirit
	respond
	respond "#{Char.name}, you do not have enough spirit to raise #{playername}.  I'll continue once you have enough."
	respond
end

until checkspirit >= requiredspirit
	respond
	respond "Waiting until you have at least #{requiredspirit} spirit.  You have #{checkspirit} spirit now."
	respond
	sleep 30
	fput "spirit"
end

if Society.status == "Order of Voln"
	result = dothistimeout "sym recognition", 5, /#{playername} is a (member|Master)/
	if result =~ /#{playername} is a (member|Master)/
		fput "whisper #{playername} Use SYMBOL OF RECALL if you want to save any spells you had before death."
		respond
		respond "Giving the player 10 seconds to activate the symbol."
		respond
		sleep 10
	else
		respond
		respond "#{Char.name}, #{playername} doesn't appear to be in Voln."
		respond
	end
end

multifput "prep 308", "cast #{playername}" if Spell[308].known? && Spell[308].affordable?
sleep 3
waitrt?
sleep 1

if chrismname == "None"
	respond
	respond "No chrism was requested."
	respond
else
	result = dothistimeout "get #{chrismname} from my #{Vars.chrismsack}", 5, /Get what|You remove/
	if result =~ /Get what/
		respond
		_respond "#{monsterbold_start}***ALERT***#{monsterbold_end}"
		respond
		_respond "#{Char.name}, you told me to get the #{monsterbold_start}#{chrismname}#{monsterbold_end} chrism from your #{Vars.chrismsack}, but I could not find one."
		respond
		respond "If you want to try another chrism name, type ;ka now otherwise I'll continue raising without a chrism in 10 seconds."
		respond
		_respond "#{monsterbold_start}***ALERT***#{monsterbold_end}"
		respond
		sleep 10
	elsif result =~ /You remove/
		fput "wave my #{chrismname} at #{playername}"
		sleep 3
	end
end

fput "whisper #{playername} I'm raising you now."
sleep 3

if Vars.raisedeadrp == "None"
	nil
else
	Lich::Util.issue_command("speak common", /You are now/, silent: true, quiet: true)
	fput "say #{Vars.raisedeadrp}"
	sleep 1
end

multifput "prep 318", "cast #{playername}" if Spell[318].known? && Spell[318].affordable?
sleep 5
waitrt?
fput "say Welcome back!"
fput "whisper #{playername} Please rest a minute or two until our souls have unlinked."
respond
respond "#{playername} should be alive again.  Great work!"
respond
exit