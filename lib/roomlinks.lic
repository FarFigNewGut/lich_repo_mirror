=begin
* Based on ;drizzleback by Gnomad (PC)
* Will add characters of your choice to either side of a StormFront link, only for a room description.
* Defaults to %%.
* Borrowed the shape of rnum to save some time. Thanks, Geldan.
* If you're running StormFront, you probably don't need this.

	author: Kaldonis
	game: Gemstone
	tags: utility, profanity, wizard, avalon
	version: 1.3
=end

left_delimiter = script.vars[1] ? script.vars[1] : '%'
right_delimiter = script.vars[2] ? script.vars[2] : '%'

# if you can regex highlight like in Profanity...
#    %.*?% will highlight all items in rooms if % is your delimiter.  Neat!

# maybe some help message for this, but no point to spam login
#echo "Using #{left_delimiter} as your left bold tag."
#echo "Using #{right_delimiter} as your right bold tag."
#echo "Use #{$clean_lich_char}#{Script.self} <left  tag> <right tag> to pick different ones."
#echo "Don't use angle brackets (< and >) or quotes. I can't promise what that will do."

style = proc {|server_string|
  if server_string =~ /roomDesc/ 
    if server_string =~ /You also see/
      server_string_start = server_string[/.*You also see/]
      server_string_start = server_string_start.gsub(/You also see/, "")
      server_string_end = server_string[/You also see.*/]
      server_string_start = server_string_start.gsub(/(<a(?:.*?)>)(.*?)(<\/a>)/, "\\1#{left_delimiter}\\2#{right_delimiter}\\3")
      server_string = server_string_start + server_string_end + "\n"
    else
      server_string = server_string.gsub(/(<a(?:.*?)>)(.*?)(<\/a>)/, "\\1#{left_delimiter}\\2#{right_delimiter}\\3")
    end
  end
  server_string
}

if script.vars[1]
  DownstreamHook.add('#{script.name}', style)
  DownstreamHook.remove('#{script.name}')
  echo "Removing #{script.name} from DownstreamHook..."
else
  DownstreamHook.add('#{script.name}', style)
  echo "Adding #{script.name} to DownstreamHook..."
end

#DownstreamHook.add('roomlinks', style)
#before_dying { DownstreamHook.remove('roomlinks') }

#loop{sleep 1}
