=begin

	This script helps to ensure you don't accidentally kill people while INCANTing or CASTing spells. This script also helps to ensure you cast beneficial spells at players and harmful spells at critters. Keep this script running in the background and only kill it if you run into a problem or actually want to harm another player.
	
	First off if you have a harmful spell prepared and you attempt to CAST a spell that might target another player this script won't allow the cast to go through and will inform you of why. For example let's say there is a player named Bobby in the room with you and you want to cast at a critter called bobcat, so you enter "cast bob", this MIGHT cast at Bobby, but with this script it won't let the cast go through. Either use more letters of the critter's name to avoid this or do ;k donoharm to stop the script.
	
	This also works if you're INCANTING a harmful spell while a player is your current target via the TARGET verb. In this scenario the script will automatically target a random critter and INCANT the spell for you.
	
	This script also ensures you don't accidentally cast at inanimate objects. For example if you're trying to cast a beneficial spell at Bobby but there are some boots on the ground and you enter "cast bo" the game might target the boots and waste your time and mana. This script will automatically find a person in the room whose name starts with "bo" and cast at them instead using their ID number, in this case Bobby, ensuring the spell gets casts at a player. This also works the same way with critters and harmful spells.
	
	The script will also monitor who is in your group so if you attempt to cast a room wide spell with people in the room who are not in your group the script will not allow the cast to go through.
	
	Lastly if you're attempting to cast at a non-aggressive NPC this script won't allow you. For example if you're trying to cast at that bobcat again by doing "cast bob" but someone has their bobtailed cat in the room with you the script will automatically target the bobcat via their ID number, ensuring your spell gets cast at the aggressive criter. Also if the bobtailed cat was the only critter in the room with while you did "cast bob" the script won't allow the cast to go through.
	
	Author: Tgo01
	Version 4

=end

all_offensive_spells = [ "Unbalance", "Fire Spirit", "Web", "Call Lightning", "Searing Light", "Calm", "Silence", "Interference", "Bind", "Frenzy", "Mass Interference", "Spiritual Abolition", "Prayer of Holding", "Smite", "Bane", "Holy Bolt", "Blind", "Fervent Reproach", "Censure", "Divine Fury", "Divine Wrath", "Elemental Blast", "Elemental Wave", "Weapon Deflection", "Elemental Saturation", "Elemental Strike", "Elemental Dispel", "Major Elemental Wave", "Sleep", "Chromatic Circle", "Slow", "Hand of Tonis", "Hurl Boudler", "Cold Snap", "Stone Fist", "Cone of Elements", "Immolation", "Meteor Swarm", "Elemental Disjunction", "Sounds", "Sun Burst", "Tangle Weed", "Call Swarm", "Spike Thorn", "Mass Calm", "Nature's Fury", "Blood Burst", "Mana Disruption", "Corrupt Essence", "Disintegrate", "Mind Jolt", "Limb Disruption", "Grasp of the Grave", "Energy Maelstrom", "Pain", "Balefire", "Curse", "Pestilence", "Evil Eye", "Torment", "Dark Catalyst", "Implosion", "Minor Shock", "Minor Water", "Minor Acid", "Minor Fire", "Major Cold", "Major Fire", "Tremors", "Major Shock", "Call Wind", "Sandstorm", "Weapon Fire", "Earthen Fury", "Holding Song", "Vibration Chant", "Lullabye", "Stunning Shout", "Song of Depression", "Song of Rage", "Song of Sonic Disruption", "Heal", "Bone Shatter", "Empathy", "Wither", "Empathic Link", "Sympathy", "Force Orb", "Powersink", "Telekinesis", "Force Projection", "Thought Lash", "Confusion", "Vertigo", "Mindwipe", "Pious Trial", "Aura of the Arkati", "Divine Strike", "Judgement", "Arcane Blast", "Stun Cloud", "Flaming Aura", "Minor Steam", "Mystic Impedance", "Minor Cold", "Major Acid", "Death Cloud", "Quake", "Firestorm", "V'tull's Fury" ]

all_offensive_spell_numbers = [ 110, 111, 118, 125, 135, 201, 210, 212, 214, 216, 217, 230, 301, 302, 306, 311, 312, 316, 317, 335, 409, 410, 412, 413, 415, 417, 435, 501, 502, 504, 505, 510, 512, 514, 518, 519, 525, 530, 607, 609, 610, 615, 616, 619, 635, 701, 702, 703, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 901, 903, 904, 906, 907, 908, 909, 910, 911, 912, 914, 915, 917, 1001, 1002, 1005, 1008, 1015, 1016, 1030, 1101, 1106, 1108, 1110, 1115, 1117, 1120, 1201, 1203, 1210, 1211, 1219, 1225, 1602, 1614, 1615, 1630, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1718 ]


all_room_wide_spells = [ "Searing Light", "Silence", "Mass Interference", "Censure", "Elemental Wave", "Major Elemental Wave", "Cold Snap", "Meteor Swarm", "Nature's Fury", "Corrupt Essence", "Grasp of the Grave", "Energy Maelstrom", "Evil Eye", "Implosion", "Tremors", "Call Wind", "Holding Song", "Song of Depression", "Song of Sonic Disruption", "Sympath", "Vertigo", "Aura of the Arkati", "Judgement", "Stun Cloud", "Death Cloud", "Quake" ]

all_room_wide_spell_numbers = [ 135, 210, 217, 316, 410, 435, 512, 525, 635, 703, 709, 710, 717, 720, 909, 912, 1001, 1015, 1030, 1120, 1219, 1614, 1630, 1704, 1713, 1714 ]



status_tags

toggle_upstream

everyone_in_my_group = Array.new

cannot_cast_this_spell = nil
check_for_group = nil
my_group_leader = nil
new_pc_target = nil
new_npc_target = nil
person_being_targeted = nil
new_command = nil
spell_number_being_cast = nil

check_for_group = proc{
	fput "group"
	while line = get
		if line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> is following you\.$/
			everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
			my_group_leader = "Me"
		elsif line =~ /You are not currently in a group\./
			my_group_leader = "Me"
		elsif line =~ /^\<a exist\=\"\-.*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> is the leader of your group\.$/
			my_group_leader = $1
			everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
		elsif line =~ /^\<a exist\=\"\-.*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> is also a member of your group\.$/
			everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
		elsif line =~ /^Your group status is currently/
			break
		end
	end
}

hook_proc = proc { |string|
	if string =~ /cas?t? at? ([a-zA-Z]+)/i || string =~ /cas?t? ([a-zA-Z]+)/i || string =~ /evok?e? at? ([a-zA-Z]+)/i || string =~ /evok?e? ([a-zA-Z]+)/i
		target = $1
		new_pc_target = nil
		new_npc_target = nil
		cannot_cast_this_spell = nil
		new_pc_target = GameObj.pcs.find { |pc| (pc.noun =~ /#{target}/i) }
		new_npc_target = GameObj.npcs.find { |npc| (npc.noun =~ /#{target}/i) && (npc.type =~ /aggressive/) }
		if all_room_wide_spells.include?(checkprep)
			GameObj.pcs.each{ |pc| 
				if !everyone_in_my_group.include?(pc.noun)
					echo "You are attempting to cast a room wide spell with people here who are not in your group. I will not allow this. ;k donoharm if you wish to cast anyways."
					cannot_cast_this_spell = true
					break
				end
			}
			if cannot_cast_this_spell
				nil
			else
				string
			end
		elsif all_offensive_spells.include?(checkprep)
			if new_pc_target
				echo "This might potentially cast an offensive spell at another player. Either use more letters of the critter you want to cast at or type ;k donoharm to exit this script so you can cast this spell."
				nil
			elsif new_npc_target
				put "cast ##{new_npc_target.id}"
				nil
			elsif new_npc_target.nil?
				echo "You appear to be trying to cast at a friendly NPC so I will not allow this. If this is a mistake do ;k donoharm and report this error to Dreaven."
				nil
			else
				string
			end
		else
			if new_pc_target
				put "cast ##{new_pc_target.id}"
				nil
			else
				string
			end
		end
	elsif string =~ /(\s*inca?n?t? (\d+))/i
		new_command = $1
		spell_number_being_cast = $2.to_i
		new_pc_target = nil
		new_pc_target = GameObj.pcs.find { |pc| (pc.noun == person_being_targeted) }
		cannot_cast_this_spell = nil
		if all_room_wide_spell_numbers.include?(spell_number_being_cast)
			GameObj.pcs.each{ |pc| 
				if !everyone_in_my_group.include?(pc.noun)
					echo "You are attempting to cast a room wide spell with people here who are not in your group. I will not allow this. ;k donoharm if you wish to cast anyways."
					cannot_cast_this_spell = true
					break
				end
			}
			if cannot_cast_this_spell
				nil
			else
				string
			end
		elsif all_offensive_spell_numbers.include?(spell_number_being_cast)
			if new_pc_target
				echo "You are attempting to incant an attack spell while another player is your current TARGET. If you want to proceed type ;k donoharm and try again. In the meantime I have targeted a random critter and incanted your spell for you."
				put "target random"
				put "#{new_command}"
				nil
			else
				string
			end
		else
			string
		end
	elsif string =~ /cast/i
		cannot_cast_this_spell = nil
		if all_room_wide_spells.include?(checkprep)
			GameObj.pcs.each{ |pc| 
				if !everyone_in_my_group.include?(pc.noun)
					echo "You are attempting to cast a room wide spell with people here who are not in your group. I will not allow this. ;k donoharm if you wish to cast anyways."
					cannot_cast_this_spell = true
					break
				end
			}
			if cannot_cast_this_spell
				nil
			else
				string
			end
		else
			string
		end
	elsif string =~ /\s*sing?\s*/i
		if string =~ /sing? [a-zA-Z]/
			string
		else
			cannot_cast_this_spell = nil
			if all_room_wide_spells.include?(checkprep)
				GameObj.pcs.each{ |pc| 
					if !everyone_in_my_group.include?(pc.noun)
						echo "You are attempting to cast a room wide spell with people here who are not in your group. I will not allow this. ;k donoharm if you wish to cast anyways."
						cannot_cast_this_spell = true
						break
					end
				}
				if cannot_cast_this_spell
					nil
				else
					string
				end
			else
				string
			end
		end
	elsif string =~ /(\s*evok?e?\s*)/i
		new_command = $1
		new_pc_target = nil
		new_pc_target = GameObj.pcs.find { |pc| (pc.noun == person_being_targeted) }
		cannot_cast_this_spell = nil
		if all_offensive_spell_numbers.include?(checkprep)
			if new_pc_target
				echo "You are attempting to evoke an attack spell while another player is your current TARGET. If you want to proceed type ;k donoharm and try again. In the meantime I have targeted a random critter and incanted your spell for you."
				put "target random"
				put "#{new_command}"
				nil
			else
				string
			end
		elsif checkprep == "Divine Wrath"
			GameObj.pcs.each{ |pc| 
				if !everyone_in_my_group.include?(pc.noun)
					echo "You are attempting to cast a room wide spell with people here who are not in your group. I will not allow this. ;k donoharm if you wish to cast anyways."
					cannot_cast_this_spell = true
					break
				end
			}
			if cannot_cast_this_spell
				nil
			else
				string
			end
		else
			string
		end
	else
		string
	end
}

UpstreamHook.add('donoharm', hook_proc)

before_dying { UpstreamHook.remove('donoharm') }

fput "target clear"

check_for_group.call

while line = get
	if line =~ /^You are now targeting \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\>\.$/ || line =~ /^You are now targeting \<pushBold\/\>an? \<a exist\=\".*\" noun\=\".*\"\>(.*)\<\/a\>\<popBold\/\>\.$/ || line =~ /^You are now targeting \<pushBold\/\>the \<a exist\=\".*\" noun\=\".*\"\>(.*)\<\/a\>\<popBold\/\>\.$/
		person_being_targeted = $1
	elsif line =~ /^Target cleared\.$/
		person_being_targeted = nil
	elsif line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> joins your group\.$/
		everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
	elsif line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> leaves your group\.$/
		everyone_in_my_group.delete($1) if everyone_in_my_group.include?($1)
	elsif line =~ /^You disband your group\.$/ || line =~ /You leave \<a exist\=\".*\" noun\=\".*\"\>.*\'s\<\/a\> group\./ || line =~ /\<a exist\=\".*\" noun\=\".*\"\>.*\<\/a\> disbands \<a exist\=\".*\" noun\=\".*"\>.*\<\/a\> group\./ || line =~ /.* removes you from .* group\./
		everyone_in_my_group = Array.new
		my_group_leader = "Me"
	elsif line =~ /You join \<a exist\=\".*\" noun\=\".*\"\>.*\<\/a\>\./ || line =~ /\<a exist\=\".*\" noun\=\".*\"\>.*\<\/a\> adds you to \<a exist\=\".*\" noun\=\".*\"\>.*\<\/a\> group\./ || line =~ /grabs your hand\./ || line =~ /reaches out and holds your hand\./ || line =~ /gently takes hold of your hand\./ || line =~ /clasps your hand tenderly\./
		check_for_group.call
	elsif line =~ /^But \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> is already a member of your group\!$/
		everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
	elsif line =~ /^\<a exist\=\".*" noun\=\".*\"\>.*\<\/a\> removes \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> from the group\.$/ || line =~ /^You remove \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> from the group\.$/
		everyone_in_my_group.delete($1) if everyone_in_my_group.include?($1)
	elsif line =~ /^\<a exist\=\".*\" noun\=\".*\"\>.*\<\/a\> designates \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> as the new leader of the group\.$/
		my_group_leader = $1
	elsif line =~ /\<a exist\=\".*\" noun\=\".*\"\>.*\<\/a\> designates you as the new leader of the group\./
		my_group_leader = "Me"
	elsif line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> grabs \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> reaches out and holds \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> gently takes hold of \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> clasps \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand tenderly\.$/ || line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> adds \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> to \<a exist\=\".*\" noun\=\".*\"\>.*\<\/a> group\.$/
		if my_group_leader == $1
			everyone_in_my_group.push($2) unless everyone_in_my_group.include?($2)
		end
	elsif line =~ /^\<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> joins \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\">.*\'s\<\/a\> group\.$/
		if my_group_leader == $2
			everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
		end
	elsif line =~ /^You grab \<a exist\=\".*" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^You grab \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^You reach out and hold \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^You gently take hold of \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand\.$/ || line =~ /^You clasp \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\'s\<\/a\> hand tenderly\.$/ || line =~ /^You add \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> to your group\.$/
		everyone_in_my_group.push($1) unless everyone_in_my_group.include?($1)
	elsif line =~ /You designate \<a exist\=\".*\" noun\=\"([a-zA-Z]+)\"\>.*\<\/a\> as the new leader of the group\./
		my_group_leader = $1
	end
end