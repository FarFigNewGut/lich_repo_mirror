=begin
This script expands and incorporates what Kalros/Haldrik did in confluence_sort.lic

Its designed to add new objects to GameObj data so that Lich recognizes things properly
Just add it to your autostart - ;autostart add GameObjAdd

Adds Reim NPCs to undead and aggressive npcs list
Adds Sanctum of Souls NPCs to undead and aggressive npcs list
Adds new NPC type noncorporeal
Adds Reim Gems and gives them their own category
Adds familiars and companions to their own categories
Excludes stuff that shouldn't be picked up
Adds Confluence plinites and cores to new category "confluence" (STOLEN from confluence_sort.lic!!)
Adds Duskruin Shards to category "moonshard"
Adds Duskruin digging gems to category "duskruin gem"
Adds Pennant Chase gems to category "pennant chase gem"
Adds Sanctum of Scales gems to category "gems"

=end

wait_while { running?('repository')}

GameObj.load_data

ReimNpcs = "ethereal (?:commoner|denizen|guard|guardsman|guardswoman|inmate|lunatic|madman|madwoman|peasant|prisoner|squire|swordsman|swordswoman|traveller|townsman|townswoman|villager)|ghostly (?:bandit|highwayman|highwaywoman|marauder|waylayer)|unworldly (?:guest|maid|noble|royal guard|royal knight|servant|slave|steward|visitor)|celestial (?:dancer|juggler|nomad|traveller)|Shopkeeper|Innkeeper|Bartender|Patrol Leader|Bandit Lord|Bandit Lady|Gypsy Queen|Gypsy King|Guard Captain|Wall Captain|Drill Sergeant|Stable Hostler|Dungeon Master|Master Torturer|Butler|Cook|Knight Captain|Foreign Dignitary|Royal Prince|Royal Princess|Royal Jester|Royal Emperor|Royal Empress"

Familiars = "(?:short-nosed|bare-backed|little-collar|long-tailed|long-tongued)?.*?(?:small|large|fruit|spotted|pygmy) bat|(?:(?:blue-eyed|disheveled|fat|fluffy|green-eyed|long-haired|orange-eyed|plump|shabby|short-haired|sleek|emerald-eyed)?.*?(?:black|calico|charcoal|ginger|grey|tabby|white) cat|(?:silver-eyed pure white cat|silver-ruffed charcoal black cat))|(?:large|small)?.*?(?:black|brown|dwarf|forest|green|grey|leaf|mountain|ochre|spotted|veiled) chameleon|(?:iridescent)?.*?(?:purple-plumed) cormorant|lithe golden-eyed coyote|(?:large|ruffled|sleek|small)?.*?(?:long-winged|narrow-winged|red-footed|red-necked) falcon|(?:(?:disheveled|sleek)?.*?(?:arctic|bat-eared|black|blue|desert|grey|kit|red|swift) fox|black-footed plump red fox)|(?:(?:large|plump|slimy|small|speckled)?.*?(?:brown|bull|green|green tree|horned|tree) frog|heavy-set bull frog)|gyrfalcon|(?:black-tailed|white-tailed)?.*?(?:black|broom|cape|mountain|red|savanna|scrub|snowshoe|woolly) hare|(?:(?:large|ruffled|sleek|small)?.*?(?:black|black-mantled|grey-bellied|grey-headed|red-chested|red-tailed|spot-tailed|white-bellied) hawk|dappled broad-winged hawk)|rangy dappled grey jackal|(?:roly-poly)?.*?(?:flamepoint) sand kitten|(?:greater|lesser|sleek|small)?.*?(?:bamboo|black|brown|crowned|dwarf|fork-crowned|golden|fork-marked|grey|grey-headed|mouse|red-bellied|ring-tailed|red-collared|ruffled|white-collared) lemur|slim dove grey merlin|(?:fat|plump|sleek|tiny)?.*?(?:black|brown|field|forest|furry|pocket|grey|white)?.*?mouse|(?:(?:greater|lesser|ruffled|sleek|pale-faced)?.*?(?:barn|pygmy|barred|screech|bay|snowy|crested|sooty|eagle|speckled|elf|spectacled|grass|spotted|great white|striped|grey|tawny|hawk|white|horned|white-faced|maned|wood|masked) owl|dark-eyed grey barred owl)|(?:brilliant)?.*?parrot|(?:large|ruffled|small|sleek)?.*?(?:brown|pink-backed|white|spot-billed) pelican|(?:crested|emperor|king|royal|yellow-eyed|little blue) penguin|(?:rusty|hooded|red-brown|black|brown|crested) pitohui|rock ptarmigan|(?:(?:large|ruffled|small|sleek)?.*?raven|glossy coal black raven)|squat pebble-backed toad|(?:black-banded|ivory-billed|black-billed|red-billed|black-necked|red-necked|blue-banded|spot-billed|curl-crested|stripe-billed|fiery-billed|yellow-browed|grey-breasted|yellow-ridged|groove-billed)?.*?(?:blue|bright blue|collared|emerald|green|hooded|speckled)?.*?toucan|(?:(?:arctic|blue|great white|grey) wolf|amber-eyed grizzled timber wolf)|(?:cloudy-eyed|long-eared|ethereal|long-nosed|foggy-eyed|soft-featured|lithe|white-eyed)?.*?air wyrdling|(?:amber-eyed|large-nosed|crumbling|rough|crystal-eyed|round-eared|dusty|squat|dusty-eyed|stout)?.*?earth wyrdling|(?:angular|sharp-eared|ember-eyed|sharp-nosed|lanky|smoky|red-eyed|smoky-eyed|scaled|smoldering)?.*?fire wyrdling|(?:angular|nebulous|hook-nosed|scaled|jagged-eared|silver-eyed|lanky|spark-eyed)?.*?lightning wyrdling|(?:blue-eyed|misty-eyed|frothy-eyed|sleek|lithe|small-nosed|long-eared|smooth|misty)?.*?water wyrdling"

#Exclude crap that shouldn't be picked up or is miscatgorized
#Add stuff that is missing!
if GameObj.type_data['armor'][:exclude].inspect !~ /dirty brown robes/i && GameObj.type_data['armor'][:exclude].inspect !~ /some flowing robes/i && GameObj.type_data['armor'][:exclude].inspect !~ /some tattered white robes/i
	GameObj.type_data['armor'][:exclude] = Regexp.new(/^(?:some dirty brown robes|some flowing robes|some tattered white robes)$/)
end
if GameObj.type_data['clothing'][:exclude].inspect !~ /some tattered white robes/i && GameObj.type_data['clothing'][:exclude].inspect !~ /woven cloak/i
	GameObj.type_data['clothing'][:exclude] = Regexp.new(/#{GameObj.type_data['clothing'][:exclude].inspect.gsub('\\','').gsub('/','')}|^(?:some tattered white robes|woven cloak|tattered plaid flannel shirt|weathered plaid flannel cap|some heavy leather boots)$/)
end
if GameObj.type_data['jewelry'][:noun].inspect !~ /scepter|plate|pitcher/i && GameObj.sellable_data['gemshop'][:noun].inspect !~ /scepter/i && GameObj.sellable_data['pawnshop'][:noun].inspect !~ /scepter/i
	GameObj.type_data['jewelry'][:noun] = Regexp.new(/#{GameObj.type_data['jewelry'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:scepter|plate|pitcher)$/)
	GameObj.sellable_data['gemshop'][:noun] = Regexp.new(/#{GameObj.sellable_data['gemshop'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:scepter)$/)
	GameObj.sellable_data['pawnshop'][:noun] = Regexp.new(/#{GameObj.sellable_data['pawnshop'][:noun].inspect.gsub('$','').gsub('\\','').gsub('/','').gsub(')','')}|(?:scepter))$/)
end
if GameObj.type_data['uncommon'][:exclude].inspect !~ /\bdoor$/i
	GameObj.type_data['uncommon'][:exclude] = Regexp.new(/#{GameObj.type_data['uncommon'][:exclude].inspect.gsub('\\','').gsub('/','')}|(?:door)$/)
end

#Adds Reim undead and Sanctum creatures to aggressive npc and undead category
if GameObj.type_data['aggressive npc'][:name].inspect !~ /#{ReimNpcs}/i && GameObj.type_data['undead'][:name].inspect !~ /#{ReimNpcs}/i 
	GameObj.type_data['aggressive npc'][:name] = Regexp.new(/(?:#{GameObj.type_data['aggressive npc'][:name].inspect.gsub('$','').gsub('\\','').gsub('/','')}|^(?:berserk )?(?:#{ReimNpcs})|^(?:pale scaled shaper|patchwork flesh monstrosity|lithe veiled sentinel|shambling lurk|deathsworn fanatic))$/)
	GameObj.type_data['undead'][:name] = Regexp.new(/^(?:seasoned |grizzled |battle-scarred |ancient |veteran |berserk )?(?:#{GameObj.type_data['undead'][:name].inspect.gsub('$','').gsub('\\','').gsub('/','')}|#{ReimNpcs}|patchwork flesh monstrosity|shambling lurk)$/)
end

#Add Duskruin Shards
if GameObj.type_data['moonshard'].nil?
	GameObj.type_data['gem'][:exclude] = Regexp.new(/#{GameObj.type_data['gem'][:exclude].inspect.gsub('\\','').gsub('/','')}|^cracked ur-barath stone$/)
	GameObj.type_data['uncommon'][:exclude] = Regexp.new(/#{GameObj.type_data['uncommon'][:exclude].inspect.gsub('\\','').gsub('/','')}|^(?:thin iron strip|thin kakore strip)$/)
	GameObj.type_data['valuable'][:exclude] = Regexp.new(/#{GameObj.type_data['valuable'][:exclude].inspect.gsub('\\','').gsub('/','')}|^golden glimaerstone nugget$/)
	GameObj.type_data['moonshard'] = {:name=>'test'}
	GameObj.type_data['moonshard'][:name] = Regexp.new(/^(?:jagged white sunstone shard|broken white opal sphere|white dreamstone sliver|thin platinum strip|black opal fragment|blood red garnet chunk|coarse grey moonstone shard|thin iron strip|cracked ur-barath stone|broken fire opal chunk|splintered fire agate shard|thin kakore strip|lopsided golden moonstone sphere|sharp golden topaz shard|golden glimaerstone nugget|reticulated crystal-edged golvern segment)$/)
end

#Reim gems get there own category!
if GameObj.type_data['reim'].nil?
	GameObj.type_data['reim'] = {:name=>'test'}
	GameObj.type_data['reim'][:name] = Regexp.new(/^(?:round of milky amber|smoky amethyst|hexagonal cobalt blue beryl|chunk of bronzite|marbled green chrysoprase|cluster of sky blue crystal|ice blue diamond|nebulous emerald|lustrous black garnet|ethereal blue gem|teardrop of dark green heliotrope|spear of lavender-grey iolite|piece of jet-flecked ivory|piece of black jade|piece of blue jade|pebble of orbicular jasper|cone of mahogany obsidian|heart of blue onyx|cloud opal|iridescent wood opal|jelly opal|shard of pink petalite|luminous prehnite|snow quartz|haloed Reim ruby|pallid sapphire|chunk of pale blue ice stone|chunk of pearly grey ice stone|chunk of snowy white ice stone|slice of ribbon stone|dark blue tempest stone|faint gold tempest stone|pale grey tempest stone|ebon-cored vortex stone|silver-cored vortex stone|sliver of bright green viridine)$/)
	GameObj.type_data['gem'][:name] = Regexp.new(/#{GameObj.type_data['gem'][:name].inspect.gsub('\\','').gsub('/','')}|^cluster of sky blue crystal$/)
	GameObj.type_data['gem'][:noun] = Regexp.new(/#{GameObj.type_data['gem'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:bronzite|iolite|petalite)$/)
	GameObj.sellable_data['gemshop'][:noun] = Regexp.new(/#{GameObj.sellable_data['gemshop'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:bronzite|chrysoprase|heliotrope|iolite|petalite|prehnite|viridine)$/)
end

#Duskruin gems get there own category!
if GameObj.type_data['duskruin'].nil?
	GameObj.type_data['duskruin'] = {:name=>'test'}
	GameObj.type_data['duskruin'][:name] = Regexp.new(/^(?:flame-banded gold chameleon agate|thin shard of iridescent fire agate|gently sloped green moss agate|round of gnat-filled amber|slice of gold-blended ametrine|fragment of lilac-toned amethyst|brilliant teal-laced azurite|scintillating scarlet red blazestar|inky-cored vivid carmine bloodjewel|cluster of gingery golden chrysoberyl|clouded maize-colored citrine|pale metallic silver mistvein diamond|square-cut deep pink diamond|sharply cut salorisa pink diamond|large blood red diamond|flawless argent-white diamond|pale-edged powder blue dreamstone|smooth black umber-suffused dreamstone|heart-shaped aqua green emerald|black-rayed celadon star emerald|multi-faceted sky blue feystone|six-pointed rich sanguine garnet|beryl green crystal-filled geode|pristine smoky violet glimaerstone|teardrop of mauve petrified haon|dainty orb of primrose yellow heliodor|cushion-cut ember orange hyacinth|bronze-tinged lambent yellow jacinth|slim bar of woodland green jade|pyrite-capped vibrant blue lapis lazuli|small disk of velvety green malachite|silver-washed celestial blue moonstone|cyan-haloed creamy ivory moonstone|pearlescent raven black opal|pellucid blue-green ora-bloom|oversized shadowy purple pearl|glimmering magnolia white pearl|tiny prism of wintry blue peridot|trilliant-cut yellow-green peridot|triangular pastel rainbow quartz|hazy shard of faint pink rose quartz|cube of sheer blossom pink rosespar|wheel-incised incarnadine ruby|coin-sized seafoam white sandsilver|silver-swept blue mistvein sapphire|honey-tinted indigo water sapphire|dark-veined apple green turquoise)$/)
	GameObj.type_data['gem'][:noun] = Regexp.new(/#{GameObj.type_data['gem'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:ametrine|chrysoberyl|citrine|haon|malachite|rosespar)$/)
	GameObj.sellable_data['gemshop'][:noun] = Regexp.new(/#{GameObj.sellable_data['gemshop'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:ametrine|chrysoberyl|citrine|haon|malachite|rosespar)$/)
end

#Pennant Chase gems
if GameObj.type_data['pennant chase'].nil?
	GameObj.type_data['pennant chase'] = {:name=>'test'}
	GameObj.type_data['pennant chase'][:name] = Regexp.new(/^(?:chunk of|faceted|fist-sized|nugget of|piece of|polished|sliver of|smooth|thumb-sized) (?:banana|bright|candy|dark|forest|mint|ocean|pale|rose|sky|sunny|sunset|vibrant)?\s?(?:blue|green|orange|pink|red|violet|yellow)(?:-tinged)? (?:coral|diamond|dreamstone|glimaerstone|jade|quartz|roestone|sapphire|sphene|spinel|topaz|tourmaline|zircon)$/)
	GameObj.type_data['pennant chase'][:exclude] = Regexp.new(/^(?:piece of blue jade)$/)
end

#Sanctum of Scales gems
GameObj.type_data['gem'][:name] = Regexp.new(/#{GameObj.type_data['gem'][:name].inspect.gsub('\\','').gsub('/','')}|^(?:dull grey crystal|pink salt crystal)$/)
GameObj.sellable_data['gemshop'][:name] = Regexp.new(/#{GameObj.sellable_data['gemshop'][:name].inspect.gsub('\\','').gsub('/','')}|^(?:dull grey crystal|pink salt crystal|tangerine wulfenite crystal|square of shale rock|cloudy alexandrite shard)$/)
GameObj.type_data['gem'][:noun] = Regexp.new(/#{GameObj.type_data['gem'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:spiral)$/)
GameObj.sellable_data['gemshop'][:noun] = Regexp.new(/#{GameObj.sellable_data['gemshop'][:noun].inspect.gsub('\\','').gsub('/','')}|^(?:crescent|fluorite|idocrase|spiral|tanzanite)$/)

#Noncorporeal creature identifier
if GameObj.type_data['noncorporeal'].nil?
	GameObj.type_data['noncorporeal'] = {:name=>'test'}
	GameObj.type_data['noncorporeal'][:name] = Regexp.new(/^(?:seasoned |grizzled |battle\-scarred |ancient |veteran |berserk )?(?:banshee|barghest|bog wraith|dark apparition|darkwoode|death dirge|eidolon|elder tree spirit|ethereal mage apprentice|ethereal triton sentry|fallen crusader|firephantom|gaunt spectral servant|ghost wolf|ghost|ghostly mara|ghostly pooka|ghostly warrior|ice wraith|lesser frost shade|lesser shade|lost soul|mist wraith|moaning phantom|moaning spirit|naisirc|nightmare steed|phantasma|phantasmal bestial swordsman|phantom|revenant|seraceris|shadow mare|shadow steed|shadowy spectre|snow spectre|spectral fisherman|spectral lord|spectral miner|spectral monk|spectral shade|spectral triton defender|spectral warrior|spectral woodsman|spectre|tree spirit|troll wraith|warrior shade|wind wraith|wolfshade|wraith|#{ReimNpcs})$/)
end

#Ranger companions
if GameObj.type_data['companion'].nil?
	GameObj.type_data['companion'] = {:noun=>'test'}
	GameObj.type_data['companion'][:noun] = Regexp.new(/^(?:albatross|badger|banishara|barrowrat|baza|beaver|boarrat|bobcat|burrowvine|bushwag|buzzard|caiverine|canid|capybara|caracal|caracara|catamount|cavecail|cheetah|condor|cougar|coyote|crow|curhound|curwolf|cygnet|dhole|dobrem|dole|eagle|elf-owl|falcon|felid|fennec|fenvaok|ferret|fox|foxhound|goshawk|graiphel|greatfang|groundhog|gyrefalcon|harrier|hawk|hawk-eagle|hedgehog|heron|hound|hyena|jackal|jaguar|jaguarundi|karet|kestrel|kingfisher|kite|kodkod|kuvasz|ledisa|leopard|lion|loper|lugger|lynx|margay|marmot|mastiff|mink|mole|mongoose|mudcat|muskrat|muzzlerat|narmo|nutria|ocelot|osprey|owl|panther|passo|peregrine|pigeonhawk|porcupine|puma|raccoon|raptor|rasper|rat|raven|rockrat|rowl|saker|samoyed|sandrat|scrabbler|screech-owl|sea-eagle|seagull|seahawk|serval|shrika|shrike|sloth|snowcat|snow-owl|sparrowhawk|stratis|swift|tiger|tothis|trakel|tunnelcat|veercat|vole|vulture|weasel|whiskrat|wildcat|wolf|wolfhound|wolverine|wombat|woodchuck|woodpecker|woodshrew|yowler)$/)
	GameObj.type_data['companion'][:exclude] = Regexp.new(/^(?:giant rat|mountain snowcat|bobcat|coyote|spotted lynx|blood eagle|giant marmot|giant weasel|arctic puma|black leopard|humpbacked puma|panther|puma|fire rat|ghost wolf|black panther|mountain lion|plains lion|cougar|dark panther|arctic wolverine|ice hound|night hound|wolverine|snow leopard|dobrem|martial eagle|wild hound|moor hound|colossus vulture|moor eagle|dreadnought raptor|mastodonic leopard|sabre-tooth tiger|stone mastiff|#{Familiars})$/)
end

#Wizard familiars
if GameObj.type_data['familiar'].nil?
	GameObj.type_data['familiar'] = {:name=>'test'}
	GameObj.type_data['familiar'][:name] = Regexp.new(/^(?:#{Familiars})$/)
end