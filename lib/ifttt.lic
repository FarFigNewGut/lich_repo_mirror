=begin
	This script lets you talk to your IFTTT account.
	If you don't have the Maker channel set up, go to https://ifttt.com/maker and do so.

	I'll eventually make this user-friendly. For now, it's not. Sorry.

	Author: Gnomad
	Tags: helper, nerdy
	Version: 0.1
=end

require 'net/http'
require 'json'

i_stand_alone

class IFTTT
	@@DEBUG = false
	@@IFTTT_KEY = '' #|| Settings[:iftt_key]
	@@ENDPOINT = "https://maker.ifttt.com/trigger/lich/with/key/#{@@IFTTT_KEY}"
	@@IFTTT_DATA = "#{DATA_DIR}/IFTTT"
	@@CERT_FILE = "#{@@IFTTT_DATA}/cacert.pem"
	@@CURL = 'https://curl.haxx.se/ca/cacert.pem'
	@@cert_updated = Time.new(1983)


	def self.setup_ssl
		unless File.exists?(@@IFTTT_DATA)
			begin
				Dir.mkdir(@@IFTTT_DATA)	
			rescue
				echo "error: #{$!}\n\t#{$!.backtrace.join("\n\t")}"
				Lich.msgbox(:message => "An error occured while attempting to create directory #{@@IFTTT_DATA}\n\n#{$!}", :icon => :error)
				exit
			end
		end

		cert = URI(@@CURL)

		req = Net::HTTP.new(cert.host, cert.port)
		
		if cert.scheme == 'https'
			req.use_ssl = true
			if File.exists?(@@CERT_FILE)
				req.ca_file = @@CERT_FILE
			else
				req.verify_mode = OpenSSL::SSL::VERIFY_NONE # Obv. MITM security hole. Download your own cacert once instead.
			end
		end

		req.start { |http|
			resp = http.get(cert.path)
			if resp.code == '200'
				open(@@CERT_FILE, 'wb') { |file| file.write(resp.body) }
			else
				echo 'Could not set up a secure line.', 'Quitting.'
				echo resp.body
				exit
			end
		}

		@@cert_updated = Time.now
	end

	def self.send(value_1, value_2=nil, value_3=nil)
		if @@IFTTT_KEY == ''
			echo 'You\'re gonna need to open up this script and get your hands dirty.'
			exit
		end

		if @@cert_updated + (60*60*24) < Time.now
			self.setup_ssl
		end

		uri = URI(@@ENDPOINT)
		
		body = {}
		body[:value1] = value_1
		body[:value2] = value_2 if value_2
		body[:channel] = value_3 if value_3

		echo body if @@DEBUG

		req = Net::HTTP::Post.new(uri, initheader = {'Content-Type' => 'application/json'})

		req.body = body.to_json

		resp = Net::HTTP.start(uri.hostname, uri.port, {use_ssl: true, ca_file: @@CERT_FILE}) { |http|
			http.request(req)
		}

		echo resp.body if @@DEBUG
		echo resp.message if @@DEBUG
	end

end

# args = /(.*) (--\w* .*)* #this is probably terrible
#	Settings[:ifttt_key]

IFTTT.send(script.vars[0]) if script.vars[0]