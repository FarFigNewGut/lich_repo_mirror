=begin

Handles answering questions while locked in the stockade.

Mainly designed to run along side of tpick. Will resume picking via tpick at the locksmith pool after being released from stockades.

***Only tested and confirmed to work in ta'vaalor. May need to adjust location and time variables for other towns.

~I'M CRAZY, CALL THE POLICE!!!

=end

# Fetches current Elanthian date and year based on real-world date and time.
def elanthian_datetime
  # Maps real-world days to Elanthian days
  day_mapping = {
    'Sunday' => 'Restday', 'Monday' => 'Volnes', 'Tuesday' => 'Tilamaires',
    'Wednesday' => 'Leyan', 'Thursday' => 'Niiman', 'Friday' => 'Day of the Huntress',
    'Saturday' => 'Feastday'
  }

  # Maps real-world months to Elanthian months
  month_mapping = {
    'January' => 'Lormesta', 'February' => 'Fashanos', 'March' => 'Charlatos',
    'April' => 'Olaesta', 'May' => 'Ivastaen', 'June' => 'Lumnea',
    'July' => 'Koaratos', 'August' => 'Phoenatos', 'September' => 'Imaerasta',
    'October' => 'Jastatos', 'November' => 'Eoantos', 'December' => 'Eorgaen'
  }

  # Constructs and returns a hash with the Elanthian day, month, and year
  {
    day: day_mapping[Time.now.strftime('%A')],
    month: month_mapping[Time.now.strftime('%B')],
    year: Time.now.year + 3100
  }
end

# Submits answers for roll call.
def answer_roll_call(town, time, elanthian_date)
  answers = [Char.prof, Char.name, Char.race, Char.gender, 
  town, time, elanthian_date[:day], elanthian_date[:month], elanthian_date[:year]]
  3.times { answers.each { |answer| fput "answer #{answer}" } }
end

# Executes escape routine.
def escape_routine
  Script.run "go2", "bank"
  fput "withdraw 10000"
  Script.run "go2", "locksmith pool"
  start_script "tpick"
end

# Extracts and returns the current location from the game's output.
def extract_location
  match = dothistimeout("location", 1, /You carefully survey your surroundings and guess that your current location is (.*) or somewhere close to it/).match(/You carefully survey your surroundings and guess that your current location is (.*) or somewhere close to it/)
  match ? match[1] : nil
end

# Main script execution loop.
while line = get
  case line
  when /The muffled voice of a guard echoes from beyond the cell door, "Roll call!/
    elanthian_date = elanthian_datetime
    location = extract_location
    if location = "Ta'Vaalor"
      time = Time.now.hour + 1 # Adjust for AM/PM as needed
    else
      time = Time.now.hour
    end
    answer_roll_call(location, time, elanthian_date)

  when /Suddenly, you hear the rattle of keys and the cell door swings open./
    escape_routine
  end
end

