#Tweaked by JustDan to allow you to specify which raffle table to look at.  Just type ;draffle and then the name of where the ticket is.  AKA ;draffle display.

=begin

  Raffletimer v0.99

  Run this script while standing in front of a raffle table.
  
  All times are local, based on your computer's clock.
  
  Be sure to check out NishiFront SF skin!
  http://www.gsguide.net/index.php?title=NishiFront
  
=end

timelimit = 60 #time in minutes to remove old raffles from list

Settings.load
raffle_data = Settings['raffle_data']
if raffle_data == nil
	raffle_data = Array.new
end


timeleft = raffletime = raffleitem = raffle = output = n = roomname = absolute_time = nil

# pare old raffles
raffle_data.reject! {|raffle| (raffle[3] - Time.now) < (-timelimit*60) }



before_dying {
	Settings['raffle_data'] = raffle_data
	Settings.save
}

		roomname = checkroom
		fput "exa ticket on #{script.vars[0]}"
		loop {
		line = get
		if line =~ /I could not find what you were referring to./
			timeleft = -1
			break
		end
		if line =~ /The drawing has been held with the following winner/
			timeleft = -1
			break
		end
		if line =~ /^The raffle is for (.+)/  
			raffleitem = $1
		end
		if line =~ /The drawing will be in ([0-9]+) (minute|minutes)/
			timeleft += $1.to_i * 60
			break
		end
		if line =~ /The drawing will be in ([0-9]+) (hour|hours) and ([0-9]+) (minute|minutes)/
			timeleft += ($1.to_i * 3600) + ($3.to_i * 60)
			break
		end
		}

		
		raffletime = absolute_time = Time.now + timeleft
		prettydate = raffletime.strftime("%A at %I:%M %p")
		if raffle_data.rassoc(raffleitem)
			raffle_data.reject! {|raffle| raffle[1] == raffleitem && raffle[2] == roomname && (raffle[3] - absolute_time).abs < 60}
			raffle_data.push ([prettydate, raffleitem, roomname, absolute_time])
		elsif timeleft > 0
			raffle_data.push ([prettydate, raffleitem, roomname, absolute_time])
		end
		
		
	
	if raffle_data[0]
		output += "================"
		n=0
		while raffle_data[n]
			output += "\n<pushBold/>"
			output += raffle_data[n][0]
			timeleft = raffle_data[n][3] - Time.now
				if timeleft < 0
					output += " (COMPLETED)"
				else
					timeleft = (timeleft / 60).to_i
					output += " ("			
					output += timeleft.to_s
					output += " minutes left)"
				end
			output += "<popBold/>\n"
			output += raffle_data[n][2].to_s
			output += "\n"
			output += raffle_data[n][1].chomp(".")
			output += "\n"
			n += 1
		end
		
			output += "================\n\n"
		puts output
	else
		echo "No raffles being tracked.  Run this script while at the raffle table!"
		echo "Completed raffles are removed after #{timelimit} minutes."
	end
