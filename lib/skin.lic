=begin

Script: 		skin
Author: 		WilliamW1979 (WilliamW1979@netscape.net)
Game:			Gemstone
Date: 			July 16, 2017
Version: 		1.3
Description: 		skins and picks up all valuables
Commands: 		;skin
What script does:	Automates the skinning and picking up of valuables
Categories:             Hunting
Tags:                   hunting, skinning, skin, pelt

Update History

1.3 - Updated to remove Settings class from this script, now it is in it's own seperate file! After finding a big, this was easier way to handle it!

1.2 - Fixed a few bugs

1.1 - Removed the ;vars necessity to run, added settings file support instead for ease of not using multiple scripts to run.

1.0 - Basic version

=end

class SKIN

	attr_accessor :setting_data, :weapon, :sheath, :lootsack, :skinningweapon, :skinningsheath, :itemtype, :gemsack

	def initialize
		#silence_me
		@setting_data = SETTINGS.new
		@weapon = setting_data.get_setting("weapon")
		@sheath = setting_data.get_setting("sheath")
		@lootsack = setting_data.get_setting("lootsack")
		@skinningweapon = setting_data.get_setting("skinningweapon")
		@skinningsheath = setting_data.get_setting("skinningsheath")
		@gemsack = setting_data.get_setting("gemsack")
		@itemtype = ["skin", "box", "magic", "wand", "jewelry", "reagent", "jewelry\,magic"]
	end

	def command
		if variable[1].nil?
			skin
			loot
		elsif "skin".include?(variable[1].downcase)
			skin
		elsif "loot".include?(variable[1].downcase)
			loot
		elsif "weapon".include?(variable[1].downcase)
			if variable[2]
				setting_data.save_setting("weapon", variable[0].gsub(variable[1] + " ", ""))
			end
		elsif "sheath".include?(variable[1].downcase)
			if variable[2]
				setting_data.save_setting("sheath", variable[0].gsub(variable[1] + " ", ""))
			end
		elsif "lootsack".include?(variable[1].downcase)
			if variable[2]
				setting_data.save_setting("lootsack", variable[0].gsub(variable[1] + " ", ""))
			end
		elsif "gemsack".include?(variable[1].downcase)
			if variable[2]
				setting_data.save_setting("gemsack", variable[0].gsub(variable[1] + " ", ""))
			end
		elsif "skinningweapon".include?(variable[1].downcase)
			if variable[2]
				setting_data.save_setting("skinningweapon", variable[0].gsub(variable[1] + " ", ""))
			end
		elsif "skinningsheath".include?(variable[1].downcase)
			if variable[2]
				setting_data.save_setting("skinningsheath", variable[0].gsub(variable[1] + " ", ""))
			end
		else
			respond
			respond
			respond "This script will take a few commands, here is the list!"
			respond
			respond
			respond ";skin                                          Skins all dead creatures and then loots all valuables"
			respond ";skin skin                                     Only skins all the dead creatures"
			respond ";skin loot                                     Only picks up all the loot on the ground"
			respond
			respond ";skin lootsack [your loot container]           Set your lootsack (will set it for other scripts too i write)"
			respond ";skin Weapon [your weapon]                     Set to your weapon"
			respond ";skin Sheath [your sheath]                     Set to your sheath"
			respond ";skin SkinningWeapon [your skinning weapon]    Set to your skinning weapon (Not required)"
			respond ";skin SkinningSheath [your skinning sheath]    Set to your skinning sheath (Not required)"
			respond
			respond
		end
	end

	def skin
		deadnpcs = GameObj.npcs.select{|npc| npc.status == 'dead'}
		for deadnpc in deadnpcs do
			respond #{deadnpc.name}
			if @skinningweapon and @skinningsheath
				fput "Put my #{@weapon} in my #{@sheath}"
				fput "Get my #{@skinningweapon}"
			end
			fput "Skin #{deadnpc.noun}"
			fput "Search #{deadnpc.noun}"
			if @skinningweapon and @skinningsheath
				fput "Put my #{@skinningweapon} in my #{@skinningsheath}"
				fput "Get my #{@weapon}"
			end
		end
	end

	def loot
		fput "Close my #{@gemsack}"
		fput "Close my #{@lootsack}"
		gg = GameObj.loot.select{ |item| item.type == "gem"}
		items = GameObj.loot.select{ |item| itemtype.include?(item.type)}

		if gg.count > 0 or items.count > 0
			if @weapon and @sheath
				fput "Put my #{@weapon} in my #{@sheath}"
			end
			if gg.count > 0
				unless @gemsack
					@gemsack = @lootsack
				end
				fput "Open my #{@gemsack}"
				for g in gg do
					fput "Get ##{g.id}"
					fput "Put ##{g.id} in my #{@gemsack}"
				end
				fput "Close my #{@gemsack}"
			end
			if items.count > 0
				fput "Open my #{@lootsack}"
				for loot in items do
					fput "Get ##{loot.id}"
					fput "Put ##{loot.id} in my #{@lootsack}"
				end
				fput "Close my #{@lootsack}"
			end
			if @weapon
				fput "Get my #{@weapon}"
			end
		end
	end
end

unless $SAFE == 0
	respond
	respond
	respond "This script requires trust, please use #{$lich_char}trust skin"
	respond
	respond
	exit
end

if File.file?("#{$script_dir}/settings.lic")
	load("#{$script_dir}/settings.lic")
else
	respond
	respond
	respond "This script requires settings.lic to run!"
	respond "It is a utility scripts for all my scripts (fix one file instead of updating all files for upgrades)"
	respond "kill script to prevent downloading"
	respond
	respond
	start_script 'repo', ["download settings.lic"]
	wait_while{running?("repo")}
	load("#{$script_dir}/settings.lic")
end
skin = SKIN.new
skin.command