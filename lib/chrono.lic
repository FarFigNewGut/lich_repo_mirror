=begin
Automates the use of chronomage travel.

;chrono <town> <room>

Example uses:
;chrono icemule 2300
;chrono landing 228
;chrono illistim 188

Destination abbreviations:

Wehnimer's Landing: 	landing weh lan wl
        Kharam-Dzu: 	teras kha dzu kd nel nelemar
       Ta'Illistim: 	illi ili dais tail elven nat otf ti en
          Solhaven:		sol sh sanctum sos
      River's Rest:		rr riv rest river
        Zul Logoth:		zul log zl
         Ta'Vaalor:		tav val valor vaalor tv
          Cysaegir:		cys nowhere
     Icemule Trace:		ice mule trace it rift scatter cold snow
     Kraken's Fall:		kraken krak kraak fall atoll pirate ship 

author: Alastir
contibutor: Ryjex

Variables used:       keepsack
;vars set keepsack =  container

=end

CharSettings['chronoroom']          ||=   4
CharSettings['chronoseller']        ||=   nil
CharSettings['chronomage_to']       ||=   nil
CharSettings['chronomage_endpoint'] ||=   4

module Chronomage

  def self.num(str)
    return str.delete(',').to_i
  end

  def self.goto_bank
    Script.run("go2","bank",:quiet => true)
  end

  def self.get_silvers
    starting_silvers = Lich::Util.silver_count
    
    if starting_silvers < 5000
      goto_bank
      fput "unhide" if hidden? || invisible?
      fput "withdraw #{5000-starting_silvers} sil"
    end
    silvers = Lich::Util.silver_count
    if silvers < 5000
      echo "My apologies, #{Char.name}, but poor people can't fly!"
      exit
    end
  end

  def self.teleport
    Script.run('go2',"#{CharSettings['chronoportal']}",:quiet => true)

    result = dothistimeout 'raise my pass', 5, /You raise your pass up, presenting it for inspection.|As you go to raise your pass, you hear a voice echo in your head, "Your pass is not valid for departures from this realm."/
    if result =~ /You raise your pass up, presenting it for inspection./
      echo 'Teleported successfully!'
      multifput "put my pass in my #{Vars.keepsack}"
      echo "Heading to #{CharSettings['chronomage_endpoint']}."
      Script.run('go2',"#{CharSettings['chronomage_endpoint']}",:quiet => true)
    elsif result =~ /As you go to raise your pass, you hear a voice echo in your head, "Your pass is not valid for departures from this realm."/
      echo 'Wrong pass!'
      fput "put my pass in my #{Vars.keepsack}"
    end 
  end
    
  def self.pass_locations
    location_regex_zone_one = Regexp.union(
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Wehnimer\'s Landing and Solhaven\, commencing at the time of purchase\./i,
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Wehnimer\'s Landing and Icemule Trace\, commencing at the time of purchase\./i,
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Icemule Trace and Solhaven\, commencing at the time of purchase\./i,
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Icemule Trace and Wehnimer\'s Landing and Solhaven\, commencing at the time of purchase\./i,
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Solhaven and Icemule Trace\, commencing at the time of purchase\./i,
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Solhaven and Wehnimer\'s Landing, commencing at the time of purchase\./i,
      /^Bold calligraphy states simply\, \"This pass entitles the original purchaser to one \(1\) day of unlimited travel between the towns of Ta\'Vaalor and Ta\'Illistim\, commencing at the time of purchase\./i,
      )
  
    error_regex = Regexp.union(
      /Bold red block letters spelling out \"EXPIRED\" appear to have been stamped across the face and reverse of the pass./,
      /Get what?/,
      /You can't do that./,
      )
  
    result_regex = Regexp.union(location_regex_zone_one, error_regex)
  
    fput "get my pass from my #{Vars.keepsack}"
    result = dothistimeout('read my pass', 5, result_regex)
    if result =~ location_regex_zone_one
#      if CharSettings['chronomage_to'] == "SH" or CharSettings['chronomage_to'] == "IMT"
        teleport
#      else
#        fput "put my pass in my #{Vars.keepsack}"
#        echo 'I need to buy a day pass!'
#        buy_pass
#        teleport
#      end
#    elsif result =~ /travel between the towns of (?:Solhaven|Wehnimer's Landing) and (?:Solhaven|Wehnimer's Landing)/
#      if CharSettings['chronomage_to'] == "SH" or CharSettings['chronomage_to'] == "WL"
#        teleport
#      else
#        fput "put my pass in my #{Vars.keepsack}"
#        echo 'I need to buy a day pass!'
#        buy_pass
#        teleport
#      end
    elsif result =~ error_regex
      fput 'drop my pass'
      pass_locations
    elsif result =~ /Get what?|You can't do that./
      buy_pass
      teleport
    else
      echo 'Help!'
    end
  end

  def self.buy_pass
    get_silvers
    Script.run('go2',"#{CharSettings['chronoroom']}",:quiet => true)
    if Room.current.id == 8634
      CharSettings['chronoseller']  =   'clerk'
    elsif Room.current.id == 8916
      CharSettings['chronoseller']  =   'halfling'
    elsif Room.current.id == 14358
      CharSettings['chronoseller']  =   'agent'
    elsif Room.current.id == 13169
      CharSettings['chronoseller']  =   'attendant'
    elsif Room.current.id == 5883
      CharSettings['chronoseller']  =   'clerk'
    end
  
    multifput "ask #{CharSettings['chronoseller']} for #{CharSettings['ask']}","ask #{CharSettings['chronoseller']} for #{CharSettings['ask']}"    
  end

  def self.pass_check
    keepsack = GameObj.inv.find { |i| i.noun =~ /#{UserVars.keepsack}/ }

    if keepsack.contents.empty?
      fput "look in my #{Vars.keepsack}"
    end
    
    if keepsack.contents.find { |item| item.noun =~ /pass/}
      echo 'I found a pass.'
      pass_locations  
    else
      echo 'I need to buy a day pass!'
      buy_pass
      teleport
    end
  end
  
  #Start of Script

  if Script.current.vars[1] == "help"
    Script.start("repo","info chrono.lic");
    exit
  end

  if !Script.current.vars[2].nil?
    CharSettings['chronomage_endpoint'] = Script.current.vars[2].to_i
    echo "Final room # set to #{CharSettings['chronomage_endpoint']}"
  else
    CharSettings['chronomage_endpoint'] = 4
  end

  # Where are we going?
  # Wehnimer's Landing, Solhaven, River's Rest, Zul Logoth, Ta'Illistim, Ta'Vaalor, Cysaegir, Kharam-Dzu and Icemule Trace.

  CharSettings['chronomage_to'] = Script.current.vars[0]
  echo "We're headed to #{CharSettings['chronomage_to']}"
  CharSettings['chronomage_to'] = CharSettings['chronomage_to'].gsub("to ", "")

  if CharSettings['chronomage_to'] =~ /Wehnimer's Landing|weh|lan|wl/i
    echo "Changing #{CharSettings['chronomage_to']} to WL"
    CharSettings['chronomage_to'] = "WL"
    CharSettings['ask'] = "Wehnimer's Landing"
  elsif CharSettings['chronomage_to'] =~ /Solhaven|solhaven|sol|sh|sanctum|sos/i
    echo "Changing #{CharSettings['chronomage_to']} to SH"
    CharSettings['chronomage_to'] = "SH" 
    CharSettings['ask'] = "Solhaven"
  elsif CharSettings['chronomage_to'] =~ /Icemule Trace|icemule|ice|mule|trace|it|cold|snow|rift|scatter/i
    echo "Changing #{CharSettings['chronomage_to']} to IMT"
    CharSettings['chronomage_to'] = "IMT"
    CharSettings['ask'] = "Icemule"

  elsif CharSettings['chronomage_to'] =~ /Ta'Illistim|illi|ili|dais|tail|elven|nat|otf|ti|^en/i
    echo "Changing #{CharSettings['chronomage_to']} to TI"
    CharSettings['chronomage_to'] = "TI"
    CharSettings['ask'] = "Ta'Illistim"
  elsif CharSettings['chronomage_to'] =~ /Ta'Vaalor|tav|val|valor|vaalor|tv/i
    echo "Changing #{CharSettings['chronomage_to']} to TV"
    CharSettings['chronomage_to'] = "TV" 
    CharSettings['ask'] = "Ta'Vaalor"
  else
    echo "Hmmm... not sure where you're headed, please clarify destination..."
    exit
  end

  #Town Regex
  town_regex = Regexp.union(
      /You carefully survey your surroundings and guess that your current location is (?:Wehnimer's Landing|the town of Wehnimer's Landing|the Graveyard) or somewhere close to it./,
      /You carefully survey your surroundings and guess that your current location is (?:Icemule Trace|the Abbey) or somewhere close to it./,
      /You carefully survey your surroundings and guess that your current location is (?:Solhaven|the free port of Solhaven) or somewhere close to it./,
      /You carefully survey your surroundings and guess that your current location is Ta\'Illistim or somewhere close to it./,
      /You carefully survey your surroundings and guess that your current location is Ta\'Vaalor or somewhere close to it./,
      /You carefully survey your surroundings and guess that your current location is the city of Ta\'Vaalor or somewhere close to it\./,
      )

  # Where are we?
  chronoroom = 0
  chronoseller = ''
  located = ''

  result = dothistimeout "location", 5, town_regex
  if result =~ /You carefully survey your surroundings and guess that your current location is (?:Wehnimer's Landing|the town of Wehnimer's Landing|the Graveyard) or somewhere close to it./
    echo "Changing #{CharSettings['chronomage_from']} to WL"  
    CharSettings['chronomage_from'] = "WL" 
    CharSettings['chronoroom']      = 8634
    CharSettings['chronoportal']    = 8635
  elsif result =~ /You carefully survey your surroundings and guess that your current location is (?:Icemule Trace|the Abbey) or somewhere close to it./
    echo "Changing #{CharSettings['chronomage_from']} to IMT"
    CharSettings['chronomage_from'] = "IMT" 
    CharSettings['chronoroom']      = 8916
    CharSettings['chronoportal']    = 15619
  elsif result =~ /You carefully survey your surroundings and guess that your current location is (?:Solhaven|the free port of Solhaven) or somewhere close to it./
    echo "Changing #{CharSettings['chronomage_from']} to SH"
    CharSettings['chronomage_from'] = "SH" 
    CharSettings['chronoroom']      = 14358
    CharSettings['chronoportal']    = 14359
  elsif result =~ /You carefully survey your surroundings and guess that your current location is Ta\'Illistim or somewhere close to it./
    echo "Changing #{CharSettings['chronomage_from']} to TI"
    CharSettings['chronomage_from'] = "TI" 
    CharSettings['chronoroom']      = 13169
    CharSettings['chronoportal']    = 1276
  elsif result =~ /You carefully survey your surroundings and guess that your current location is Ta\'Vaalor or somewhere close to it.|You carefully survey your surroundings and guess that your current location is the city of Ta\'Vaalor or somewhere close to it\./
    echo "Changing #{CharSettings['chronomage_from']} to TV"
    CharSettings['chronomage_from'] = "TV" 
    CharSettings['chronoroom']      = 5883
    CharSettings['chronoportal']    = 13779
  else
    echo 'Something is wrong!'
    Script.current.kill
  end

  if CharSettings['chronomage_to'] == CharSettings['chronomage_from']
    echo "We're already in #{CharSettings['chronomage_from']}!"
    exit
  end

  # Do I have a pass?
  
  pass_check 

end     #End of Chronomage Module