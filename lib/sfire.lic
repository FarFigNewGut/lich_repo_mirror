## vim: set ft=ruby:
=begin

    SpiffyFire by SpiffyJr (spiffyjr@gmail.com)
    
    Aims and fires your bow, and stuff.
    
      Ammo: ;settings change ammo <name>
    Quiver: ;settings change quiver <name>
    
     author: spiffyjr
      email: theman@spiffyjr.me
       name: SpiffyFire
       tags: combat
    version: 1.0

=end

DISABLED   = ['webbed','frozen','stunned','kneeling','sitting','prone']
SETTINGS ||= CharSettings.to_hash

change_stance = proc { |stance|
    loop {  
        break if checkstance == stance
        
        res = dothistimeout "stance #{stance}", 2, /You are now|Roundtime|Wait|wait/
        if res =~ /Roundtime: (\d+)|wait (\d+)/i
            sleep (($1 || $2).strip.to_f - 1)
        end
    }
}

gather_ammo = proc {
    ammo      = UserVars.ammo
    container = UserVars.quiver
    hide      = false

    while GameObj.loot.find { |i| i.name =~ /^#{ammo}$/i or i.noun =~ /#{ammo}s?/i }
        change_stance.call('defensive')
        
        unless GameObj.right_hand.id.nil?
            line = dothistimeout "stow ##{GameObj.right_hand.id}", 3, /put|closed/
            if line =~ /closed/
                fput "open my #{UserVars.quiver}"
                fput "put ##{GameObj.right_hand.id} in my ##{UserVars.quiver}"
            end
        end
        
        res = dothistimeout "gather #{ammo}", 2, /^You gather|^You pick up|^I could not|^What were you|^You may only|reach|on the ground/
        
        if res =~ /on the ground/
            res = dothistimeout "get arrows", 3, /^You gather|^You pick up|^I could not|^What were you|^You may only|reach|on the ground/
        end

        if res =~ /^You gather|^You pick up/
            dothistimeout "put my #{ammo} in my #{ammo} in my #{container}", 2, /^I could not find|^You can't seem to|^You add|^You bundle|You cannot bundle/
            fput "put my #{ammo} in my #{container}" if righthand?
        elsif res =~ /You may only/
            return
        elsif res == false or res =~ /^I could not find|^What were you/
            return
        elsif res =~ /reach/
            fput 'hide' if hide and not hidden?
            sleep 4
        end
    end
}

get_target = proc {
    target = script.vars[1]

    if target.nil?
        target = GameObj.npcs.find { |npc| npc.type =~ /aggressive/ and npc.status !~ /dead/ }
    elsif target.class == String
        if target[0] == "#"
            target = GameObj.npcs.find { |npc| npc.id == target[1..-1] }
        else
            target = GameObj.npcs.find { |npc| npc.name =~ /#{target}/ }
        end
    end
    
    target
}

get_cache = proc { |target|
    SETTINGS[target.id] ||= Hash.new
}

aim_target = proc { |target|
    settings = get_cache.call(target)
    
    if settings.nil? or settings.empty?
        location = 'left eye'
    else
        location = 'clear'
        
        ['left eye', 'right eye', 'head', 'neck'].each { |l|
            if settings[l].to_i < 3
                location = l
                break
            end
        }
    end
       
    unless settings[:aim] == location
        put "aim #{location}"
        settings[:aim] = location
    end
}

fire_target = proc { |target|
    settings = get_cache.call(target)
    
    res = dothistimeout "get 1 my #{UserVars.ammo.sub(/s$/, '')}", 2, /You remove|Get what\?|You already/
    if res =~ /Get what\?/
        echo "** you are out of ammo!"
        return
    end
    
    put "fire ##{target.id}"
    while line = get
        if line =~ /^Could not find/
            gather_ammo.call()
            fire_target.call()
            break
        elsif line =~ /Minor strike under the (right|left) eye, that was close!/
            eye = "#{$1.strip} eye"
            echo "-- rank one on #{eye}"
            settings[eye].to_i == 1 ? settings[eye] = 2 : settings[eye] = 1
        elsif line =~ /Well aimed shot almost removes an eye!/
            eye = settings[:aim]
            settings[eye].to_i == 2 ? settings[eye] = 3 : settings[eye] = 2
            echo "-- rank two on #{eye} eye"
        elsif line =~ /Surgical strike removes the .* (left|right) eye!|Hope the (?:left|right) is working/
            eye = "#{$1.strip} eye"
            echo "-- rank three on #{eye}"
            settings[eye] = 3
        elsif line =~ /You cannot fire/
            unless GameObj.right_hand.id.nil?
                line = dothistimeout "stow ##{GameObj.right_hand.id}", 3, /put|closed/
                if line =~ /closed/
                    fput "open my #{UserVars.quiver}"
                    fput "put ##{GameObj.right_hand.id} in my ##{UserVars.quiver}"
                end
            end
            fire_target.call(target)
            break
        elsif line =~ /but it has no effect/
            echo "** your ammo needs blessed or e-bladed"
            break
        elsif line =~ /Roundtime: (\d+)|wait (\d+)/i
            sleep (($1 || $2).strip.to_f - 1)
            script.clear
            
            break if line =~ /Roundtime/
            
            fire_target.call(target)
            break
        end
    end
}

target = get_target.call

unless target
    echo "** no target available"
    exit
end

aim_target.call(target)
change_stance.call('offensive')
fire_target.call(target)
change_stance.call('defensive')
