=begin
    Automatic collectible detection script for gemshop consignment tables.
    Just run it while at a gemshop consignment location.

    For additional setup/help info please see the ;collect_buy help

       todo: unsure
     author: Tysong (horibu on PC)
       name: collect_buy
       tags: collectibles, collections, consignment
    version: 1.0

    changelog:
        1.0 (2018-10-08)
            Initial release
=end
=begin
(?:sliver of rough moonstone|piece of cloudy glass|shard of cloudy soulstone|golden piece of eight|ruby shard|luminescent sandstone chunk|whisper of divine essence|antique lockpick|fossilized shell|meteorite chipping|small blue clay mortar|marbled blue marble pestle|some grey-colored powder|thin-lipped clear glass bottle|blood-stained bandana|Elanthian Guilds Council token|ethereal chain|ethereal pendant|tiny ethereal orb)|^miniature (?:warrior|rogue|wizard|cleric|empath|sorcerer|ranger|bard|monk|paladin) figurine|^polished stone|^(?:oblong|glossy|shiny|slick|rounded|cubic|flat|ovoid|heavy|mottled) smooth stone|^handful of (?:silver|gold|icy blue|iron|coral) flakes|^(?:blue|yellow|red|black) cotton swathe|^threaded (?:pink|grey|white|black|green) pearl|^ornate (?:Charl|Cholen|Eonak|Imaera|Jastev|Kai|Koar|Lorminstra|Lumnis|Oleani|Phoen|Ronan|Tonis|Andelas|Eorgina|Fash'lo'nae|Ivas|Luukos|Marlu|Mularos|Sheru|V'tull|Gosaena|Zelia|Huntress|Leya|Onar|Voln|Aeia|Jaston|Khaarne|Kuon|Meyno|Niima|Illoke|Amasalen|Arachne|Laethe|Tilamaire|Voaris|Voln) statuette
=end

GameSettings['total_silver'] ||= 0
GameSettings['total_items']  ||= 0
UserVars.collect_buy				 ||= {}
UserVars.collect_buy[:deposit_items] ||= false

Collectible_Rooms = {
	"Teras" => {
		:rooms => [12985],
		:tables => ["imbeddables table", "granite block", "miniatures cubby", "storage trunk", "frippery shelf", "jewelry case"],
	},
	"Landing" => {
		:rooms => [6325],
		:tables => ["marble counter", "jewelry stand", "shelf", "figurine table", "miscellaneous table", "crystal stand"],
	},
	"Icemule" => {
		:rooms => [8976],
		:tables => ["glass cabinet", "lidded crate", "arcana table", "silver stand", "ornately shelves", "glass case"],
	},
	"Cysaegir" => {
		:rooms => [9685],
		:tables => ["glass counter", "multi creature", "figurine table", "misc table", "bejeweled tree", "jewelry stand"],
	},
	"FWI" => {
		:rooms => [16452],
		:tables => ["adornments table", "statuary table", "miscellaneous table", "jewelry table", "magic table", "imbeddables table"],
	},
	"Illistim" => {
		:rooms => [12978],
		:tables => ["magic shelf", "imbeddables shelf", "jewelry shelf", "statuary table", "miscellaneous table", "adornments table"],
	},
	"Vaalor" => {
		:rooms => [18089],
		:tables => ["square table", "round table", "heirloom table", "statuary table", "hexagonal table", "octagonal table"],
	},
	"Solhaven" => {
		:rooms => [5720],
		:tables => ["magic table", "jewelry table", "imbeddables table", "miscellaneous table", "statuary table", "adornments table"],
	},
	"River's Rest" => {
		:rooms => [10936],
		:tables => ["magic table", "jewelry table", "imbeddables table", "miscellaneous table", "statuary table", "adornments table"],
	},
}

position = 0
silvers_needed = 0
collectible_regex = /<a exist="(?<id>\d+)" noun="(?<noun>[\w\s]+)">(?<name>(?:sliver of rough moonstone|piece of cloudy glass|shard of cloudy soulstone|golden piece of eight|ruby shard|luminescent sandstone chunk|whisper of divine essence|antique lockpick|fossilized shell|meteorite chipping|small blue clay mortar|marbled blue marble pestle|some grey-colored powder|thin-lipped clear glass bottle|blood-stained bandana|Elanthian Guilds Council token|ethereal chain|ethereal pendant|tiny ethereal orb)|miniature (?:warrior|rogue|wizard|cleric|empath|sorcerer|ranger|bard|monk|paladin) figurine|polished stone|(?:oblong|glossy|shiny|slick|rounded|cubic|flat|ovoid|heavy|mottled) smooth stone|handful of (?:silver|gold|icy blue|iron|coral) flakes|(?:blue|yellow|red|black) cotton swathe|threaded (?:pink|grey|white|black|green) pearl|ornate (?:Charl|Cholen|Eonak|Imaera|Jastev|Kai|Koar|Lorminstra|Lumnis|Oleani|Phoen|Ronan|Tonis|Andelas|Eorgina|Fash'lo'nae|Ivas|Luukos|Marlu|Mularos|Sheru|V'tull|Gosaena|Zelia|Huntress|Leya|Onar|Voln|Aeia|Jaston|Khaarne|Kuon|Meyno|Niima|Illoke|Amasalen|Arachne|Laethe|Tilamaire|Voaris|Voln) statuette)<\/a>/
quote_regex = /The selling price is (\d+) (?:silver|silvers)/
buying_regex = //
found_collectible = Array[]

if variable[0] =~ /help|setup/i
	respond "Script will look at ALL tables at a gemshop consignment location and spit out found collectibles."
	respond ""
	respond "   By default, will only buy and NOT deposit. To change that issue following command:"
	respond "       ;e echo UserVars.collect_buy[:deposit_items] = true"
	respond ""
	respond "GEMSHOP CONSIGNMENT LOCATIONS:"
	_respond ';go2 <d cmd=";go2 12985">12985</d> - Teras Isle'
	_respond ';go2 <d cmd=";go2 6325">6325</d>  - Wehnimer\'s Landing'
	_respond ';go2 <d cmd=";go2 8976">8976</d>  - Icemule Trace'
	_respond ';go2 <d cmd=";go2 9685">9685</d>  - Cysaegir'
	_respond ';go2 <d cmd=";go2 16452">16452</d> - Four Winds Isle'
	_respond ';go2 <d cmd=";go2 12978">12978</d> - Ta\'Illistim'
	_respond ';go2 <d cmd=";go2 18089">18089</d> - Ta\'Vaalor'
	_respond ';go2 <d cmd=";go2 5720">5720</d>  - Solhaven'
	_respond ';go2 <d cmd=";go2 10936">10936</d> - River\'s Rest'
	exit
elsif variable[0] =~ /stats/i
	respond "Total silver spent: #{GameSettings['total_silver']}"
	respond "Total items bought: #{GameSettings['total_items']}"
	exit
elsif variable[0] =~ /^(?:teras|kd|karam)/i
	Script.run("go2", "#{Collectible_Rooms["Teras"][:rooms][0]}")
elsif variable[0] =~ /^(?:landing|wl|wehnimer)/i
	Script.run("go2", "#{Collectible_Rooms["Landing"][:rooms][0]}")
elsif variable[0] =~ /^(?:icemule|imt)/i
	Script.run("go2", "#{Collectible_Rooms["Icemule"][:rooms][0]}")
elsif variable[0] =~ /^(?:cysaegir|cy)/i
	Script.run("go2", "#{Collectible_Rooms["Cysaegir"][:rooms][0]}")
elsif variable[0] =~ /^(?:mist|fwi|four)/i
	Script.run("go2", "#{Collectible_Rooms["FWI"][:rooms][0]}")
elsif variable[0] =~ /^(?:illistim|ti)/i
	Script.run("go2", "#{Collectible_Rooms["Illistim"][:rooms][0]}")
elsif variable[0] =~ /^(?:vaalor|tv)/i
	Script.run("go2", "#{Collectible_Rooms["Vaalor"][:rooms][0]}")
elsif variable[0] =~ /^(?:solhaven|sol)/i
	Script.run("go2", "#{Collectible_Rooms["Solhaven"][:rooms][0]}")
elsif variable[0] =~ /^(?:river|rr)/i
	Script.run("go2", "#{Collectible_Rooms["River's Rest"][:rooms][0]}")
end

status_tags("on")

gemshop_detected = Collectible_Rooms.detect{|key, value| value[:rooms].include? Room.current.id }
if gemshop_detected.empty? || gemshop_detected.nil?
	_respond "Not at a gemshop consignment location, you should probably start this in one."
	_respond "Convenient clickable ;go2 options for various locations below."
	_respond "Please remember to relaunch ;collect_buy once arrived at location"
	_respond ""
	_respond ';go2 <d cmd=";go2 12985">12985</d> - Teras Isle'
	_respond ';go2 <d cmd=";go2 6325">6325</d>  - Wehnimer\'s Landing'
	_respond ';go2 <d cmd=";go2 8976">8976</d>  - Icemule Trace'
	_respond ';go2 <d cmd=";go2 9685">9685</d>  - Cysaegir'
	_respond ';go2 <d cmd=";go2 16452">16452</d> - Four Winds Isle'
	_respond ';go2 <d cmd=";go2 12978">12978</d> - Ta\'Illistim'
	_respond ';go2 <d cmd=";go2 18089">18089</d> - Ta\'Vaalor'
	_respond ';go2 <d cmd=";go2 5720">5720</d>  - Solhaven'
	_respond ';go2 <d cmd=";go2 10936">10936</d> - River\'s Rest'
	_respond ""
	exit
end

fput "stow all" if checkleft || checkright

loop {
	put "look on #{gemshop_detected[1][:tables][position]}"
	loop {
		line = get
		if line =~ collectible_regex
			table_contents = line.scan(collectible_regex)
#			table_contents = line.split(", ")
			table_contents.each { |item|
				found_collectible.push([item, gemshop_detected[1][:tables][position]])
			}
		elsif line =~ /Total items|There is nothing|Looking at the tables, you see/
			#echo "end of look"
			break
		elsif line =~ /I could not find what you were referring to/
			#echo "no more tables"
			break
		end
	}
	position += 1
	break if position == gemshop_detected[1][:tables].count
}



if found_collectible.empty? || found_collectible.nil?
	echo "Nothing Found!"
else
	#let's see how much silver we need!
	found_collectible.each { |item|
		line = dothistimeout "get ##{item[0][0].to_i}", 5, quote_regex
		if line =~ quote_regex
			silvers_needed += $1.to_i
		else
			echo "something went wrong"
		end
	}
		
	#let's run to the bank and get coins!
	current_room = Room.current.id
	Script.run("go2", "bank")
	fput "deposit all"
	fput "withdraw #{silvers_needed} silver"
	line = dothistimeout "wealth", 5, /You have (\d+) coins with you/
	if line =~ /You have (\d+) coins with you/
		wealth = $1.to_i
		if wealth != silvers_needed
			echo "You don't have enough coins, add funds to your bank!"
			exit
		else
			Script.run("go2", "#{current_room}")
		end
		GameSettings['total_silver'] += silvers_needed
	else
		echo "something went wrong"
		exit
	end

	#let's buy stuff now!
	found_collectible.each { |item|
		line = dothistimeout "buy ##{item[0][0].to_i}", 5, buying_regex
		if line =~ buying_regex
			sleep 0.2 until (GameObj.right_hand.id)
			item[0][0] = GameObj.right_hand.id
			fput "stow ##{item[0][0].to_i}"
			sleep 0.2 until (GameObj.right_hand.id.nil?)
		else
			echo "something went wrong"
			pause_script
		end
	}

	if UserVars.collect_buy[:deposit_items]
		#let's go deposit them now!
		Script.run("go2", "collectibles")
		found_collectible.each { |item|
			line = dothistimeout "get ##{item[0][0].to_i}", 5, /You (?:get|pull|grab|take)/
			if line =~ /You (?:get|pull|grab|take)/
				fput "deposit ##{item[0][0].to_i}"
			else
				echo "something went wrong"
				pause_script
			end
		}
	end

	found_collectible.each { |item| echo "#{item[0][2]} - #{item[1]}" }
	GameSettings['total_items'] += found_collectible.count
	echo "All done, total of #{silvers_needed} silvers!"
	echo "Lifetime total of #{GameSettings['total_silver']} silvers!"
end