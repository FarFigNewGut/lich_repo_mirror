=begin

   Get options for various rooms to target with go2 by tag
   and optionally restricted to a location.

   example:
     select from a list of rooms with "gemshop" as a tag
       ;tago2 gemshop

     select from a list of rooms with "gemshop" and in a location that begins with "ta"
       ;tago2 gemshop,ta

       "location" filter also matches partially on the commonly used map image prefixes
       for instance all wehnimer's landing maps are named wl-area_name_version.jpg
       if the location filter exactly matches the first part before the -, it will also
       appear as an option. These are not fully consistent but can help.

       common map prefixes:
         en  - most all of elven nations (illistim, vaalor, and cysaegir)
         ifw - mist harbor
         imt - icemule trace
         kf  - kracken's fall
         rr  - river's rest
         ti  - teras isle
	 vo  - solhaven (vornavis)
         wl  - wehnimer's landing

   select your option with ";send #", i.e. ;send 4
   if only 1 room is returned, the script will automatically start go2 after 5 seconds
   ;k tago2 to prevent this

     author: Cinite
       game: Gemstone
       tags: utility, travel, go2
   required: Lich >= 4.4.6
    version: 1.0

   changelog:
      1.0 (2021-05-26): initial release

=end

args = script.vars[0].split(',')
the_tag = args[0]
the_loc = nil

if args.length > 1
	the_loc = args[1]
end

(echo "give a tag, dummy";exit) if not the_tag

rooms = Room.current.find_all_nearest_by_tag(the_tag)

if the_loc
	trimmed_rooms = Array.new
        rooms.each { |r| 
		# match if location regex matches, or map image prefix is exact match
                # i.e. wl == wehnimer's landing maps
		if Room[r].location =~ /#{the_loc}/i || Room[r].image.split("-")[0] == the_loc
			trimmed_rooms.push(r)
		end
	}
	if !trimmed_rooms.empty?
		rooms = trimmed_rooms
	else
		echo " **** location filter returned no rooms - returning full list **** "
	end
end

if not rooms or rooms.empty?
	echo "nothing"
elsif rooms.length > 60
	echo "like a lot of rooms, maybe you messed up #{rooms.length}"
else
	i = 1
	_respond "Building list for #{rooms.length} rooms..."
	rooms.each { |rid|
                r = Room[rid]
		msg = "#{i.to_s.rjust(2, ' ')}) #{r.title[0].ljust(50, ' ')} #{r.id.to_s.ljust(10, ' ')} #{r.location.ljust(50, ' ')}"
		_respond "#{monsterbold_start}#{msg}#{monsterbold_end}"
		_respond "#{monsterbold_start}#{"-" * msg.length}#{monsterbold_end}"
		i += 1
	}
        clear
	if rooms.length == 1
		echo "Sleeping 5 seconds then going to the specified room. ;kill tago2 to exit"
		sleep 5
		destination = rooms[0]
	else
	        line = nil
	        line = get until line.strip =~ /^[0-9]+$/
		sent = line.to_i
	        destination = rooms[sent - 1]
	end
	kill_script("go2") if running? 'go2'
	Script.start('go2', destination.to_s)
end
