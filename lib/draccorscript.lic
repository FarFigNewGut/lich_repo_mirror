=begin

	Minimum bet amount and bet multiplier can be changed inside of the script. Simply change the values of minimum_bet_amount and bet_multiplier to whatever you want.
	
	Start the script with the name of the two people others can bet on. For example ;draccorscript Bob Jim
	
	Then people simply whisper you how much they are betting and who they are betting on. For example they would do whisper draccor 1000 Jim.
	
	The script tries to correct mistakes people might make and point them in the right direction.
	
	Bets will be saved even if you stop the script or log out of the game, but make sure you always start it the same way. If you started it as ;draccorscript Bob Jim then start it the exact same way again.
	
	If you need to start the betting all over again simply kill the script then do ;draccorscript reset
	
	Start the script as ;draccorscript bets and the script will show you who bet on whom, how much they bet, what percentage of all bets they made, and how much silver they would be owed if they won.

	Author:  Tgo01
	Version:  2

=end

minimum_bet_amount = 1000
maximum_bet_amount = 100000
bet_multiplier = 1000

temp_total_bets = nil

def percent_of(n)
	(self.to_f / n.to_f * 100.0).round(2)
end

CharSettings['all_bets'] = Hash.new unless CharSettings['all_bets']
CharSettings['total_bets_received_person_a'] = 0 unless CharSettings['total_bets_received_person_a']
CharSettings['total_bets_received_person_b'] = 0 unless CharSettings['total_bets_received_person_b']
CharSettings['all_people_betting_on_person_a'] = Array.new unless CharSettings['all_people_betting_on_person_a']
CharSettings['all_people_betting_on_person_b'] = Array.new unless CharSettings['all_people_betting_on_person_b']
CharSettings['person_a_name'] = nil unless CharSettings['person_a_name']
CharSettings['person_b_name'] = nil unless CharSettings['person_b_name']

if script.vars[1] == "reset"
	CharSettings['all_bets'] = Hash.new
	CharSettings['total_bets_received_person_a'] = 0
	CharSettings['total_bets_received_person_b'] = 0
	CharSettings['all_people_betting_on_person_a'] = Array.new
	CharSettings['all_people_betting_on_person_b'] = Array.new
	echo "All settings have been reset."
	exit
end

if script.vars[1] == "bets"
	text = "People betting on #{CharSettings['person_a_name']}:\n"
	text += "Name|Bet Amount|% of total bet|Silvers due if they win\n"
	CharSettings['all_people_betting_on_person_a'].each {|person|
		CharSettings['all_bets'].each { |key,value|
			if key == person
				math = (value).percent_of(CharSettings['total_bets_received_person_a'])
				math2 = ((math / 100) * (CharSettings['total_bets_received_person_b'] * 0.9)).to_i
				math2 = (math2) - (math2 % 1000)
				math2 = (math2 + value) if value > math2
				value = value.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
				math2 = math2.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
				text += "#{key}|#{value}|#{math}%|#{math2}\n"
			end
		}
	}
	temp_total_bets = CharSettings['total_bets_received_person_a'].to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
	text += "Total bets received: #{temp_total_bets}"
	respond "#{text}"
	3.times{respond "\n"}			
	text = "People betting on #{CharSettings['person_b_name']}:\n"
	text += "Name|Bet Amount|% of total bet|Silvers due if they win\n"
	CharSettings['all_people_betting_on_person_b'].each {|person|
		CharSettings['all_bets'].each { |key,value|
			if key == person
				math = (value).percent_of(CharSettings['total_bets_received_person_b'])
				math2 = ((math / 100) * (CharSettings['total_bets_received_person_a'] * 0.9)).to_i
				math2 = (math2) - (math2 % 1000)
				math2 = value if value > math2
				math2 = (math2 + value) if value > math2
				value = value.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
				math2 = math2.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
				text += "#{key}|#{value}|#{math}%|#{math2}\n"
			end
		}
	}
	temp_total_bets = CharSettings['total_bets_received_person_b'].to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
	text += "Total bets received: #{temp_total_bets}"
	respond "#{text}"
	exit
end

script.vars[1] = script.vars[1].capitalize
script.vars[2] = script.vars[2].capitalize
CharSettings['person_a_name'] = script.vars[1].capitalize
CharSettings['person_b_name'] = script.vars[2].capitalize

while line = get
	if line =~ /^([a-zA-Z]+) whispers\, "(\d+) ([a-zA-Z]+)\."/ || line =~ /^\(OOC\) ([a-zA-Z]+)\'s player whispers\, \"(\d+) ([a-zA-Z]+)\.\"/ || line =~ /^([a-zA-Z]+) leans over and whispers\, \"(\d+) ([a-zA-Z]+)\.\"/
		bettor = $1
		bet_amount = $2.to_i
		person_being_bet_on = $3.capitalize
		if minimum_bet_amount > bet_amount
			fput "whisper #{bettor} The minimum bet amount is #{minimum_bet_amount}"
		elsif maximum_bet_amount < bet_amount
			fput "whisper #{bettor} The maximum bet amount is #{maximum_bet_amount}"
		elsif (bet_amount % bet_multiplier) != 0
			fput "whisper #{bettor} You must bet in multiples of #{bet_multiplier}"
		elsif person_being_bet_on != script.vars[1] && person_being_bet_on != script.vars[2]
			fput "whisper #{bettor} You must bet on either #{script.vars[1]} or #{script.vars[2]}"
		else
			if CharSettings['all_bets'].include?(bettor)
				silvers = CharSettings['all_bets'].fetch(bettor)
				if CharSettings['all_people_betting_on_person_a'].include?(bettor)
					old_bet_person = script.vars[1]
					CharSettings['total_bets_received_person_a'] -= silvers
				elsif CharSettings['all_people_betting_on_person_b'].include?(bettor)
					old_bet_person = script.vars[2]
					CharSettings['total_bets_received_person_b'] -= silvers
				end
				CharSettings['all_bets'].delete(bettor)
				CharSettings['all_people_betting_on_person_a'].delete(bettor)
				CharSettings['all_people_betting_on_person_b'].delete(bettor)
				fput "whisper #{bettor} Your old bet of #{silvers} silvers for #{old_bet_person} has been removed."
			end
			fput "whisper #{bettor} Your bet of #{bet_amount} silvers for #{person_being_bet_on} has been recorded."
			if person_being_bet_on == script.vars[1]
				CharSettings['all_people_betting_on_person_a'].push(bettor)
				CharSettings['total_bets_received_person_a'] += bet_amount
			elsif person_being_bet_on == script.vars[2]
				CharSettings['all_people_betting_on_person_b'].push(bettor)
				CharSettings['total_bets_received_person_b'] += bet_amount
			end
			CharSettings['all_bets'].store(bettor, bet_amount)
		end
	elsif line =~ /^([a-zA-Z]+) whispers\, \"my bet\.\"/i || line =~ /^\(OOC\) ([a-zA-Z]+)\'s player whispers\, \"my bet\.\"/i || line =~ /^([a-zA-Z]+) leans over and whispers\, \"my bet\.\"/i
		bettor = $1
		if !CharSettings['all_people_betting_on_person_a'].include?(bettor) && !CharSettings['all_people_betting_on_person_b'].include?(bettor)
			fput "whisper ooc #{bettor} You have yet to place a bet. To place a bet use this format: whisper #{Char.name} bet_amount person"
		else
			silvers = CharSettings['all_bets'].fetch(bettor)
			if CharSettings['all_people_betting_on_person_a'].include?(bettor) 
				fput "whisper ooc #{bettor} You have a bet for #{script.vars[1]} for #{silvers} silvers."
			elsif CharSettings['all_people_betting_on_person_b'].include?(bettor) 
				fput "whisper ooc #{bettor} You have a bet for #{script.vars[2]} for #{silvers} silvers."
			end
		end
	elsif line =~ /^([a-zA-Z]+) whispers\, ".*"/ || line =~ /^\(OOC\) ([a-zA-Z]+)\'s player whispers\, \".*"/ || line =~ /^([a-zA-Z]+) leans over and whispers\, \".*\"/
		bettor = $1
		fput "whisper ooc #{bettor} I did not understand you. Please try again in this format: whisper #{Char.name} bet_amount person"
	end
end		