=begin
Zesty! - Verb traps for objects
Version - 1.0.1
Author - stfuthx

Usage - ;zesty ITEM
=end

verbs = [ "attend", "bow", "cheer", "clench", "clean", "clutch", "cringe", "cuddle", "curtsy", "daydream", "drool", "duck", "dust", "exhale", "fidget", "flip", "flirt", "fluster", "flutter", "fly", "gag", "gawk", "gaze", "grip", "growl", "grumble", "hiss", "hold", "hug", "hum", "jeer", "kick", "kiss", "knock", "lean", "leer", "lick", "nod", "nudge", "peer", "pet", "point", "pluck", "poke", "pound", "press", "prod", "push", "pull", "punch", "tap", "tilt", "tickle", "turn", "touch", "twist", "stare", "wave" ]

# define our awesome way of displaying messages from this script
def item_message(message)
	puts "#{monsterbold_start}     #{message}#{monsterbold_end} "
end

# if no item provided (or provided incorrectly), spit out how to use the script
unless variable[1] =~ /^[A-z]+$/
	item_message("USAGE:  #{$lich_char}#{script.name} ITEM")
	exit
end

# if provided an item, spit back out what the item was, if it exists, and begin testing
if variable[1] =~ /^[A-z]+$/
	item = variable[1]
	item_message("*** Checking #{item} for zests ***")
	fput "point #{item}"
		item_noun = waitfor("You")
		if item_noun =~ /What were you/
			item_message("Sorry, I couldn't find #{item}. Try again.")		
			exit
		else
			verbs.each do |verbs|
  				fput "#{verbs} #{item}"
  				waitrt?
  			end
  			item_message("Completed testing of #{item} in its current location. There may be more/different zests if the #{item} is wearable, or can be opened/closed.")
		end
end
