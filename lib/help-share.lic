=begin
	NOTE: THIS SCRIPT REQUIRES ;share TO RUN. DOWNLOAD BY DOING ;repo download share.
	
	Please read the description for ;share for how these scripts work together. There is no need to run or stop this script, ;share starts and stops this script when needed.
	
	Version 2: Fixed bug with script trying to send mana to NONE.
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Author: Dreaven
	Version: 2
=end

if !File.exist?('scripts\share.lic')
    echo "This script requires the script 'share'. Do ;repo download share. There is no need to start or stop this script, ;share will  start and stop it when necessary."
	exit
end

start_script "share" if !running? "share"
i_already_stopped_singing = nil

while line = get
	if line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"Let\'s get this party started\.\"/ || line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"Share your stats with me\.\"/
		$share_group_leader = $1
		if line =~ /\"Let\'s get this party started\.\"/
			what_to_do = "start"
		elsif line =~ /\"Share your stats with me\.\"/
			what_to_do = "stats"
		end
		fput "group"
		while line = get
			if line =~ /([a-zA-Z]+) is the leader of your group\./
				$share_group_leader = nil if $share_group_leader != $1
				break
			elsif line =~ /^[a-zA-Z]+ is following you\./
				$share_group_leader = nil
				break
			elsif line =~ /^Your group status is currently/
				break
			end
		end
		if $share_group_leader
			if what_to_do == "start"
				$share_all_casters = Hash.new
				$share_all_those_spells_to_cast = Array.new
				$share_time_to_get_started = true
			elsif what_to_do == "stats"
				$share_time_to_share_stats = true
			end
		end
	elsif line =~ /^\(OOC\) (.*)\'s player whispers\, \"You are casting\: \[(.*)\]\.\"/
		spell_list = $2.split(",")
		if $1 == $share_group_leader
			if i_already_stopped_singing.nil? && Char.prof == "Bard"
				i_already_stopped_singing = true
				fput "stop singing"
			end
			spell_list.each{ |i| $share_all_those_spells_to_cast.push(i.to_i) unless $share_all_those_spells_to_cast.include?(i.to_i) }
		end
	elsif line =~ /^\(OOC\) (.*)\'s player whispers\, \"I need 515\.\"/
		$share_everyone_who_needs_515.push($1) unless $share_everyone_who_needs_515.include?($1)
	elsif line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"Everyone opting out of spells\: (.*)\.\"/
		if $1 == $share_group_leader
			temp = $2.split(", ")
			temp.each{ |i| $share_everyone_opted_out.push(i) }
			$share_everyone_opted_out
		end
	elsif line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"Let the spells fly\! The casters are\: Ranger\: (.*)\: (.*)\, (.*)\, (.*)\. Wizard\: (.*)\: (.*)\, (.*)\, (.*)\. Paladin\: (.*)\: (.*)\, (.*)\, (.*)\. Monk\: (.*)\: (.*)\, (.*)\, (.*)\. Major Spirit\: (.*)\: (.*)\, (.*)\, (.*)\. Minor Spirit caster 1\: (.*)\: (.*)\, (.*)\, (.*)\. Minor Spirit caster 2\: (.*)\: (.*)\, (.*)\, (.*)\. Major Elemental\: (.*)\: (.*)\, (.*)\, (.*)\. Minor Elemental\: (.*)\: (.*)\, (.*)\, (.*)\. Rapid Fire\: (.*)\: (.*)\, (.*)\, (.*)\. Universal Sender\: (.*)\.\"/ || line =~ /\(OOC\) (You whisper)\, \"Let the spells fly\! The casters are\: Ranger\: (.*)\: (.*)\, (.*)\, (.*)\. Wizard\: (.*)\: (.*)\, (.*)\, (.*)\. Paladin\: (.*)\: (.*)\, (.*)\, (.*)\. Monk\: (.*)\: (.*)\, (.*)\, (.*)\. Major Spirit\: (.*)\: (.*)\, (.*)\, (.*)\. Minor Spirit caster 1\: (.*)\: (.*)\, (.*)\, (.*)\. Minor Spirit caster 2\: (.*)\: (.*)\, (.*)\, (.*)\. Major Elemental\: (.*)\: (.*)\, (.*)\, (.*)\. Minor Elemental\: (.*)\: (.*)\, (.*)\, (.*)\. Rapid Fire\: (.*)\: (.*)\, (.*)\, (.*)\. Universal Sender\: (.*)\.\" to your group\./
		if $1 == $share_group_leader || checkname == $share_group_leader
			$share_all_casters.store("Ranger", 				  :Name => $2,  :SMC => $3,  :EMC => $4,  :MMC => $5 )
			$share_all_casters.store("Wizard", 				  :Name => $6,  :SMC => $7,  :EMC => $8,  :MMC => $9 )
			$share_all_casters.store("Paladin", 			  :Name => $10, :SMC => $11, :EMC => $12, :MMC => $13)
			$share_all_casters.store("Monk", 				  :Name => $14, :SMC => $15, :EMC => $16, :MMC => $17)
			$share_all_casters.store("Major Spirit", 		  :Name => $18, :SMC => $19, :EMC => $20, :MMC => $21)
			$share_all_casters.store("Minor Spirit Caster 1", :Name => $22, :SMC => $23, :EMC => $24, :MMC => $25)
			$share_all_casters.store("Minor Spirit Caster 2", :Name => $26, :SMC => $27, :EMC => $28, :MMC => $29)
			$share_all_casters.store("Major Elemental", 	  :Name => $30, :SMC => $31, :EMC => $32, :MMC => $33)
			$share_all_casters.store("Minor Elemental", 	  :Name => $34, :SMC => $35, :EMC => $36, :MMC => $37)
			$share_all_casters.store("Rapid Fire", 			  :Name => $38, :SMC => $39, :EMC => $40, :MMC => $41)
			$share_universal_sender = $42
		end
		if $1 == $share_group_leader
			if $share_all_those_spells_to_cast.count > 0
				share_highlight_message("All of the spells you are casting: #{$share_all_those_spells_to_cast}")
				$share_time_for_spells = true
			else
				$share_time_to_send_mana = true
			end
		end
	elsif line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"This spell up party is finished\.\"/ || line =~ /^\(OOC\) You whisper\, \"This spell up party is finished\.\" to your group\./
		i_already_stopped_singing = nil if Char.prof == "Bard"
		$share_time_to_send_mana = nil
		$share_party_is_over = true
	elsif line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"I need mana\.\"/ && $share_time_to_send_mana
		person = $1
		$share_use_society_ability.call if checkmana < 20
		share_that_mana = nil
		share_that_mana = true if ($share_all_casters.any?{ |key,value| value[:Name] == person && value[:SMC] == "YES"} && $share_send_spirit_mana == "YES") || ($share_all_casters.any?{ |key,value| value[:Name] == person && value[:EMC] == "YES"} && $share_send_elemental_mana == "YES") || ($share_all_casters.any?{ |key,value| value[:Name] == person && value[:MMC] == "YES"} && $share_send_mental_mana == "YES")
		if i_already_stopped_singing.nil? && Char.prof == "Bard"
			i_already_stopped_singing = true
			fput "stop singing"
		end
		$share_calculate_amount_of_mana_to_send.call
		if share_that_mana
			fput "send #{$share_amount_of_mana_to_send} #{person}" if $share_amount_of_mana_to_send > 0
		elsif $share_universal_sender != "NONE" && $share_universal_sender != checkname && ($share_send_spirit_mana == "YES" || $share_send_elemental_mana == "YES" || $share_send_mental_mana == "YES")
			fput "send #{$share_amount_of_mana_to_send} #{$share_universal_sender}" if $share_amount_of_mana_to_send > 0
		end
	elsif line =~ /^\(OOC\) (.*)\'s player whispers to the group\, \"I am finished casting\.\"/
		$share_person_who_finished_casting = $1
		$share_check_for_all_done_casting.call
	elsif line =~ /^\(OOC\) (.*)\'s player whispers\, \"Number of casts\: (.*)\, (.*)\, (.*)\, (.*)\, (.*)\, (.*)\, (.*)\, (.*)\. Multicasts\: (.*)\, (.*)\, (.*). Total casts\: (.*)\, (.*)\, (.*)\, (.*)\, (.*)\, (.*)\, (.*)\, (.*)\. Spell ranks\: (.*)\, (.*)\, (.*)\, (.*)\, (.*)\. Shares\: (.*)\, (.*)\, (.*).\ (.*)\."/
		$share_everyones_stats.store($1, :Total_caster_roles => 0, :Minor_Spirit_casts => $2.to_i, :Major_Spirit_casts => $3.to_i, :Minor_Elemental_casts => $4.to_i, :Major_Elemental_casts => $5.to_i, :Wizard_casts => $6.to_i, :Ranger_casts => $7.to_i, :Minor_Mental_casts => $8.to_i, :Paladin_casts => $9.to_i, :Spirit_multicast => $10.to_i, :Elemental_multicast => $11.to_i, :Mental_multicast => $12.to_i, :Total_Minor_Spirit_casts => $13.to_i, :Total_Major_Spirit_casts => $14.to_i, :Total_Minor_Elemental_casts => $15.to_i, :Total_Major_Elemental_casts => $16.to_i, :Total_Wizard_casts => $17.to_i, :Total_Ranger_casts => $18.to_i, :Total_Minor_Mental_casts => $19.to_i, :Total_Paladin_casts => $20.to_i, :Minor_Spirit_spell_ranks => $21.to_i, :Major_Spirit_spell_ranks => $22.to_i, :Paldin_spell_ranks => $23.to_i, :Minor_Elemental_spell_ranks => $24.to_i, :Major_Elemental_spell_ranks => $25.to_i, :SMC => $26, :EMC => $27, :MMC => $28, :Opted_out_of => $29)
		$share_everyone_opted_out.push($1) if $29 == "all"
	elsif line =~ /^\(OOC\) (.*)\'s player whispers\, \"Spells I can cast\: /
		player_name = $1
		$share_spells_players_can_cast.store(player_name, :Minor_Spirit => "No", :Major_Spirit => "No", :Minor_Elemental => "No", :Major_Elemental => "No", :Wizard => "No", :Ranger => "No", :Monk => "No", :Paladin => "No", :Rapid_Fire => "No")
		$share_spells_players_can_cast[player_name][:Minor_Spirit] = "Yes" if line =~ /Minor Spirit Yes/
		$share_spells_players_can_cast[player_name][:Major_Spirit] = "Yes" if line =~ /Major Spirit Yes/
		$share_spells_players_can_cast[player_name][:Minor_Elemental] = "Yes" if line =~ /Minor Elemental Yes/
		$share_spells_players_can_cast[player_name][:Major_Elemental] = "Yes" if line =~ /Major Elemental Yes/
		$share_spells_players_can_cast[player_name][:Wizard] = "Yes" if line =~ /Wizard Yes/
		$share_spells_players_can_cast[player_name][:Ranger] = "Yes" if line =~ /Ranger Yes/
		$share_spells_players_can_cast[player_name][:Monk] = "Yes" if line =~ /Monk Yes/
		$share_spells_players_can_cast[player_name][:Paladin] = "Yes" if line =~ /Paladin Yes/
		$share_spells_players_can_cast[player_name][:Rapid_Fire] = "Yes" if line =~ /Rapid Fire Yes/
	end
end