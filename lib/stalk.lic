=begin

    author: Gwrawr
    v0.0

=end

loud = true

def findLeader()
    leader = ""
    result = []
    put "group"
    until result.any? { |res| res =~ /Your group status is currently (open|closed)/ }
        result << get
    end
    result.each() { |result| leader = $~[:leader] if result =~ /^(?<leader>\w*) is the leader of your group\.$/ }
    return leader
end

def doHide()
    while not hiding?
        result = fput "hide"
        waitrt?
        exit if result =~ /can't see anywhere to hide/
    end
end

def doStalk()
    while not group?
        fput "stalk #{CharSettings["stalk_leader"]}"
        waitrt?
    end
end

if not group?
    echo "Not grouped, clearing leader #{CharSettings["stalk_leader"]}" if loud
    CharSettings["stalk_leader"] = nil
    doHide()
else
    echo "Grouped, current leader is #{CharSettings["stalk_leader"]}" if loud
    CharSettings["stalk_leader"] = nil if not GameObj.pcs.any? { |pc| pc.name =~ /#{CharSettings["stalking_leader"]}/ }
    CharSettings["stalk_leader"] = findLeader() if CharSettings["stalking_leader"] == nil
    echo "Grouped, new leader is #{CharSettings["stalk_leader"]}" if loud
    doHide()
    waitrt?
    doStalk()
end

CharSettings.save