=begin
|0-100 Hunting Script - Please do not AFK Script in Prime.|

Please adhere to POLICY 18 & 19.

Usage: ;huntpro stylenumber areastring

Huntpro Help: http://tinyurl.com/huntprohelp
	
Huntpro Discord: https://discord.gg/NEX6B5DFCX

YouTube: http://tinyurl.com/gsivjara

Email: gsivjara@gmail.com
|---------------------------------------------------------|
=end

huntpro_version = "2022.032B"

#Hide Command Inputs
silence_me
	
Settings.load
Settings[Char.name] ||= Hash.new
huntpro_setting_profile_detection				= Settings[Char.name]['huntpro_setting_profile_detection'] || "0"	
huntpro_setting_character_society				= Settings[Char.name]['huntpro_setting_character_society'] || "0"	
huntpro_setting_force_skip_list					= Settings[Char.name]['huntpro_setting_force_skip_list'] || "0"	
huntpro_setting_force_skip_list2				= Settings[Char.name]['huntpro_setting_force_skip_list2'] || "0"	
huntpro_setting_force_skip_list3				= Settings[Char.name]['huntpro_setting_force_skip_list3'] || "0"	
huntpro_setting_compound_ignore					= Settings[Char.name]['huntpro_setting_compound_ignore'] || "0"	
huntpro_setting_empath_self_heal				= Settings[Char.name]['huntpro_setting_empath_self_heal'] || "0"	
huntpro_setting_voln_fog						= Settings[Char.name]['huntpro_setting_voln_fog'] || "0"	
huntpro_setting_130_fog							= Settings[Char.name]['huntpro_setting_130_fog'] || "0"	
huntpro_setting_1020_fog						= Settings[Char.name]['huntpro_setting_1020_fog'] || "0"	
huntpro_setting_hunt_while_fried				= Settings[Char.name]['huntpro_setting_hunt_while_fried'] || "0"	
huntpro_setting_disable_encumbrance				= Settings[Char.name]['huntpro_setting_disable_encumbrance'] || "0"	
huntpro_setting_value_encumbrance				= Settings[Char.name]['huntpro_setting_value_encumbrance'] || 50	
huntpro_setting_upkeep140						= Settings[Char.name]['huntpro_setting_upkeep140'] || "0"	
huntpro_setting_upkeep240						= Settings[Char.name]['huntpro_setting_upkeep240'] || "0"	
huntpro_setting_upkeep515						= Settings[Char.name]['huntpro_setting_upkeep515'] || "0"	
huntpro_setting_upkeep919						= Settings[Char.name]['huntpro_setting_upkeep919'] || "0"	
huntpro_setting_upkeep1035						= Settings[Char.name]['huntpro_setting_upkeep1035'] || "0"	
huntpro_setting_wrack							= Settings[Char.name]['huntpro_setting_wrack'] || "0"	
huntpro_setting_run_script						= Settings[Char.name]['huntpro_setting_run_script'] || "0"	
huntpro_setting_run_script2						= Settings[Char.name]['huntpro_setting_run_script2'] || "0"	
huntpro_setting_run_script3						= Settings[Char.name]['huntpro_setting_run_script3'] || "0"
huntpro_setting_stay_offensive					= Settings[Char.name]['huntpro_setting_stay_offensive'] || "0"
huntpro_setting_loot_script						= Settings[Char.name]['huntpro_setting_loot_script'] || "0"
huntpro_setting_spell_default					= Settings[Char.name]['huntpro_setting_spell_default'] || "0"
huntpro_setting_evoke_default					= Settings[Char.name]['huntpro_setting_evoke_default'] || "0"
huntpro_setting_rest_room						= Settings[Char.name]['huntpro_setting_rest_room'] || "0"
huntpro_setting_use_shield						= Settings[Char.name]['huntpro_setting_use_shield'] || "0"
huntpro_setting_leader							= Settings[Char.name]['huntpro_setting_leader'] || "0"
huntpro_setting_group_one						= Settings[Char.name]['huntpro_setting_group_one'] || "0"
huntpro_setting_group_two						= Settings[Char.name]['huntpro_setting_group_two'] || "0"
huntpro_setting_group_three						= Settings[Char.name]['huntpro_setting_group_three'] || "0"
huntpro_setting_group_four						= Settings[Char.name]['huntpro_setting_group_four'] || "0"
huntpro_setting_group_five						= Settings[Char.name]['huntpro_setting_group_five'] || "0"
huntpro_setting_group_six						= Settings[Char.name]['huntpro_setting_group_six'] || "0"
huntpro_setting_group_seven						= Settings[Char.name]['huntpro_setting_group_seven'] || "0"
huntpro_setting_group_eight						= Settings[Char.name]['huntpro_setting_group_eight'] || "0"
huntpro_setting_group_nine						= Settings[Char.name]['huntpro_setting_group_nine'] || "0"
huntpro_setting_group_quiet						= Settings[Char.name]['huntpro_setting_group_quiet'] || "0"
huntpro_setting_group_peace						= Settings[Char.name]['huntpro_setting_group_peace'] || "0"
huntpro_setting_group_sharemana					= Settings[Char.name]['huntpro_setting_group_sharemana'] || "0"
huntpro_setting_combat_cleanup					= Settings[Char.name]['huntpro_setting_combat_cleanup'] || "0"
huntpro_setting_crowd_control					= Settings[Char.name]['huntpro_setting_crowd_control'] || "0"
huntpro_setting_no_crowd_control				= Settings[Char.name]['huntpro_setting_no_crowd_control'] || "0"
huntpro_setting_cman_control					= Settings[Char.name]['huntpro_setting_cman_control'] || "0"
huntpro_setting_no_cman_control					= Settings[Char.name]['huntpro_setting_no_cman_control'] || "0"
huntpro_setting_no_society						= Settings[Char.name]['huntpro_setting_no_society'] || "0"
huntpro_setting_no_stun							= Settings[Char.name]['huntpro_setting_no_stun'] || "0"
huntpro_setting_bounty_noherb					= Settings[Char.name]['huntpro_setting_bounty_noherb'] || "0"
huntpro_setting_bounty_noskin					= Settings[Char.name]['huntpro_setting_bounty_noskin'] || "0"
huntpro_setting_bounty_lite						= Settings[Char.name]['huntpro_setting_bounty_lite'] || "0"
huntpro_setting_force_target					= Settings[Char.name]['huntpro_setting_force_target'] || "0"	
huntpro_setting_right_hand_detect				= Settings[Char.name]['huntpro_setting_right_hand_detect'] || "0"	
huntpro_setting_left_hand_detect				= Settings[Char.name]['huntpro_setting_left_hand_detect'] || "0"	
huntpro_setting_no_cock							= Settings[Char.name]['huntpro_setting_no_cock'] || "0"	
huntpro_setting_use_herbs						= Settings[Char.name]['huntpro_setting_use_herbs'] || "0"	
huntpro_setting_no_herbs						= Settings[Char.name]['huntpro_setting_no_herbs'] || "0"	
huntpro_setting_no_waggle						= Settings[Char.name]['huntpro_setting_no_waggle'] || "0"	
	
#OOP

module Huntpro_toolkit
	
	def customize_block_1
	
		if Char.name == "Raiyner"
		
			if checkright =~ /knife/
				fput "put my knife in my satchel"
			end
			
			if checkleft =~ /knife/
				fput "put my knife in my satchel"
			end
			
			if checkleft =~ /aegis/
				nil
			else
				fput "stow all"
				fput "ready weapon"
				fput "ready shield"
			end
			
			if checkright =~ /warblade/
				nil
			else
				fput "stow all"
				fput "ready weapon"
				fput "ready shield"
			end
			
			if checkleft =~ /aegis/ && checkright =~ /warblade/
				nil
			else
				$huntpro_action = 99
				$huntpro_return_why = "Raiyner, I experienced a critical error with your weapons & shield.  Equipment is missing or lost. If you lost an item, it would have been in/near room #{$huntpro_lost_item}. If items lost, return there, kneel and use RECOVER ITEM.  You can check your recovery options with RECOVER LIST. Once you locate your aegis and warblade, Huntpro will work again."
			end	
		end
	
	end

	def huntpro_feedback
		
		respond
		respond "Hello #{Char.name}, I'm Huntpro."
		respond
		respond "My stay offensive setting is - #{$huntpro_stay_offensive}"
		
		

		
	end
	
	def top_menu
		respond "|0-100 Hunting Script - Please do not AFK Script in Prime.|"
		respond
	end
	
	def bottom_menu
		respond
		respond "|---------------------------------------------------------|"
	end
		
	def help
	
	respond "Please adhere to POLICY 18 & 19."
	respond
	respond "Usage: ;huntpro stylenumber areastring"
	respond
	respond "Huntpro Help: http://tinyurl.com/huntprohelp"
	respond
	respond "Huntpro Discord: https://discord.gg/NEX6B5DFCX"
	respond
	respond "YouTube: http://tinyurl.com/gsivjara"
	respond
	respond "Email: gsivjara@gmail.com"
	
		
	end
	
	def check_nil
		if Room.current.id == nil
			Huntpro_toolkit.top_menu
			Huntpro_toolkit.nil
			Huntpro_toolkit.bottom_menu
			exit
		end
	end
	
	def level0
	
		Huntpro_toolkit.check_nil
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, you appear to be level 0."
		respond
		respond "I'm going to take you to town and attempt to reach level 1."
		respond
		respond "Type ;ka to stop this."
		respond
		respond "Starting in 5 seconds..."
		Huntpro_toolkit.bottom_menu
		sleep 5
		Script.run('go2', 'town')
		Script.run('repository', 'download level1.lic') if !Script.exists? ('level1')
	
	
		if Room.current.id == 228
			Script.run('level1', 'wl')
		elsif Room.current.id == 2300
			Script.run('level1', 'it')
		elsif Room.current.id == 3519
			Script.run('level1', 'tv')
		end
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, you should be level 1 very soon."
		Huntpro_toolkit.bottom_menu
		exit
		
	end
	
	def herb_script_check
		
		if Script.exists? "useherbs"
			nil
		else
			Script.run('repository', 'download useherbs.lic')
		end
		
		do_client ";useherbs buy=off"
		wait_while {running? "useherbs"}
		
		
	end
	
	def cleanup
	
		$huntpro_active_cleanup = "1"
		
		if $huntpro_group_ai != "0"
			fput "disband"
			fput "group open"
		end
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, I'm starting ;huntpro cleanup."
		Huntpro_toolkit.bottom_menu
		
		if checkarea == "Birthing Sands"
			$huntpro_rift_return = "1"
			Spell[130].cast() if Spell[130].known? && Char.level >= 30 && Spell[130].affordable?
			do_client ";go2 2300"
			wait_while {running? "go2"}
		end
		
		if Room.current.id == 6505
			if Spell[9825].known?
				fput "sym return"
			elsif Spell[130].known? && Char.level >= 30 && Spell[130].affordable?
				Spell[130].cast()
			end
			Script.run('go2', '228')
			
			
		end
		

		if Spell[1118].known? && Char.prof == "Empath"
			if Script.exists? "selfhealall"
				nil
			else
				Script.run('repository', 'download selfhealall.lic')
			end		
			Script.run('selfhealall')
		end
		
		Huntpro_toolkit.herb_script_check
		
		do_client ";useherbs buy=on"
		wait_while {running? "useherbs"}
		Script.run('useherbs')
		
		if $huntpro_loot_script == "eloot"
		
			nil
			
		else
		
			if Script.exists? "poolparty"
				nil
			else
				Script.run('repository', 'download poolparty.lic')
			end
			
			Script.run('poolparty')
			
			if Script.exists? "collectible"
				nil
			else
				Script.run('repository', 'download collectible.lic')
			end
			
			Script.run('collectible')
			
			if Script.exists? "sell_shells"
				nil
			else
				Script.run('repository', 'download sell_shells.lic')
			end
			
			Script.run('sell_shells')
		end
		
		if Char.name == "Raiyner"
			$huntpro_room_placeholder = Room.current.id
			do_client ";go2 furrier"
			wait_while {running? "go2"}
			sleep 0.5
			fput "remove my satchel"
			fput "sell my satchel"
			fput "wear my satchel"
			do_client ";go2 #{$huntpro_room_placeholder}"
			wait_while {running? "go2"}
			sleep 0.5
		end
			
		
		do_client ";#{$huntpro_loot_script} sell"
		wait_while {running? "#{$huntpro_loot_script}"}
		
		Huntpro_toolkit.end_combat_waggle
		
		if $huntpro_rift_return == "1"
			do_client ";go2 2635"
			wait_while {running? "go2"}
		end
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, ;huntpro cleanup is complete."
		Huntpro_toolkit.bottom_menu
		
		$huntpro_active_cleanup = "0"
	end
	
	
	
	def room_nil_walk
		if Room.current.id == nil
				until Room.current.id != nil
					walk
				end
		end
	end
	
	
	def intel_check
	
		if Script.running? "intel_huntpro"
			nil
		else
			do_client ";intel_huntpro"
		end
	
	end
	
	
	def stand_check
		if $huntpro_my_area =~ /moonmagru/
			Huntpro_toolkit.kneel_check
		else
			if !checkstanding
				fput "stand"
				pause 0.25
				waitrt?
			end
		end
	end
	
	def kneel_check
		if !checkkneeling
			fput "kneel"
			pause 0.25
			waitrt?
		end
	end
	
	
	
	def target_check
		
		#respond "Debug Output - I'm defining creatures"

		$huntpro_current_target = nil
		$huntpro_id_placeholder = nil
		$huntpro_name_placeholder = nil

		#Define Creatures
		$huntpro_current_id_targets = nil
		$huntpro_current_id_targets = Array.new

		$huntpro_current_id_weak_targets = nil
		$huntpro_current_id_weak_targets = Array.new
		
		$huntpro_current_name_weak_targets = nil
		$huntpro_current_name_weak_targets = Array.new

		$huntpro_current_name_targets = nil
		$huntpro_current_name_targets = Array.new
		
		$huntpro_current_noun_targets = nil
		$huntpro_current_noun_targets = Array.new

		$huntpro_current_name_s9_override_targets = nil
		$huntpro_current_name_s9_override_targets = Array.new

		$huntpro_current_id_s9_override_targets = nil
		$huntpro_current_id_s9_override_targets = Array.new
		
		$huntpro_creature_name_sev_1_attack = nil
		$huntpro_creature_name_sev_1_attack = Array.new
		
		$huntpro_creature_id_sev_1_attack = nil
		$huntpro_creature_id_sev_1_attack = Array.new
		



		GameObj.targets.each { |i|
			if i.status =~ /sleeping|to be frozen in place|stunned|lying down/
			
			$huntpro_current_id_weak_targets.push(i.id)	
			$huntpro_current_name_weak_targets.push(i.name)	
			end
		}
		
			GameObj.targets.each { |i|

			$huntpro_current_id_targets.push(i.id)
			$huntpro_current_name_targets.push(i.name)
			$huntpro_current_noun_targets.push(i.noun)
		}
		
			GameObj.targets.each { |i|
			
			if $huntpro_creature_sev_1_attack_array.include? (i.name)
							
				$huntpro_creature_id_sev_1_attack.push(i.id)	
				$huntpro_creature_name_sev_1_attack.push(i.name)	
			end
		}
		
			GameObj.targets.each { |i|
			
			if $huntpro_style_9_creature_override_array.include? (i.name)
							
				$huntpro_current_id_s9_override_targets.push(i.id)	
				$huntpro_current_name_s9_override_targets.push(i.name)	
			end
		}
		
		#respond "Debug Output - Lengths"
		#respond "Debug Output - ID Weak Length #{$huntpro_current_id_weak_targets.length}"
		#respond "Debug Output - Name Weak Length #{$huntpro_current_name_weak_targets.length}"
		#respond "Debug Output - Current ID Targets Length #{$huntpro_current_id_targets.length}"
		#respond "Debug Output - Current Name Targets Length #{$huntpro_current_name_targets.length}"
		#respond "Debug Output - ID S9 Override Length #{$huntpro_current_id_s9_override_targets.length}"
		#respond "Debug Output - Name S9 Override Length #{$huntpro_current_name_s9_override_targets.length}"
		#respond "Debug Output - ID sev 1 Override Length #{$huntpro_creature_id_sev_1_attack.length}"
		#respond "Debug Output - Name sev 1 Override Length #{$huntpro_creature_name_sev_1_attack.length}"
		
		
		#respond "Debug Output - Data"
		#respond "Debug Output - ID Weak Length #{$huntpro_current_id_weak_targets}"
		#respond "Debug Output - Name Weak Length #{$huntpro_current_name_weak_targets}"
		#respond "Debug Output - Current ID Targets Length #{$huntpro_current_id_targets}"
		#respond "Debug Output - Current Name Targets Length #{$huntpro_current_name_targets}"
		#respond "Debug Output - ID S9 Override Length #{$huntpro_current_id_s9_override_targets}"
		#respond "Debug Output - Name S9 Override Length #{$huntpro_current_name_s9_override_targets}"
		#respond "Debug Output - ID sev 1 Override Length #{$huntpro_creature_id_sev_1_attack}"
		#respond "Debug Output - Name sev 1 Override Length #{$huntpro_creature_name_sev_1_attack}"
		
		Huntpro_toolkit.target_reset_check unless $huntpro_my_area == "group"
		
		if $huuntpro_action == 98
			nil
		else
		
			if $huntpro_bounty_lite == "1"
				$huntpro_bounty_creature_name = "0"
			end
		
			#Pick Target
			#Force Target Setup
			#respond "Debug Output - Picking target."
			if $huntpro_force_target != "0"
				if checknpcs "#{$huntpro_force_target}"
					$huntpro_creature_id_sev_1_attack = [ "#{$huntpro_force_target}" ]				
					#respond "Debug Output - Focusing on your target."
				else
					#respond "Debug Output - Your target not found."
					$huntpro_action = 98
					$huntpro_recent_eviction = "1"
					sleep 0.5
				end
			#Bounty Target Setup
			elsif $huntpro_bounty_creature_name != "0"
				#respond "You're on a bounty and I'm going to target your objective."
				if checknpcs "#{$huntpro_bounty_creature_name}"
					nil
				else
					$huntpro_action = 98
					$huntpro_recent_eviction = "1"
					sleep 0.5
				end
			end
			
			if $huntpro_recent_eviction == "1"
				nil				
			else
				if $huntpro_creature_id_sev_1_attack.length >= 1
					#respond "Debug Output - Sev 1."
					if $huntpro_force_target != "0"
						fput "target #{$huntpro_creature_id_sev_1_attack[0]}"
					else
						fput "target ##{$huntpro_creature_id_sev_1_attack[0]}"
					end
					$huntpro_current_target = $huntpro_creature_name_sev_1_attack[0] 
					$huntpro_id_placeholder = $huntpro_creature_id_sev_1_attack[0]
					$huntpro_name_placeholder = $huntpro_creature_name_sev_1_attack[0]
					
				elsif $huntpro_current_id_weak_targets.length >= 1
					#respond "Debug Output - Disabled."
					fput "target ##{$huntpro_current_id_weak_targets[0]}"
					$huntpro_current_target = $huntpro_current_name_weak_targets[0] 
					$huntpro_id_placeholder = $huntpro_current_id_weak_targets[0]
					$huntpro_name_placeholder = $huntpro_current_name_weak_targets[0]
					
				elsif $huntpro_current_id_s9_override_targets.length >= 1
					#respond "Debug Output - S9 Override."
					fput "target ##{$huntpro_current_id_s9_override_targets[0]}"
					$huntpro_current_target = $huntpro_current_name_s9_override_targets[0] 
					$huntpro_id_placeholder = $huntpro_current_id_s9_override_targets[0]
					$huntpro_name_placeholder = $huntpro_current_name_s9_override_targets[0]
				else
					#respond "Debug Output - Nothing Special"
					fput "target ##{$huntpro_current_id_targets[0]}"
					$huntpro_current_target = $huntpro_current_name_targets[0] 
					$huntpro_id_placeholder = $huntpro_current_id_targets[0]
					$huntpro_name_placeholder = $huntpro_current_name_targets[0]
					
				end
			end

		end
	
	end
	
		
	def movemgr
		sleep $huntpro_spawn_delay
		#respond "Debug Output - You are starting movemgr"
		sleep 0.10
		Huntpro_toolkit.stand_check
		#respond "Debug Output - Own this room is #{$huntpro_own_this_room}."
	
		if $huntpro_own_this_room == 0
			#respond "Debug Output - I do not own the room yet."
			
			if $huntpro_group_ai == "0"
				if GameObj.pcs.length >= 1 
					#respond "Debug Output - There's someone here."
					$huntpro_my_vine = "0"
					Huntpro_toolkit.cock_support
					walk
				elsif GameObj.targets.length >= 1
					#respond "Debug Output - No other players here, I'm about to own the room."
					Huntpro_toolkit.target_check
					$huntpro_action = 7 unless $huntpro_action == 98
					$huntpro_own_this_room = 1 unless $huntpro_action == 98
				else
					#respond "Debug Output - Own room 0, single player mode, no targets found."
					if Script.running? "#{$huntpro_loot_script}"
						nil
					else
						#respond "Debug output - Own room 0, about to walk"
						sleep 0.10
						$huntpro_own_this_room = 0
						$huntpro_my_vine = "0"
						Huntpro_toolkit.cock_support
						walk
						
					end
				end
			else
				#Group Mode Move Logic
				sleep 0.01
				if GameObj.pcs.length > $huntpro_group_array.length
					#respond "Debug Output - Group Mode - There's someone here besides the permitted group."
					$huntpro_my_vine = "0"
					Huntpro_toolkit.cock_support
					walk
				elsif GameObj.targets.length >= 1
					#respond "Debug Output - Group Mode - No extra players here, I'm about to own the room."
					Huntpro_toolkit.target_check
					$huntpro_action = 7 unless $huntpro_action == 98
					$huntpro_own_this_room = 1 unless $huntpro_action == 98
				else
					#respond "Debug Output - Group Mode - No targets or dead, about to move."
					if Script.running? "#{$huntpro_loot_script}"
						nil
					else
						sleep 0.10
						$huntpro_own_this_room = 0
						$huntpro_my_vine = "0"
						Huntpro_toolkit.cock_support
						walk
					end
				end
			end
			
			
		
		elsif $huntpro_own_this_room == 1
			#respond "Debug Output - I'm in movement and own this room is 1."
			if GameObj.dead.length >= 1 
				#respond "Debug Output - Dead creature detected."
				Huntpro_toolkit.loot_script("#{$huntpro_loot_script}")
			elsif GameObj.targets.length >= 1
				#respond "Debug Output - I see at least 1 target."
				Huntpro_toolkit.target_check
				$huntpro_action = 7 unless $huntpro_action == 98
				$huntpro_own_this_room = 1 unless $huntpro_action == 98
			else
				#respond "Debug Output - Own this room is 1, no dead and no targets found."
				if Script.running? "#{$huntpro_loot_script}"
					nil
				else
					#respond "Debug Output - Own room 1, walking"
					sleep 0.10
					$huntpro_own_this_room = 0
					$huntpro_my_vine = "0"
					Huntpro_toolkit.cock_support
					walk
				end
				
			end
		
		end
	
	end
	
	
	
	
	def target_reset_check
	
		
		if $huntpro_my_style == "9"
			
			#All Witches
			if $huntpro_current_name_targets.include?('Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('adroit Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('afflicted Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('apt Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('barbed Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('belligerent Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('blurry Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('canny Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('combative Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dazzling Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('deft Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('diseased Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('drab Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dreary Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ethereal Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flashy Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flexile Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flickering Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flinty Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('frenzied Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghastly Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghostly Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('gleaming Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glittering Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glorious Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glowing Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('grotesque Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('hardy Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('illustrious Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('indistinct Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('keen Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lanky Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('luminous Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lustrous Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('muculent Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('nebulous Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('oozing Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('pestilent Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('radiant Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('raging Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ready Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('resolute Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('robust Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('rune-covered Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shadowy Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shielded Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shifting Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shimmering Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shining Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sickly green Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sinuous Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('slimy Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sparkling Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spindly Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spiny Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stalwart Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('steadfast Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stout Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tattooed Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tenebrous Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tough Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('twinkling Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unflinching Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unyielding Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wavering Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wispy Vvrael witch')
							Huntpro_toolkit.fail_safe_vchange
			
			
			
			#All Warlocks
			elsif $huntpro_current_name_targets.include?('Vvrael warlock')
				Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('adroit Vvrael warlock')
				Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('afflicted Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('apt Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('barbed Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('belligerent Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('blurry Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('canny Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('combative Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dazzling Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('deft Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('diseased Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('drab Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dreary Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ethereal Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flashy Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flexile Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flickering Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flinty Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('frenzied Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghastly Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghostly Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('gleaming Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glittering Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glorious Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glowing Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('grotesque Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('hardy Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('illustrious Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('indistinct Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('keen Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lanky Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('luminous Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lustrous Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('muculent Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('nebulous Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('oozing Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('pestilent Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('radiant Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('raging Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ready Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('resolute Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('robust Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('rune-covered Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shadowy Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shielded Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shifting Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shimmering Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shining Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sickly green Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sinuous Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('slimy Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sparkling Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spindly Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spiny Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stalwart Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('steadfast Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stout Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tattooed Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tenebrous Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tough Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('twinkling Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unflinching Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unyielding Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wavering Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wispy Vvrael warlock')
							Huntpro_toolkit.fail_safe_vchange


			#All Destroyers
			
			elsif $huntpro_current_name_targets.include?('Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange			
			elsif $huntpro_current_name_targets.include?('adroit Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('afflicted Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('apt Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('barbed Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('belligerent Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('blurry Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('canny Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('combative Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dazzling Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('deft Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('diseased Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('drab Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dreary Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ethereal Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flashy Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flexile Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flickering Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flinty Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('frenzied Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghastly Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghostly Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('gleaming Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glittering Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glorious Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glowing Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('grotesque Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('hardy Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('illustrious Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('indistinct Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('keen Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lanky Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('luminous Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lustrous Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('muculent Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('nebulous Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('oozing Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('pestilent Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('radiant Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('raging Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ready Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('resolute Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('robust Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('rune-covered Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shadowy Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shielded Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shifting Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shimmering Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shining Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sickly green Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sinuous Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('slimy Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sparkling Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spindly Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spiny Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stalwart Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('steadfast Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stout Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tattooed Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tenebrous Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tough Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('twinkling Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unflinching Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unyielding Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wavering Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wispy Vvrael destroyer')
							Huntpro_toolkit.fail_safe_vchange

			
			
			
			
			
			

				
			





				
			elsif $huntpro_current_name_targets.include?('construct')
				Huntpro_toolkit.fail_safe_vchange
				
			elsif $huntpro_current_name_targets.include?('lesser construct')
				Huntpro_toolkit.fail_safe_vchange
				
			elsif $huntpro_current_name_targets.include?('greater construct')
				Huntpro_toolkit.fail_safe_vchange
				
			#All Greater Constructs
			
			elsif $huntpro_current_name_targets.include?('greater construct')
							Huntpro_toolkit.fail_safe_vchange			
			elsif $huntpro_current_name_targets.include?('adroit greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('afflicted greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('apt greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('barbed greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('belligerent greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('blurry greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('canny greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('combative greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dazzling greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('deft greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('diseased greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('drab greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('dreary greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ethereal greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flashy greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flexile greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flickering greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('flinty greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('frenzied greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghastly greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ghostly greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('gleaming greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glittering greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glorious greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('glowing greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('grotesque greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('hardy greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('illustrious greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('indistinct greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('keen greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lanky greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('luminous greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('lustrous greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('muculent greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('nebulous greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('oozing greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('pestilent greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('radiant greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('raging greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('ready greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('resolute greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('robust greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('rune-covered greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shadowy greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shielded greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shifting greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shimmering greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('shining greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sickly green greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sinuous greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('slimy greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('sparkling greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spindly greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('spiny greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stalwart greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('steadfast greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('stout greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tattooed greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tenebrous greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('tough greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('twinkling greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unflinching greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('unyielding greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wavering greater construct')
							Huntpro_toolkit.fail_safe_vchange
			elsif $huntpro_current_name_targets.include?('wispy greater construct')
							Huntpro_toolkit.fail_safe_vchange
			
			
			
			
				#Style 9 Ignore Creatures  Boss Traps
			
				#Magic Boss Creature Traps + RUN
				
			elsif $huntpro_current_name_targets.include?('rune\-covered PLACEHOLDER')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed PLACEHOLDER')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling PLACEHOLDER')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining PLACEHOLDER')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			
			
			elsif $huntpro_current_name_targets.include?('rune\-covered aivren')
				Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed aivren')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling aivren')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining aivren')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered arachne priest')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed arachne priest')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling arachne priest')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining arachne priest')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered arachne priestess')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed arachne priestess')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling arachne priestess')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining arachne priestess')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered ash hag')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed ash hag')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling ash hag')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining ash hag')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered forest ogre')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed forest ogre')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling forest ogre')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining forest ogre')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered bog wight')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed bog wight')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling bog wight')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining bog wight')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered centaur')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed centaur')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling centaur')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining centaur')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered cougar')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed cougar')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling cougar')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining cougar')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered crazed zombie')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed crazed zombie')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling crazed zombie')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining crazed zombie')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered crested basilisk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed crested basilisk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling crested basilisk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining crested basilisk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered dark vortece')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed dark vortece')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling dark vortece')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining dark vortece')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered dhu goleras')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed dhu goleras')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling dhu goleras')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining dhu goleras')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered dobrem')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed dobrem')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling dobrem')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining dobrem')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered dreadnought raptor')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed dreadnought raptor')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling dreadnought raptor')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining dreadnought raptor')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered dybbuk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed dybbuk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling dybbuk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining dybbuk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered triton psionicist')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton psionicist')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton psionicist')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton psionicist')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered fenghai')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed fenghai')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling fenghai')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining fenghai')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered fire mage')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed fire mage')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling fire mage')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining fire mage')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered flesh golem')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed flesh golem')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling flesh golem')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining flesh golem')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered trali shaman')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed trali shaman')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling trali shaman')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining trali shaman')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered frenzied monk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed frenzied monk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling frenzied monk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining frenzied monk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered frozen corpse')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed frozen corpse')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling frozen corpse')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining frozen corpse')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered ghostly pooka')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed ghostly pooka')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling ghostly pooka')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining ghostly pooka')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered albino scorpion')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed albino scorpion')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling albino scorpion')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining albino scorpion')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered fog beetle')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed fog beetle')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling fog beetle')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining fog beetle')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered bog troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed bog troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling bog troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining bog troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered greater faeroth')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed greater faeroth')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling greater faeroth')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining greater faeroth')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered hisskra chieftain')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed hisskra chieftain')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling hisskra chieftain')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining hisskra chieftain')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered hisskra shaman')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed hisskra shaman')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling hisskra shaman')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining hisskra shaman')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered hunch\-backed dogmatist')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed hunch\-backed dogmatist')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling hunch\-backed dogmatist')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining hunch\-backed dogmatist')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered ice troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed ice troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling ice troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining ice troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered illoke elder')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed illoke elder')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling illoke elder')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining illoke elder')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered kiramon defender')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed kiramon defender')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling kiramon defender')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining kiramon defender')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered kiramon worker')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed kiramon worker')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling kiramon worker')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining kiramon worker')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered krolvin corsair')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed krolvin corsair')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling krolvin corsair')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining krolvin corsair')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered krolvin warfarer')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed krolvin warfarer')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling krolvin warfarer')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining krolvin warfarer')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered krolvin warrior')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed krolvin warrior')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling krolvin warrior')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining krolvin warrior')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered lava troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed lava troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling lava troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining lava troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered lesser faeroth')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed lesser faeroth')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling lesser faeroth')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining lesser faeroth')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered lesser griffin')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed lesser griffin')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling lesser griffin')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining lesser griffin')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered moor wight')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed moor wight')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling moor wight')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining moor wight')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered massive grahnk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed massive grahnk')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling massive grahnk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining massive grahnk')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered massive pyrothag')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed massive pyrothag')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling massive pyrothag')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining massive pyrothag')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered mastodonic leopard')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed mastodonic leopard')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling mastodonic leopard')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining mastodonic leopard')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered moorhound')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed moorhound')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling moorhound')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining moorhound')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered moor witch')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed moor witch')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling moor witch')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining moor witch')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered moulis')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed moulis')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling moulis')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining moulis')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered muscular supplicant')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed muscular supplicant')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling muscular supplicant')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining muscular supplicant')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered night mare')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed night mare')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling night mare')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining night mare')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered raving lunatic')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed raving lunatic')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling raving lunatic')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining raving lunatic')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered red tsark')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed red tsark')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling red tsark')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining red tsark')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered roa\'ter')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed roa\'ter')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling roa\'ter')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining roa\'ter')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered troll zombie')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed troll zombie')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling troll zombie')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining troll zombie')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered rotting woodsman')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed rotting woodsman')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling rotting woodsman')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining rotting woodsman')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered sabre\-tooth tiger')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed sabre\-tooth tiger')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling sabre\-tooth tiger')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining sabre\-tooth tiger')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered siren')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed siren')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling siren')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining siren')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered skayl')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed skayl')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling skayl')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining skayl')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered skeletal lord')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed skeletal lord')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling skeletal lord')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining skeletal lord')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered skeletal warhorse')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed skeletal warhorse')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling skeletal warhorse')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining skeletal warhorse')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered spectral miner')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed spectral miner')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling spectral miner')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining spectral miner')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered triton protector')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton protector')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton protector')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton protector')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered cavern urchin')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed cavern urchin')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling cavern urchin')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining cavern urchin')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered stone troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed stone troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling stone troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining stone troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered tomb troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed tomb troll')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling tomb troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining tomb troll')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered triton assassin')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton assassin')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton assassin')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton assassin')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered triton brawler')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton brawler')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton brawler')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton brawler')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered triton fanatic')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton fanatic')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton fanatic')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton fanatic')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered triton warden')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton warden')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton warden')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton warden')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered triton warlock')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed triton warlock')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling triton warlock')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining triton warlock')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered troll wraith')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed troll wraith')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling troll wraith')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining troll wraith')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered waern')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed waern')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling waern')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining waern')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered warrior shade')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed warrior shade')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling warrior shade')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining warrior shade')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered wind wraith')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed wind wraith')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling wind wraith')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining wind wraith')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	

			elsif $huntpro_current_name_targets.include?('rune\-covered yeti')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed yeti')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling yeti')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining yeti')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						
			elsif $huntpro_current_name_targets.include?('rune\-covered zombie')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('tattooed zombie')
							Huntpro_toolkit.fail_safe_vchange	
			elsif $huntpro_current_name_targets.include?('sparkling zombie')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
			elsif $huntpro_current_name_targets.include?('shining zombie')
							Huntpro_toolkit.fail_safe_vchange if Char.prof == "Wizard"	
						

			
		
			
			
			
			
			
			
			
			
			
			end
			
			
			
			
			
			
			
			
			
			
		end
	
		if $huntpro_current_name_targets.include?('wasp nest')
			Huntpro_toolkit.fail_safe_vchange
		
		end
		
		
		if $huntpro_current_name_targets.include?('shimmering fungus')
			Huntpro_toolkit.fail_safe_vchange
		
		end
		
		
		#Noun Skip Logic
		if $huntpro_current_noun_targets.any?{|x| $huntpro_force_skip_array.include?(x)}
			Huntpro_toolkit.fail_safe_vchange
		
		end
		
		#Name Skip Logic
		
		if $huntpro_current_name_targets.any?{|x| $huntpro_compound_ignore_array.include?(x)}
			Huntpro_toolkit.fail_safe_vchange
		
		end
		
		
		

	end
	
	
	def fail_safe_vchange
		#respond "Debug Output - Fail Safe VChange"
		if $huntpro_action == 97
			waitrt?
			walk
			$huntpro_recent_eviction = "1"
		else
			$huntpro_action = 98
		end
	end
	
	def cock_support
	
		if $huntpro_use_cock == "1" && $huntpro_cock_block == "0" && GameObj.targets.length == 0
			waitrt?
			fput "cock #{checkleft}"
			$huntpro_cock_block = "1"
		end
	
	end
	
	def loot_script(scriptname)
		waitrt?
		Huntpro_toolkit.stance_guarded
		if Script.running? "#{$huntpro_loot_script}"
			#respond "Debug Output - Loot Script is Running."
		else
			if GameObj.dead.length >= 1
				do_client ";#{scriptname}"
				wait_while {running? "#{scriptname}"}
				
				if $huntpro_aim_fail != 0
					waitrt?
					if $huntpro_current_aim == "0"
						fput "aim clear"
						$huntpro_aim_fail = 0
					else
						fput "aim #{$huntpro_current_aim}"
						$huntpro_aim_fail = 0
					end
				end
			end
		end
		
		Huntpro_toolkit.cock_support
		
	end
	
	
	def cman_control
	
		Huntpro_toolkit.cman_debugger
		
		if $huntpro_cman_cooldown == 0
			
			if percentstamina >= 25
				
				#Let's do some cmans.
				
				if $huntpro_cman_tackle == "1"
					waitrt?
					Huntpro_toolkit.stance_offensive
					fput "tackle target" 
					waitrt?
					Huntpro_toolkit.stance_guarded
					$huntpro_cman_cooldown = 5
				end
				
				if Char.prof =~ /Rogue|Ranger|Bard|Monk/
					if $huntpro_cman_sweep == "1"
						waitrt?
						Huntpro_toolkit.stance_offensive
						fput "sweep target" 
						waitrt?
						Huntpro_toolkit.stance_guarded
						$huntpro_cman_cooldown = 5
					end
				end
				
				#Moves cman logic along if you don't know tackle or sweep.
				$huntpro_cman_cooldown = 3 if $huntpro_cman_cooldown == 0
				
				
			end
		
		elsif $huntpro_cman_cooldown == 1
		
			if percentstamina >= 25
				
				#Let's do some cmans.
				
				if $huntpro_cman_bearhug == "1" && $huntpro_cman_bearhug_cooldown == 0
					waitrt?
					Huntpro_toolkit.stance_offensive
					fput "cman bearhug target" 
					waitrt?
					Huntpro_toolkit.stance_guarded
					$huntpro_cman_bearhug_cooldown = 5 unless $huntpro_cman_bearhug_cooldown == 1
				end
			end
			
		elsif $huntpro_cman_cooldown == 2
			
			if percentstamina >= 25
				
				#Let's do some cmans.
				
				if $huntpro_cman_disarm == "1"
					waitrt?
					Huntpro_toolkit.stance_offensive
					fput "cman disarm target" 
					waitrt?
					Huntpro_toolkit.stance_guarded
					
				end
			end
		
		
		end
		
		$huntpro_cman_cooldown = $huntpro_cman_cooldown - 1 unless $huntpro_cman_cooldown == 0
		$huntpro_cman_bearhug_cooldown = $huntpro_cman_bearhug_cooldown - 1 unless $huntpro_cman_bearhug_cooldown == 0
	end
	
	
	def crowd_control
		#respond "Debug Output - CC Cooldown is #{$huntpro_cc_cooldown}."
		#respond "Debug Output - My area level is #{$huntpro_my_area_level}."
		#if Char.level - 30 < $huntpro_my_area_level
		#	respond "Debug Output - Your level minus 30 is smaller than the hunting zone."
		#else
		#	respond "Debug Output - You're far too experienced to use crowd control in this area."
		#end
		waitrt?
		if GameObj.targets.length >= 3
		
			if $huntpro_my_society == "Voln" && Char.level - 30 < $huntpro_my_area_level && $huntpro_crowd_society_cooldown == 0
				waitrt?
				waitcastrt?
				#Huntpro_toolkit.top_menu
				#respond "Debug Output - I'm about to use symbol of sleep on a mob."
				#Huntpro_toolkit.bottom_menu
				fput "sym sleep" unless $huntpro_no_society == "1" 
				$huntpro_crowd_society_cooldown = 20
			end
		end
		
		if GameObj.targets.length >= 2
			#Empath Crowd Control
			
			if Char.prof == "Empath" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
					
					if $huntpro_my_area_type == "Living"
					
						waitcastrt?
						Spell[1120].cast() if Spell[1120].known? && Char.level >= 20 && Spell[1120].affordable?
						$huntpro_cc_cooldown = 10
					end
					
				end	
			end
			
			
			#Sorcerer Multi Crowd Control
			
			if Char.prof == "Sorcerer" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
					
						waitcastrt?
						Spell[709].cast() if Spell[709].known? && Char.level >= 9 && Spell[709].affordable?
						$huntpro_cc_cooldown = 10
				end	
			end
			
			if Char.prof == "Wizard" && Char.level >= 4 && Skills.elwater >= 30 && Spell[1710].affordable? && checkmana >= 6
			
						waitcastrt?
						fput "prep 904"
						Huntpro_toolkit.stance_offensive
						fput "evoke target"
						Huntpro_toolkit.stance_guarded
			end
			
		end
		
			#General Crowd Control
			
			#Sorcerer General Crowd Control
			
			if Char.prof == "Sorcerer" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
						waitcastrt?
						Spell[703].cast() if Spell[703].known? && Char.level >= 3 && Spell[703].affordable?
						$huntpro_cc_cooldown = 10
						
				elsif $huntpro_cc_cooldown == 5
						waitcastrt?
						Spell[703].cast() if Spell[703].known? && Char.level >= 3 && Spell[703].affordable?
				end	
			end
			
			#Cleric Crowd Control
			
			if Char.prof == "Cleric" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
					
						waitcastrt?
						Spell[320].cast() if Spell[320].known? && Char.level >= 20 && Spell[320].affordable? unless Spell.active? "399"
						$huntpro_cc_cooldown = 10
				end	
			end
			
			#Wizard Crowd Control
			
			if Char.prof == "Wizard" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
				
					waitcastrt?
					Spell[917].cast() if Spell[917].known? && Char.level >= 17 && Spell[917].affordable? && percentmana >= 60
					if Spell[917].known? && Char.level >= 17 && Spell[917].affordable? && percentmana >= 60
						$huntpro_cc_cooldown = 7
					else
						$huntpro_cc_cooldown = 6
					end
				
				elsif $huntpro_cc_cooldown == 1
				
					if percentmana <= 80
						Spell[516].cast() if Spell[516].known? && Char.level >= 16 && Spell[516].affordable?
					end
				
				elsif $huntpro_cc_cooldown == 4
				
					if percentmana <= 80
						Spell[516].cast() if Spell[516].known? && Char.level >= 16 && Spell[516].affordable?
					end
					
				elsif $huntpro_cc_cooldown == 5
					#respond "Debug output - Wizard tap dancing."
					result = dothistimeout "tap", 2, /tap your foot impatiently|ground begins to shake/
					if result =~ /tap your foot impatiently/
						waitcastrt?
						fput "incant 909 channel" if Spell[909].known? && Char.level >= 9 && Spell[909].affordable?
						fput "tap"
						#$huntpro_cc_cooldown = 5
					elsif result =~ /ground begins to shake/
						#$huntpro_cc_cooldown = 5						
					end
				end	
				
				if Skills.elair >= 20 && Spell[505].known?
					Huntpro_toolkit.stance_offensive
					if Spell.active? "515"
						Huntpro_toolkit.stand_check
						fput "incant 505 evoke" if Spell[505].known? && Spell[505].affordable? && Spell[505].affordable? && checkmana >= 5
						Huntpro_toolkit.stand_check
						waitcastrt?
						fput "incant 505 evoke" if Spell[505].known? && Spell[505].affordable? && Spell[505].affordable? && checkmana >= 5
						Huntpro_toolkit.stand_check
						waitcastrt?
						fput "incant 505 evoke" if Spell[505].known? && Spell[505].affordable? && Spell[505].affordable? && checkmana >= 5
						waitcastrt?
						Huntpro_toolkit.stance_guarded
						
					else
						Huntpro_toolkit.stand_check
						fput "incant 505 evoke" if Spell[505].known? && Spell[505].affordable? && Spell[505].affordable? && checkmana >= 5
						Huntpro_toolkit.stance_guarded
					end
				end
			end
			
			
			
			
			#Ranger Crowd Control
			
			if Char.prof == "Ranger" && Char.level - 30 < $huntpro_my_area_level
			
				#respond "Debug Output - $huntpro_cc_cooldown is #{$huntpro_cc_cooldown}"
				
				if $huntpro_cc_cooldown == 0
				
						waitcastrt?
						if checkoutside 
							Spell[610].cast() if Spell[610].known? && Char.level >= 10 && Spell[610].affordable?
							$huntpro_my_vine = "1"
							$huntpro_cc_cooldown = 20
						elsif Spell.active? "625"
							Spell[610].cast() if Spell[610].known? && Char.level >= 10 && Spell[610].affordable?
							$huntpro_my_vine = "1"
							$huntpro_cc_cooldown = 20
						else
							$huntpro_cc_cooldown = 20
						end
				elsif $huntpro_cc_cooldown == 5
					
						waitcastrt?					
						Spell[616].cast() if Spell[616].known? && Char.level >= 16 && Spell[616].affordable?
	
				elsif $huntpro_cc_cooldown == 10
				
						waitcastrt?
						Spell[603].cast() if Spell[603].known? && Char.level >= 3 && Spell[603].affordable?
			
				elsif $huntpro_cc_cooldown == 15
						
						waitcastrt?
						multifput "prep 609", "cast target" if Spell[609].known? && Char.level >= 9 && Spell[609].affordable?
						
						
				end	
			end
			
			
			#Bard Crowd Control
			
			if Char.prof == "Bard" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
					
						waitcastrt?
						Spell[1008].cast() if Spell[1008].known? && Char.level >= 8 && Spell[1008].affordable?
						$huntpro_cc_cooldown = 10
				
				elsif $huntpro_cc_cooldown == 5
				
						waitcastrt?
						Spell[1005].cast() if Spell[1005].known? && Char.level >= 5 && Spell[1005].affordable?
						
				
				end	
			end
			
			
			#Monk Crowd Control
			
			if Char.prof == "Monk" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
					
						waitcastrt?
						Spell[1207].cast() if Spell[1207].known? && Char.level >= 7 && Spell[1207].affordable?
						$huntpro_cc_cooldown = 10
				
				elsif $huntpro_cc_cooldown == 5
						
						nil
				
				end	
			end
			
			
			#Paladin Crowd Control
			
			if Char.prof == "Paladin" && Char.level - 30 < $huntpro_my_area_level
			
				if $huntpro_cc_cooldown == 0
					
						waitcastrt?
						Spell[1615].cast() if Spell[1615].known? && Char.level >= 15 && Spell[1615].affordable?
						$huntpro_cc_cooldown = 10
				
				elsif $huntpro_cc_cooldown == 5
						
						nil
				
				end	
			end
			
			
			
			
			
			
			
		
		
		$huntpro_cc_cooldown = $huntpro_cc_cooldown - 1 unless $huntpro_cc_cooldown == 0
		$huntpro_crowd_society_cooldown = $huntpro_crowd_society_cooldown - 1 unless $huntpro_crowd_society_cooldown == 0
	end
	
	
	def combat
		Huntpro_toolkit.customize_block_1
		Huntpro_toolkit.stand_check
		if $huntpro_no_crowd_control == "1"
			nil
		else
			Huntpro_toolkit.crowd_control if $huntpro_crowd_control == "1"
		end
		
		if $huntpro_no_cman_control == "1"
			nil
		else
			Huntpro_toolkit.cman_control if $huntpro_cman_control == "1"
		end
		
		
		
		
		if $huntpro_my_style == "1"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.uac_round
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
			
		elsif $huntpro_my_style == "2"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.hide_time
			Huntpro_toolkit.uac_round
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
	
		elsif $huntpro_my_style == "3"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.stance_offensive
			Huntpro_toolkit.chicken_attack
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
	
		elsif $huntpro_my_style == "4"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.hide_time
			Huntpro_toolkit.stance_offensive
			if checkhidden
				Huntpro_toolkit.chicken_ambush
			else
				Huntpro_toolkit.chicken_attack
			end
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
			
		elsif $huntpro_my_style == "5"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.stance_offensive
			Huntpro_toolkit.chicken_fire
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
			
		elsif $huntpro_my_style == "6"

			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.hide_time
			Huntpro_toolkit.stance_offensive
			Huntpro_toolkit.chicken_fire
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
	
		elsif $huntpro_my_style == "7"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.kneel_check
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.stance_offensive
			Huntpro_toolkit.chicken_fire
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
		
		elsif $huntpro_my_style == "8"
		
			Huntpro_toolkit.waitcast_waitrt
			Huntpro_toolkit.kneel_check
			Huntpro_toolkit.mstrike_routine
			Huntpro_toolkit.hide_time
			Huntpro_toolkit.stance_offensive
			Huntpro_toolkit.chicken_fire
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
			
		elsif $huntpro_my_style == "9"
			
			Huntpro_toolkit.stance_guarded
			Huntpro_toolkit.prep_reset
			Huntpro_toolkit.spell_choice
			Huntpro_toolkit.spell_cast
			Huntpro_toolkit.stance_guarded
			Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") unless $huntpro_my_area == "group"
			Huntpro_toolkit.endcombat_actionreset unless $huntpro_my_area == "group"
			
		end
	end
	
	
	def prep_reset
	
		if checkprep == "None"
			nil
		else
			fput "release"
		end
	
	end
	
	def style_9_spell_overrides
		
		if $huntpro_current_id_s9_override_targets.length >= 1
			
			
			if $huntpro_current_target =~ /PLACEHOLDER/
				nil
				
			#Deviation Creatures From All Override
			
			
			elsif $huntpro_current_target =~ /ethereal (.*)/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /wispy (.*)/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /ghostly (.*)/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /bog spectre/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /fog beetle/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /bog wraith/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /ice wraith/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"

			elsif $huntpro_current_target =~ /wind wraith/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /wraith/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /tree spirit/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /stone gargoyle/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /mein golem/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			#Landing
			
			elsif $huntpro_current_target =~ /magru/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /stone sentinel/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /treekin druid/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /treekin warrior/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /treekin sapling/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				
				
			elsif $huntpro_current_target =~ /spectral miner/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
				
			elsif $huntpro_current_target =~ /nightmare steed/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /shadow steed/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /shadow mare/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /pale crab/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /krolvin warfarer/
			
			elsif $huntpro_current_target =~ /reiver/
			
			elsif $huntpro_current_target =~ /lesser shade/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /tomb spider/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /greater spider/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /major spider/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /mammoth arachnid/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /fire guardian/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /earth elemental/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /roa'ter/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /roa'ter wormling/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
						
			elsif $huntpro_current_target =~ /giant ant/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /soldier ant/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /spectral fisherman/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /phantom/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			
			
				
			elsif $huntpro_current_target =~ /carrion worm/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /darkwoode/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /ghostly warrior/
				Huntpro_toolkit.style_9_set_empath_1110	if Char.prof == "Empath"		
			
			elsif $huntpro_current_target =~ /ghostly pooka/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			#Solhaven
			
			elsif $huntpro_current_target =~ /phantasma/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /eidolon/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /spectre/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /cave troll/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				
			#Icemule
			
			elsif $huntpro_current_target =~ /spectral woodsman/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /frost shade/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /crystal crab/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /luminescent arachnid/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /ice spider/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /cold guardian/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /frost giant/
			
			elsif $huntpro_current_target =~ /dark apparition/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /ice troll/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				
			
			elsif $huntpro_current_target =~ /icy creeper/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /frosty plant/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /thorned shrub/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /decaying tumbleweed/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /frost\-glazed vine/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /icy bush/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			
							
			#Pinefar
			
			elsif $huntpro_current_target =~ /minor glacei/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /major glacei/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"

			#Hinterwilds
			
			elsif $huntpro_current_target =~ /behemothic gorefrost golem/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			
			#Rift
			
			elsif $huntpro_current_target =~ /fallen crusader/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /rift crawler/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			#elsif $huntpro_current_target =~ /ancient rift crawler/
			#	Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			#elsif $huntpro_current_target =~ /grizzled rift crawler/
			#	Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /lost soul/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /fetish master/
				
			elsif $huntpro_current_target =~ /soul siphon/
			
			elsif $huntpro_current_target =~ /glistening cerebralite/
			
			elsif $huntpro_current_target =~ /vaespilon/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				Huntpro_toolkit.style_9_set_wizard_908 if Char.prof == "Wizard"
			
			elsif $huntpro_current_target =~ /stone giant/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /stone mastiff/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
				
			elsif $huntpro_current_target =~ /naisirc/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /seraceris/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /caedera/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			#River's Rest
			
			elsif $huntpro_current_target =~ /spectral servant/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /bestial swordsman/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /mage apprentice/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
				
			
			elsif $huntpro_current_target =~ /water wyrd/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			#Teras Isle
			
			
			
			elsif $huntpro_current_target =~ /skayl/
			
			elsif $huntpro_current_target =~ /massive pyrothag/
			
			elsif $huntpro_current_target =~ /fire mage/
			
			elsif $huntpro_current_target =~ /fire giant/
			
			elsif $huntpro_current_target =~ /lava troll/
			
			elsif $huntpro_current_target =~ /ash hag/
			
			elsif $huntpro_current_target =~ /banshee/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /kiramon worker/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /kiramon defender/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /cinder wasp/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /triton sentry/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			
			elsif $huntpro_current_target =~ /triton defender/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /water elemental/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
				
			#Zul Logoth
			
			#Boss Trap Spell Override
			
			#lsif $huntpro_current_target == "giant albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "adroit albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"			
			#elsif $huntpro_current_target == "afflicted albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "apt albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "barbed albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "belligerent albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "blurry albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "canny albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "combative albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "dazzling albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "deft albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "diseased albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "drab albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "dreary albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "ethereal albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "flashy albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "flexile albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "flickering albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "flinty albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "frenzied albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "ghastly albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "ghostly albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "gleaming albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "glittering albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "glorious albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "glowing albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "grotesque albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "hardy albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "illustrious albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "indistinct albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "keen albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "lanky albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "luminous albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "lustrous albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "muculent albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "nebulous albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "oozing albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "pestilent albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "radiant albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "raging albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "ready albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "resolute albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "robust albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "rune-covered albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "shadowy albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "shielded albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "shifting albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "shimmering albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "shining albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "sickly albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "sinuous albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "slimy albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "sparkling albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "spindly albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "spiny albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "stalwart albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "steadfast albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "stout albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "tattooed albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "tenebrous albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "tough albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "twinkling albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "unflinching albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "unyielding albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "wavering albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
			#elsif $huntpro_current_target == "wispy albino scorpion"
			#				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
				
				
				
				
			elsif $huntpro_current_target =~ /giant veaba/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /troll wraith/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			
				
			#Ta'Illistim
			
			
			elsif $huntpro_current_target =~ /ghostly mara/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /spectral lord/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /barghest/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /black warhorse/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			elsif $huntpro_current_target =~ /maw spore/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /darken/
				Huntpro_toolkit.style_9_set_empath_111 if Char.prof == "Empath"	
				
			#Ta'Vaalor
			
			elsif $huntpro_current_target =~ /fire ant/
				Huntpro_toolkit.style_9_set_empath_1110 if Char.prof == "Empath"
				
			
				
			elsif $huntpro_current_target =~ /warrior shade/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			#Kraken's Fall
			
			elsif $huntpro_current_target =~ /triton psionicist/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
			elsif $huntpro_current_target =~ /triton protector/
				Huntpro_toolkit.style_9_set_empath_1115 if Char.prof == "Empath"
				
			end
			
		end
		
	end
		
		
	def style_9_set_empath_111
		if Spell[111].known? && Char.level >= 11 && Skills.spellaiming >= 1
			$huntpro_empath_primary_spell = 111
		elsif Spell[1110].known? && Char.level >= 10 && Skills.spellaiming >= 1
			$huntpro_empath_primary_spell = 1110
		else
			#Forcing you to use this spell for this creature if low level
			$huntpro_empath_primary_spell = "1700b"
		end
	end
	
	def style_9_set_empath_1110
		if Spell[1110].known? && Char.level >= 10 && Skills.spellaiming >= 1
			$huntpro_empath_primary_spell = 1110
		elsif Spell[111].known? && Char.level >= 11 && Skills.spellaiming >= 1
			$huntpro_empath_primary_spell = 111
		else
			#Forcing you to use this spell for this creature if low level
			$huntpro_empath_primary_spell = "1700b"
		end
	end
	
	def style_9_set_empath_1115
		if Spell[1115].known? && Char.level >= 15
			$huntpro_empath_primary_spell = 1115
		elsif Spell[111].known? && Char.level >= 11 && Skills.spellaiming >= 1
			$huntpro_empath_primary_spell = 111
		elsif Spell[1110].known? && Char.level >= 10 && Skills.spellaiming >= 1
			$huntpro_empath_primary_spell = 1110
		else
			#Forcing you to use this spell for this creature if low level
			$huntpro_empath_primary_spell = "1700b"
		end
	end
	
	def style_9_set_wizard_908
	
		if Spell[908].known? && Char.level >= 8
			$huntpro_wizard_primary_spell = 908
		else
			#Forcing you to use this spell for this creature if low level
			$huntpro_empath_primary_spell = "1700b"
		end
		
	end
	
	
	
	def spell_choice
	
		Huntpro_toolkit.style_9_spell_overrides
		
		#Determine if you should make a last minute decision about what spell to cast
		if $huntpro_style_9_primary_spell_override == "1700"
			if Char.prof == "Empath"
				
				if $huntpro_empath_primary_spell == "9999"
					nil
				elsif $huntpro_empath_primary_spell == 1115
					nil
				elsif $huntpro_empath_primary_spell == "1115b"
					nil
				elsif $huntpro_empath_primary_spell == 1106
					nil
				elsif $huntpro_empath_primary_spell == 111
					nil
				elsif $huntpro_empath_primary_spell == 1110
					nil
				elsif $huntpro_empath_primary_spell == "1700b"
					nil
				else
					if Char.level >= 6 
						$huntpro_empath_primary_spell = 1106 if Spell[1106].known?
					elsif Skills.spellaiming >= 1
						$huntpro_empath_primary_spell = "1700b"
					else
						$huntpro_empath_primary_spell = 1700
					end
				end	
			elsif Char.prof == "Cleric"
			
				if $huntpro_cleric_primary_spell == "9999"
					nil
				elsif $huntpro_cleric_primary_spell == 302
					nil
				elsif $huntpro_cleric_primary_spell == 309
					nil
				elsif $huntpro_cleric_primary_spell == 111
					nil
				elsif $huntpro_cleric_primary_spell == "1700b"
					nil
				else
					if Char.level >= 6 && Skills.spellaiming / 2 - 1 >= Char.level
						if $huntpro_cleric_toggle == 0
							$huntpro_cleric_primary_spell = 309 if Spell[309].known?
							$huntpro_cleric_toggle = 1
						elsif $huntpro_cleric_toggle == 1
							$huntpro_cleric_primary_spell = 306 if Spell[306].known?
							$huntpro_cleric_toggle = 2
						elsif $huntpro_cleric_toggle == 2
							$huntpro_cleric_primary_spell = 302 if Spell[302].known?
							$huntpro_cleric_toggle = 0
						end
					elsif Char.level >= 20
						if $huntpro_cleric_toggle == 0
							$huntpro_cleric_primary_spell = 309 if Spell[309].known?
							$huntpro_cleric_toggle = 1
						elsif $huntpro_cleric_toggle == 1
							$huntpro_cleric_primary_spell = 302 if Spell[302].known?
							$huntpro_cleric_toggle = 0
						end
					elsif Char.level >= 2 
						$huntpro_cleric_primary_spell = 302 if Spell[302].known?
					elsif Skills.spellaiming >= 1
						$huntpro_cleric_primary_spell = "1700b"
					else
						$huntpro_cleric_primary_spell = 1700
					end
				end	
			
			elsif Char.prof == "Wizard"
			
				if $huntpro_wizard_primary_spell == "9999"
					nil
				elsif $huntpro_wizard_primary_spell == 901
					nil
				elsif $huntpro_wizard_primary_spell == 903
					nil
				elsif $huntpro_wizard_primary_spell == 904
					nil
				elsif $huntpro_wizard_primary_spell == 906
					nil
				elsif $huntpro_wizard_primary_spell == 907
					nil
				elsif $huntpro_wizard_primary_spell == 908
					nil
				elsif $huntpro_wizard_primary_spell == 910
					nil
				elsif $huntpro_wizard_primary_spell == 510
					nil
				elsif $huntpro_wizard_primary_spell == 505
					nil
				elsif $huntpro_wizard_primary_spell == 1707
					nil	
				elsif $huntpro_wizard_primary_spell == "1700b"
					nil
				else
					if Skills.elfire >= 20 && Spell[903].known?
						$huntpro_wizard_primary_spell = 1707
					elsif Char.level >= 4 
						$huntpro_wizard_primary_spell = 904 if Spell[904].known?
					elsif Skills.spellaiming >= 1
						$huntpro_wizard_primary_spell = "1700b"
					else
						$huntpro_wizard_primary_spell = 1700
					end
				end
			
			elsif Char.prof == "Sorcerer"
			
				if $huntpro_sorcerer_primary_spell == "9999"
					nil
				elsif $huntpro_sorcerer_primary_spell == 702
					nil
				elsif $huntpro_sorcerer_primary_spell == "1700b"
					nil
				else
					if Char.level >= 20 
						if $huntpro_sorcerer_toggle == 0
							$huntpro_sorcerer_primary_spell = 705 if Spell[705].known?
							$huntpro_sorcerer_toggle = 1
						elsif $huntpro_sorcerer_toggle == 1
							$huntpro_sorcerer_primary_spell = 702 if Spell[702].known?
							$huntpro_sorcerer_toggle = 0
						end
					
					elsif Char.level >= 2
						$huntpro_sorcerer_primary_spell = 702 if Spell[702].known?
					elsif Skills.spellaiming >= 1
						$huntpro_sorcerer_primary_spell = "1700b"
					else
						$huntpro_sorcerer_primary_spell = 1700
					end
				end	
		
			elsif Char.prof == "Ranger"
			
				if $huntpro_ranger_primary_spell == "9999"
					nil
				elsif $huntpro_ranger_primary_spell == 603
					nil
				elsif $huntpro_ranger_primary_spell == "1700b"
					nil
				else
					if Char.level >= 3
						$huntpro_ranger_primary_spell = 603 if Spell[603].known?
					end
				end	
				
			elsif Char.prof == "Bard"
			
				if $huntpro_bard_primary_spell == "9999"
					nil
				elsif $huntpro_bard_primary_spell == 1008
					nil
				elsif $huntpro_bard_primary_spell == "1700b"
					nil
				else
					if Char.level >= 8
						$huntpro_bard_primary_spell = 1008 if Spell[1008].known?
					end
				end	
				
			elsif Char.prof == "Paladin"
			
				if $huntpro_paladin_primary_spell == "9999"
					nil
				elsif $huntpro_paladin_primary_spell == 1008
					nil
				elsif $huntpro_paladin_primary_spell == "1700b"
					nil
				else
					if Char.level >= 3
						$huntpro_paladin_primary_spell = 1603 if Spell[1603].known?
					end
				end	
			
			end
		
		end		
	end
	
	
	def force_spell
	
		if $huntpro_evoke_default == "1"
			Huntpro_toolkit.stance_offensive
				if Spell.active? "515"
					fput "incant #{$huntpro_spell_default} evoke"  if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
					waitcastrt?
					fput "incant #{$huntpro_spell_default} evoke"  if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
					waitcastrt?
					fput "incant #{$huntpro_spell_default} evoke"  if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
					waitcastrt?
					Huntpro_toolkit.stance_guarded
				else
					fput "incant #{$huntpro_spell_default} evoke"  if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
					waitrt?
					Huntpro_toolkit.stance_guarded
				end
		else
			if Spell.active? "515"
				Spell["#{$huntpro_spell_default}"].cast() if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
				waitcastrt?
				Spell["#{$huntpro_spell_default}"].cast() if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
				waitcastrt?
				Spell["#{$huntpro_spell_default}"].cast() if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
				waitcastrt?
				Huntpro_toolkit.stance_guarded
			else
				Spell["#{$huntpro_spell_default}"].cast() if Spell["#{$huntpro_spell_default}"].known? && Spell["#{$huntpro_spell_default}"].affordable?
				Huntpro_toolkit.stance_guarded
			end
		end
	end
	
	def spell_cast
		
		#New Override Lich 5.5 Onward
		if $huntpro_spell_default == "0"
			nil
		else
			$huntpro_empath_primary_spell = "9999"
			$huntpro_cleric_primary_spell = "9999"
			$huntpro_wizard_primary_spell = "9999"
			$huntpro_sorcerer_primary_spell = "9999"
			$huntpro_ranger_primary_spell = "9999"
			$huntpro_bard_primary_spell = "9999"
			$huntpro_paladin_primary_spell = "9999"
		end
			
		if Char.prof == "Empath"
			if $huntpro_empath_primary_spell == "9999"
				Huntpro_toolkit.force_spell
			elsif $huntpro_empath_primary_spell == 1115
			
				Spell[1115].cast() if Spell[1115].known? && Spell[1115].affordable?
				$huntpro_empath_primary_spell = 1700
				
			elsif $huntpro_empath_primary_spell == "1115b"
			
				Spell[1115].cast() if Spell[1115].known? && Spell[1115].affordable?
				$huntpro_empath_primary_spell = 1700
								
			elsif $huntpro_empath_primary_spell == 1106
				if Char.name =~ /Jara|Jarcation/
					fput "incant 1106"
					sleep 0.25
					$huntpro_empath_primary_spell = 1700
				else
					Spell[1106].cast() if Spell[1106].known? && Spell[1106].affordable?
					$huntpro_empath_primary_spell = 1700
				end
				
			elsif $huntpro_empath_primary_spell == 111
			
				Spell[111].cast() if Spell[111].known? && Spell[111].affordable?
				$huntpro_empath_primary_spell = 1700
				
			elsif $huntpro_empath_primary_spell == 1110
			
				Spell[1110].cast() if Spell[1110].known? && Spell[1110].affordable?
				$huntpro_empath_primary_spell = 1700
				
			elsif $huntpro_empath_primary_spell == "1700b"
				
				Huntpro_toolkit.stance_offensive
				fput "incant 1700 evoke" if Spell[1700].known? && Spell[1700].affordable?
				$huntpro_empath_primary_spell = 1700
				Huntpro_toolkit.stance_guarded
				
			
			elsif $huntpro_empath_primary_spell == 1700
			
				Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
				$huntpro_empath_primary_spell = 1700
				
				
			else
				respond "What Empath spell are you trying to cast?"
			end
			
		elsif Char.prof == "Cleric"
		
			if $huntpro_cleric_primary_spell == "9999"
				Huntpro_toolkit.force_spell
				
			elsif $huntpro_cleric_primary_spell == 302
					Spell[302].cast() if Spell[302].known? && Spell[302].affordable?
					$huntpro_cleric_primary_spell = 1700
				
				
			elsif $huntpro_cleric_primary_spell == 306
					Spell[306].cast() if Spell[306].known? && Spell[306].affordable?
					$huntpro_cleric_primary_spell = 1700
				
			elsif $huntpro_cleric_primary_spell == 309
					if $huntpro_309_toggle == 0
						fput "incant 309 evoke" if Spell[309].known? && Spell[309].affordable?
						$huntpro_309_toggle = 10
						$huntpro_cleric_primary_spell = 1700
					else
						$huntpro_309_toggle = $huntpro_309_toggle - 1
						Spell[309].cast() if Spell[309].known? && Spell[309].affordable?
						$huntpro_cleric_primary_spell = 1700
					end
			
			elsif $huntpro_cleric_primary_spell == 111
					Spell[111].cast() if Spell[111].known? && Spell[111].affordable?
					$huntpro_cleric_primary_spell = 1700
				
			elsif $huntpro_cleric_primary_spell == "1700b"
					Huntpro_toolkit.stance_offensive
					fput "incant 1700 evoke" if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_cleric_primary_spell = 1700
					Huntpro_toolkit.stance_guarded
					
				
			elsif $huntpro_cleric_primary_spell == 1700
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_cleric_primary_spell = 1700
				
			else
				respond "What Cleric spell are you trying to cast?"
				
			end
		
		elsif Char.prof == "Wizard"
		

			if $huntpro_wizard_primary_spell == "9999"
				Huntpro_toolkit.force_spell
				
			elsif $huntpro_wizard_primary_spell == 904
					Huntpro_toolkit.stance_offensive
					if Spell.active? "515"
						fput "incant 904" if Spell[904].known? && Spell[904].affordable?
						waitcastrt?
						fput "incant 904" if Spell[904].known? && Spell[904].affordable?
						waitcastrt?
						fput "incant 904" if Spell[904].known? && Spell[904].affordable?
						waitcastrt?
						Huntpro_toolkit.stance_guarded
					else
						Spell[904].cast() if Spell[904].known? && Spell[904].affordable?
						Huntpro_toolkit.stance_guarded
					end
					$huntpro_wizard_primary_spell = 1700

					
			elsif $huntpro_wizard_primary_spell == 908
					Huntpro_toolkit.stance_offensive
					if Spell.active? "515"
						fput "incant 908" if Spell[908].known? && Spell[908].affordable?
						waitcastrt?
						fput "incant 908" if Spell[908].known? && Spell[908].affordable?
						waitcastrt?
						fput "incant 908" if Spell[908].known? && Spell[908].affordable?
						waitcastrt?
						Huntpro_toolkit.stance_guarded
					else
						Spell[908].cast() if Spell[908].known? && Spell[908].affordable?
						Huntpro_toolkit.stance_guarded
					end
					$huntpro_wizard_primary_spell = 1700
				
				
			elsif $huntpro_wizard_primary_spell == 1707
					Huntpro_toolkit.stance_offensive
					if Spell.active? "515"
						Huntpro_toolkit.stand_check
						fput "incant 903 evoke" if Spell[903].known? && Spell[903].affordable? && Spell[1707].affordable? && checkmana >= 6
						Huntpro_toolkit.stand_check
						waitcastrt?
						fput "incant 903 evoke" if Spell[903].known? && Spell[903].affordable? && Spell[1707].affordable? && checkmana >= 6
						Huntpro_toolkit.stand_check
						waitcastrt?
						fput "incant 903 evoke" if Spell[903].known? && Spell[903].affordable? && Spell[1707].affordable? && checkmana >= 6
						waitcastrt?
						Huntpro_toolkit.stance_guarded
						
					else
						Huntpro_toolkit.stand_check
						fput "incant 903 evoke" if Spell[903].known? && Spell[903].affordable? && Spell[1707].affordable? && checkmana >= 6
						Huntpro_toolkit.stance_guarded
					end
					$huntpro_wizard_primary_spell = 1700
					waitrt?
								
			elsif $huntpro_wizard_primary_spell == "1700b"
					Huntpro_toolkit.stance_offensive
					fput "incant 1700 evoke" if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_wizard_primary_spell = 1700
					Huntpro_toolkit.stance_guarded
				
				
			elsif $huntpro_wizard_primary_spell == 1700
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_wizard_primary_spell = 1700
				
				
			else
				respond "What Wizard spell are you trying to cast?"
	
			end
		
		
		elsif Char.prof == "Sorcerer"
		
			#All decisions final, now casting chosen spell and resetting back to 1700 unless custom spell choice
			if $huntpro_sorcerer_primary_spell == "9999"
				Huntpro_toolkit.force_spell
				
			elsif $huntpro_sorcerer_primary_spell == 705
					if Skills.slnecromancy >= 20 && Skills.spellaiming / 2 - 1 >= Char.level
						Huntpro_toolkit.stance_offensive
						fput "incant 705 evoke"
						Huntpro_toolkit.stance_guarded
						$huntpro_sorcerer_primary_spell = 1700
						waitrt?
					else
						Spell[705].cast() if Spell[705].known? && Spell[705].affordable?
						$huntpro_sorcerer_primary_spell = 1700
					end
				
				
			elsif $huntpro_sorcerer_primary_spell == 702
					Spell[702].cast() if Spell[702].known? && Spell[702].affordable?
					$huntpro_sorcerer_primary_spell = 1700
				
				
			elsif $huntpro_sorcerer_primary_spell == "1700b"
					Huntpro_toolkit.stance_offensive
					fput "incant 1700 evoke" if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_sorcerer_primary_spell = 1700
					Huntpro_toolkit.stance_guarded
				
				
			elsif $huntpro_sorcerer_primary_spell == 1700
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_sorcerer_primary_spell = 1700
				
				
			else
				respond "What Sorcerer spell are you trying to cast?"
			end
			
			
		elsif Char.prof == "Ranger"
		
			#All decisions final, now casting chosen spell and resetting back to 1700 unless custom spell choice
			if $huntpro_ranger_primary_spell == "9999"
				Huntpro_toolkit.force_spell
				
			elsif $huntpro_ranger_primary_spell == 603
					Spell[603].cast() if Spell[603].known? && Spell[603].affordable?
					$huntpro_ranger_primary_spell = 1700
					
				
				
			elsif $huntpro_ranger_primary_spell == "1700b"
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_ranger_primary_spell = 1700
					
				
			elsif $huntpro_ranger_primary_spell == 1700
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_ranger_primary_spell = 1700
				
				
			else
				respond "What Ranger spell are you trying to cast?"
			end
			
			
		elsif Char.prof == "Bard"
		
			#All decisions final, now casting chosen spell and resetting back to 1700 unless custom spell choice
			if $huntpro_bard_primary_spell == "9999"
				Huntpro_toolkit.force_spell
			elsif $huntpro_bard_primary_spell == 1008
					Spell[1008].cast() if Spell[1008].known? && Spell[1008].affordable?
					$huntpro_bard_primary_spell = 1700
					
				
				
			elsif $huntpro_bard_primary_spell == "1700b"
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_bard_primary_spell = 1700
				
				
			elsif $huntpro_bard_primary_spell == 1700
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_bard_primary_spell = 1700
				
				
			else
				respond "What Bard spell are you trying to cast?"
			end
			
		elsif Char.prof == "Paladin"
		
			#All decisions final, now casting chosen spell and resetting back to 1700 unless custom spell choice
			if $huntpro_paladin_primary_spell == "9999"
				Huntpro_toolkit.force_spell
				
			elsif $huntpro_paladin_primary_spell == 1603
					Spell[1603].cast() if Spell[1603].known? && Spell[1603].affordable?
					$huntpro_paladin_primary_spell = 1700
					
				
				
			elsif $huntpro_paladin_primary_spell == "1700b"
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_paladin_primary_spell = 1700
				
				
			elsif $huntpro_paladin_primary_spell == 1700
					Spell[1700].cast() if Spell[1700].known? && Spell[1700].affordable?
					$huntpro_paladin_primary_spell = 1700
				
				
			else
				respond "What Paladin spell are you trying to cast?"
			end
		end
		
	end
	
	def stow_all
		
		if $huntpro_right_hand_detect == "0" && $huntpro_left_hand_detect == "0"
			
			if checkright == nil && checkleft == nil
				nil
			else
				fput "store weapon"
				fput "store ranged"
				fput "store shield"
				fput "stow all"			
			end
		else
			nil			
		end
		
		if $huntpro_right_hand_detect != "0" && $huntpro_left_hand_detect == "0"
			if checkleft != nil
				fput "store ranged"
				fput "store shield"
				fput "stow left"
			end
			
			if checkright == "#{$huntpro_right_hand_detect}"
				nil
			else
				fput "store weapon"
				fput "stow right"
			end
		end
		
		
		if $huntpro_right_hand_detect == "0" && $huntpro_left_hand_detect != "0"
			if checkright != nil
				fput "store weapon"
				fput "stow right"
			end
			
			if checkleft == "#{$huntpro_left_hand_detect}"
				nil
			else
				fput "store ranged"
				fput "store shield"
				fput "stow right"
			end
		
		end
		
		if $huntpro_action == 99
			fput "store weapon"
			fput "store ranged"
			fput "store shield"
			fput "stow all"
		end
		
		
		
		
	end
	
	def endcombat_actionreset
	
		Huntpro_toolkit.stance_guarded
		
		if $huntpro_action == 4
			nil
		elsif $huntpro_action == 98
			nil
		elsif $huntpro_action == 99
			nil
		elsif $huntpro_action == 97
			nil
		else
			$huntpro_action = 0
		end
	
	end
	
	def end_combat_waggle
	
		if $huntpro_no_waggle != "0"
			nil
		else
			if Script.exists? "waggle"
				do_client ";waggle"
			else
				Script.run('repository', 'download waggle.lic')
				do_client ";waggle"
			end
			
			wait_while {running? "waggle"}
		end
	end
	


	def hold_group
			if $huntpro_group_member1 != "0"
				fput "hold #{$huntpro_group_member1}"
			end
			if $huntpro_group_member2 != "0"
				fput "hold #{$huntpro_group_member2}"
			end
			if $huntpro_group_member3 != "0"
				fput "hold #{$huntpro_group_member3}"
			end
			if $huntpro_group_member4 != "0"
				fput "hold #{$huntpro_group_member4}"
			end
			if $huntpro_group_member5 != "0"
				fput "hold #{$huntpro_group_member5}"
			end
			if $huntpro_group_member6 != "0"
				fput "hold #{$huntpro_group_member6}"
			end
			if $huntpro_group_member7 != "0"
				fput "hold #{$huntpro_group_member7}"
			end
			if $huntpro_group_member8 != "0"
				fput "hold #{$huntpro_group_member8}"
			end
			if $huntpro_group_member9 != "0"
				fput "hold #{$huntpro_group_member9}"
			end
	end
	
	def group_kill_scripts
	
		if $huntpro_group_ai == "0"
			nil
		else
			
			waitrt?
			if $huntpro_recent_death == "0"
			
				
				
				until GameObj.pcs.length >= $huntpro_group_array.length
					respond "Waiting for group members to arrive."
					sleep 3
				end
				
				
				if $huntpro_group_member1 != "0"
					until checkpcs "#{$huntpro_group_member1}"
						respond "Waiting for #{$huntpro_group_member1}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member1}"
				end
				
				
				if $huntpro_group_member2 != "0"
					until checkpcs "#{$huntpro_group_member2}"
						respond "Waiting for #{$huntpro_group_member2}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member2}"
				end
				
				if $huntpro_group_member3 != "0"
					until checkpcs "#{$huntpro_group_member3}"
						respond "Waiting for #{$huntpro_group_member3}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member3}"
				end
				
				if $huntpro_group_member4 != "0"
					until checkpcs "#{$huntpro_group_member4}"
						respond "Waiting for #{$huntpro_group_member4}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member4}"
				end
				
				if $huntpro_group_member5 != "0"
					until checkpcs "#{$huntpro_group_member5}"
						respond "Waiting for #{$huntpro_group_member5}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member5}"
				end
				
				if $huntpro_group_member6 != "0"
					until checkpcs "#{$huntpro_group_member6}"
						respond "Waiting for #{$huntpro_group_member6}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member6}"
				end
				
				if $huntpro_group_member7 != "0"
					until checkpcs "#{$huntpro_group_member7}"
						respond "Waiting for #{$huntpro_group_member7}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member7}"
				end
				
				if $huntpro_group_member8 != "0"
					until checkpcs "#{$huntpro_group_member8}"
						respond "Waiting for #{$huntpro_group_member8}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member8}"
				end
				
				if $huntpro_group_member9 != "0"
					until checkpcs "#{$huntpro_group_member9}"
						respond "Waiting for #{$huntpro_group_member9}"
						sleep 1
					end
					fput "hold #{$huntpro_group_member9}"
				end
				
				fput "whisper ooc group End"
			else
			
				sleep 3
				Huntpro_toolkit.hold_group
				fput "whisper ooc group End"
				
				
			end
			
		end
		
	end

	def safe_room_default
		if $huntpro_my_area =~ /moonmagru/
			fput "move clear"
		end
		Huntpro_toolkit.loot_script("#{$huntpro_loot_script}")
		if $huntpro_rest_room != "0"
			do_client ";go2 #{$huntpro_rest_room}"
			Huntpro_toolkit.unpause_go2
			wait_while {running? "go2"}
			Huntpro_toolkit.top_menu
			respond "I am at your preferred resting room because: #{$huntpro_return_why}"
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.stow_all
			Huntpro_toolkit.group_kill_scripts
			Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
			exit
		
		elsif $huntpro_my_area =~ /moonmonastery|moonfigure|moonbeetle|moonmagru|moonmyklian|moonvortece|moonvruul/
			Script.run('go2', '6505')
			Huntpro_toolkit.top_menu
			respond "I am at this node because: #{$huntpro_return_why}"
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.stow_all
			Huntpro_toolkit.group_kill_scripts
			Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
			exit
			
		elsif checkarea =~ /The Rift|Breach|Heated Sands|Horde|Birthing Sands/
			
			Script.run('go2', '2635')
			Huntpro_toolkit.top_menu
			respond "I am at this supernode because: #{$huntpro_return_why}"
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.stow_all
			Huntpro_toolkit.group_kill_scripts
			Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
			exit
		
		elsif checkarea =~ /Minion Quarters|Dark\-One\'s Keep/	
			
			Script.run('go2', '4195')
			Huntpro_toolkit.top_menu
			respond "I am at this node because: #{$huntpro_return_why}"
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.stow_all
			Huntpro_toolkit.group_kill_scripts
			Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
			exit
			
		elsif checkarea =~ /Wormwood Slough|Graveyard|Slither Creek|Hall of the Dead|Underbarrow|Under Crypt|Narrow Tunnel|Secluded Valley|A Dark Shaft|Mine Shaft|Mine Tunnels|Shadow Valley|Dark Pasture|Shadow Plain/
			
			Script.run('go2', '4142')
			Huntpro_toolkit.top_menu
			respond "I am at this node because: #{$huntpro_return_why}"
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.stow_all
			Huntpro_toolkit.group_kill_scripts
			Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
			exit
			
		elsif checkarea =~ /Melgorehn\'s Valley/
			
			Script.run('go2', '3600')
			Huntpro_toolkit.top_menu
			respond "I am at this supernode because: #{$huntpro_return_why}"
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.stow_all
			Huntpro_toolkit.group_kill_scripts
			Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
			exit
			
		else
			
			do_client ";go supernode"
			Huntpro_toolkit.unpause_go2
			wait_while {running? "go2"}
			if Room.current.id == 3807 || checkarea == "Land Tower East"
				Script.run('go2', 'town')
				Huntpro_toolkit.top_menu
				respond "I am at this supernode because: #{$huntpro_return_why}"
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.stow_all
				Huntpro_toolkit.group_kill_scripts
				Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
				exit
			elsif Room.current.id == 2400
				Script.run('go2', 'town')
				Huntpro_toolkit.top_menu
				respond "I am at this supernode because: #{$huntpro_return_why}"
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.stow_all
				Huntpro_toolkit.group_kill_scripts
				Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
				exit
			elsif Room.current.id == 28717
				Script.run('go2', 'town')
				Huntpro_toolkit.top_menu
				respond "I am at this supernode because: #{$huntpro_return_why}"
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.stow_all
				Huntpro_toolkit.group_kill_scripts
				Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
				exit
			else
				Huntpro_toolkit.top_menu
				respond "I am at this supernode because: #{$huntpro_return_why}"
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.stow_all
				Huntpro_toolkit.group_kill_scripts
				Huntpro_toolkit.cleanup if $huntpro_combat_cleanup != "0"
				exit
			end
		end
	end
	
	
	def unpause_go2
		sleep 3
		do_client ";ua"
		if Script.running? "go2"
			wait_while {running? "go2"}
		else
			nil
		end
	end
	
	def waitroundtime
	
		waitrt?
		
	end
	
	def waitcast_waitrt
	
		waitrt?
		waitcastrt?
	end
	
	
	
	def uac_round
	
		#respond "Debug Output - Starting UAC Round"
		if GameObj.targets.length >= 1
	
			if $huntpro_uac_current_attack == 0
				$huntpro_uac_current_attack = "jab"
			elsif $huntpro_uac_current_attack == nil
				$huntpro_uac_current_attack = "jab"
			end
			
			Huntpro_toolkit.stance_offensive
			
			result = dothistimeout "#{$huntpro_uac_current_attack}", 2, /excellent positioning|followup jab|followup punch|followup grapple|followup kick|Roundtime/
			if result =~ /excellent positioning/
				$huntpro_uac_current_attack = "kick"
							
			elsif result =~ /followup jab/
				$huntpro_uac_current_attack = "jab"
				
			elsif result =~ /followup punch/
				$huntpro_uac_current_attack = "punch"
				
			elsif result =~ /followup grapple/
				$huntpro_uac_current_attack = "grapple"
				
			elsif result =~ /followup kick/
				$huntpro_uac_current_attack = "kick"
				
			elsif result =~ /Roundtime/
				$huntpro_uac_current_attack = "jab"
			end
		else
			nil
		end
	
		#respond "Debug Output - Ending UAC Round"
	
	end
	
	
	
	def mstrike_setup
	
		#Mstrike Detection

		if $huntpro_my_style == "1"
			fput "mstrike set recovery off"
			fput "mstrike set default jab"
		elsif $huntpro_my_style == "2"
			fput "mstrike set recovery off"	
			fput "mstrike set default grapple"
		elsif $huntpro_my_style == "3"
			fput "mstrike set recovery off"
			fput "mstrike set default attack"
		elsif $huntpro_my_style == "4"
			fput "mstrike set recovery off"
			fput "mstrike set default attack"
		elsif $huntpro_my_style == "5"
			fput "mstrike set recovery off"
			fput "mstrike set default fire"
		elsif $huntpro_my_style == "6"
			fput "mstrike set recovery off"
			fput "mstrike set default fire"
		elsif $huntpro_my_style == "7"
			fput "mstrike set recovery off"
			fput "mstrike set default fire"
		elsif $huntpro_my_style == "8"
			fput "mstrike set recovery off"
			fput "mstrike set default fire"
		elsif $huntpro_my_style == "9"
			nil
		else
			nil
		end
		
		if Skills.multiopponentcombat >= 190
			$huntpro_my_mstrike_focus = 6
			$huntpro_my_mstrike_open = 7
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 155
			$huntpro_my_mstrike_focus = 5
			$huntpro_my_mstrike_open = 7
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 135
			$huntpro_my_mstrike_focus = 5
			$huntpro_my_mstrike_open = 6
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 100
			$huntpro_my_mstrike_focus = 4
			$huntpro_my_mstrike_open = 6
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 90
			$huntpro_my_mstrike_focus = 4
			$huntpro_my_mstrike_open = 5
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 60
			$huntpro_my_mstrike_focus = 3
			$huntpro_my_mstrike_open = 5
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 55
			$huntpro_my_mstrike_focus = 3
			$huntpro_my_mstrike_open = 4	
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 35
			$huntpro_my_mstrike_focus = 2
			$huntpro_my_mstrike_open = 4	
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 30
			$huntpro_my_mstrike_focus = 2
			$huntpro_my_mstrike_open = 3	
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 15
			$huntpro_my_mstrike_focus = 0
			$huntpro_my_mstrike_open = 3	
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"
		elsif Skills.multiopponentcombat >= 5
			$huntpro_my_mstrike_focus = 0
			$huntpro_my_mstrike_open = 2
			fput "mstrike set focus #{$huntpro_my_mstrike_focus}"
			fput "mstrike set open  #{$huntpro_my_mstrike_open}"			
		end	
	
	end
	
	
	def mstrike_routine
	
		#respond "Debug Output - Starting Mstrike Round"

		if Skills.multiopponentcombat >= 5
			if Spell.active? "9005"
				nil
			else
				if percentstamina >= 50
					if GameObj.targets.length >= 2 && $huntpro_my_mstrike_focus == 0 && $huntpro_my_mstrike_open >= 1
						Huntpro_toolkit.stance_offensive
						#respond "Debug Output - Open Mstrike"
						fput "mstrike" if percentstamina >= 50
					elsif GameObj.targets.length == 1 && $huntpro_my_mstrike_focus >= 1 && $huntpro_my_mstrike_open >= 1
						Huntpro_toolkit.stance_offensive
						#respond "Debug Output - Focus Mstrike"
						fput "mstrike target" if percentstamina >= 50
					elsif GameObj.targets.length >= 2 && $huntpro_my_mstrike_focus >= 1 && $huntpro_my_mstrike_open >= 1
						Huntpro_toolkit.stance_offensive
						#respond "Debug Output - Open Mstrike, many in room but I know focus."
						fput "mstrike" if percentstamina >= 50
					end
				end
			end
		else
			nil
		end

		#respond "Debug Output - Ending Mstrike Round"
		waitrt?
	
	end
	
	def stance_offensive
		Huntpro_toolkit.waitcast_waitrt
		if checkstance != "offensive"
			sleep 0.1
			fput "stance offensive"
			
		end
	end
	
	def stance_defensive
	
		if $huntpro_stay_offensive == "1"
			nil
		else
			Huntpro_toolkit.waitcast_waitrt
			if checkstance != "defensive"
				sleep 0.1
				fput "stance defensive"
				
			end
		end
	end
	
	def stance_guarded
		if $huntpro_stay_offensive == "1"
			nil
		else
			Huntpro_toolkit.waitcast_waitrt
			if checkstance != "guarded"
				sleep 0.1
				fput "stance guarded"
				
			end
		end
	end
	
	
	
	def hide_time
	
		if GameObj.targets.length >= 1
			if checkhidden
					nil
				else
					result = dothistimeout "hide", 2, /fail to slip|that no one has noticed|but can't see anywhere/
					if result =~ /fail to slip/
						waitrt?
						fput "hide"
					elsif result =~ /that no one has noticed/
						nil
					elsif result =~ /but can't see anywhere/
						nil
					end
			end
		else
			nil
		end
	
	end
	
	def chicken_attack
		fput "attack"
	end
	
	def chicken_ambush
		fput "ambush"
	end
	
	def chicken_fire
		fput "fire"
	end
	
	def cloud_check
		GameObj.loot.each { |i|
		if i.noun =~ /cloud/
			#respond "Debug Output - I detected a cloud."
					if Spell[119].known? && Spell[119].affordable?
					waitcastrt?
					fput "prep 119"
					fput "cast cloud"
				else
					Huntpro_toolkit.evicted
					sleep 0.025
				end
		end	
		}
	end
	
	def void_check
		GameObj.loot.each { |i|
		if i.noun =~ /void/
			#respond "Debug Output - I detected a void."
			Huntpro_toolkit.evicted
			sleep 0.025
		end	
		}
	end
	
	def vine_check
		GameObj.loot.each { |i|
		if i.noun =~ /dreamvine/
			nil
		elsif i.noun =~ /vine/
			#respond "Debug Output - I detected a vine."
			if $huntpro_my_vine == "1"
				nil
			elsif Spell[119].known? && Spell[119].affordable?
				waitcastrt?
				fput "prep 119"
				fput "cast vine"
			else
				Huntpro_toolkit.evicted
				sleep 0.025
			end
		end	
		}
	end
	
	def sandstorm_check
	
		GameObj.loot.each { |i|
			if i.noun =~ /sandstorm/
				#respond "Debug Output - I detected a sandstorm."
				if Spell[119].known? && Spell[119].affordable?
					waitcastrt?
					fput "prep 119"
					fput "cast sandstorm"
				else
					Huntpro_toolkit.evicted
					sleep 0.025
				end
			end	
		}
	
	end
	
	def web_check
		GameObj.loot.each { |i|
		if i.noun =~ /web/
			#respond "Debug Output - I detected a web."
			if Spell[119].known? && Spell[119].affordable?
				waitcastrt?
				fput "prep 119"
				fput "cast web"
			else
				Huntpro_toolkit.evicted
				sleep 0.025
			end
		end	
		}
	end
	
	def swarm_check
		GameObj.loot.each { |i|
		if i.noun =~ /swarm/
			#respond "Debug Output - I detected a swarm."
			Huntpro_toolkit.evicted
			sleep 0.025
		end	
		}
	end
	
	def arm_check
		#GameObj.targets.each { |i|
		#if i.noun =~ /arm/
		#respond "Debug Output - I detected an arm."
		#	Huntpro_toolkit.evicted
		#	sleep 0.025
		#end	
		#}
		
		

		if GameObj.targets.length >= 1
		
		$huntpro_arm_check_array = Array.new
		$huntpro_arm_check_array = []
		
		$huntpro_arm_all_targets_array = Array.new
		$huntpro_arm_all_targets_array = []
	
			GameObj.targets.each { |i|
			
				$huntpro_arm_all_targets_array.push(i.name)
				
				
				#Name Traps for Arms
				if i.name =~ /(pair of bloody arms|bloody arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of bloated arms|bloated arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of decayed arms|decayed arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of putrid arms|putrid arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of flayed arms|flayed arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of desiccated arms|desiccated arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of fleshless arms|fleshless arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of deformed arms|deformed arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of three\-fingered arms|three\-fingered arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of gnarled arms|gnarled arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of burnt arms|burnt arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of skeletal arms|skeletal arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of clawed arms|clawed arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				if i.name =~ /(pair of mangled arms|mangled arm)/
				$huntpro_arm_check_array.push(i.name)
				end
				
				
				
				
				
				
				
				
				
			}
			
			
			if $huntpro_arm_all_targets_array.length == $huntpro_arm_check_array.length
			
				#respond "Debug Output - $huntpro_arm_all_targets_array.length is #{$huntpro_arm_all_targets_array.length}"
				#respond "Debug Output - $huntpro_arm_all_targets_array is #{$huntpro_arm_all_targets_array}"
				#respond "Debug Output - $huntpro_arm_check_array.length is #{$huntpro_arm_check_array.length}"
				#respond "Debug Output - $huntpro_arm_check_array is #{$huntpro_arm_check_array}"
				#respond "only arms here."
				#sleep 3
				if Char.prof == "Sorcerer"
					fput "stop 709"
				end
				Huntpro_toolkit.loot_script("#{$huntpro_loot_script}") if $huntpro_own_this_room == 1
				Huntpro_toolkit.evicted
				sleep 0.025
			elsif $huntpro_arm_all_targets_array.length > $huntpro_arm_check_array.length
				#respond "Debug Output - $huntpro_arm_all_targets_array.length is #{$huntpro_arm_all_targets_array.length}"
				#respond "Debug Output - $huntpro_arm_all_targets_array is #{$huntpro_arm_all_targets_array}"
				#respond "Debug Output - $huntpro_arm_check_array.length is #{$huntpro_arm_check_array.length}"
				#respond "Debug Output - $huntpro_arm_check_array is #{$huntpro_arm_check_array}"
				#respond "I see monsters and arms."
				#sleep 3
				nil
			else
				#respond "Debug Output - $huntpro_arm_all_targets_array.length is #{$huntpro_arm_all_targets_array.length}"
				#respond "Debug Output - $huntpro_arm_all_targets_array is #{$huntpro_arm_all_targets_array}"
				#respond "Debug Output - $huntpro_arm_check_array.length is #{$huntpro_arm_check_array.length}"
				#respond "Debug Output - $huntpro_arm_check_array is #{$huntpro_arm_check_array}"
				#respond "error can't make a decision."
				#sleep 10
				nil
			end	
			
		else
				#respond "Debug Output - No Targets Here."
					
		end
		
	end
	
	def tempest_check
		GameObj.loot.each { |i|
		if i.noun =~ /tempest/
			#respond "Debug Output - I detected a tempest."
			if Spell[119].known? && Spell[119].affordable?
				waitcastrt?
				fput "prep 119"
				fput "cast tempest"
			else
				Huntpro_toolkit.evicted
				sleep 0.025
			end

		end	
		}
	end
	
	def combat_use_herbs
		
		
		if $huntpro_no_herbs != "0"
			nil
		elsif $huntpro_use_herbs != "0"
			#if $huntpro_herb_cooldown == 0
				#Add Gos Sigil Mending here
				if $huntpro_my_society == "Gos"
					Spell[9713].cast() if Spell[9713].known? && Spell[9713].affordable? unless Spell.active? "9713"
				end
				waitcastrt?
				waitrt?
				Script.run('useherbs')
				#$huntpro_herb_cooldown = 3
			#end
			
			
			#$huntpro_herb_cooldown = $huntpro_herb_cooldown - 1 unless $huntpro_herb_cooldown == 0
			
		
		
		sleep 0.25
		
		end
	
	end
	
	def evicted
		#respond "Debug Output - Evicted"
		$huntpro_action = 0
		$huntpro_own_this_room = 0
		$huntpro_my_vine = "0"
		walk
		sleep 0.10
	end
	
	
	def nil
	
	respond "#{Char.name}, please move to a mapped room."
	
	end
	
	def empath_self_heal
	
		if checkmana < 30
			$huntpro_return_why = "Insufficient resources. You are injured or have major scars." unless $huntpro_use_herbs == "1"
			$huntpro_action = 99 unless $huntpro_use_herbs == "1"
		else
			if Wounds.head >= 1 || Scars.head >= 2
				fput "cure head"
			elsif Wounds.neck >= 1 || Scars.neck >= 2
				fput "cure neck"
			elsif Wounds.abs >= 1 || Scars.abs >= 2
				fput "cure abdomen"
			elsif Wounds.lhand >= 1 || Scars.lhand >= 2
				fput "cure left hand"
			elsif Wounds.rhand >= 1 || Scars.rhand >= 2
				fput "cure right hand"
			elsif Wounds.larm >= 1 || Scars.larm >= 2
				fput "cure left arm"
			elsif Wounds.rarm >= 1 || Scars.rarm >= 2
				fput "cure right arm"
			elsif Wounds.lleg >= 1 || Scars.lleg >= 2
				fput "cure left leg"
			elsif Wounds.rleg >= 1 || Scars.rleg >= 2
				fput "cure right leg"
			elsif Wounds.leye >= 1 || Scars.leye >= 2
				fput "cure left eye"
			elsif Wounds.reye >= 1 || Scars.reye >= 2
				fput "cure right eye"
			elsif Wounds.chest >= 1 || Scars.chest >= 2
				fput "cure chest"
			elsif Wounds.back >= 1 || Scars.back >= 2
				fput "cure back"
			elsif Wounds.nerves >= 1 || Scars.nerves >= 2
				fput "cure nerves"
			end
		end			

	end

	def confirm_settings
		respond "#{Char.name}, Settings have been updated."
	end
	
	
	#Bounty Toolkit
	
	def bounty_debug
		
		if Char.name =~ /Jara|Littlespell|Skydream|Wendill|Greenswarm|Jarcation/
			respond "Bounty Debug"
			respond "$huntpro my area is #{$huntpro_my_area}"
			respond "$huntpro_bounty_intel_watch is #{$huntpro_bounty_intel_watch}"
			respond "$huntpro_bounty_stage is #{$huntpro_bounty_stage}"
			respond "$huntpro_bounty_type is #{$huntpro_bounty_type}"
			respond "$huntpro_bounty_town is #{$huntpro_bounty_town}"
			respond "$huntpro_bounty_guard is #{$huntpro_bounty_guard}"
			respond "$huntpro_bounty_creature_name is #{$huntpro_bounty_creature_name}"
			respond "$huntpro_bounty_ready_to_launch is #{$huntpro_bounty_ready_to_launch}"
			respond "$huntpro_bounty_fast is #{$huntpro_bounty_fast}"
			respond "$huntpro_bounty_heirloom_name is #{$huntpro_bounty_heirloom_name}"
			respond "$huntpro_bounty_heirloom_type is #{$huntpro_bounty_heirloom_type}"
			respond "$huntpro_bounty_creature_match is #{$huntpro_bounty_creature_match}"
			respond "$huntpro_bounty_debug_cooldown is #{$huntpro_bounty_debug_cooldown}"
			

		end
		
	
	end
	
	def cman_debugger
	
		#respond "Debug Output - Cman Debugger."
		
		#respond "$huntpro_cman_cooldown is #{$huntpro_cman_cooldown}"
		#respond "$huntpro_cman_bearhug_cooldown is #{$huntpro_cman_bearhug_cooldown}"
		#respond "$huntpro_cman_control is #{$huntpro_cman_control}"
		#respond "$huntpro_no_cman_control is #{$huntpro_no_cman_control}"
		#respond "$huntpro_cman_watch is #{$huntpro_cman_watch}"
		#respond "$huntpro_cman_tackle is #{$huntpro_cman_tackle}"
		#sleep 1
	end
	
	def bounty_status
		#respond "I'm in bounty status."
		Huntpro_toolkit.bounty_debug
		$huntpro_bounty_intel_watch = "1"
		
		until $huntpro_bounty_stage != "0"
			Huntpro_toolkit.bounty_debug
			
			fput "bounty"
			sleep 3
			
		end
		#respond "I'm out of bounty status."
		Huntpro_toolkit.bounty_control
	
	
	end
	
	def bounty_debug_exit
				
				
				Huntpro_toolkit.top_menu
				respond "#{Char.name}, I apologize, your current bounty may not yet be coded.  I invite you to share this on Huntpro Discord."
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.oop_script_kill
				exit
				
				
	end
	
	def bounty_control
		sleep 1
		#fput "bounty"
		#respond "I'm in bounty control."
		
		if $huntpro_bounty_debug_cooldown >= 3
			Huntpro_toolkit.bounty_debug_exit
		end
		$huntpro_bounty_creature_match = "1"
		
		Huntpro_toolkit.bounty_debug
		if $huntpro_bounty_stage == "1"
			#Head to the guild for new bounty.
			Huntpro_toolkit.bounty_debug
			do_client ";go2 advguild"
			wait_while {running? "go2"}
			Huntpro_toolkit.bounty_town_detection
		elsif $huntpro_bounty_stage == "1.5"
			#Remove current bounty
			Huntpro_toolkit.bounty_debug
			do_client ";go2 advguild"
			wait_while {running? "go2"}
			Huntpro_toolkit.bounty_town_flash
			Huntpro_toolkit.bounty_remove
		elsif $huntpro_bounty_stage == "2"
			#Talk to the task master.
			Huntpro_toolkit.bounty_debug
			Huntpro_toolkit.bounty_taskmaster_talk
			
			
			
		elsif $huntpro_bounty_stage == "3"
			Huntpro_toolkit.bounty_debug
			$huntpro_bounty_creature_match = "1"
			#Collect bounty information first pass.
			fput "bounty"
			until $huntpro_bounty_type != "0"
				Huntpro_toolkit.bounty_debug
				#respond " I'm trapped in bounty stage 3 type loop"
				sleep 3
				$huntpro_bounty_debug_cooldown = $huntpro_bounty_debug_cooldown + 1
			end
			
			Huntpro_toolkit.bounty_debug
			
			#Fork for skin bounties
			sleep 1
			if $huntpro_bounty_type == "skin"
				$huntpro_bounty_stage = "4.5"
			end			
			
			#Fork for herb bounties
			if $huntpro_bounty_type == "herbs"
				$huntpro_bounty_stage = "4.75"
			end			
			
			#Fork for heirloom bounties
			if $huntpro_bounty_type == "Heirloom"
				$huntpro_bounty_stage = "4"
			end
			
			#Fork for child bounties
			if $huntpro_bounty_type == "child"
				$huntpro_bounty_stage = "4"
			end
			Huntpro_toolkit.bounty_control
		
		elsif $huntpro_bounty_stage == "4"
			#Talk to a guard
			do_client ";go2 advguard"
			Huntpro_toolkit.unpause_go2
			Huntpro_toolkit.bounty_guard_talk
			
		elsif $huntpro_bounty_stage == "4.25"
			#Talk to a guard
			do_client ";go2 advguard"
			Huntpro_toolkit.unpause_go2
			Huntpro_toolkit.bounty_guard_talk
			
		elsif $huntpro_bounty_stage == "4.5"
			#Talk to furrier
			
			if $huntpro_bounty_noskin == "1"
				Huntpro_toolkit.top_menu
				respond "#{Char.name}, I see you don't want Huntpro to complete skin bounties."
				respond
				respond "You can have someone else skin for you and then you can turn them in."
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.oop_script_kill
				exit
			end	
			
			
			do_client ";go2 furrier"
			wait_while {running? "go2"}
			Huntpro_toolkit.bounty_furrier_talk
			
		elsif $huntpro_bounty_stage == "4.75"
			#Talk to Herbalist
			
			if $huntpro_bounty_noherb == "1"
				Huntpro_toolkit.top_menu
				respond "#{Char.name}, I see you don't want Huntpro to complete herb bounties."
				respond
				respond "You can have someone else forage the herbs for you and then you can turn them in."
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.oop_script_kill
				exit
			end		
			waitrt?
			do_client ";go2 town"
			Huntpro_toolkit.unpause_go2
			wait_while {running? "go2"}
			Huntpro_toolkit.bounty_town_flash
			if $huntpro_bounty_town == "River's Rest"
				do_client ";go2 alchemist"
				Huntpro_toolkit.unpause_go2
				wait_while {running? "go2"}
				Huntpro_toolkit.bounty_herbalist_talk
			else
				do_client ";go2 npchealer"
				Huntpro_toolkit.unpause_go2
				wait_while {running? "go2"}
				Huntpro_toolkit.bounty_herbalist_talk
			end
		
		elsif $huntpro_bounty_stage == "4.99"
			#Do forage bounty
				
		if Script.exists? "betazzherb"
			do_client ";betazzherb bounty"
		else
			Script.run('repository', 'download betazzherb.lic')
			do_client ";betazzherb"
		end
		
		wait_while {running? "betazzherb"}
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, I have finished foraging for you."
		respond
		respond "Please hand the herbs to the npc."
		respond
		respond "After doing so, restart Huntpro Bounty feature."
		Huntpro_toolkit.bottom_menu
		Huntpro_toolkit.oop_script_kill
		exit
		
		
		
		
		elsif $huntpro_bounty_stage == "5"
			#Collect bounty information second pass.
			
			#respond "I'm now in stage 5."
			
			Huntpro_toolkit.bounty_skin_zone_picker if $huntpro_bounty_type == "skin"
			
			until $huntpro_bounty_ready_to_launch != "0"
				Huntpro_toolkit.bounty_debug
				fput "bounty"
				sleep 2
				Huntpro_toolkit.bounty_debug
				if $huntpro_bounty_debug_cooldown >= 3
					Huntpro_toolkit.bounty_debug_exit
				end
				$huntpro_bounty_debug_cooldown = $huntpro_bounty_debug_cooldown + 1
				Huntpro_toolkit.bounty_debug
				if $huntpro_my_area != "bounty"
					$huntpro_bounty_stage = "6"
					$huntpro_bounty_ready_to_launch = "1"
				end
			end
			
			$huntpro_bounty_debug_cooldown = 0
			
			Huntpro_toolkit.bounty_control
		
		elsif $huntpro_bounty_stage == "6"
			#Launching Pad
			Huntpro_toolkit.bounty_debug
			#respond "I'm in stage 6"
			
			#respond "Attempting to launch out of bounty."
			
			#Extra Skin Trap
			
			if $huntpro_bounty_noskin == "1" && $huntpro_bounty_type == "skin"
			
				Huntpro_toolkit.top_menu
				respond "#{Char.name}, I see you don't want Huntpro to complete skin bounties."
				respond
				respond "You can have someone else skin for you and then you can turn them in."
				Huntpro_toolkit.bottom_menu
				Huntpro_toolkit.oop_script_kill
				exit
			end
				
			$huntpro_bounty_creature_match = "0"
			
		elsif $huntpro_bounty_stage == "7"
			#Turn in a bounty
			Huntpro_toolkit.bounty_debug
			#respond "I'm in stage 7"
			
				if checkmind == "saturated"
					waitrt?
					if Char.prof == "Bard"
						fput "stop 1011"
					end
					$huntpro_action = 99
					$huntpro_return_why = "You finished your bounty but are saturated."
				else
					$huntpro_bounty_creature_match = "1"
					waitrt?
					if Char.prof == "Bard"
						fput "stop 1011"
					end
					if Script.running? "go2"
						Script.kill "go2"
					end
					do_client ";go2 advguild"
					wait_while {running? "go2"}
					Huntpro_toolkit.bounty_town_flash
					Huntpro_toolkit.bounty_taskmaster_talk
					$huntpro_action = 99
					$huntpro_return_why = "You finished your bounty."
					$huntpro_my_area = "0"
					$huntpro_bounty_stage = "9"
					
				end	
		elsif $huntpro_bounty_stage == "8"
			
					$huntpro_my_area = "0"
					$huntpro_action = 99
					$huntpro_return_why = "You need to wait longer before starting a new bounty."
		
		elsif $huntpro_bounty_stage == "9"
			#Last pass through before exiting.
			
			$huntpro_bounty_creature_match = "0"
		end
		
		
		
		#respond "leaving bounty control"
		
	end
	
	def bounty_skin_zone_picker
		
		if $huntpro_bounty_type == "skin"
			if $huntpro_bounty_town == "0"
				do_client ";go2 furrier"
				wait_while {running? "go2"}
				Huntpro_toolkit.bounty_furrier_talk
			end
				
			if $huntpro_bounty_skin_name == "0"
				fput "bounty"
				sleep 3
			end
			
			if	$huntpro_bounty_town == "Landing"
				if $huntpro_bounty_skin_name == "ghoul nail"
					$huntpro_my_area = "wlghoul"
				elsif $huntpro_bounty_skin_name == "rolton pelt"
					$huntpro_my_area = "wlrolton"
				elsif $huntpro_bounty_skin_name == "skeleton bone"
					$huntpro_my_area = "wlghoul"
				elsif $huntpro_bounty_skin_name == "giant toe"
					$huntpro_my_area = "wlfrostgiant"
				elsif $huntpro_bounty_skin_name == "arctic titan toe"
					$huntpro_my_area = "wlfrostgiant"	
				elsif $huntpro_bounty_skin_name == "crone finger"
					$huntpro_my_area = "wlcrone"
				elsif $huntpro_bounty_skin_name == "roa\'ter skin"
					$huntpro_my_area = "wlroa\'ter"
				elsif $huntpro_bounty_skin_name == "mastiff heart"
					$huntpro_my_area = "wlillokemystic"
				elsif $huntpro_bounty_skin_name == "skeletal giant bone"
					$huntpro_my_area = "wlskeletalgiant"
				elsif $huntpro_bounty_skin_name == "giant skin"
					$huntpro_my_area = "wlskeletalgiant"
				elsif $huntpro_bounty_skin_name == "ice troll scalp"
					$huntpro_my_area = "wlcrone"
				elsif $huntpro_bounty_skin_name == "kobold skin"
					$huntpro_my_area = "wlkobold"
				elsif $huntpro_bounty_skin_name == "silvery hoof"
					$huntpro_my_area = "wlnmare"
				elsif $huntpro_bounty_skin_name == "silvery tail"
					$huntpro_my_area = "wlnmare"
				elsif $huntpro_bounty_skin_name == "silver-tipped horseshoe"
					$huntpro_my_area = "wlnmare"
				elsif $huntpro_bounty_skin_name == "ant pincer"
					$huntpro_my_area = "wlant"	
				elsif $huntpro_bounty_skin_name == "worm skin"
					$huntpro_my_area = "wlworm"	
				elsif $huntpro_bounty_skin_name == "rat pelt"			
					$huntpro_my_area = "wlrat"	
				elsif $huntpro_bounty_skin_name == "rabid squirrel tail"			
					$huntpro_my_area = "wlsquirrel"	
				elsif $huntpro_bounty_skin_name == "kiramon mandible"
					$huntpro_my_area = "wlkiramon"
				elsif $huntpro_bounty_skin_name == "kiramon tongue"
					$huntpro_my_area = "wlkiramon"
				elsif $huntpro_bounty_skin_name == "minotaur hide"
					$huntpro_my_area = "wlminotaur"
				elsif $huntpro_bounty_skin_name == "minotaur horn"
					$huntpro_my_area = "wlminowarrior"	
				elsif $huntpro_bounty_skin_name == "minotaur hoof"
					$huntpro_my_area = "wlminomagus"
				elsif $huntpro_bounty_skin_name == "mossy beard"
					$huntpro_my_area = "wlredtreekin"
				elsif $huntpro_bounty_skin_name == "blood\-stained bark"
					$huntpro_my_area = "wlredtreekin"
				elsif $huntpro_bounty_skin_name == "myklian scale"
					$huntpro_my_area = "moonmyklian"	
				elsif $huntpro_bounty_skin_name == "fog beetle carapace"
					$huntpro_my_area = "moonbeetle"	
				elsif $huntpro_bounty_skin_name == "vruul skin"
					$huntpro_my_area = "moonvruul"
				elsif $huntpro_bounty_skin_name == "centaur hide"
					$huntpro_my_area = "wlcentaur"
					
				else
					Huntpro_toolkit.top_menu
					respond "Landing - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
					
				end
			elsif $huntpro_bounty_town == "Icemule"
				if $huntpro_bounty_skin_name == "caedera skin"
					$huntpro_my_area = "rift2"
				elsif $huntpro_bounty_skin_name == "cerebralite tentacle"
					$huntpro_my_area = "rift4"
				elsif $huntpro_bounty_skin_name == "rift crawler tooth"
					$huntpro_my_area = "rift4"
				elsif $huntpro_bounty_skin_name == "aivren gizzard"
					$huntpro_my_area = "rift3"
				elsif $huntpro_bounty_skin_name == "polar bear skin"
					$huntpro_my_area = "pinewraith"
				elsif $huntpro_bounty_skin_name == "tiger incisor"
					$huntpro_my_area = "pinewraith"
				elsif $huntpro_bounty_skin_name == "mammoth tusk"
					$huntpro_my_area = "pinewraith"
				elsif $huntpro_bounty_skin_name == "giant toe"
					$huntpro_my_area = "icegiant"
				elsif $huntpro_bounty_skin_name == "giant scalp"
					$huntpro_my_area = "icegiant"
				elsif $huntpro_bounty_skin_name == "giant skin"
					$huntpro_my_area = "icemanticore"
				elsif $huntpro_bounty_skin_name == "arctic manticore mane"
					$huntpro_my_area = "icemanticore"
				elsif $huntpro_bounty_skin_name == "crone finger"
					$huntpro_my_area = "icecrone"
				elsif $huntpro_bounty_skin_name == "frozen scalp"			
					$huntpro_my_area = "icecrone"				
				elsif $huntpro_bounty_skin_name == "thorn\-ridden appendage"			
					$huntpro_my_area = "icebush"
				elsif $huntpro_bounty_skin_name == "blood\-stained leaf"			
					$huntpro_my_area = "icebush"
				elsif $huntpro_bounty_skin_name == "desiccated stem"			
					$huntpro_my_area = "iceshrub"
				elsif $huntpro_bounty_skin_name == "bleached thorn"			
					$huntpro_my_area = "iceshrub"
				elsif $huntpro_bounty_skin_name == "frosted branch"			
					$huntpro_my_area = "iceshrub"
				elsif $huntpro_bounty_skin_name == "shriveled cutting"			
					$huntpro_my_area = "iceshrub"
				elsif $huntpro_bounty_skin_name == "wolverine tail"			
					$huntpro_my_area = "pineslope"
				elsif $huntpro_bounty_skin_name == "wolverine pelt"			
					$huntpro_my_area = "pineslope"
				elsif $huntpro_bounty_skin_name == "pair of caribou antlers"			
					$huntpro_my_area = "pineslope"
				elsif $huntpro_bounty_skin_name == "grizzly bear hide"			
					$huntpro_my_area = "pineslope"
				elsif $huntpro_bounty_skin_name == "ice troll scalp"			
					$huntpro_my_area = "iceguardian"
				elsif $huntpro_bounty_skin_name == "skeleton bone"			
					$huntpro_my_area = "icephantom"
				elsif $huntpro_bounty_skin_name == "rat pelt"			
					$huntpro_my_area = "icerat"	
				elsif $huntpro_bounty_skin_name == "worm skin"
					$huntpro_my_area = "iceworm"

				
				
				else
					Huntpro_toolkit.top_menu
					respond "Icemule - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "Solhaven"
				if $huntpro_bounty_skin_name == "waern fur"
					$huntpro_my_area = "soldybbuk"
				elsif $huntpro_bounty_skin_name == "roa\'ter skin"
					$huntpro_my_area = "solcorpse"
				elsif $huntpro_bounty_skin_name == "fenghai fur"
					$huntpro_my_area = "solcentaur"
				elsif $huntpro_bounty_skin_name == "cougar tail"
					$huntpro_my_area = "solcentaur"
				elsif $huntpro_bounty_skin_name == "centaur hide"
					$huntpro_my_area = "solcentaur"
				elsif $huntpro_bounty_skin_name == "pra\'eda canine"
					$huntpro_my_area = "solcentaur"
				
				else
					Huntpro_toolkit.top_menu
					respond "Solhaven - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "River's Rest"
				if $huntpro_bounty_skin_name == "troll tooth"
					$huntpro_my_area = "rrfleshgolem"
				elsif $huntpro_bounty_skin_name == "troll eyeball"
					$huntpro_my_area = "rrfleshgolem"
				elsif $huntpro_bounty_skin_name == "cracked troll jawbone"
					$huntpro_my_area = "rrhag"
				elsif $huntpro_bounty_skin_name == "wight mane"
					$huntpro_my_area = "rrhag"
				elsif $huntpro_bounty_skin_name == "snake fang"
					$huntpro_my_area = "rrchimera"
				elsif $huntpro_bounty_skin_name == "troll beard"
					$huntpro_my_area = "rrhilltroll"
				elsif $huntpro_bounty_skin_name == "troll toe"
					$huntpro_my_area = "rrcavebear"
				elsif $huntpro_bounty_skin_name == "troll fang"
					$huntpro_my_area = "rrcavebear"
				elsif $huntpro_bounty_skin_name == "bear claw"
					$huntpro_my_area = "rrcavebear"
				elsif $huntpro_bounty_skin_name == "troll ear"
					$huntpro_my_area = "rrsoldier"
				elsif $huntpro_bounty_skin_name == "wight skull"
					$huntpro_my_area = "rrsoldier"
					
				else
					Huntpro_toolkit.top_menu
					respond "River's Rest - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "Teras"
				if $huntpro_bounty_skin_name == "iridescent triton hide"
					$huntpro_my_area = "terassentry"
				elsif $huntpro_bounty_skin_name == "elongated triton spine"
					$huntpro_my_area = "terasradical"
				elsif $huntpro_bounty_skin_name == "curved gold\-flecked claw"
					$huntpro_my_area = "teraswelemental"
				elsif $huntpro_bounty_skin_name == "kiramon mandible"
					$huntpro_my_area = "teraskiramon"
				elsif $huntpro_bounty_skin_name == "kiramon tongue"
					$huntpro_my_area = "teraskiramon"
				else
					Huntpro_toolkit.top_menu
					respond "Teras - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "Vaalor"
				if $huntpro_bounty_skin_name == "fire ant pincer"
					$huntpro_my_area = "tvant"
				elsif $huntpro_bounty_skin_name == "kobold skin"
					$huntpro_my_area = "tvkobold"
				elsif $huntpro_bounty_skin_name == "rodent fang"
					$huntpro_my_area = "tvrodent"	
				else
					Huntpro_toolkit.top_menu
					respond "Vaalor - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "Illistim"
				if $huntpro_bounty_skin_name == "ruff of raptor feathers"
					$huntpro_my_area = "tiraptor"
				elsif $huntpro_bounty_skin_name == "spotted leopard pelt"
					$huntpro_my_area = "tiraptor"
				elsif $huntpro_bounty_skin_name == "trali hide"
					$huntpro_my_area = "titrali"
				elsif $huntpro_bounty_skin_name == "trali scalp"
					$huntpro_my_area = "titrali"
				elsif $huntpro_bounty_skin_name == "vulture feathers"
					$huntpro_my_area = "tivourkha"	
				elsif $huntpro_bounty_skin_name == "kiramon mandible"
					$huntpro_my_area = "tikiramon"
				elsif $huntpro_bounty_skin_name == "kiramon tongue"
					$huntpro_my_area = "tikiramon"
				elsif $huntpro_bounty_skin_name == "wight skull"
					$huntpro_my_area = "tibaesrukha"
				elsif $huntpro_bounty_skin_name == "wight mane"
					$huntpro_my_area = "tibaesrukha"
				elsif $huntpro_bounty_skin_name == "ursian tusk"
					$huntpro_my_area = "tibendith"	
				elsif $huntpro_bounty_skin_name == "rattlesnake rattle"
					$huntpro_my_area = "tiweasel"	
				elsif $huntpro_bounty_skin_name == "warthog snout"
					$huntpro_my_area = "tiweasel"	
				elsif $huntpro_bounty_skin_name == "pair of forked antlers"
					$huntpro_my_area = "tistag"
				elsif $huntpro_bounty_skin_name == "tawny brindlecat hide"
					$huntpro_my_area = "tistag"
				elsif $huntpro_bounty_skin_name == "yellowed canine"
					$huntpro_my_area = "tiwolfhound"
				elsif $huntpro_bounty_skin_name == "scraggly orc scalp"
					$huntpro_my_area = "tiorcscout"
				elsif $huntpro_bounty_skin_name == "yellowed boar tusk"
					$huntpro_my_area = "tibasilisk"
				elsif $huntpro_bounty_skin_name == "basilisk crest"
					$huntpro_my_area = "tibasilisk"
				elsif $huntpro_bounty_skin_name == "weasel pelt"
					$huntpro_my_area = "tibasilisk"
				elsif $huntpro_bounty_skin_name == "war griffin talon"
					$huntpro_my_area = "tiotfnorth"
				elsif $huntpro_bounty_skin_name == "mottled faeroth crest"
					$huntpro_my_area = "tifaeroth"
				elsif $huntpro_bounty_skin_name == "faeroth fang"
					$huntpro_my_area = "tifaeroth"
				
				else
					Huntpro_toolkit.top_menu
					respond "Illistim - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "Zul Logoth"
				if $huntpro_bounty_skin_name == ""
					$huntpro_my_area = ""
				else
					Huntpro_toolkit.top_menu
					respond "Zul Logoth - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			elsif $huntpro_bounty_town == "Kraken's Fall"
				if $huntpro_bounty_skin_name == "thick triton spine"
					$huntpro_my_area = "kfatemple"
				elsif $huntpro_bounty_skin_name == "curved black claw"
					$huntpro_my_area = "kfatoll"
				elsif $huntpro_bounty_skin_name == "darkened triton hide"
					$huntpro_my_area = "kfatoll"
				else
					Huntpro_toolkit.top_menu
					respond "Kraken's Fall - You're either in the wrong town or Skin Unknown, please leave feedback on Discord if possible. Thanks!"
					Huntpro_toolkit.bottom_menu
					Huntpro_toolkit.oop_script_kill
					exit
				end
			end
		end
	end
	
	
	
	def bounty_town_flash
		#respond "I'm in town flash"
		Huntpro_toolkit.bounty_debug
	
		if Room.current.id == 3785 || Room.current.id == 420 || Room.current.id == 405 || Room.current.id == 3824 || Room.current.id == 228
			$huntpro_bounty_town = "Landing"
		elsif Room.current.id == 3778 || Room.current.id == 3424 || Room.current.id == 2466 || Room.current.id == 2406 || Room.current.id == 22300
			$huntpro_bounty_town = "Icemule" 			
		elsif Room.current.id == 12805 || Room.current.id == 1507 || Room.current.id == 13054 || Room.current.id == 5723 || Room.current.id == 5576 || Room.current.id == 1438
			$huntpro_bounty_town = "Solhaven"
		elsif Room.current.id == 10992 || Room.current.id == 10915 || Room.current.id == 10934 || Room.current.id == 10861
			$huntpro_bounty_town = "River's Rest"
		elsif Room.current.id == 12511 || Room.current.id == 1957 || Room.current.id == 1886 || Room.current.id == 1851 || Room.current.id == 1932
			$huntpro_bounty_town = "Teras"
		elsif Room.current.id == 10332 || Room.current.id == 5907 || Room.current.id == 10329 || Room.current.id == 10397 || Room.current.id == 3519
			$huntpro_bounty_town = "Vaalor"
		elsif Room.current.id == 13048 || Room.current.id == 37 || Room.current.id == 4019 || Room.current.id == 13241 || Room.current.id == 188
			$huntpro_bounty_town = "Illistim"
		elsif Room.current.id == 9445 || Room.current.id == 9411 || Room.current.id == 9471 || Room.current.id == 9506 || Room.current.id == 1005
				$huntpro_bounty_town = "Zul Logoth"
		elsif Room.current.id == 28927 || Room.current.id == 28978 || Room.current.id == 28942 || Room.current.id == 28813
			$huntpro_bounty_town = "Kraken's Fall"
		end
		
	end
	
	def bounty_town_detection
		#respond "I'm in town detection"
		Huntpro_toolkit.bounty_debug
		Huntpro_toolkit.bounty_town_flash
		$huntpro_bounty_stage = "2"
		
		Huntpro_toolkit.bounty_control
	end
	
	def bounty_remove
	
		#respond "I'm in bounty remove"
		
		Huntpro_toolkit.bounty_debug
		
		if	$huntpro_bounty_town == "Landing"
			fput "ask Rheteger for remove"
			fput "ask Rheteger for remove"
			$huntpro_bounty_stage = "2"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Icemule"
			fput "ask Halline for remove"
			fput "ask Halline for remove"
			$huntpro_bounty_stage = "2"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Solhaven"
			fput "ask Malcrith for remove"
			fput "ask Malcrith for remove"
			$huntpro_bounty_stage = "2" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "River's Rest"
			fput "ask Alanna for remove"
			fput "ask Alanna for remove"
			$huntpro_bounty_stage = "2" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Teras"
			fput "ask Dayle for remove"
			fput "ask Dayle for remove"
			$huntpro_bounty_stage = "2" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Vaalor"
			fput "ask Torasidr for remove"
			fput "ask Torasidr for remove"
			$huntpro_bounty_stage = "2" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Illistim"
			fput "ask Jarivyth for remove"
			fput "ask Jarivyth for remove"
			$huntpro_bounty_stage = "2" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Zul Logoth"
			fput "ask Signe for remove"
			fput "ask Signe for remove"
			$huntpro_bounty_stage = "2"
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Kraken's Fall"
			fput "ask Lucrecious for remove"
			fput "ask Lucrecious for remove"
			$huntpro_bounty_stage = "2" 
			Huntpro_toolkit.bounty_control
		end
		
	end
	
	def bounty_taskmaster_talk
		
		#respond "I'm in taskmaster talk"
		
		Huntpro_toolkit.bounty_debug
		
		if	$huntpro_bounty_town == "Landing"
			fput "ask Rheteger for bounty"
			fput "ask Rheteger for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Icemule"
			fput "ask Halline for bounty"
			fput "ask Halline for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Solhaven"
			fput "ask Malcrith for bounty"
			fput "ask Malcrith for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "River's Rest"
			fput "ask Alanna for bounty"
			fput "ask Alanna for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Teras"
			fput "ask Dayle for bounty"
			fput "ask Dayle for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Vaalor"
			fput "ask Torasidr for bounty"
			fput "ask Torasidr for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Illistim"
			fput "ask Jarivyth for bounty"
			fput "ask Jarivyth for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Zul Logoth"
			fput "ask Signe for bounty"
			fput "ask Signe for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control 
		elsif $huntpro_bounty_town == "Kraken's Fall"
			fput "ask Lucrecious for bounty"
			fput "ask Lucrecious for expedite" if $huntpro_bounty_fast == "1"
			$huntpro_my_area = "bounty"
			$huntpro_bounty_stage = "3" 
			Huntpro_toolkit.bounty_control
		end
			
	end
	
	def bounty_guard_talk
	
		#respond "I'm in bounty guard talk"
		Huntpro_toolkit.bounty_debug
		#respond "before town flash"
		Huntpro_toolkit.bounty_town_flash
		#respond "after town flash"
		Huntpro_toolkit.bounty_debug
		
		Huntpro_toolkit.bounty_heirloom_flash if $huntpro_bounty_type == "Heirloom"
	
		if	$huntpro_bounty_town == "Landing"
		
			result = dothistimeout "ask guard for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Icemule"
			result = dothistimeout "ask guard for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Solhaven"
			result = dothistimeout "ask guard for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "River's Rest"
			result = dothistimeout "ask purser for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Teras"
			result = dothistimeout "ask sergeant for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
			
		elsif $huntpro_bounty_town == "Vaalor"
		
			Huntpro_toolkit.bounty_guard_flash
				
			result = dothistimeout "ask #{$huntpro_bounty_guard} for bounty", 2, /Who are you trying to ask|here to guard the city/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /here to guard the city/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Illistim"
			result = dothistimeout "ask guard for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Zul Logoth"
			result = dothistimeout "ask guard for bounty", 2, /Who are you trying to ask|That is classified/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /That is classified/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Kraken's Fall"
			result = dothistimeout "ask Luthrek for bounty", 2, /Who are you trying to ask|don't have any tasks for you/
			if result =~ /Who are you trying to ask/
				do_client ";go2 advguard2"
				wait_while {running? "go2"}
				fput "ask guard for bounty"		
			elsif result =~ /don't have any tasks for you/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		end
		
		
		
		
		
	
	end
	
	def bounty_furrier_talk
	
		#respond "I'm in bounty furrier talk"
		Huntpro_toolkit.bounty_debug
		
		Huntpro_toolkit.bounty_town_flash
		
		
		if	$huntpro_bounty_town == "Landing"
		
			result = dothistimeout "ask dak for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Icemule"
			result = dothistimeout "ask furryback for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Solhaven"
			result = dothistimeout "ask Ragnoz for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "River's Rest"
			result = dothistimeout "ask felinium for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Teras"
			result = dothistimeout "ask clerk for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
			
		elsif $huntpro_bounty_town == "Vaalor"
		
			result = dothistimeout "ask Ghaerdish for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Illistim"
			result = dothistimeout "ask Gaedrein for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Zul Logoth"
			result = dothistimeout "ask furrier for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Kraken's Fall"
			result = dothistimeout "ask Delosa for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "5"
			Huntpro_toolkit.bounty_control
		end
		
		
		
	end
	
	def bounty_herbalist_talk
	
		#respond "I'm in bounty herbalist talk"
		Huntpro_toolkit.bounty_debug
		
		Huntpro_toolkit.bounty_town_flash
		
		
		if	$huntpro_bounty_town == "Landing"
		
			result = dothistimeout "ask akrash for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Icemule"
			result = dothistimeout "ask mirtag for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Solhaven"
			do_client ";go2 5722"
			wait_while {running? "go2"}
		
			result = dothistimeout "ask Kelph for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "River's Rest"
			result = dothistimeout "ask lomara for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Teras"
			result = dothistimeout "ask kris for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
			
		elsif $huntpro_bounty_town == "Vaalor"
			
			do_client ";go2 10396"
			wait_while {running? "go2"}
		
		
			result = dothistimeout "ask Maraene for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Illistim"
			result = dothistimeout "ask Valina for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Zul Logoth"
			result = dothistimeout "ask Cocytel for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		elsif $huntpro_bounty_town == "Kraken's Fall"
			respond "You should not see this message - Kraken's Fall."
			exit
			result = dothistimeout "ask Delosa for bounty", 2, /gives you a strange/
			if result =~ /gives you a strange/
				respond
				respond "#{Char.name}, I'm sorry, you're in the wrong town for this bounty."
				respond
				exit
			end
			$huntpro_bounty_stage = "4.99"
			Huntpro_toolkit.bounty_control
		end
		
		
	end
	def bounty_guard_flash
	
		#respond "I'm in bounty guard flash"
		Huntpro_toolkit.bounty_debug
		
		if checknpcs "Vontrilaias"
			$huntpro_bounty_guard = "Vontrilaias"
		elsif checknpcs "Syllardeth"
			$huntpro_bounty_guard = "Syllardeth"
		elsif checknpcs "Rethustril"
			$huntpro_bounty_guard = "Rethustril"
		elsif checknpcs "Raertria"
			$huntpro_bounty_guard = "Raertria"
		end
		
	end
	
	def bounty_heirloom_flash
	
		result = dothistimeout "bounty", 2, /earring|pin|brooch|necklace|circlet|ring|bracer|bracelet/
		if result =~ /earring/
			$huntpro_bounty_heirloom_name = "earring"
			fput "get earring from my #{Vars.lootsack}"
		elsif result =~ /ring/
			$huntpro_bounty_heirloom_name = "ring"
			fput "get ring from my #{Vars.lootsack}"	
		elsif result =~ /pin/
			$huntpro_bounty_heirloom_name = "pin"
			fput "get pin from my #{Vars.lootsack}"
		elsif result =~ /brooch/
			$huntpro_bounty_heirloom_name = "brooch"
			fput "get brooch from my #{Vars.lootsack}"
		elsif result =~ /necklace/
			$huntpro_bounty_heirloom_name = "necklace"
			fput "get necklace from my #{Vars.lootsack}"
		elsif result =~ /circlet/
			$huntpro_bounty_heirloom_name = "circlet"
			fput "get circlet from my #{Vars.lootsack}"	
		elsif result =~ /bracer/
			$huntpro_bounty_heirloom_name = "bracer"
			fput "get bracer from my #{Vars.lootsack}"				
		elsif result =~ /bracelet/
			$huntpro_bounty_heirloom_name = "bracelet"
			fput "get bracelet from my #{Vars.lootsack}"				
		end
		
	end

	def oop_script_kill
	
	Script.kill "#{$huntpro_script_one}" if Script.running? "#{$huntpro_script_one}"
	Script.kill "#{$huntpro_script_two}" if Script.running? "#{$huntpro_script_two}"
	Script.kill "#{$huntpro_script_three}" if Script.running? "#{$huntpro_script_three}"

	Script.kill "child2" if Script.running? "child2"
	Script.kill "betazzherb" if Script.running? "betazzherb"
	Script.kill "song-manager" if Script.running? "song-manager"
	Script.kill "symbolz" if Script.running? "symbolz"
	Script.kill "isigns" if Script.running? "isigns"
	Script.kill "isigils" if Script.running? "isigils"
	Script.kill "reactive" if Script.running? "reactive"
	
	end

	def wrack_checker
		if $huntpro_wrack == "0"
			#respond "Wrack Setting is Turned off."
			nil
		else
			#respond "Debug Output - $huntpro_wrack_spirit_cooldown is #{$huntpro_wrack_spirit_cooldown}" 
			if $huntpro_wrack_spirit_cooldown == 0
				$huntpro_wrack_spirit_placeholder = 6
						
				if Spell.active? "9912"
					$huntpro_wrack_spirit_placeholder = $huntpro_wrack_spirit_placeholder + 1
				end

				if Spell.active? "9913"
					$huntpro_wrack_spirit_placeholder = $huntpro_wrack_spirit_placeholder + 1
				end

				if Spell.active? "9914"
					$huntpro_wrack_spirit_placeholder = $huntpro_wrack_spirit_placeholder + 1
				end

				if Spell.active? "9916"
					$huntpro_wrack_spirit_placeholder = $huntpro_wrack_spirit_placeholder + 3
				end

				#respond "Debug Output - My huntpro wrack spirit placeholder is #{$huntpro_wrack_spirit_placeholder}."

				if $huntpro_wrack_spirit_placeholder <= checkspirit
					respond
					respond "#{Char.name} I will try to wrack for you."
					respond
					waitrt?
					waitcastrt?
					sleep 0.10
					do_client ";wrack"
					wait_while {running? "wrack"}
					sleep 0.10
					$huntpro_wrack_spirit_cooldown = 50
					
				else
					respond
					respond "#{Char.name} with your current active signs and spirit, wracking would kill you."
					respond
					$huntpro_wrack_spirit_cooldown = 50
				end
			end
			$huntpro_wrack_spirit_cooldown = $huntpro_wrack_spirit_cooldown - 1 unless $huntpro_wrack_spirit_cooldown == 0
		end
			
		
	
	end
	
	def moon_error
	
			Huntpro_toolkit.top_menu
			respond "#{Char.name}, something bad happened, I couldn't get you to your destination."
			respond
			respond "The easiest way to fix this is to head to room 6505 - Misty Chamber - manually and try this zone again."
			respond
			respond "I recommend having a Voln Master fog you there and then set a ring for future visits."
			respond
			respond "You will need Arcane Symbols ranks usually 15-20 ish to hunt in the Broken Lands."
			respond
			respond "If you feel this message is an error, please provide details on Huntpro Discord Community.  https://discord.gg/NEX6B5DFCX "
			Huntpro_toolkit.bottom_menu
			Huntpro_toolkit.oop_script_kill
			exit			
	end
	
	def misty_check
			Script.run('go2', '6505')
			pause 1
			if Room.current.id == 6505
				nil
			else
				Huntpro_toolkit.moon_error
			end
	end

	def misty_logic
		
		if Spell[9826].known?
			#You have sym seeking so just go directly to your room.
		end
		
		if checkarea == "The Broken Lands"
			#You're already on the moon."
		end
		
		if $huntpro_my_area =~ /misty/
			Huntpro_toolkit.misty_check
		end
		
		if $huntpro_my_area =~ /moonfigure/
			if Spell[9826].known?
				Script.run('go2', '6626')
				pause 1
				if Room.current.id == 6626
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '6626')
				pause 1
				if Room.current.id == 6626
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '6626')
				pause 1
				if Room.current.id == 6626
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '6626')
				pause 1
				if Room.current.id == 6626
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
		end
		
		
		if $huntpro_my_area =~ /moonbeetle/
			if Spell[9826].known?
				Script.run('go2', '7450')
				pause 1
				if Room.current.id == 7450
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '7450')
				pause 1
				if Room.current.id == 7450
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '7450')
				pause 1
				if Room.current.id == 7450
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '7450')
				pause 1
				if Room.current.id == 7450
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
		end
		
		
		if $huntpro_my_area =~ /moonmonastery/
			if Spell[9826].known?
				Script.run('go2', '6686')
				pause 1
				if Room.current.id == 6686
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '6686')
				pause 1
				if Room.current.id == 6686
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '6686')
				pause 1
				if Room.current.id == 6686
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '6686')
				pause 1
				if Room.current.id == 6686
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
		end
		
		
		if $huntpro_my_area =~ /moonmagru/
		
			if Spell[9826].known?
				Script.run('go2', '7459')
				pause 1
				if Room.current.id == 7459
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '7459')
				pause 1
				if Room.current.id == 7459
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '7459')
				pause 1
				if Room.current.id == 7459
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '7459')
				pause 1
				if Room.current.id == 7459
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
			
			Huntpro_toolkit.top_menu
			respond "#{Char.name}, you will have to crawl around to hunt in this zone."
			respond
			respond "I'm setting your movement default to crawl.  You can clear this by typing MOVE CLEAR when done hunting."
			respond 
			respond "Huntpro will clear this setting when returning to your safe room on a normal hunt in this zone."
			respond
			respond "I will ignore standing and attempt to kneel only in this zone."
			respond
			respond "IMPORTANT: Turn off skinning in loot script.   ;sloot setup > Skin tab > uncheck Enable skinning."
			respond "Sloot will endlessly try to stand up after it determines it can't skin the creature, resulting in getting stuck."
			respond "Turning off skinning in your loot script is the fastest fix."
			Huntpro_toolkit.bottom_menu
			sleep 3
			fput "move crawl"
			fput "kneel"
			
			
			
		end
		
		
		
		if $huntpro_my_area =~ /moonmyklian/
			if Spell[9826].known?
				Script.run('go2', '7478')
				pause 1
				if Room.current.id == 7478
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '7478')
				pause 1
				if Room.current.id == 7478
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '7478')
				pause 1
				if Room.current.id == 7478
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '7478')
				pause 1
				if Room.current.id == 7478
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
		end
		
		
		
		if $huntpro_my_area =~ /moonvortece/
			if Spell[9826].known?
				Script.run('go2', '7486')
				pause 1
				if Room.current.id == 7486
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '7486')
				pause 1
				if Room.current.id == 7486
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '7486')
				pause 1
				if Room.current.id == 7486
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '7486')
				pause 1
				if Room.current.id == 7486
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
		end
		
		
		if $huntpro_my_area =~ /moonvruul/
			if Spell[9826].known?
				Script.run('go2', '19261')
				pause 1
				if Room.current.id == 19261
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif checkarea =~ /The Broken Lands|Monastery|Dark Grotto|Dark Shrine/
				Script.run('go2', '19261')
				pause 1
				if Room.current.id == 19261
					nil
				else
					Huntpro_toolkit.moon_error
				end
			elsif Room.current.id == 6505
				Script.run('go2', '19261')
				pause 1
				if Room.current.id == 19261
					nil
				else
					Huntpro_toolkit.moon_error
				end
			else 
				Huntpro_toolkit.misty_check
				Script.run('go2', '19261')
				pause 1
				if Room.current.id == 19261
					nil
				else
					Huntpro_toolkit.moon_error
				end
			end
			
		end
		
		
		
		

	end

end

include Huntpro_toolkit

#How to access toolkit data + pass data.
	#Huntpro_toolkit.sayhi("Jara")
#How to access toolkit data.
	#Huntpro_toolkit.saybye



	
	

#Declare Variables

huntpro_my_style = nil
huntpro_my_area = nil
$huntpro_my_style = nil
$huntpro_my_area = nil
$huntpro_my_area_level = 0
$huntpro_my_area_type = "0"
$huntpro_my_society = "None"
$huntpro_return_why = nil
$huntpro_action = 0
$huntpro_loot_script = "sloot"
$huntpro_own_this_room = 0
$huntpro_style_9_primary_spell_override = "1700"
$huntpro_uac_current_attack = 0
$huntpro_my_mstrike_open = 0
$huntpro_my_mstrike_focus = 0
$huntpro_spell_default = "0"
$huntpro_evoke_default = "0"
$huntpro_empath_primary_spell = "1700"
$huntpro_cleric_primary_spell = "1700"
$huntpro_cleric_toggle = 0
$huntpro_309_toggle = 0
$huntpro_wizard_primary_spell = "1700"
$huntpro_sorcerer_primary_spell = "1700"
$huntpro_sorcerer_toggle = 0
$huntpro_ranger_primary_spell = "1700"
$huntpro_bard_primary_spell = "1700"
$huntpro_paladin_primary_spell = "1700"
$huntpro_stay_offensive = nil
$huntpro_rest_room = "0"
$huntpro_group_ai = "0"
$huntpro_group_counter = 0
$huntpro_captain = "0"
$huntpro_combat_cleanup = "0"
$huntpro_active_cleanup = "0"
$huntpro_rift_return = "0"
$huntpro_script_one = "0"
$huntpro_script_two = "0"
$huntpro_script_three = "0"
$huntpro_extra_fried = 0
$huntpro_lost_item = "0"
$huntpro_group_quiet = "0"
$huntpro_group_peace = "0"
$huntpro_group_support = "1"
$huntpro_group_empath = "0"
$huntpro_group_upkeep211 = "0"
$huntpro_group_upkeep215 = "0"
$huntpro_group_disease = "0"
$huntpro_group_poison = "0"
$huntpro_empath_self_heal = "0"
$huntpro_recent_escape = "0"
$huntpro_consider_setup = "0"
$huntpro_group_mana_target = "0"
$huntpro_mana_cooldown = 0
$huntpro_heal_cooldown = 0
$huntpro_group_member1 = "0"
$huntpro_group_member2 = "0"
$huntpro_group_member3 = "0"
$huntpro_group_member4 = "0"
$huntpro_group_member5 = "0"
$huntpro_group_member6 = "0"
$huntpro_group_member7 = "0"
$huntpro_group_member8 = "0"
$huntpro_group_member9 = "0"
$huntpro_group_shareinfo = "0"
$huntpro_group_sharemana = "0"
$huntpro_recent_death = "0"

$huntpro_buff_padding = 0
$huntpro_current_aim = "0"
$huntpro_aim_fail = 0
$huntpro_crowd_control = "0"
$huntpro_no_crowd_control = "0"
$huntpro_cman_control = "0"
$huntpro_no_cman_control = "0"
$huntpro_cman_watch = "0"
$huntpro_cman_cooldown = 0

#Cman Variables
$huntpro_cman_tackle = "0"
$huntpro_cman_sweep = "0"
$huntpro_cman_bearhug = "0"
$huntpro_cman_disarm = "0"

$huntpro_cman_bearhug_cooldown = 0
$huntpro_no_society = "0"
$huntpro_no_stun = "0"
$huntpro_cc_cooldown = 0
$huntpro_crowd_society_cooldown = 0
$huntpro_bounty_intel_watch = "0"
$huntpro_bounty_creature_match = "0"
$huntpro_bounty_stage = "0"
$huntpro_bounty_type = "0"
$huntpro_bounty_heirloom_type = "0"
$huntpro_bounty_heirloom_name = "0"
$huntpro_bounty_town = "0"
$huntpro_bounty_guard = "0"
$huntpro_bounty_creature_name = "0"
$huntpro_bounty_ready_to_launch = "0"
$huntpro_bounty_fast = "0"
$huntpro_bounty_noherb = "0"
$huntpro_bounty_noskin = "0"
$huntpro_bounty_skin_name = "0"
$huntpro_bounty_debug_cooldown = 0
$huntpro_bounty_lite = "0"
$huntpro_recent_eviction = "0"
$huntpro_room_placeholder = 0
$huntpro_wrack = "0"
$huntpro_wrack_spirit_placeholder = 0
$huntpro_wrack_spirit_cooldown = 0
$huntpro_divergence = "0"
$huntpro_240_divergence = "0"
$huntpro_140_divergence = "0"
$huntpro_lich_support = "0"
$huntpro_force_target = "0"
$huntpro_my_vine = "0"
$huntpro_spawn_delay = 0
$huntpro_no_cock = "0"
$huntpro_use_cock = "0"
$huntpro_cock_block = "0"

$huntpro_use_herbs = "0"
$huntpro_no_herbs = "0"
#$huntpro_herb_cooldown = 0
$huntpro_heal_toggle = 0


$huntpro_compound_ignore = "0"
$huntpro_no_waggle = "0"


$huntpro_value_encumbrance = "#{huntpro_setting_value_encumbrance.to_i}"

if huntpro_setting_right_hand_detect == "0"
	$huntpro_right_hand_detect = "0"
else
	$huntpro_right_hand_detect = "#{huntpro_setting_right_hand_detect}"
end

if huntpro_setting_left_hand_detect == "0"
	$huntpro_left_hand_detect = "0"
else
	$huntpro_left_hand_detect = "#{huntpro_setting_left_hand_detect}"
end




#Define Arrays

$huntpro_compound_ignore_array = Array.new
$huntpro_compound_ignore_array = []


$huntpro_style_9_creature_override_array = Array.new

$huntpro_style_9_creature_override_array = [

#Landing

"treekin druid", "ancient treekin druid", "grizzled treekin druid",
"treekin sapling", "ancient treekin sapling", "grizzled treekin sapling",
"treekin warrior", "ancient treekin warrior", "grizzled treekin warrior",
"stone sentinel", "ancient stone sentinel", "grizzled stone sentinel",

"wraith", "ancient wraith", "grizzled wraith", 
"reiver", "ancient reiver", "grizzled reiver",
"nightmare steed", "ancient nightmare steed", "grizzled nightmare steed",
"shadow steed", "ancient shadow steed", "grizzled shadow steed",
"shadow mare", "ancient shadow mare", "grizzled shadow mare",
"pale crab", "ancient pale crab", "grizzled pale crab",
"krolvin warfarer", "ancient krolvin warfarer", "grizzled krolvin warfarer",
"fire guardian", "ancient fire guardian", "grizzled fire guardian",
"greater earth elemental", "ancient earth elemental", "grizzled earth elemental",
"earth elemental", "ancient earth elemental", "grizzled earth elemental",
"roa\'ter", "ancient roa\'ter", "grizzled roa\'ter",
"albino tomb spider", "ancient tomb spider", "grizzled tomb spider",
"greater spider", "ancient greater spider", "grizzled greater spider",
"giant albino tomb spider", "ancient tomb spider", "grizzled tomb spider",
"major spider", "ancient major spider", "grizzled major spider",
"mammoth arachnid", "ancient mammoth arachnid", "grizzled mammoth arachnid",
"giant ant", "ancient giant ant", "grizzled giant ant",
"soldier ant", "ancient soldier ant", "grizzled soldier ant",
"spectral fisherman", "ancient spectral fisherman", "grizzled spectral fisherman",
"phantom", "ancient phantom", "grizzled phantom",

"tree spirit", "ancient tree spirit", "grizzled tree spirit",
"carrion worm", "ancient carrion worm", "grizzled carrion worm",
"darkwoode", "ancient darkwoode", "grizzled darkwoode",
"ghostly warrior", "ancient ghostly warrior", "grizzled ghostly warrior",
"stone giant", "ancient stone giant", "grizzled stone giant",
"stone mastiff", "ancient stone mastiff", "grizzled stone mastiff",
"ghostly pooka", "ancient ghostly pooka", "grizzled ghostly pooka",
"lesser shade", "ancient lesser shade", "grizzled lesser shade",

"spectral miner", "ancient spectral miner", "grizzled spectral miner", 

"stone gargoyle", "ancient stone gargoyle", "grizzled stone gargoyle", 

"lesser stone gargoyle", "ancient stone gargoyle", "grizzled stone gargoyle", 


"huge mein golem", "ancient mein golem", "grizzled mein golem", 

"magru", "ancient magru", "grizzled magru",




#Boss Trap Spell Array

"giant fog beetle", "ancient fog beetle", "grizzled fog beetle",

"adroit fog beetle", "afflicted fog beetle", "apt fog beetle",
"barbed fog beetle", "belligerent fog beetle", "blurry fog beetle",
"canny fog beetle", "combative fog beetle", "dazzling fog beetle",
"deft fog beetle", "diseased fog beetle", "drab fog beetle",
"dreary fog beetle", "ethereal fog beetle", "flashy fog beetle",
"flexile fog beetle", "flickering fog beetle", "flinty fog beetle",
"frenzied fog beetle", "ghastly fog beetle", "ghostly fog beetle",
"gleaming fog beetle", "glittering fog beetle", "glorious fog beetle",
"glowing fog beetle", "grotesque fog beetle", "hardy fog beetle",
"illustrious fog beetle", "indistinct fog beetle", "keen fog beetle",
"lanky fog beetle", "luminous fog beetle", "lustrous fog beetle",
"muculent fog beetle", "nebulous fog beetle", "oozing fog beetle",
"pestilent fog beetle", "radiant fog beetle", "raging fog beetle",
"ready fog beetle", "resolute fog beetle", "robust fog beetle",
"rune-covered fog beetle", "shadowy fog beetle", "shielded fog beetle",
"shifting fog beetle", "shimmering fog beetle", "shining fog beetle",
"sickly fog beetle", "sinuous fog beetle", "slimy fog beetle",
"sparkling fog beetle", "spindly fog beetle", "spiny fog beetle",
"stalwart fog beetle", "steadfast fog beetle", "stout fog beetle",
"tattooed fog beetle", "tenebrous fog beetle", "tough fog beetle",
"twinkling fog beetle", "unflinching fog beetle", "unyielding fog beetle",
"wavering fog beetle", "wispy fog beetle",




#Solhaven
"phantasma", "ancient phantasma", "grizzled phantasma",
"spectre", "ancient spectre", "grizzled spectre",
"cave troll", "ancient cave troll", "grizzled cave troll",
"eidolon", "ancient eidolon", "grizzled eidolon",

#Icemule


"spectral woodsman", "ancient spectral woodsman", "grizzled spectral woodsman",
"lesser frost shade", "ancient frost shade", "grizzled frost shade",
"crystal crab", "ancient crystal crab", "grizzled crystal crab",
"cold guardian", "ancient cold guardian", "grizzled cold guardian",
"frost giant", "ancient frost giant", "grizzled frost giant",
"dark apparition", "ancient dark apparition", "grizzled dark apparition",
"luminescent arachnid", "ancient luminescent arachnid", "grizzled luminescent arachnid",
"greater ice spider", "ancient ice spider", "grizzled ice spider",
"shriveled icy creeper", "ancient icy creeper", "grizzled icy creeper",
"dark frosty plant", "ancient frosty plant", "grizzled frosty plant",
"large thorned shrub", "ancient thorned shrub", "grizzled thorned shrub",
"blackened decaying tumbleweed", "ancient decaying tumbleweed", "grizzled decaying tumbleweed",
"writhing frost\-glazed vine", "ancient frost\-glazed vine", "grizzled frost\-glazed vine",
"writhing icy bush", "ancient icy bush", "grizzled icy bush",

"elder tree spirit", "ancient tree spirit", "grizzled tree spirit",


#Boss Trap Spell Array
"skeletal ice troll", "ancient ice troll", "grizzled ice troll",
"ice troll", "ancient ice troll", "grizzled ice troll",

"adroit ice troll", "afflicted ice troll", "apt ice troll",
"barbed ice troll", "belligerent ice troll", "blurry ice troll",
"canny ice troll", "combative ice troll", "dazzling ice troll",
"deft ice troll", "diseased ice troll", "drab ice troll",
"dreary ice troll", "ethereal ice troll", "flashy ice troll",
"flexile ice troll", "flickering ice troll", "flinty ice troll",
"frenzied ice troll", "ghastly ice troll", "ghostly ice troll",
"gleaming ice troll", "glittering ice troll", "glorious ice troll",
"glowing ice troll", "grotesque ice troll", "hardy ice troll",
"illustrious ice troll", "indistinct ice troll", "keen ice troll",
"lanky ice troll", "luminous ice troll", "lustrous ice troll",
"muculent ice troll", "nebulous ice troll", "oozing ice troll",
"pestilent ice troll", "radiant ice troll", "raging ice troll",
"ready ice troll", "resolute ice troll", "robust ice troll",
"rune-covered ice troll", "shadowy ice troll", "shielded ice troll",
"shifting ice troll", "shimmering ice troll", "shining ice troll",
"sickly ice troll", "sinuous ice troll", "slimy ice troll",
"sparkling ice troll", "spindly ice troll", "spiny ice troll",
"stalwart ice troll", "steadfast ice troll", "stout ice troll",
"tattooed ice troll", "tenebrous ice troll", "tough ice troll",
"twinkling ice troll", "unflinching ice troll", "unyielding ice troll",
"wavering ice troll", "wispy ice troll",





#Pinefar

"minor glacei", "ancient minor glacei", "grizzled minor glacei",
"major glacei", "ancient major glacei", "grizzled major glacei",
"ice wraith", "ancient ice wraith", "grizzled ice wraith",


#Hinterwilds
"behemothic gorefrost golem", "ancient gorefrost golem", "grizzled gorefrost golem",

#River's Rest

"gaunt spectral servant", "ancient spectral servant", "grizzled spectral servant",
"water wyrd", "ancient water wyrd", "grizzled water wyrd",
"phantasmal bestial swordsman", "ancient bestial swordsman", "grizzled bestial swordsman",
"ethereal mage apprentice", "ancient mage apprentice", "grizzled mage apprentice",
"bog wraith", "ancient bog wraith", "grizzled bog wraith",


#Teras Isle
"wind wraith", "ancient wind wraith", "grizzled wind wraith",
"skayl", "ancient skayl", "grizzled skayl",
"massive pyrothag", "ancient massive pyrothag", "grizzled massive pyrothag",
"fire mage", "ancient fire mage", "grizzled fire mage",
"fire giant", "ancient fire giant", "grizzled fire giant",
"lava troll", "ancient lava troll", "grizzled lava troll",
"ash hag", "ancient ash hag", "grizzled ash hag",
"banshee", "ancient banshee", "grizzled banshee",
"kiramon worker", "ancient kiramon worker", "grizzled kiramon worker",
"kiramon defender", "ancient kiramon defender", "grizzled kiramon defender",
"cinder wasp", "ancient cinder wasp", "grizzled cinder wasp",
"ethereal triton sentry", "ancient triton sentry", "grizzled triton sentry",
"spectral triton defender", "ancient triton defender", "grizzled triton defender",
"water elemental", "ancient water elemental", "grizzled water elemental",
"greater water elemental", "ancient water elemental", "grizzled water elemental",

#Ta'Illistim

"ghostly mara", "ancient ghostly mara", "grizzled ghostly mara",
"spectral lord", "ancient spectral lord", "grizzled spectral lord",
"barghest", "ancient barghest", "grizzled barghest",
"spectral black warhorse", "ancient black warhorse", "grizzled black warhorse",


#Boss Trap Spell Array
"greater construct",
"adroit greater construct", "afflicted greater construct", "apt greater construct",
"barbed greater construct", "belligerent greater construct", "blurry greater construct",
"canny greater construct", "combative greater construct", "dazzling greater construct",
"deft greater construct", "diseased greater construct", "drab greater construct",
"dreary greater construct", "ethereal greater construct", "flashy greater construct",
"flexile greater construct", "flickering greater construct", "flinty greater construct",
"frenzied greater construct", "ghastly greater construct", "ghostly greater construct",
"gleaming greater construct", "glittering greater construct", "glorious greater construct",
"glowing greater construct", "grotesque greater construct", "hardy greater construct",
"illustrious greater construct", "indistinct greater construct", "keen greater construct",
"lanky greater construct", "luminous greater construct", "lustrous greater construct",
"muculent greater construct", "nebulous greater construct", "oozing greater construct",
"pestilent greater construct", "radiant greater construct", "raging greater construct",
"ready greater construct", "resolute greater construct", "robust greater construct",
"rune-covered greater construct", "shadowy greater construct", "shielded greater construct",
"shifting greater construct", "shimmering greater construct", "shining greater construct",
"sickly greater construct", "sinuous greater construct", "slimy greater construct",
"sparkling greater construct", "spindly greater construct", "spiny greater construct",
"stalwart greater construct", "steadfast greater construct", "stout greater construct",
"tattooed greater construct", "tenebrous greater construct", "tough greater construct",
"twinkling greater construct", "unflinching greater construct", "unyielding greater construct",
"wavering greater construct", "wispy greater construct",


"maw spore", "ancient maw spore", "grizzled maw spore",
"darken", "ancient darken", "grizzled darken",

#Ta'Vaalor

"fire ant", "ancient fire ant", "grizzled fire ant",
"bog spectre", "ancient bog spectre", "grizzled bog spectre",
"warrior shade", "ancient warrior shade", "grizzled warrior shade",

#Boss Trap Spell Array

"adroit warrior shade", "afflicted warrior shade", "apt warrior shade",
"barbed warrior shade", "belligerent warrior shade", "blurry warrior shade",
"canny warrior shade", "combative warrior shade", "dazzling warrior shade",
"deft warrior shade", "diseased warrior shade", "drab warrior shade",
"dreary warrior shade", "ethereal warrior shade", "flashy warrior shade",
"flexile warrior shade", "flickering warrior shade", "flinty warrior shade",
"frenzied warrior shade", "ghastly warrior shade", "ghostly warrior shade",
"gleaming warrior shade", "glittering warrior shade", "glorious warrior shade",
"glowing warrior shade", "grotesque warrior shade", "hardy warrior shade",
"illustrious warrior shade", "indistinct warrior shade", "keen warrior shade",
"lanky warrior shade", "luminous warrior shade", "lustrous warrior shade",
"muculent warrior shade", "nebulous warrior shade", "oozing warrior shade",
"pestilent warrior shade", "radiant warrior shade", "raging warrior shade",
"ready warrior shade", "resolute warrior shade", "robust warrior shade",
"rune-covered warrior shade", "shadowy warrior shade", "shielded warrior shade",
"shifting warrior shade", "shimmering warrior shade", "shining warrior shade",
"sickly warrior shade", "sinuous warrior shade", "slimy warrior shade",
"sparkling warrior shade", "spindly warrior shade", "spiny warrior shade",
"stalwart warrior shade", "steadfast warrior shade", "stout warrior shade",
"tattooed warrior shade", "tenebrous warrior shade", "tough warrior shade",
"twinkling warrior shade", "unflinching warrior shade", "unyielding warrior shade",
"wavering warrior shade", "wispy warrior shade",



#Rift Creatures

#Plane 1
"seraceris",  "ancient seraceris", "grizzled seraceris",
"naisirc", "ancient naisirc", "grizzled naisirc",
"n\'ecare", "ancient n\'ecare", "grizzled n\'ecare",

#Plane 2
"caedera", "ancient caedera", "grizzled caedera",

#Plane 4
"fallen crusader", "ancient fallen crusader", "grizzled fallen crusader",
"enormous rift crawler", "ancient rift crawler", "grizzled rift crawler",
"glistening cerebralite", "ancient glistening cerebralite", "grizzled glistening cerebralite",

#Plane 5
"vaespilon", "ancient vaespilon", "grizzled vaespilon",
"lost soul", "ancient lost soul", "grizzled lost soul",

#Scatter
"darkly inked fetish master", "ancient fetish master", "grizzled fetish master",
"soul siphon", "ancient soul siphon", "grizzled soul siphon",


#Zul Logoth

"roa\'ter wormling", "ancient roa\'ter wormling", "grizzled roa\'ter wormling",
"troll wraith", "ancient troll wraith", "grizzled troll wraith",

"giant albino scorpion", "ancient albino scorpion", "grizzled albino scorpion",

#Boss Trap Spell Array

"adroit albino scorpion", "afflicted albino scorpion", "apt albino scorpion",
"barbed albino scorpion", "belligerent albino scorpion", "blurry albino scorpion",
"canny albino scorpion", "combative albino scorpion", "dazzling albino scorpion",
"deft albino scorpion", "diseased albino scorpion", "drab albino scorpion",
"dreary albino scorpion", "ethereal albino scorpion", "flashy albino scorpion",
"flexile albino scorpion", "flickering albino scorpion", "flinty albino scorpion",
"frenzied albino scorpion", "ghastly albino scorpion", "ghostly albino scorpion",
"gleaming albino scorpion", "glittering albino scorpion", "glorious albino scorpion",
"glowing albino scorpion", "grotesque albino scorpion", "hardy albino scorpion",
"illustrious albino scorpion", "indistinct albino scorpion", "keen albino scorpion",
"lanky albino scorpion", "luminous albino scorpion", "lustrous albino scorpion",
"muculent albino scorpion", "nebulous albino scorpion", "oozing albino scorpion",
"pestilent albino scorpion", "radiant albino scorpion", "raging albino scorpion",
"ready albino scorpion", "resolute albino scorpion", "robust albino scorpion",
"rune-covered albino scorpion", "shadowy albino scorpion", "shielded albino scorpion",
"shifting albino scorpion", "shimmering albino scorpion", "shining albino scorpion",
"sickly albino scorpion", "sinuous albino scorpion", "slimy albino scorpion",
"sparkling albino scorpion", "spindly albino scorpion", "spiny albino scorpion",
"stalwart albino scorpion", "steadfast albino scorpion", "stout albino scorpion",
"tattooed albino scorpion", "tenebrous albino scorpion", "tough albino scorpion",
"twinkling albino scorpion", "unflinching albino scorpion", "unyielding albino scorpion",
"wavering albino scorpion", "wispy albino scorpion",






"giant veaba", "ancient giant veaba", "grizzled giant veaba",

#Kraken's Fall

"spectral triton protector", "ancient triton protector", "grizzled triton protector",
"ethereal triton psionicist", "ancient triton psionicist", "grizzled triton psionicist", 

#Misc

"vesperti", "ancient vesperti", "grizzled vesperti",

#Magic Boss Creature Traps

#Empaths Ethereal Traps 1115

"ethereal aivren",
"wispy aivren",
"ghostly aivren",

#Style 9 Run
"rune\-covered aivren",
"tattooed aivren",

#Style 9 Wizard Run

"sparkling aivren",
"shining aivren",

#Empaths Ethereal Traps 1115

"ethereal arachne priest",
"wispy arachne priest",
"ghostly arachne priest",

#Style 9 Run
"rune\-covered arachne priest",
"tattooed arachne priest",

#Style 9 Wizard Run

"sparkling arachne priest",
"shining arachne priest",

#Empaths Ethereal Traps 1115

"ethereal arachne priestess",
"wispy arachne priestess",
"ghostly arachne priestess",

#Style 9 Run
"rune\-covered arachne priestess",
"tattooed arachne priestess",

#Style 9 Wizard Run

"sparkling arachne priestess",
"shining arachne priestess",

#Empaths Ethereal Traps 1115

"ethereal ash hag",
"wispy ash hag",
"ghostly ash hag",

#Style 9 Run
"rune\-covered ash hag",
"tattooed ash hag",

#Style 9 Wizard Run

"sparkling ash hag",
"shining ash hag",

#Empaths Ethereal Traps 1115

"ethereal forest ogre",
"wispy forest ogre",
"ghostly forest ogre",

#Style 9 Run
"rune\-covered forest ogre",
"tattooed forest ogre",

#Style 9 Wizard Run

"sparkling forest ogre",
"shining forest ogre",

#Empaths Ethereal Traps 1115

"ethereal bog wight",
"wispy bog wight",
"ghostly bog wight",

#Style 9 Run
"rune\-covered bog wight",
"tattooed bog wight",

#Style 9 Wizard Run

"sparkling bog wight",
"shining bog wight",

#Empaths Ethereal Traps 1115

"ethereal centaur",
"wispy centaur",
"ghostly centaur",

#Style 9 Run
"rune\-covered centaur",
"tattooed centaur",

#Style 9 Wizard Run

"sparkling centaur",
"shining centaur",

#Empaths Ethereal Traps 1115

"ethereal cougar",
"wispy cougar",
"ghostly cougar",

#Style 9 Run
"rune\-covered cougar",
"tattooed cougar",

#Style 9 Wizard Run

"sparkling cougar",
"shining cougar",

#Empaths Ethereal Traps 1115

"ethereal crazed zombie",
"wispy crazed zombie",
"ghostly crazed zombie",

#Style 9 Run
"rune\-covered crazed zombie",
"tattooed crazed zombie",

#Style 9 Wizard Run

"sparkling crazed zombie",
"shining crazed zombie",

#Empaths Ethereal Traps 1115

"ethereal crested basilisk",
"wispy crested basilisk",
"ghostly crested basilisk",

#Style 9 Run
"rune\-covered crested basilisk",
"tattooed crested basilisk",

#Style 9 Wizard Run

"sparkling crested basilisk",
"shining crested basilisk",

#Empaths Ethereal Traps 1115

"ethereal dark vortece",
"wispy dark vortece",
"ghostly dark vortece",

#Style 9 Run
"rune\-covered dark vortece",
"tattooed dark vortece",

#Style 9 Wizard Run

"sparkling dark vortece",
"shining dark vortece",

#Empaths Ethereal Traps 1115

"ethereal dhu goleras",
"wispy dhu goleras",
"ghostly dhu goleras",

#Style 9 Run
"rune\-covered dhu goleras",
"tattooed dhu goleras",

#Style 9 Wizard Run

"sparkling dhu goleras",
"shining dhu goleras",

#Empaths Ethereal Traps 1115

"ethereal dobrem",
"wispy dobrem",
"ghostly dobrem",

#Style 9 Run
"rune\-covered dobrem",
"tattooed dobrem",

#Style 9 Wizard Run

"sparkling dobrem",
"shining dobrem",

#Empaths Ethereal Traps 1115

"ethereal dreadnought raptor",
"wispy dreadnought raptor",
"ghostly dreadnought raptor",

#Style 9 Run
"rune\-covered dreadnought raptor",
"tattooed dreadnought raptor",

#Style 9 Wizard Run

"sparkling dreadnought raptor",
"shining dreadnought raptor",

#Empaths Ethereal Traps 1115

"ethereal dybbuk",
"wispy dybbuk",
"ghostly dybbuk",

#Style 9 Run
"rune\-covered dybbuk",
"tattooed dybbuk",

#Style 9 Wizard Run

"sparkling dybbuk",
"shining dybbuk",

#Empaths Ethereal Traps 1115

"ethereal triton psionicist",
"wispy triton psionicist",
"ghostly triton psionicist",

#Style 9 Run
"rune\-covered triton psionicist",
"tattooed triton psionicist",

#Style 9 Wizard Run

"sparkling triton psionicist",
"shining triton psionicist",

#Empaths Ethereal Traps 1115

"ethereal fenghai",
"wispy fenghai",
"ghostly fenghai",

#Style 9 Run
"rune\-covered fenghai",
"tattooed fenghai",

#Style 9 Wizard Run

"sparkling fenghai",
"shining fenghai",

#Empaths Ethereal Traps 1115

"ethereal fire mage",
"wispy fire mage",
"ghostly fire mage",

#Style 9 Run
"rune\-covered fire mage",
"tattooed fire mage",

#Style 9 Wizard Run

"sparkling fire mage",
"shining fire mage",

#Empaths Ethereal Traps 1115

"ethereal flesh golem",
"wispy flesh golem",
"ghostly flesh golem",

#Style 9 Run
"rune\-covered flesh golem",
"tattooed flesh golem",

#Style 9 Wizard Run

"sparkling flesh golem",
"shining flesh golem",

#Empaths Ethereal Traps 1115

"ethereal trali shaman",
"wispy trali shaman",
"ghostly trali shaman",

#Style 9 Run
"rune\-covered trali shaman",
"tattooed trali shaman",

#Style 9 Wizard Run

"sparkling trali shaman",
"shining trali shaman",

#Empaths Ethereal Traps 1115

"ethereal frenzied monk",
"wispy frenzied monk",
"ghostly frenzied monk",

#Style 9 Run
"rune\-covered frenzied monk",
"tattooed frenzied monk",

#Style 9 Wizard Run

"sparkling frenzied monk",
"shining frenzied monk",

#Empaths Ethereal Traps 1115

"ethereal frozen corpse",
"wispy frozen corpse",
"ghostly frozen corpse",

#Style 9 Run
"rune\-covered frozen corpse",
"tattooed frozen corpse",

#Style 9 Wizard Run

"sparkling frozen corpse",
"shining frozen corpse",

#Empaths Ethereal Traps 1115

"ethereal ghostly pooka",
"wispy ghostly pooka",
"ghostly ghostly pooka",

#Style 9 Run
"rune\-covered ghostly pooka",
"tattooed ghostly pooka",

#Style 9 Wizard Run

"sparkling ghostly pooka",
"shining ghostly pooka",

#Empaths Ethereal Traps 1115

"ethereal albino scorpion",
"wispy albino scorpion",
"ghostly albino scorpion",

#Style 9 Run
"rune\-covered albino scorpion",
"tattooed albino scorpion",

#Style 9 Wizard Run

"sparkling albino scorpion",
"shining albino scorpion",

#Empaths Ethereal Traps 1115

"ethereal fog beetle",
"wispy fog beetle",
"ghostly fog beetle",

#Style 9 Run
"rune\-covered fog beetle",
"tattooed fog beetle",

#Style 9 Wizard Run

"sparkling fog beetle",
"shining fog beetle",

#Empaths Ethereal Traps 1115

"ethereal bog troll",
"wispy bog troll",
"ghostly bog troll",

#Style 9 Run
"rune\-covered bog troll",
"tattooed bog troll",

#Style 9 Wizard Run

"sparkling bog troll",
"shining bog troll",

#Empaths Ethereal Traps 1115

"ethereal greater faeroth",
"wispy greater faeroth",
"ghostly greater faeroth",

#Style 9 Run
"rune\-covered greater faeroth",
"tattooed greater faeroth",

#Style 9 Wizard Run

"sparkling greater faeroth",
"shining greater faeroth",

#Empaths Ethereal Traps 1115

"ethereal hisskra chieftain",
"wispy hisskra chieftain",
"ghostly hisskra chieftain",

#Style 9 Run
"rune\-covered hisskra chieftain",
"tattooed hisskra chieftain",

#Style 9 Wizard Run

"sparkling hisskra chieftain",
"shining hisskra chieftain",

#Empaths Ethereal Traps 1115

"ethereal hisskra shaman",
"wispy hisskra shaman",
"ghostly hisskra shaman",

#Style 9 Run
"rune\-covered hisskra shaman",
"tattooed hisskra shaman",

#Style 9 Wizard Run

"sparkling hisskra shaman",
"shining hisskra shaman",

#Empaths Ethereal Traps 1115

"ethereal hunch\-backed dogmatist",
"wispy hunch\-backed dogmatist",
"ghostly hunch\-backed dogmatist",

#Style 9 Run
"rune\-covered hunch\-backed dogmatist",
"tattooed hunch\-backed dogmatist",

#Style 9 Wizard Run

"sparkling hunch\-backed dogmatist",
"shining hunch\-backed dogmatist",

#Empaths Ethereal Traps 1115

"ethereal ice troll",
"wispy ice troll",
"ghostly ice troll",

#Style 9 Run
"rune\-covered ice troll",
"tattooed ice troll",

#Style 9 Wizard Run

"sparkling ice troll",
"shining ice troll",

#Empaths Ethereal Traps 1115

"ethereal illoke elder",
"wispy illoke elder",
"ghostly illoke elder",

#Style 9 Run
"rune\-covered illoke elder",
"tattooed illoke elder",

#Style 9 Wizard Run

"sparkling illoke elder",
"shining illoke elder",

#Empaths Ethereal Traps 1115

"ethereal kiramon defender",
"wispy kiramon defender",
"ghostly kiramon defender",

#Style 9 Run
"rune\-covered kiramon defender",
"tattooed kiramon defender",

#Style 9 Wizard Run

"sparkling kiramon defender",
"shining kiramon defender",

#Empaths Ethereal Traps 1115

"ethereal kiramon worker",
"wispy kiramon worker",
"ghostly kiramon worker",

#Style 9 Run
"rune\-covered kiramon worker",
"tattooed kiramon worker",

#Style 9 Wizard Run

"sparkling kiramon worker",
"shining kiramon worker",

#Empaths Ethereal Traps 1115

"ethereal krolvin corsair",
"wispy krolvin corsair",
"ghostly krolvin corsair",

#Style 9 Run
"rune\-covered krolvin corsair",
"tattooed krolvin corsair",

#Style 9 Wizard Run

"sparkling krolvin corsair",
"shining krolvin corsair",

#Empaths Ethereal Traps 1115

"ethereal krolvin warfarer",
"wispy krolvin warfarer",
"ghostly krolvin warfarer",

#Style 9 Run
"rune\-covered krolvin warfarer",
"tattooed krolvin warfarer",

#Style 9 Wizard Run

"sparkling krolvin warfarer",
"shining krolvin warfarer",

#Empaths Ethereal Traps 1115

"ethereal krolvin warrior",
"wispy krolvin warrior",
"ghostly krolvin warrior",

#Style 9 Run
"rune\-covered krolvin warrior",
"tattooed krolvin warrior",

#Style 9 Wizard Run

"sparkling krolvin warrior",
"shining krolvin warrior",

#Empaths Ethereal Traps 1115

"ethereal lava troll",
"wispy lava troll",
"ghostly lava troll",

#Style 9 Run
"rune\-covered lava troll",
"tattooed lava troll",

#Style 9 Wizard Run

"sparkling lava troll",
"shining lava troll",

#Empaths Ethereal Traps 1115

"ethereal lesser faeroth",
"wispy lesser faeroth",
"ghostly lesser faeroth",

#Style 9 Run
"rune\-covered lesser faeroth",
"tattooed lesser faeroth",

#Style 9 Wizard Run

"sparkling lesser faeroth",
"shining lesser faeroth",

#Empaths Ethereal Traps 1115

"ethereal lesser griffin",
"wispy lesser griffin",
"ghostly lesser griffin",

#Style 9 Run
"rune\-covered lesser griffin",
"tattooed lesser griffin",

#Style 9 Wizard Run

"sparkling lesser griffin",
"shining lesser griffin",

#Empaths Ethereal Traps 1115

"ethereal moor wight",
"wispy moor wight",
"ghostly moor wight",

#Style 9 Run
"rune\-covered moor wight",
"tattooed moor wight",

#Style 9 Wizard Run

"sparkling moor wight",
"shining moor wight",

#Empaths Ethereal Traps 1115

"ethereal massive grahnk",
"wispy massive grahnk",
"ghostly massive grahnk",

#Style 9 Run
"rune\-covered massive grahnk",
"tattooed massive grahnk",

#Style 9 Wizard Run

"sparkling massive grahnk",
"shining massive grahnk",

#Empaths Ethereal Traps 1115

"ethereal massive pyrothag",
"wispy massive pyrothag",
"ghostly massive pyrothag",

#Style 9 Run
"rune\-covered massive pyrothag",
"tattooed massive pyrothag",

#Style 9 Wizard Run

"sparkling massive pyrothag",
"shining massive pyrothag",

#Empaths Ethereal Traps 1115

"ethereal mastodonic leopard",
"wispy mastodonic leopard",
"ghostly mastodonic leopard",

#Style 9 Run
"rune\-covered mastodonic leopard",
"tattooed mastodonic leopard",

#Style 9 Wizard Run

"sparkling mastodonic leopard",
"shining mastodonic leopard",

#Empaths Ethereal Traps 1115

"ethereal moorhound",
"wispy moorhound",
"ghostly moorhound",

#Style 9 Run
"rune\-covered moorhound",
"tattooed moorhound",

#Style 9 Wizard Run

"sparkling moorhound",
"shining moorhound",

#Empaths Ethereal Traps 1115

"ethereal moor witch",
"wispy moor witch",
"ghostly moor witch",

#Style 9 Run
"rune\-covered moor witch",
"tattooed moor witch",

#Style 9 Wizard Run

"sparkling moor witch",
"shining moor witch",

#Empaths Ethereal Traps 1115

"ethereal moulis",
"wispy moulis",
"ghostly moulis",

#Style 9 Run
"rune\-covered moulis",
"tattooed moulis",

#Style 9 Wizard Run

"sparkling moulis",
"shining moulis",

#Empaths Ethereal Traps 1115

"ethereal muscular supplicant",
"wispy muscular supplicant",
"ghostly muscular supplicant",

#Style 9 Run
"rune\-covered muscular supplicant",
"tattooed muscular supplicant",

#Style 9 Wizard Run

"sparkling muscular supplicant",
"shining muscular supplicant",

#Empaths Ethereal Traps 1115

"ethereal night mare",
"wispy night mare",
"ghostly night mare",

#Style 9 Run
"rune\-covered night mare",
"tattooed night mare",

#Style 9 Wizard Run

"sparkling night mare",
"shining night mare",

#Empaths Ethereal Traps 1115

"ethereal raving lunatic",
"wispy raving lunatic",
"ghostly raving lunatic",

#Style 9 Run
"rune\-covered raving lunatic",
"tattooed raving lunatic",

#Style 9 Wizard Run

"sparkling raving lunatic",
"shining raving lunatic",

#Empaths Ethereal Traps 1115

"ethereal red tsark",
"wispy red tsark",
"ghostly red tsark",

#Style 9 Run
"rune\-covered red tsark",
"tattooed red tsark",

#Style 9 Wizard Run

"sparkling red tsark",
"shining red tsark",

#Empaths Ethereal Traps 1115

"ethereal roa\'ter",
"wispy roa\'ter",
"ghostly roa\'ter",

#Style 9 Run
"rune\-covered roa\'ter",
"tattooed roa\'ter",

#Style 9 Wizard Run

"sparkling roa\'ter",
"shining roa\'ter",

#Empaths Ethereal Traps 1115

"ethereal troll zombie",
"wispy troll zombie",
"ghostly troll zombie",

#Style 9 Run
"rune\-covered troll zombie",
"tattooed troll zombie",

#Style 9 Wizard Run

"sparkling troll zombie",
"shining troll zombie",

#Empaths Ethereal Traps 1115

"ethereal rotting woodsman",
"wispy rotting woodsman",
"ghostly rotting woodsman",

#Style 9 Run
"rune\-covered rotting woodsman",
"tattooed rotting woodsman",

#Style 9 Wizard Run

"sparkling rotting woodsman",
"shining rotting woodsman",

#Empaths Ethereal Traps 1115

"ethereal sabre\-tooth tiger",
"wispy sabre\-tooth tiger",
"ghostly sabre\-tooth tiger",

#Style 9 Run
"rune\-covered sabre\-tooth tiger",
"tattooed sabre\-tooth tiger",

#Style 9 Wizard Run

"sparkling sabre\-tooth tiger",
"shining sabre\-tooth tiger",

#Empaths Ethereal Traps 1115

"ethereal siren",
"wispy siren",
"ghostly siren",

#Style 9 Run
"rune\-covered siren",
"tattooed siren",

#Style 9 Wizard Run

"sparkling siren",
"shining siren",

#Empaths Ethereal Traps 1115

"ethereal skayl",
"wispy skayl",
"ghostly skayl",

#Style 9 Run
"rune\-covered skayl",
"tattooed skayl",

#Style 9 Wizard Run

"sparkling skayl",
"shining skayl",

#Empaths Ethereal Traps 1115

"ethereal skeletal lord",
"wispy skeletal lord",
"ghostly skeletal lord",

#Style 9 Run
"rune\-covered skeletal lord",
"tattooed skeletal lord",

#Style 9 Wizard Run

"sparkling skeletal lord",
"shining skeletal lord",

#Empaths Ethereal Traps 1115

"ethereal skeletal warhorse",
"wispy skeletal warhorse",
"ghostly skeletal warhorse",

#Style 9 Run
"rune\-covered skeletal warhorse",
"tattooed skeletal warhorse",

#Style 9 Wizard Run

"sparkling skeletal warhorse",
"shining skeletal warhorse",

#Empaths Ethereal Traps 1115

"ethereal spectral miner",
"wispy spectral miner",
"ghostly spectral miner",

#Style 9 Run
"rune\-covered spectral miner",
"tattooed spectral miner",

#Style 9 Wizard Run

"sparkling spectral miner",
"shining spectral miner",

#Empaths Ethereal Traps 1115

"ethereal triton protector",
"wispy triton protector",
"ghostly triton protector",

#Style 9 Run
"rune\-covered triton protector",
"tattooed triton protector",

#Style 9 Wizard Run

"sparkling triton protector",
"shining triton protector",

#Empaths Ethereal Traps 1115

"ethereal cavern urchin",
"wispy cavern urchin",
"ghostly cavern urchin",

#Style 9 Run
"rune\-covered cavern urchin",
"tattooed cavern urchin",

#Style 9 Wizard Run

"sparkling cavern urchin",
"shining cavern urchin",

#Empaths Ethereal Traps 1115

"ethereal stone troll",
"wispy stone troll",
"ghostly stone troll",

#Style 9 Run
"rune\-covered stone troll",
"tattooed stone troll",

#Style 9 Wizard Run

"sparkling stone troll",
"shining stone troll",

#Empaths Ethereal Traps 1115

"ethereal tomb troll",
"wispy tomb troll",
"ghostly tomb troll",

#Style 9 Run
"rune\-covered tomb troll",
"tattooed tomb troll",

#Style 9 Wizard Run

"sparkling tomb troll",
"shining tomb troll",

#Empaths Ethereal Traps 1115

"ethereal triton assassin",
"wispy triton assassin",
"ghostly triton assassin",

#Style 9 Run
"rune\-covered triton assassin",
"tattooed triton assassin",

#Style 9 Wizard Run

"sparkling triton assassin",
"shining triton assassin",

#Empaths Ethereal Traps 1115

"ethereal triton brawler",
"wispy triton brawler",
"ghostly triton brawler",

#Style 9 Run
"rune\-covered triton brawler",
"tattooed triton brawler",

#Style 9 Wizard Run

"sparkling triton brawler",
"shining triton brawler",

#Empaths Ethereal Traps 1115

"ethereal triton fanatic",
"wispy triton fanatic",
"ghostly triton fanatic",

#Style 9 Run
"rune\-covered triton fanatic",
"tattooed triton fanatic",

#Style 9 Wizard Run

"sparkling triton fanatic",
"shining triton fanatic",

#Empaths Ethereal Traps 1115

"ethereal triton warden",
"wispy triton warden",
"ghostly triton warden",

#Style 9 Run
"rune\-covered triton warden",
"tattooed triton warden",

#Style 9 Wizard Run

"sparkling triton warden",
"shining triton warden",

#Empaths Ethereal Traps 1115

"ethereal triton warlock",
"wispy triton warlock",
"ghostly triton warlock",

#Style 9 Run
"rune\-covered triton warlock",
"tattooed triton warlock",

#Style 9 Wizard Run

"sparkling triton warlock",
"shining triton warlock",

#Empaths Ethereal Traps 1115

"ethereal troll wraith",
"wispy troll wraith",
"ghostly troll wraith",

#Style 9 Run
"rune\-covered troll wraith",
"tattooed troll wraith",

#Style 9 Wizard Run

"sparkling troll wraith",
"shining troll wraith",

#Empaths Ethereal Traps 1115

"ethereal waern",
"wispy waern",
"ghostly waern",

#Style 9 Run
"rune\-covered waern",
"tattooed waern",

#Style 9 Wizard Run

"sparkling waern",
"shining waern",

#Empaths Ethereal Traps 1115

"ethereal warrior shade",
"wispy warrior shade",
"ghostly warrior shade",

#Style 9 Run
"rune\-covered warrior shade",
"tattooed warrior shade",

#Style 9 Wizard Run

"sparkling warrior shade",
"shining warrior shade",

#Empaths Ethereal Traps 1115

"ethereal wind wraith",
"wispy wind wraith",
"ghostly wind wraith",

#Style 9 Run
"rune\-covered wind wraith",
"tattooed wind wraith",

#Style 9 Wizard Run

"sparkling wind wraith",
"shining wind wraith",

#Empaths Ethereal Traps 1115

"ethereal yeti",
"wispy yeti",
"ghostly yeti",

#Style 9 Run
"rune\-covered yeti",
"tattooed yeti",

#Style 9 Wizard Run

"sparkling yeti",
"shining yeti",

#Empaths Ethereal Traps 1115

"ethereal zombie",
"wispy zombie",
"ghostly zombie",

#Style 9 Run
"rune\-covered zombie",
"tattooed zombie",

#Style 9 Wizard Run

"sparkling zombie",
"shining zombie",




"placeholder"

]

$huntpro_creature_sev_1_attack_array  = Array.new

$huntpro_creature_sev_1_attack_array  = [

"vaespilon", "darkly inked fetish master", "murky soul siphon"

]

$huntpro_towns_landing = Array.new
$huntpro_towns_landing = [ 228, 3785, 420, 405, 3824, 4142]

$huntpro_towns_icemule = Array.new
$huntpro_towns_icemule = [ 2300, 3233, 3778, 3424, 2466, 2406, 2635, 2777 ]

$huntpro_towns_solhaven = Array.new
$huntpro_towns_solhaven = [ 12805, 1507, 13054, 5723, 5576, 1438]

$huntpro_towns_riverrest = Array.new
$huntpro_towns_riverrest = [ 10992, 10915, 10934, 10861]

$huntpro_towns_teras = Array.new
$huntpro_towns_teras = [ 12511, 1957, 1886, 1851, 1932]

$huntpro_towns_illistim = Array.new
$huntpro_towns_illistim = [ 13048, 37, 4019, 13241, 188]

$huntpro_towns_vaalor = Array.new
$huntpro_towns_vaalor = [ 10332, 5907, 10329, 10397, 3519]

$huntpro_towns_zul = Array.new
$huntpro_towns_zul = [ 9445, 9411, 9471, 9506, 1005]

$huntpro_towns_kraken = Array.new
$huntpro_towns_kraken = [ 28927, 28978, 28942, 28813]




$huntpro_special_handling_array = Array.new

$huntpro_special_handling_array = [ 


] 

#Push settings into this array to skip during combat.
$huntpro_force_skip_array = Array.new
$huntpro_force_skip_array = []

#Push settings into this array for group members as leader.
$huntpro_group_array = Array.new
$huntpro_group_array = []




huntpro_master_hunting_zones = Array.new
huntpro_master_hunting_zones = [ 

#Landing
"wlmiboar", "wlmountainogre", "wlredviper", "wlredspirit", "wlredpixie", "wlredtreekin", "wlkobold", "wlschieftain", 
"wlshade", "wlcentaur", "wlmeingolem",
 "wlgremlin", "wlhobgoblin", "wlgak", "wlworm", "wlrat", "wlsquirrel", "wlkvillage", "wlvysan", "wlfisherman", "wlmummy", "wlorc", 
"wlthrak", "wlmonhobgoblin", "wlgorc", "wlpuma", "wlowarrior", "wlant", "wldirge", "wlghoul", "wlmaster", "wlspirit", 
"wlpooka", "wlminer", "wlsmare", "wlnmare", "wlhiwraith", "wlgywraith", "wlspectre", "wlwartroll", "wlmrwarcat", "wllhwarcat",
"wlreiver", "wlghostwolf", "wlbrownbear", "wlcavetroll", "wltreespirit", "wlzombie", "wlfireguardian", "wlsteelgolem", "wlfrostgiant",
"wlcrone", "wlroa'ter", "wlstonesentinel", "wlbanshee", "wlmtking", "wlkiramon", "wllstonegargoyle", "wlmountaintroll", "wlcarceris", "wlkwarfarer", 
"wlvereri", "wlwolfshade", "wlyeti", "wlminotaur", "wlminowarrior", "wlminomagus", "wlspider", "wlskeletalgiant", "wldarkshambler",
"wldarkwoode", "wlearthelemental", "wlillokeelder", "wlstonetroll", "wlmountainlion", "wlillokemystic", "wllessergargoyle", "wlgargoyle", "wlrolton",
 
#Moon

"misty", "moonfigure", "moonbeetle", "moonmonastery", "moonmagru", "moonmyklian", "moonvortece", "moonvruul",

#Solhaven
"solcyclops", "solwight", "solurgh", "solcorpse", "solwarhorse", "sollord", "solphantasma", "wlphantasma","solcentaur",
"solschieftain", "solfisherman", "solwaterwitch", "soldarkwoode", "solforesttroll", "solthundertroll", "solfenghai",
"solnmvesperti", "solshan", "solvineshan", "solnmwaern", "soldybbuk", "solspectre", "solgreatboar", "solfireguardian","solwerebear",

#River's Rest
"rrviper", "rrkrolvin", "rrkship", "rrbogwraith", "rrsoldier", "rrhilltroll", "rrcavebear", "rrkpirate", "rrbloodeagle", "rrslaver", "rrmooreagle", "rrchimera",
"rrogre", "rrswarrior", "rrmonkey", "rrarbalester", "rrherald", "rrapprentice", "rrhisskrashaman", "rrhag", "rrfleshgolem",

#Icemule
"iceguardian", "icemanticore", "icesnowspectre", "rift2", "northscatter", "rift1", "icephantom", "pineseeker", "icecockatrice", "icefarmhand", "icetspirit", 
"iceshade", "rift4", "rift5", "rift3", "southscatter", "pineglacei", "pinegorge", "pineslope", "pinewraith", "icewight", "iceleaper", "icethyril", "icemonkey",
"iceworm", "icesentry", "icewallguardian", "iceurchin", "icerat", "icegiant", "icetrailgiant", "icecrone", "iceshrub", "icebush",

#Hinterwilds

"hinterstart", "hinterforest",

#Ta'Illistim
"tikiramon", "tiwolfhound", "tiorcscout", "tileopard", "tiburgee", "tighostlymara", "tivourkha", "tibaesrukha",
"tivortaz", "tiviper", "tisupplicant", "tiweasel", "tistag", "tibasilisk", "tiwarthog", "tihuntertroll", 
"tibarghest", "tibendith", "titrali", "tiraptor", "tifaeroth", "sislush", "tigriffin", "tishrickhen", "tigremlock", "tiithzir", 
"tiotfwest", "tiotfnorth", "tislush",

#Ta'Vaalor
"tvravelin", "tvrodent", "tvkobold", "tvant", "tvrelnak", "tvredorc", "tvraiderorc", "tvdarkorc", "tvgreyorc", "tvwolfshade", "tvagreshbear",
"tvsiren", "tvphantom", "tvcockatrice", "tvthyril", "tvapparition", "tvdirge", "tvdarkwoode", "tvtrollscout", "tvblackbear", "tvmaster", "tvlion",
"tvbasilisk", "tvzombie", "tvmonk", "tvbogspectre", 

#Zul Logoth
"zulkrynch", "zulwraith", "zulsavage", "zullizard", "zulkiramon",

#Teras Isle
"terasburgee", "terasjtroll", "terastsark", "teraspyrothag", 
"terasltroll", "terasjtroll", "zone2", "teraswraith", 
"terasdevil", "terasshoot", "terasradical", "teraswelemental", 
"terassentry", "teraskiramon", "terasbanshee",

#Kraken's Fall

"kfatoll", "kfatemple",

#Misc
"placeholder", "group", "bounty", "newbounty", "fastbounty", "quick"

 ]


#Define Proc Statements
	#huntpro_update_check.call <- Call a Proc

huntpro_load_settings = proc {

	#You'll detect all character settings here.
	if huntpro_setting_profile_detection == "1"
		nil
	else
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, I notice some settings need to be detected. Please stand by."
		Huntpro_toolkit.bottom_menu
		sleep 3
		Settings[Char.name]['huntpro_setting_profile_detection']	= "1"
		
		do_client ";go2 --get-silvers=on"
		wait_while {running? "go2"}
		do_client ";go2 --use-seeking=on"
		wait_while {running? "go2"}
		do_client ";go2 typeahead=2"
		wait_while {running? "go2"}
		do_client ";go2 delay=0"
		wait_while {running? "go2"}
		do_client ";tune Huntpro"
		do_client ";tune Help"
		do_client ";tune Help"
	
		if Skills.survival >= 50
			do_client ";go2 --ice-mode=run"
			wait_while {running? "go2"}
		end
		
		fput "FLAG ObviousHiding ON"
		
		
		#Check your Society
		
		if huntpro_setting_character_society =~ /Voln|Gos|Col|None/
				nil
		else
			if Society.status == "Order of Voln"
				Settings[Char.name]['huntpro_setting_character_society']	= "Voln"
			elsif Society.status == "Council of Light"
				Settings[Char.name]['huntpro_setting_character_society']	= "Col"
			elsif Society.status =~ /Sunfist/
				Settings[Char.name]['huntpro_setting_character_society']	= "Gos"
			elsif Society.status == "None"
				Settings[Char.name]['huntpro_setting_character_society']	= "None"
			end
			
		end
		
		Settings.save
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, your settings have been detected.  Please restart the script."
		Huntpro_toolkit.bottom_menu
		exit
		
		
	end	
	
	
	huntpro_my_style = script.vars[1].downcase
	huntpro_my_area = script.vars[2].downcase
	
	$huntpro_my_style = script.vars[1].downcase
	$huntpro_my_area = script.vars[2].downcase
	
	if $huntpro_my_style =~ /1|2|3|4|5|6|7|8/
		if Script.exists? "reactive"
			#respond "Debug Output - You picked style #{$huntpro_my_style} and already downloaded reactive."
		else
			Script.run('repository', 'download reactive.lic')
		end
	end
	
	if huntpro_setting_character_society =~ /Voln/
		$huntpro_my_society = "Voln"
		if Script.exists? "symbolz"
			
		else
			Script.run('repository', 'download symbolz.lic') unless $huntpro_no_society == "1"
		end
	end
	
	if huntpro_setting_character_society =~ /Gos/
		$huntpro_my_society = "Gos"
		if Script.exists? "isigils"
			
		else
			Script.run('repository', 'download isigils.lic') unless $huntpro_no_society == "1"
		end
	end
	
	if huntpro_setting_character_society =~ /Col/
		$huntpro_my_society = "Col"
		if Script.exists? "isigns"
		
		else
			Script.run('repository', 'download isigns.lic') unless $huntpro_no_society == "1"
		end
	end
	
	if Char.prof == "Bard"
		if Script.exists? "song-manager"
		
		else
			Script.run('repository', 'download song-manager.lic')
		end
	end
	
	
	if huntpro_setting_force_skip_list == "0"
		nil
	else
		$huntpro_force_skip_array.push(huntpro_setting_force_skip_list)
		$huntpro_force_skip_array.push(huntpro_setting_force_skip_list2)
		$huntpro_force_skip_array.push(huntpro_setting_force_skip_list3)
	end
	
	if huntpro_setting_compound_ignore == "0"
		nil
	else
		$huntpro_compound_ignore_array = [ "#{huntpro_setting_compound_ignore}" ]
	end
	
	if huntpro_setting_stay_offensive == "0"
		nil
	else
		$huntpro_stay_offensive = "1"
	end

	if huntpro_setting_loot_script == "0"
		nil
	else
		$huntpro_loot_script = "#{huntpro_setting_loot_script}"
	end
	
	if huntpro_setting_spell_default == "0"
		nil
	else
		$huntpro_spell_default = "#{huntpro_setting_spell_default}"
	end
	
	if huntpro_setting_evoke_default == "0"
		nil
	else
		$huntpro_evoke_default = "1"
	end
	
	if huntpro_setting_rest_room == "0"
		nil
	else
		$huntpro_rest_room = "#{huntpro_setting_rest_room}"
	end

	if huntpro_setting_leader == "0"
		nil
	else
		$huntpro_captain = "#{huntpro_setting_leader}"
		if $huntpro_captain == "#{Char.name}"
			$huntpro_group_ai = "1"
			do_client ";lnet allow locate all" unless script.vars[1].downcase =~ /setup|cleanup/
		else
			$huntpro_group_ai = "2"
		end
	end
	
	if huntpro_setting_group_one == "0"
		#do_client "flag groupmovement off"
		nil
	else
		#do_client "flag groupmovement on"
		$huntpro_group_array.push(huntpro_setting_group_one)
		$huntpro_group_array.push(huntpro_setting_group_two) unless huntpro_setting_group_two == "0"
		$huntpro_group_array.push(huntpro_setting_group_three) unless huntpro_setting_group_three == "0"
		$huntpro_group_array.push(huntpro_setting_group_four) unless huntpro_setting_group_four == "0"
		$huntpro_group_array.push(huntpro_setting_group_five) unless huntpro_setting_group_five == "0"
		$huntpro_group_array.push(huntpro_setting_group_six) unless huntpro_setting_group_six == "0"
		$huntpro_group_array.push(huntpro_setting_group_seven) unless huntpro_setting_group_seven == "0"
		$huntpro_group_array.push(huntpro_setting_group_eight) unless huntpro_setting_group_eight == "0"
		$huntpro_group_array.push(huntpro_setting_group_nine) unless huntpro_setting_group_nine == "0"
		
		$huntpro_group_member1 = "#{huntpro_setting_group_one}" unless huntpro_setting_group_one == "0"
		$huntpro_group_member2 = "#{huntpro_setting_group_two}" unless huntpro_setting_group_two == "0"
		$huntpro_group_member3 = "#{huntpro_setting_group_three}" unless huntpro_setting_group_three == "0"
		$huntpro_group_member4 = "#{huntpro_setting_group_four}" unless huntpro_setting_group_four == "0"
		$huntpro_group_member5 = "#{huntpro_setting_group_five}" unless huntpro_setting_group_five == "0"
		$huntpro_group_member6 = "#{huntpro_setting_group_six}" unless huntpro_setting_group_six == "0"
		$huntpro_group_member7 = "#{huntpro_setting_group_seven}" unless huntpro_setting_group_seven == "0"
		$huntpro_group_member8 = "#{huntpro_setting_group_eight}" unless huntpro_setting_group_eight == "0"
		$huntpro_group_member9 = "#{huntpro_setting_group_nine}" unless huntpro_setting_group_nine == "0"
		
		

		
		
	end
	
	if huntpro_setting_group_quiet == "0"
		nil
	else
		$huntpro_group_quiet = "1"
	end	
	
	if huntpro_setting_group_sharemana == "0"
		nil
	else
		$huntpro_group_sharemana = "1"
	end
	
	if huntpro_setting_group_peace == "0"
		nil
	else
		$huntpro_group_peace = "1"
	end
	
	if huntpro_setting_wrack == "0"
		nil
	else
	
		if Script.exists? "wrack"
			nil
		else
			Script.run('repository', 'download wrack.lic')
		
		end
		$huntpro_wrack = "1"
	end
	
	
	if huntpro_setting_combat_cleanup == "0"
		nil
	else
		$huntpro_combat_cleanup = "1"
	end
	
	$huntpro_script_one = "#{huntpro_setting_run_script}" unless huntpro_setting_run_script == "0"
	$huntpro_script_two = "#{huntpro_setting_run_script2}" unless huntpro_setting_run_script2 == "0"
	$huntpro_script_three = "#{huntpro_setting_run_script3}" unless huntpro_setting_run_script3 == "0"
	
	$huntpro_group_support = "1"

	if Char.prof == "Empath" && Char.level >= 40
		$huntpro_empath_self_heal = "1"
	end
	
	if Char.level >= 30
		$huntpro_crowd_control = "1"
	end
	
	if huntpro_setting_crowd_control == "0"
		nil
	else
		$huntpro_crowd_control = "1"
	end
	
	if huntpro_setting_no_crowd_control == "0"
		nil
	else
		$huntpro_no_crowd_control = "1"
	end
	
	
	if Char.level >= 20
		$huntpro_cman_control = "1" if Skills.combatmaneuvers >= 1
	end
	
	if huntpro_setting_cman_control == "0"
		nil
	else
		$huntpro_cman_control = "1" if Skills.combatmaneuvers >= 1
	end
	
	if huntpro_setting_no_cman_control == "0"
		nil
	else
		$huntpro_no_cman_control = "1" if Skills.combatmaneuvers == 0
	end
	
	
	
	
	
	
	if huntpro_setting_no_society == "0"
		nil
	else
		$huntpro_no_society = "1"
	end
	
	if huntpro_setting_no_stun == "0"
		nil
	else
		$huntpro_no_stun = "1"
	end
	
	
	if huntpro_setting_bounty_noherb == "0"
		nil
	else
		$huntpro_bounty_noherb = "1"
	end
	
	if huntpro_setting_bounty_noskin == "0"
		nil
	else
		$huntpro_bounty_noskin = "1"
	end
	
	
	if script.vars[1].downcase =~ /update|greset|reset|help|setup|cleanup/
		nil
	else
		#Detect Aim Settings
		
		result = dothistimeout "aim", 2, /not aiming at anything|head|right (arm|leg|hand|eye)|left (arm|leg|hand|eye)|chest|back|neck|abdomen/
		if result =~ /not aiming at anything/
			$huntpro_current_aim = "0"
		elsif result =~ /head/
			$huntpro_current_aim = "head"
		elsif result =~ /right arm/
			$huntpro_current_aim = "right arm"
		elsif result =~ /right leg/
			$huntpro_current_aim = "right leg"
		elsif result =~ /right hand/
			$huntpro_current_aim = "right hand"
		elsif result =~ /right eye/
			$huntpro_current_aim = "right eye"
		elsif result =~ /left arm/
			$huntpro_current_aim = "right arm"
		elsif result =~ /left leg/
			$huntpro_current_aim = "right leg"
		elsif result =~ /left hand/
			$huntpro_current_aim = "right hand"
		elsif result =~ /left eye/
			$huntpro_current_aim = "right eye"
		elsif result =~ /chest/
			$huntpro_current_aim = "chest"
		elsif result =~ /back/
			$huntpro_current_aim = "back"
		elsif result =~ /neck/
			$huntpro_current_aim = "neck"
		elsif result =~ /abdomen/
			$huntpro_current_aim = "abdomen"
			
		end
	end
	
	if $huntpro_towns_landing.include?(Room.current.id)
		$huntpro_bounty_town = "Landing" 			
	end
	
	if $huntpro_towns_icemule.include?(Room.current.id)
		$huntpro_bounty_town = "Icemule" 			
	end
	
	if $huntpro_towns_solhaven.include?(Room.current.id)
		$huntpro_bounty_town = "Solhaven" 			
	end
	
	if $huntpro_towns_riverrest.include?(Room.current.id)
		$huntpro_bounty_town = "River's Rest" 			
	end
	
	if $huntpro_towns_teras.include?(Room.current.id)
		$huntpro_bounty_town = "Teras" 			
	end
	
	if $huntpro_towns_vaalor.include?(Room.current.id)
		$huntpro_bounty_town = "Vaalor" 			
	end
	
	if $huntpro_towns_illistim.include?(Room.current.id)
		$huntpro_bounty_town = "Illistim" 			
	end
	
	if $huntpro_towns_zul.include?(Room.current.id)
		$huntpro_bounty_town = "Zul Logoth" 			
	end
	
	if $huntpro_towns_kraken.include?(Room.current.id)
		$huntpro_bounty_town = "Kraken's Fall" 			
	end
	
	if checkarea =~ /The Rift/
		$huntpro_bounty_town = "Icemule" 			
	end
	
	if huntpro_setting_force_target == "0"
		nil
	else
		$huntpro_force_target = huntpro_setting_force_target
	end
	
	if huntpro_setting_bounty_lite == "0"
		nil
	else
		$huntpro_bounty_lite = "1"
	end
	
	if huntpro_setting_no_cock == "0"
		nil
	else
		$huntpro_no_cock = "1"
	end
	
	if $huntpro_my_style =~ /7|8/
		if $huntpro_no_cock == "1"
			nil
		else
			$huntpro_use_cock = "1"
		end
	end
	
	if huntpro_setting_no_waggle == "0"
		nil
	else
		$huntpro_no_waggle = "1"
	end
	
	if huntpro_setting_no_herbs == "0"
		nil
	else
		$huntpro_no_herbs = "1"
	end
	
	if $huntpro_my_area =~ /moonmyklian|moonmagru|pineglacei|icebush|iceshrub/
		$huntpro_use_herbs = "1"
		Huntpro_toolkit.herb_script_check
		
	end
	
	if huntpro_setting_use_herbs == "0"
		nil
	else
		
		$huntpro_use_herbs = "1"
		Huntpro_toolkit.herb_script_check
		
	end
	
	
	
	
	$huntpro_cman_watch = "1" if $huntpro_cman_control == "1"
	
	
	
}

huntpro_feedback = proc {
		respond "#{huntpro_my_style} is my style."
		respond "#{huntpro_my_area} is my area."

}

huntpro_error_trap = proc {

if huntpro_my_style == "1"
	nil
elsif huntpro_my_style == "2"
	nil
elsif huntpro_my_style == "3"
	nil
elsif huntpro_my_style == "4"
	nil
elsif huntpro_my_style == "5"
	nil
elsif huntpro_my_style == "6"
	nil
elsif huntpro_my_style == "7"
	nil
elsif huntpro_my_style == "8"
	nil
elsif huntpro_my_style == "9"
	nil
else
	Huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, I noticed you chose a style that doesn't exist. "
	respond
	respond "Huntpro Help: http://tinyurl.com/huntprohelp"
	Huntpro_toolkit.bottom_menu
	exit
end


if huntpro_master_hunting_zones.include?(huntpro_my_area)
	nil
else
	Huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, I noticed you chose an area that doesn't exist. "
	respond
	respond "Huntpro Help: http://tinyurl.com/huntprohelp"
	Huntpro_toolkit.bottom_menu
	exit
end


#Pure Check
if huntpro_my_style == "9" && Char.prof =~ /Warrior|Rogue|Monk/
	Huntpro_toolkit.top_menu
 	respond "Hi #{Char.name}, I apologize for any confusion."
	respond
	respond "Style 9 only works for Clerics, Empaths, Wizards, Sorcerers, Rangers, Paladins."
	respond
	respond "Huntpro Help: http://tinyurl.com/huntprohelp"
	Huntpro_toolkit.bottom_menu
	exit
elsif huntpro_my_style == "9" && Char.prof =~ /Ranger/
	if Spell[603].known? && Char.level >= 3
		nil
	else
		Huntpro_toolkit.top_menu
		respond "Hi #{Char.name}, I apologize for any confusion."
		respond
		respond "Style 9 for Rangers requires level 3 and spell knowledge of 603 Wild Entropy."
		respond
		respond "Consider another style for now or train a bit more.  Thanks!"
		respond
		respond "Huntpro Help: http://tinyurl.com/huntprohelp"
		Huntpro_toolkit.bottom_menu
		exit
	end
elsif huntpro_my_style == "9" && Char.prof =~ /Bard/
	if Spell[1008].known? && Char.level >= 8
		nil
	else
		Huntpro_toolkit.top_menu
		respond "Hi #{Char.name}, I apologize for any confusion."
		respond
		respond "Style 9 for Bards requires level 8 and spell knowledge of 1008 Stunning Shout."
		respond
		respond "Consider another style for now or train a bit more.  Thanks!"
		respond
		respond "Huntpro Help: http://tinyurl.com/huntprohelp"
		Huntpro_toolkit.bottom_menu
		exit
	end
	
elsif huntpro_my_style == "9" && Char.prof =~ /Paladin/
	if Spell[1603].known? && Char.level >= 3
		nil
	else
		Huntpro_toolkit.top_menu
		respond "Hi #{Char.name}, I apologize for any confusion."
		respond
		respond "Style 9 for Paladins requires level 3 and spell knowledge of 1603 Templar's Verdict."
		respond
		respond "Consider another style for now or train a bit more.  Thanks!"
		respond
		respond "Huntpro Help: http://tinyurl.com/huntprohelp"
		Huntpro_toolkit.bottom_menu
		exit
	end
	
end


#Group Leader Check Error Trap
if huntpro_my_area == "group"
	if huntpro_setting_leader == "0"
		Huntpro_toolkit.top_menu
		respond "Hi #{Char.name}, I apologize for any confusion."
		respond
		respond "You need to set your group leader before activating group mode."
		respond
		respond ";huntpro setup change leader Name" 
		respond
		respond "Huntpro Help: http://tinyurl.com/huntprohelp"
		Huntpro_toolkit.bottom_menu
		exit
	end

	if huntpro_setting_leader == "#{Char.name}"
		Huntpro_toolkit.top_menu
		respond "Hi #{Char.name}, I apologize for any confusion."
		respond
		respond "If you're the group leader, you should pick a creature area instead of group."
		respond
		respond "Huntpro Help: http://tinyurl.com/huntprohelp"
		Huntpro_toolkit.bottom_menu
		exit
	end
	
end



}


huntpro_hunting_zones = proc {

Huntpro_toolkit.mstrike_setup

#Landing

if $huntpro_my_area =~ /wlkobold/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"

	Script.run('go2', '6313')
	pause 1
	
elsif $huntpro_my_area =~ /wlrolton/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '414')
	pause 1	

	
elsif $huntpro_my_area =~ /wlshade/
	
	$huntpro_spawn_delay = 1
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7510')
	pause 1
	
elsif $huntpro_my_area =~ /wlcentaur/
	
	$huntpro_my_area_level = 23
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6997')
	pause 1
	
elsif $huntpro_my_area =~ /wlmeingolem/
	
	$huntpro_spawn_delay = 1
	
	$huntpro_my_area_level = 37
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7039')
	pause 1


	
elsif $huntpro_my_area =~ /wlhobgoblin/
	
	$huntpro_my_area_level = 3
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6721')
	pause 1
	
elsif $huntpro_my_area =~ /wlgak/
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6739')
	pause 1
	
elsif $huntpro_my_area =~ /wlgremlin/
	
	$huntpro_my_area_level = 5
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '14724')
	pause 1
	
elsif $huntpro_my_area =~ /wlschieftain/
	
	$huntpro_my_area_level = 11
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7654')
	pause 1
	
elsif $huntpro_my_area =~ /wlworm/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '483')
	pause 1
		
elsif $huntpro_my_area =~ /wlrat/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7493')
	pause 1
	
elsif $huntpro_my_area =~ /wlsquirrel/
	
	$huntpro_spawn_delay = 0.25
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6280')
	pause 1
	
elsif $huntpro_my_area =~ /wlkvillage/
	
	$huntpro_spawn_delay = 0.25
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6282')
	pause 1	
	
	
elsif $huntpro_my_area =~ /wlvysan/
	
	$huntpro_my_area_level = 3
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7752')
	pause 1
	
elsif $huntpro_my_area =~ /wlfisherman/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7644')
	pause 1
	
elsif $huntpro_my_area =~ /wlmummy/
	
	$huntpro_my_area_level = 6
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '4144')
	pause 1
	
elsif $huntpro_my_area =~ /wlorc/
	
	$huntpro_my_area_level = 8
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7937')
	pause 1
	
elsif $huntpro_my_area =~ /wlthrak/
	
	$huntpro_my_area_level = 9
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4300')
	pause 1
	
elsif $huntpro_my_area =~ /wlmonhobgoblin/
	
	$huntpro_my_area_level = 3
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6783')
	pause 1
	
elsif $huntpro_my_area =~ /wlgorc/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8441')
	pause 1
	
elsif $huntpro_my_area =~ /wlpuma/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8051')
	pause 1
	
elsif $huntpro_my_area =~ /wlowarrior/
	
	$huntpro_my_area_level = 17
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6819')
	pause 1
	
elsif $huntpro_my_area =~ /misty/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.misty_logic
	Huntpro_toolkit.oop_script_kill
	exit
	
elsif $huntpro_my_area =~ /moonfigure/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.misty_logic
	
elsif $huntpro_my_area =~ /moonbeetle/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.misty_logic
	
elsif $huntpro_my_area =~ /moonmonastery/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.misty_logic	
	
elsif $huntpro_my_area =~ /moonmagru/
	
	$huntpro_my_area_level = 37
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.misty_logic	
	
elsif $huntpro_my_area =~ /moonmyklian/
	
	$huntpro_my_area_level = 40
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.misty_logic	
	
elsif $huntpro_my_area =~ /moonvortece/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Living"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, refer to https://gswiki.play.net/Dark_vortece for hunting tips."
	respond
	respond "Only certain abilities/spells work on these creatures in this zone."
	Huntpro_toolkit.bottom_menu
	sleep 3
	
	Huntpro_toolkit.misty_logic	
	
elsif $huntpro_my_area =~ /moonvruul/
	
	$huntpro_my_area_level = 45
	$huntpro_my_area_type = "Undead"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, refer to https://gswiki.play.net/Dark_vortece for hunting tips."
	respond
	respond "Only certain abilities/spells work on these creatures in this zone."
	Huntpro_toolkit.bottom_menu
	sleep 3
	
	
	Huntpro_toolkit.misty_logic	
	
	

	
elsif $huntpro_my_area =~ /wlant/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7589')
	pause 1
	
elsif $huntpro_my_area =~ /wldirge/
	
	$huntpro_my_area_level = 9
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7268')
	pause 1
	
elsif $huntpro_my_area =~ /wlghoul/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7180')
	pause 1
	
elsif $huntpro_my_area =~ /wlmaster/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7216')
	pause 1
	
elsif $huntpro_my_area =~ /wlspirit/
	
	$huntpro_my_area_level = 28
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7322')
	pause 1
	
elsif $huntpro_my_area =~ /wlmiboar/
	
	$huntpro_my_area_level = 10
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4215')
	pause 1
	
elsif $huntpro_my_area =~ /wlpooka/
	
	$huntpro_my_area_level = 33
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '4560')
	pause 1
	
elsif $huntpro_my_area =~ /wlminer/
	
	$huntpro_my_area_level = 40
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7401')
	pause 1
	
elsif $huntpro_my_area =~ /wlsmare/
	
	$huntpro_my_area_level = 37
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7330')
	pause 1
	
elsif $huntpro_my_area =~ /wlnmare/
	
	$huntpro_my_area_level = 43
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7361')
	pause 1
		
elsif $huntpro_my_area =~ /wlhiwraith/
	
	$huntpro_my_area_level = 15
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '6923')
	pause 1
		
elsif $huntpro_my_area =~ /wlgywraith/
	
	$huntpro_my_area_level = 15
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '4188')
	pause 1
		
elsif $huntpro_my_area =~ /wlspectre/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '8233')
	pause 1
		
elsif $huntpro_my_area =~ /wlwartroll/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4238')
	pause 1
		
elsif $huntpro_my_area =~ /wlmrwarcat/
	
	$huntpro_my_area_level = 20
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8138')
	pause 1
		
elsif $huntpro_my_area =~ /wllhwarcat/
	
	$huntpro_my_area_level = 20
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6399')
	pause 1
		
elsif $huntpro_my_area =~ /wlreiver/
	
	$huntpro_my_area_level = 24
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8105')
	pause 1
		
elsif $huntpro_my_area =~ /wlghostwolf/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7786')
	pause 1
		
elsif $huntpro_my_area =~ /wlbrownbear/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7768')
	pause 1
		
elsif $huntpro_my_area =~ /wlcavetroll/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7768')
	pause 1
		
elsif $huntpro_my_area =~ /wltreespirit/
	
	$huntpro_my_area_level = 26
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '1214')
	pause 1
		
elsif $huntpro_my_area =~ /wlmountainogre/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '1196')
	pause 1
		
elsif $huntpro_my_area =~ /wlzombie/
	
	$huntpro_my_area_level = 23
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7885')
	pause 1
		
elsif $huntpro_my_area =~ /wlfireguardian/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4133')
	pause 1
		
elsif $huntpro_my_area =~ /wlsteelgolem/
	
	$huntpro_my_area_level = 20
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7832')
	pause 1
		
elsif $huntpro_my_area =~ /wlfrostgiant/
	
	$huntpro_my_area_level = 38
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7858')
	pause 1
	
elsif $huntpro_my_area =~ /wlcrone/
	
	$huntpro_my_area_level = 36
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7872')
	pause 1
	
elsif $huntpro_my_area =~ /wlroa'ter/
	
	$huntpro_my_area_level = 41
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7061')
	pause 1
	
elsif $huntpro_my_area =~ /wlstonesentinel/
	
	$huntpro_my_area_level = 53
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3716')
	pause 1
	
elsif $huntpro_my_area =~ /wlbanshee/
	
	$huntpro_spawn_delay = 0.25
	$huntpro_my_area_level = 50
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '7086')
	pause 1
	
elsif $huntpro_my_area =~ /wlmtking/
	
	$huntpro_my_area_level = 63
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3699')
	pause 1
	
elsif $huntpro_my_area =~ /wllessergargoyle/
	
	$huntpro_my_area_level = 27
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7004')
	pause 1
	
elsif $huntpro_my_area =~ /wlgargoyle/
	
	$huntpro_my_area_level = 39
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7019')
	pause 1
	
elsif $huntpro_my_area =~ /wlkiramon/
	
	$huntpro_my_area_level = 43
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '7135')
	pause 1
	
	
elsif $huntpro_my_area =~ /wlmountaintroll/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6510')
	pause 1
	
elsif $huntpro_my_area =~ /wlkwarfarer/
	
	$huntpro_my_area_level = 25
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6453')
	pause 1
	
elsif $huntpro_my_area =~ /wlcarceris/
	
	$huntpro_my_area_level = 25
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '6588')
	pause 1
	
elsif $huntpro_my_area =~ /wlvereri/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '8484')
	pause 1
	
elsif $huntpro_my_area =~ /wlwolfshade/
	
	$huntpro_my_area_level = 15
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '8470')
	pause 1
	
elsif $huntpro_my_area =~ /wlyeti/
	
	$huntpro_my_area_level = 70
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6136')
	pause 1
	
elsif $huntpro_my_area =~ /wlminotaur/
	
	$huntpro_my_area_level = 74
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6152')
	pause 1
	
elsif $huntpro_my_area =~ /wlminowarrior/
	
	$huntpro_my_area_level = 74
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6196')
	pause 1
	
elsif $huntpro_my_area =~ /wlminomagus/
	
	$huntpro_spawn_delay = 0.25
	$huntpro_my_area_level = 78
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6240')
	pause 1
	
elsif $huntpro_my_area =~ /wlspider/
	
	$huntpro_my_area_level = 20
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8292')
	pause 1
	
elsif $huntpro_my_area =~ /wlskeletalgiant/
	
	$huntpro_my_area_level = 33
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '8453')
	pause 1
	
elsif $huntpro_my_area =~ /wldarkshambler/
	
	$huntpro_my_area_level = 17
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8446')
	pause 1
	
elsif $huntpro_my_area =~ /wldarkwoode/
	
	$huntpro_my_area_level = 13
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '8515')
	pause 1
	
elsif $huntpro_my_area =~ /wlearthelemental/
	
	$huntpro_my_area_level = 82
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8381')
	pause 1
	
elsif $huntpro_my_area =~ /wlillokeelder/
	
	$huntpro_my_area_level = 86
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '8397')
	pause 1
	
elsif $huntpro_my_area =~ /wlstonetroll/
	
	$huntpro_my_area_level = 55
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3576')
	pause 1
	
elsif $huntpro_my_area =~ /wlmountainlion/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3861')
	pause 1
	
elsif $huntpro_my_area =~ /wlillokemystic/
	
	$huntpro_my_area_level = 62
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3612')
	pause 1
	
elsif $huntpro_my_area =~ /wlredviper/
	
	$huntpro_my_area_level = 58
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '24689')
	pause 1
	
elsif $huntpro_my_area =~ /wlredspirit/
	
	$huntpro_my_area_level = 69
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '24713')
	pause 1
	
elsif $huntpro_my_area =~ /wlredpixie/
	
	$huntpro_my_area_level = 68
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '24724')
	pause 1
	
elsif $huntpro_my_area =~ /wlredtreekin/
	
	$huntpro_my_area_level = 80
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '24743')
	pause 1

	
#Solhaven

elsif $huntpro_my_area =~ /solcyclops/
	
	$huntpro_my_area_level = 27
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5378')
	pause 1
	
elsif $huntpro_my_area =~ /solwight/
	
	$huntpro_my_area_level = 23
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '9042')
	pause 1
	
elsif $huntpro_my_area =~ /solurgh/
	
	$huntpro_my_area_level = 5
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5112')
	pause 1
	
elsif $huntpro_my_area =~ /solcorpse/
	
	$huntpro_my_area_level = 32
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '14033')
	pause 1
	
elsif $huntpro_my_area =~ /solwarhorse/
	
	$huntpro_my_area_level = 37
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '14077')
	pause 1
	
elsif $huntpro_my_area =~ /sollord/
	
	$huntpro_my_area_level = 41
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '14058')
	pause 1
	
elsif $huntpro_my_area =~ /solphantasma|wlphantasma/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '16823')
	pause 1
	
elsif $huntpro_my_area =~ /solcentaur/
	
	$huntpro_my_area_level = 23
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5327')
	pause 1
	
elsif $huntpro_my_area =~ /solschieftain/
	
	$huntpro_my_area_level = 11
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5069')
	pause 1
	
elsif $huntpro_my_area =~ /solfisherman/
	
	$huntpro_my_area_level = 6
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '5207')
	pause 1
	
elsif $huntpro_my_area =~ /solwaterwitch/
	
	$huntpro_my_area_level = 5
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5231')
	pause 1
	
elsif $huntpro_my_area =~ /soldarkwoode/
	
	$huntpro_my_area_level = 13
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '5260')
	pause 1
	
elsif $huntpro_my_area =~ /solforesttroll/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5265')
	pause 1
	
elsif $huntpro_my_area =~ /solthundertroll/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5278')
	pause 1
	
elsif $huntpro_my_area =~ /solfenghai/
	
	$huntpro_my_area_level = 23
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5251')
	pause 1
	
elsif $huntpro_my_area =~ /solnmvesperti/
	
	if $huntpro_my_style == "9"
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, this is a no magic hunting zone.  Style 9 won't work."
		Huntpro_toolkit.bottom_menu
		exit
	end
	
	$huntpro_my_area_level = 38
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5320')
	pause 1
	
elsif $huntpro_my_area =~ /solshan/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5339')
	pause 1
	
elsif $huntpro_my_area =~ /solvineshan/
	
	$huntpro_my_area_level = 60
	$huntpro_my_area_type = "Living"
	$huntpro_divergence = "1"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, you are about to enter a hunting zone affected by Divergence."
	respond
	respond "Divergence: https://gswiki.play.net/Divergence"
	respond
	respond "Spell Sever: https://gswiki.play.net/Spell_sever"
	respond
	respond "Continuing the script in 3 seconds.  ;ka to abort"
	Huntpro_toolkit.bottom_menu
	sleep 3
	Script.run('go2', '31087')
	pause 1
	
elsif $huntpro_my_area =~ /solnmwaern/
	
	$huntpro_my_area_level = 49
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '5406')
	pause 1
	
elsif $huntpro_my_area =~ /soldybbuk/
	
	$huntpro_my_area_level = 48
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '5413')
	pause 1
	
elsif $huntpro_my_area =~ /solspectre/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '5139')
	pause 1
	
elsif $huntpro_my_area =~ /solgreatboar/
	
	$huntpro_my_area_level = 10
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5166')
	pause 1
	
elsif $huntpro_my_area =~ /solfireguardian/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5186')
	pause 1
	
elsif $huntpro_my_area =~ /solwerebear/
	
	$huntpro_my_area_level = 10
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '9370')
	pause 1
	

#Icemule

elsif $huntpro_my_area =~ /iceguardian/
	
	$huntpro_my_area_level = 30
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3252')
	pause 1

elsif $huntpro_my_area =~ /icemanticore/
	
	$huntpro_my_area_level = 29
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3295')
	pause 1
	
elsif $huntpro_my_area =~ /icesnowspectre/
	
	$huntpro_my_area_level = 9
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '3024')
	pause 1
	
elsif $huntpro_my_area =~ /iceshade/
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '3310')
	pause 1
	
elsif $huntpro_my_area =~ /icewight/
	
	$huntpro_my_area_level = 20
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '2981')
	pause 1
	
elsif $huntpro_my_area =~ /icecockatrice/
	
	$huntpro_my_area_level = 6
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3217')
	pause 1
	
elsif $huntpro_my_area =~ /icephantom/
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '3182')
	pause 1
	
elsif $huntpro_my_area =~ /icefarmhand/
	
	$huntpro_my_area_level = 32
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '3144')
	pause 1
	
elsif $huntpro_my_area =~ /icetspirit/
	
	$huntpro_my_area_level = 26
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '3121')
	pause 1
	
elsif $huntpro_my_area =~ /iceleaper/
	
	$huntpro_my_area_level = 6
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3058')
	pause 1
	
elsif $huntpro_my_area =~ /icethyril/
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3156')
	pause 1
	
elsif $huntpro_my_area =~ /iceworm/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9108')
	pause 1
	
elsif $huntpro_my_area =~ /icemonkey/
	
	$huntpro_my_area_level = 6
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9152')
	pause 1
	
elsif $huntpro_my_area =~ /icesentry/
	
	$huntpro_my_area_level = 13
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9183')
	pause 1
	
elsif $huntpro_my_area =~ /icewallguardian/
	
	$huntpro_my_area_level = 11
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9202')
	pause 1
	
elsif $huntpro_my_area =~ /iceurchin/
	
	$huntpro_my_area_level = 17
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9219')
	pause 1
	
elsif $huntpro_my_area =~ /icerat/
	
	$huntpro_spawn_delay = 0.5
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9075')
	pause 1
	
elsif $huntpro_my_area =~ /icetrailgiant/
	
	$huntpro_my_area_level = 38
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2539')
	pause 1
	
elsif $huntpro_my_area =~ /icegiant/
	
	$huntpro_my_area_level = 39
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2921')
	pause 1
	
	
elsif $huntpro_my_area =~ /icecrone/
	
	$huntpro_my_area_level = 36
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2880')
	pause 1
	
elsif $huntpro_my_area =~ /iceshrub/
	
	$huntpro_my_area_level = 45
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '24532')
	pause 1
	
elsif $huntpro_my_area =~ /icebush/
	
	$huntpro_my_area_level = 36
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '24519')
	pause 1
	

#Pinefar

elsif $huntpro_my_area =~ /rift4/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '12138')
	pause 1
	
elsif $huntpro_my_area =~ /rift5/
	
	$huntpro_my_area_level = 91
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '12159')
	pause 1
	
elsif $huntpro_my_area =~ /rift3/
	
	$huntpro_my_area_level = 85
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '12184')
	pause 1
	
elsif $huntpro_my_area =~ /rift2/
	
	$huntpro_my_area_level = 80
	$huntpro_my_area_type = "Living"

	Script.run('go2', '12142')
	pause 1
	
elsif $huntpro_my_area =~ /rift1/
	
	$huntpro_my_area_level =75
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '2579')
	pause 1
	
elsif $huntpro_my_area =~ /northscatter/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '12219')
	pause 1
	
elsif $huntpro_my_area =~ /southscatter/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '12245')
	pause 1
	
elsif $huntpro_my_area =~ /pineglacei/
	
	$huntpro_my_area_level = 47
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2753')
	pause 1
	
elsif $huntpro_my_area =~ /pinegorge/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2810')
	pause 1
	
elsif $huntpro_my_area =~ /pineslope/
	
	$huntpro_my_area_level = 32
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2830')
	pause 1
	
elsif $huntpro_my_area =~ /pinewraith/
	
	$huntpro_my_area_level = 45
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '2728')
	pause 1
	
elsif $huntpro_my_area =~ /pineseeker/
	
	$huntpro_my_area_level = 52
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '2725')
	pause 1

#Hinterwilds

elsif $huntpro_my_area =~ /hinterstart/
	
	$huntpro_divergence = "1"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, you are about to enter a hunting zone affected by Divergence."
	respond
	respond "Divergence: https://gswiki.play.net/Divergence"
	respond
	respond "Spell Sever: https://gswiki.play.net/Spell_sever"
	respond
	respond "Continuing the script in 3 seconds.  ;ka to abort"
	Huntpro_toolkit.bottom_menu
	sleep 3
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '29860')
	pause 1
	exit
	
elsif $huntpro_my_area =~ /hinterforest/
	
	$huntpro_divergence = "1"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, you are about to enter a hunting zone affected by Divergence."
	respond
	respond "Divergence: https://gswiki.play.net/Divergence"
	respond
	respond "Spell Sever: https://gswiki.play.net/Spell_sever"
	respond
	respond "Continuing the script in 3 seconds.  ;ka to abort"
	Huntpro_toolkit.bottom_menu
	sleep 3
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '29882')
	pause 1
	
	
#Zul Logoth

elsif $huntpro_my_area =~ /zulsavage/
	
	$huntpro_my_area_level = 27
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5809')
	pause 1
	
elsif $huntpro_my_area =~ /zulwraith/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '9542')
	pause 1
	
elsif $huntpro_my_area =~ /zulkrynch/
	
	$huntpro_my_area_level = 31
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5753')
	pause 1
	
elsif $huntpro_my_area =~ /zullizard/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9606')
	pause 1
	
elsif $huntpro_my_area =~ /zulkiramon/
	
	$huntpro_my_area_level = 40
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '29498')
	pause 1


#Ta'Illistim

elsif $huntpro_my_area =~ /tikiramon/
	
	$huntpro_my_area_level = 40
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4988')
	pause 1
	
elsif $huntpro_my_area =~ /tiweasel/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9830')
	pause 1
	
elsif $huntpro_my_area =~ /tiwolfhound/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9970')
	pause 1
	
elsif $huntpro_my_area =~ /tistag/
	
	$huntpro_my_area_level = 13
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4612')
	pause 1
	
elsif $huntpro_my_area =~ /tiorcscout/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5032')
	pause 1
	
elsif $huntpro_my_area =~ /tibasilisk/
	
	$huntpro_my_area_level = 22
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9941')
	pause 1
	
elsif $huntpro_my_area =~ /tiwarthog/
	
	$huntpro_my_area_level = 22
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '1622')
	pause 1
	
elsif $huntpro_my_area =~ /tileopard/
	
	$huntpro_my_area_level = 27
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '9872')
	pause 1
	
elsif $huntpro_my_area =~ /tiburgee/
	
	$huntpro_my_area_level = 29
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '1686')
	pause 1
	
elsif $huntpro_my_area =~ /tihuntertroll/
	
	$huntpro_my_area_level = 30
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '1701')
	pause 1
	
elsif $huntpro_my_area =~ /tighostlymara/
	
	$huntpro_spawn_delay = 0.5
	$huntpro_my_area_level = 32
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '1787')
	pause 1
	
elsif $huntpro_my_area =~ /tibarghest/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10014')
	pause 1
	
elsif $huntpro_my_area =~ /tivourkha/
	
	$huntpro_my_area_level = 39
	$huntpro_my_area_type = "Undead"
		
	Script.run('go2', '10004')
	pause 1
	
elsif $huntpro_my_area =~ /tibendith/
	
	$huntpro_my_area_level = 40
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4756')
	pause 1
	
elsif $huntpro_my_area =~ /tibaesrukha/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10048')
	pause 1
	
elsif $huntpro_my_area =~ /titrali/
	
	$huntpro_my_area_level = 44
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4838')
	pause 1
	
elsif $huntpro_my_area =~ /tiraptor/
	
	$huntpro_my_area_level = 44
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4714')
	pause 1
	
elsif $huntpro_my_area =~ /tivortaz/
	
	$huntpro_my_area_level = 48
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4883')
	pause 1
	
elsif $huntpro_my_area =~ /tifaeroth/
	
	$huntpro_my_area_level = 50
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '4943')
	pause 1
	
elsif $huntpro_my_area =~ /tislush/
	
	$huntpro_my_area_level = 54
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '1753')
	pause 1
	
elsif $huntpro_my_area =~ /tiviper/
	
	$huntpro_my_area_level = 59
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '18845')
	pause 1
	
elsif $huntpro_my_area =~ /tisupplicant/
	
	$huntpro_my_area_level = 67
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '110')
	pause 1
		
elsif $huntpro_my_area =~ /tigriffin/
	
	$huntpro_my_area_level = 69
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '3982')
	pause 1
		
elsif $huntpro_my_area =~ /tishrickhen/
	
	$huntpro_my_area_level = 76
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '9787')
	pause 1
	
elsif $huntpro_my_area =~ /tigremlock/
	
	$huntpro_my_area_level = 84
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '12004')
	pause 1
		
elsif $huntpro_my_area =~ /tiithzir/
	
	$huntpro_my_area_level = 93
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11813')
	pause 1
	
elsif $huntpro_my_area =~ /tiotfwest/
	
	$huntpro_my_area_level = 97
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11961')
	pause 1
	
elsif $huntpro_my_area =~ /tiotfnorth/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '12046')
	pause 1
	

#Ta'Vaalor

elsif $huntpro_my_area =~ /tvrodent/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5930')
	pause 1
	
elsif $huntpro_my_area =~ /tvsiren/
	
	$huntpro_my_area_level = 3
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10506')
	pause 1
	
elsif $huntpro_my_area =~ /tvphantom/
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '5864')
	pause 1
	
elsif $huntpro_my_area =~ /tvcockatrice/
	
	$huntpro_my_area_level = 13
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10622')
	pause 1
	
elsif $huntpro_my_area =~ /tvkobold/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10271')
	pause 1
	
elsif $huntpro_my_area =~ /tvant/
	
	$huntpro_my_area_level = 1
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6095')
	pause 1
	
elsif $huntpro_my_area =~ /tvthyril/
	
	$huntpro_my_area_level = 2
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5963')
	pause 1
	
elsif $huntpro_my_area =~ /tvrelnak/
	
	$huntpro_my_area_level = 5
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '5993')
	pause 1
	
elsif $huntpro_my_area =~ /tvapparition/
	
	$huntpro_my_area_level = 5
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10688')
	pause 1
	
elsif $huntpro_my_area =~ /tvredorc/
	
	$huntpro_my_area_level = 7
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6036')
	pause 1
	
elsif $huntpro_my_area =~ /tvdirge/
	
	$huntpro_my_area_level = 9
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10700')
	pause 1
	
elsif $huntpro_my_area =~ /tvravelin/
	
	$huntpro_my_area_level = 27
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '18822')
	pause 1
	
elsif $huntpro_my_area =~ /tvraiderorc/
	
	$huntpro_my_area_level = 10
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6076')
	pause 1
	
elsif $huntpro_my_area =~ /tvdarkorc/
	
	$huntpro_my_area_level = 12
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6072')
	pause 1
	
elsif $huntpro_my_area =~ /tvdarkwoode/
	
	$huntpro_my_area_level = 13
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10526')
	pause 1
	
elsif $huntpro_my_area =~ /tvgreyorc/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6050')
	pause 1
	
elsif $huntpro_my_area =~ /tvtrollscout/
	
	$huntpro_my_area_level = 14
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10252')
	pause 1
	
elsif $huntpro_my_area =~ /tvwolfshade/
	
	$huntpro_my_area_level = 15
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10721')
	pause 1
	
elsif $huntpro_my_area =~ /tvagreshbear/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10260')
	pause 1
	
elsif $huntpro_my_area =~ /tvblackbear/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10642')
	pause 1
	
elsif $huntpro_my_area =~ /tvmaster/
	
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10747')
	pause 1
	
elsif $huntpro_my_area =~ /tvlion/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '10196')
	pause 1
	
elsif $huntpro_my_area =~ /tvbasilisk/
	
	$huntpro_my_area_level = 22
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '6002')
	pause 1
	
elsif $huntpro_my_area =~ /tvzombie/
	
	$huntpro_my_area_level = 23
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10567')
	pause 1
	
elsif $huntpro_my_area =~ /tvmonk/
	
	$huntpro_my_area_level = 27
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10598')
	pause 1
	
elsif $huntpro_my_area =~ /tvbogspectre/
	
	$huntpro_my_area_level = 47
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '10134')
	pause 1
	

#River's Rest
elsif $huntpro_my_area =~ /rrviper/
	
	$huntpro_my_area_level = 24
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '16011')
	pause 1
	
elsif $huntpro_my_area =~ /rrkrolvin/
	
	$huntpro_my_area_level = 36
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11087')
	pause 1
	
elsif $huntpro_my_area =~ /rrkship/
	
	$huntpro_my_area_level = 25
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11118')
	pause 1
	
elsif $huntpro_my_area =~ /rrsoldier/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11662')
	pause 1
	
elsif $huntpro_my_area =~ /rrbogwraith/
	
	$huntpro_my_area_level = 37
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11636')
	pause 1


elsif $huntpro_my_area =~ /rrhilltroll/
	
	$huntpro_spawn_delay = 0.5
	$huntpro_my_area_level = 16
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11408')
	pause 1
	
	
elsif $huntpro_my_area =~ /rrcavebear/

	$huntpro_spawn_delay = 0.5
	$huntpro_my_area_level = 21
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11415')
	pause 1
	
	
elsif $huntpro_my_area =~ /rrogre/
	
	$huntpro_my_area_level = 15
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11222')
	pause 1
	
elsif $huntpro_my_area =~ /rrswarrior/
	
	$huntpro_my_area_level = 34
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11198')
	pause 1
	
elsif $huntpro_my_area =~ /rrkpirate/
	
	$huntpro_my_area_level = 18
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11243')
	pause 1
	
elsif $huntpro_my_area =~ /rrmonkey/
	
	$huntpro_my_area_level = 6
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11268')
	pause 1
	
elsif $huntpro_my_area =~ /rrbloodeagle/
	
	$huntpro_my_area_level = 7
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11265')
	pause 1
	
elsif $huntpro_my_area =~ /rrarbalester/
	
	$huntpro_my_area_level = 58
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11395')
	pause 1
	
elsif $huntpro_my_area =~ /rrherald/
	
	$huntpro_my_area_level = 60
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '17708')
	pause 1
	
elsif $huntpro_my_area =~ /rrapprentice/
	
	$huntpro_my_area_level = 54
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11375')
	pause 1
	
elsif $huntpro_my_area =~ /rrslaver/
	
	$huntpro_my_area_level = 36
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11579')
	pause 1
	
elsif $huntpro_my_area =~ /rrhisskrashaman/
	
	$huntpro_my_area_level = 33
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11525')
	pause 1
	
elsif $huntpro_my_area =~ /rrmooreagle/
	
	$huntpro_my_area_level = 35
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11551')
	pause 1
	
elsif $huntpro_my_area =~ /rrhag/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '11676')
	pause 1
	
elsif $huntpro_my_area =~ /rrchimera/
	
	$huntpro_my_area_level = 46
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11683')
	pause 1
	
elsif $huntpro_my_area =~ /rrfleshgolem/
	
	$huntpro_my_area_level = 50
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '11728')
	pause 1
	
	
#Teras Isle

elsif $huntpro_my_area =~ /terasbanshee/
	
	$huntpro_my_area_level = 50
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '2290')
	pause 1
	
elsif $huntpro_my_area =~ /teraskiramon/
	
	$huntpro_my_area_level = 40
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2268')
	pause 1
	
elsif $huntpro_my_area =~ /terassentry/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '12759')
	pause 1
	
elsif $huntpro_my_area =~ /teraswelemental/
	
	$huntpro_my_area_level = 92
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '12712')
	pause 1
	
elsif $huntpro_my_area =~ /terasradical/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '12738')
	pause 1
	
elsif $huntpro_my_area =~ /terasshoot/
	
	$huntpro_my_area_level = 42
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2092')
	pause 1
	
elsif $huntpro_my_area =~ /terasdevil/
	
	$huntpro_my_area_level = 48
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2071')
	pause 1
	
elsif $huntpro_my_area =~ /teraswraith/
	
	$huntpro_my_area_level = 61
	$huntpro_my_area_type = "Undead"
	
	Script.run('go2', '12597')
	pause 1
	
elsif $huntpro_my_area =~ /terasjtroll/
	
	$huntpro_my_area_level = 26
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2035')
	pause 1
	
elsif $huntpro_my_area =~ /terasburgee/
	
	$huntpro_my_area_level = 29
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2029')
	pause 1
	
elsif $huntpro_my_area =~ /terasltroll/
	
	$huntpro_my_area_level = 34
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '12578')
	pause 1
	
elsif $huntpro_my_area =~ /teraspyrothag/
	
	$huntpro_my_area_level = 58
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2120')
	pause 1
	
elsif $huntpro_my_area =~ /terastsark/
	
	$huntpro_my_area_level = 66
	$huntpro_my_area_type = "Living"
	
	Script.run('go2', '2256')
	pause 1


#Kraken's Fall

elsif $huntpro_my_area =~ /kfatoll/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	$huntpro_divergence = "1"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, you are about to enter a hunting zone affected by Divergence."
	respond
	respond "Divergence: https://gswiki.play.net/Divergence"
	respond
	respond "Spell Sever: https://gswiki.play.net/Spell_sever"
	respond
	respond "Continuing the script in 3 seconds.  ;ka to abort"
	Huntpro_toolkit.bottom_menu
	sleep 3
	
	
	Script.run('go2', '30816')
	pause 1
	
elsif $huntpro_my_area =~ /kfatemple/
	
	$huntpro_my_area_level = 100
	$huntpro_my_area_type = "Living"
	
	$huntpro_divergence = "1"
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, you are about to enter a hunting zone affected by Divergence."
	respond
	respond "Divergence: https://gswiki.play.net/Divergence"
	respond
	respond "Spell Sever: https://gswiki.play.net/Spell_sever"
	respond
	respond "Continuing the script in 3 seconds.  ;ka to abort"
	Huntpro_toolkit.bottom_menu
	sleep 3
	
	
	Script.run('go2', '30851')
	pause 1
	
	
	
elsif $huntpro_my_area =~ /reim/
	
	respond "Reim Setting Disabled."
	exit

	
#Misc

elsif $huntpro_my_area =~ /quick/

	$huntpro_my_area_type = "Living"
	$huntpro_my_area_level = 100
	$huntpro_action = 97

elsif $huntpro_my_area =~ /newbounty/
	$huntpro_bounty_stage = "1.5"
	$huntpro_bounty_intel_watch = "1"
	Huntpro_toolkit.bounty_debug
	Huntpro_toolkit.bounty_control
	huntpro_hunting_zones.call

elsif $huntpro_my_area =~ /fastbounty/
	$huntpro_bounty_stage = "1.5"
	$huntpro_bounty_intel_watch = "1"
	$huntpro_bounty_fast = "1"
	Huntpro_toolkit.bounty_debug
	Huntpro_toolkit.bounty_control
	huntpro_hunting_zones.call


elsif $huntpro_my_area =~ /bounty/
	Huntpro_toolkit.top_menu
	respond "************************************************ WARNING ************************************************"
	respond "#{Char.name}, this feature is in Alpha stages.  33.51% chance this will not work as you want it to."
	respond
	respond "Expect a couple of bugs and debugging information."
	respond
	respond "Thanks for testing this!  Make sure to ;huntpro update  to make sure you have the latest version."
	respond "************************************************ WARNING ************************************************"
	Huntpro_toolkit.bottom_menu
	sleep 3
	$huntpro_bounty_creature_match = "1"
	Huntpro_toolkit.bounty_status
	huntpro_hunting_zones.call


	
elsif $huntpro_my_area =~ /bandit/
	
	Huntpro_toolkit.top_menu
	respond "#{Char.name} - Bandit Setting Disabled Currently."
	Huntpro_toolkit.bottom_menu
	exit

elsif $huntpro_my_area =~ /group/
	respond "Group Mode Activated."

elsif $huntpro_my_area == "0"
	#respond "Debug exit out of bounty feature.  Not ready for new bounty yet."
	
else
	respond "Huntpro Hunting Zone Else Error Trap"
	exit
end

Huntpro_toolkit.room_nil_walk

}


huntpro_zone_reset_check = proc {

#Landing

#WLOWARRIOR
if Room.current.id == 6786
	Script.run('go2', '6819')
end

#WLMONHOBGOBLIN
if Room.current.id == 6784
	Script.run('go2', '6783')
end

#WLMONHOBGOBLIN
if Room.current.id == 6764
	Script.run('go2', '6783')
end

#WLROLTON

if Room.current.id == 452
	Script.run('go2', '414')
end

#wlpooka

if Room.current.id == 4536
	Script.run('go2', '4560')
end

#Solhaven

#solvineshan

if Room.current.id == 31099
	Script.run('go2', '31100')
end


#solvineshan

if Room.current.id == 31119
	Script.run('go2', '31087')
end

#wlshade


if Room.current.id == 7507
	Script.run('go2', '7510')
end


#WLGARGOYLE

if Room.current.id == 7028
	Script.run('go2', '7018')
end

#WLGARGOYLE

if Room.current.id == 7014
	Script.run('go2', '7019')
end




#River's Rest

#RRCAVEBEAR
if Room.current.id == 11414
	Script.run('go2', '11419')
end

#RRCAVEBEAR
if Room.current.id == 11422
	Script.run('go2', '11419')
end


#RRCHIMERA
if Room.current.id == 11679
	Script.run('go2', '11683')
end

#RRapprentice
if Room.current.id == 11362
	Script.run('go2', '11375')
end

#RRKPIRATE
if Room.current.id == 11247
	Script.run('go2', '11249')

end

#RRKPIRATE
if Room.current.id == 11253
	Script.run('go2', '11243')
end


#RRSOLDIER
if Room.current.id == 11653
	Script.run('go2', '11662')
end

#RRSOLDIER
if Room.current.id == 22219
	Script.run('go2', '11662')
end

#RRSOLDIER
if Room.current.id == 11647
	Script.run('go2', '11662')
end



#RRBOGWRAITH
if Room.current.id == 11639
	Script.run('go2', '11636')
end

#RRBOGWRAITH
if Room.current.id == 11630
	Script.run('go2', '11636')
end

#RRBOGWRAITH
if Room.current.id == 22218
	Script.run('go2', '11636')
end





#Icemule

#ICECRONE
if Room.current.id == 2883
	Script.run('go2', '2894')
end

#ICECRONE
if Room.current.id == 2900
	Script.run('go2', '2880')
end


#icetrailgiant

if Room.current.id == 2557
	Script.run('go2', '2539')
end


#iceguardian

if Room.current.id == 3245
	Script.run('go2', '3263')
end

#iceguardian

if Room.current.id == 3253
	Script.run('go2', '3254')
end

#iceguardian

if Room.current.id == 3257
	Script.run('go2', '3252')
end


#pineslope

if Room.current.id == 2824
	Script.run('go2', '2823')
end

#pineslope

if Room.current.id == 2816
	Script.run('go2', '2830')
end

#icegiant

if Room.current.id == 2911
	Script.run('go2', '2910')
end

#icegiant

if Room.current.id == 2901
	Script.run('go2', '2898')
end

#icegiant

if Room.current.id == 2894
	Script.run('go2', '2921')
end







#Ta'Illistim



#TITRALI

if Room.current.id == 4839
	Script.run('go2', '4838')
end


#TIraptor

if Room.current.id == 4848
	Script.run('go2', '4714')
end


#tivortaz

if Room.current.id == 4794
	Script.run('go2', '4883')
end

#TIFAEROTH
if Room.current.id == 4916
	Script.run('go2', '4943')
end





#Ta'Vaalor



#Zul Logoth


#zulkrynch
if Room.current.id == 5760
	Script.run('go2', '5766')

end

#zulkrynch
if Room.current.id == 5768
	Script.run('go2', '5770')

end

#zulkrynch
if Room.current.id == 5778
	Script.run('go2', '9459')

end

#zulkrynch
if Room.current.id == 9462
	Script.run('go2', '9465')

end

#zulkrynch
if Room.current.id == 9468
	Script.run('go2', '5753')

end


#zullizard

if Room.current.id == 9596
	Script.run('go2', '9594')

end

if Room.current.id == 9595
	Script.run('go2', '9591')

end

if Room.current.id == 9592
	Script.run('go2', '9591')

end

if Room.current.id == 9580
	Script.run('go2', '9579')

end

if Room.current.id == 9567
	Script.run('go2', '9606')

end






#Teras Isle
#Misc



#Unknown Area

if Room.current.id == 5129
	Script.run('go2', '5139')

end

if Room.current.id == 6762
	Script.run('go2', '6739')

end

if Room.current.id == 6738
	Script.run('go2', '6748')

end

if Room.current.id == 7657
	Script.run('go2', '7662')

end

if Room.current.id == 7667
	Script.run('go2', '7654')

end

if Room.current.id == 4267
	Script.run('go2', '4300')

end

if Room.current.id == 481
	Script.run('go2', '489')

end

if Room.current.id == 491
	Script.run('go2', '492')

end

if Room.current.id == 498
	Script.run('go2', '499')

end

if Room.current.id == 501
	Script.run('go2', '483')

end

if Room.current.id == 7583
	Script.run('go2', '7582')

end

if Room.current.id == 7565
	Script.run('go2', '7599')

end

if Room.current.id == 6304
	Script.run('go2', '6303')

end

if Room.current.id == 6299
	Script.run('go2', '6313')

end

if Room.current.id == 4970
	Script.run('go2', '4988')

end

if Room.current.id == 2263
	Script.run('go2', '2273')

end

if Room.current.id == 2281
	Script.run('go2', '2268')

end

if Room.current.id == 6450
	Script.run('go2', '6445')

end

if Room.current.id == 6441
	Script.run('go2', '6453')

end

if Room.current.id == 7637
	Script.run('go2', '7615')

end

if Room.current.id == 7631
	Script.run('go2', '7650')

end

if Room.current.id == 7648
	Script.run('go2', '7644')

end

if Room.current.id == 16802
	Script.run('go2', '4157')

end

if Room.current.id == 4151
	Script.run('go2', '4144')

end

if Room.current.id == 6909
	Script.run('go2', '6908')

end

if Room.current.id == 6889
	Script.run('go2', '6923')

end

if Room.current.id == 2569
	Script.run('go2', '7858')

end



##Pineglacei
if Room.current.id == 2760
	Script.run('go2', '2766')
end
	
##Pineglacei
if Room.current.id == 2774
	Script.run('go2', '2747')
end

if Room.current.id == 11069
	Script.run('go2', '11074')

end

##RRKrolvin
if Room.current.id == 11078
	Script.run('go2', '11087')

end

if Room.current.id == 6395
	Script.run('go2', '6394')

end

if Room.current.id == 6388
	Script.run('go2', '6399')

end

if Room.current.id == 6609
	Script.run('go2', '6615')

end

if Room.current.id == 1207
	Script.run('go2', '7816')

end

if Room.current.id == 7818
	Script.run('go2', '1196')

end

if Room.current.id == 6617
	Script.run('go2', '6588')

end

if Room.current.id == 8478
	Script.run('go2', '8475')

end

if Room.current.id == 8472
	Script.run('go2', '8488')

end

if Room.current.id == 8497
	Script.run('go2', '8500')

end

if Room.current.id == 8507
	Script.run('go2', '8484')

end

if Room.current.id == 14065
	Script.run('go2', '14077')

end

if Room.current.id == 8376
	Script.run('go2', '8387')

end

if Room.current.id == 8375
	Script.run('go2', '8381')

end

if Room.current.id == 5211
	Script.run('go2', '5231')

end

if Room.current.id == 5668
	Script.run('go2', '5251')

end

if Room.current.id == 5698
	Script.run('go2', '5701')

end

if Room.current.id == 5709
	Script.run('go2', '5320')

end

if Room.current.id == 5147
	Script.run('go2', '5139')

end

if Room.current.id == 5148
	Script.run('go2', '5166')

end

if Room.current.id == 5179
	Script.run('go2', '5176')

end

if Room.current.id == 5167
	Script.run('go2', '5186')

end

if Room.current.id == 9173
	Script.run('go2', '9202')

end

if Room.current.id == 9083
	Script.run('go2', '9089')

end

if Room.current.id == 9084
	Script.run('go2', '9075')

end

if Room.current.id == 11157
	Script.run('go2', '11265')

end

if Room.current.id == 11646
	Script.run('go2', '11676')

end

if Room.current.id == 12716
	Script.run('go2', '12685')

end

if Room.current.id == 12678
	Script.run('go2', '12712')

end

if Room.current.id == 2030
	Script.run('go2', '2035')

end

if Room.current.id == 12575
	Script.run('go2', '2017')

end

if Room.current.id == 2020
	Script.run('go2', '12578')

end

if Room.current.id == 5796
	Script.run('go2', '5792')

end

if Room.current.id == 5785
	Script.run('go2', '5809')

end

if Room.current.id == 9514
	Script.run('go2', '9542')

end




if Room.current.id == 5889
	Script.run('go2', '5753')

end







if Room.current.id == 95
	Script.run('go2', '9830')

end

if Room.current.id == 9847
	Script.run('go2', '9830')

end

if Room.current.id == 9853
	Script.run('go2', '9852')

end

if Room.current.id == 96
	Script.run('go2', '97')

end

if Room.current.id == 108
	Script.run('go2', '9872')

end

if Room.current.id == 547
	Script.run('go2', '1701')

end

if Room.current.id == 10035
	Script.run('go2', '10028')

end

if Room.current.id == 10025
	Script.run('go2', '10048')

end

if Room.current.id == 1724
	Script.run('go2', '1753')

end

if Room.current.id == 9709
	Script.run('go2', '579')

end

if Room.current.id == 559
	Script.run('go2', '18845')

end

if Room.current.id == 12011
	Script.run('go2', '11868')

end

if Room.current.id == 11879
	Script.run('go2', '12004')

end

if Room.current.id == 10540
	Script.run('go2', '10567')

end

if Room.current.id == 10188
	Script.run('go2', '10182')

end

if Room.current.id == 10176
	Script.run('go2', '10196')

end

if Room.current.id == 10216
	Script.run('go2', '10260')

end

if Room.current.id == 10209
	Script.run('go2', '10252')

end

if Room.current.id == 6044
	Script.run('go2', '6050')

end

if Room.current.id == 6043
	Script.run('go2', '6050')

end

if Room.current.id == 10698
	Script.run('go2', '10700')

end

if Room.current.id == 6026
	Script.run('go2', '6036')

end

if Room.current.id == 5957
	Script.run('go2', '5963')

end

if Room.current.id == 24676
	Script.run('go2', '24689')

end

if Room.current.id == 24694
	Script.run('go2', '24698')

end

if Room.current.id == 24697
	Script.run('go2', '24698')

end

if Room.current.id == 24688
	Script.run('go2', '24689')

end

if Room.current.id == 24702
	Script.run('go2', '24713')

end

if Room.current.id == 24711
	Script.run('go2', '24709')

end

if Room.current.id == 24710
	Script.run('go2', '24709')

end

if Room.current.id == 24704
	Script.run('go2', '24713')

end

if Room.current.id == 24727
	Script.run('go2', '24724')

end

if Room.current.id == 24717
	Script.run('go2', '24724')

end

if Room.current.id == 24718
	Script.run('go2', '24724')

end

if Room.current.id == 24734
	Script.run('go2', '24743')

end

if Room.current.id == 24731
	Script.run('go2', '24743')

end

if Room.current.id == 3317
	Script.run('go2', '3318')

end

if Room.current.id == 3323
	Script.run('go2', '3310')

end

if Room.current.id == 2250
	Script.run('go2', '2249')

end

if Room.current.id == 2237
	Script.run('go2', '2257')

end

if Room.current.id == 3987
	Script.run('go2', '3982')

end

if Room.current.id == 3989
	Script.run('go2', '3982')

end

if Room.current.id == 4226
	Script.run('go2', '4238')

end

if Room.current.id == 4251
	Script.run('go2', '4238')

end

if Room.current.id == 4252
	Script.run('go2', '4215')

end

if Room.current.id == 4225
	Script.run('go2', '4215')

end



if Room.current.id == 9185
	fput "south"
end

if Room.current.id == 24965
		fput "climb rope"
end

if checkarea =~ /Belly of the Beast/
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, you were eaten by a roa'ter or rift crawler.  Grab a dagger and attack the wall, now!"
	fput "stow all"
	Huntpro_toolkit.bottom_menu
	exit
end

GameObj.loot.each { |i|
		
		if i.name =~ /stomach wall/
			Huntpro_toolkit.top_menu
			respond "#{Char.name}, you were eaten by a roa'ter or rift crawler.  Grab a dagger and attack the wall, now!"
			fput "stow all"
			Huntpro_toolkit.bottom_menu
			exit
		end	
}

if Room.current.id == nil
	until Room.current.id != nil
		walk
	end
end

}


huntpro_status_check = proc {
	
			if !checkdead
					nil
			else
				Huntpro_toolkit.top_menu
				respond "#{Char.name}, I'm very sorry, I see you died. If ;huntpro caused your death, please share this feedback."
				Huntpro_toolkit.bottom_menu
				exit
			end

			if checkmind == "must rest"
				if huntpro_setting_hunt_while_fried != "0"
					nil
				else
					if $huntpro_extra_fried <= 60
						$huntpro_extra_fried = $huntpro_extra_fried + 1
					elsif $huntpro_extra_fried >= 61
						$huntpro_return_why = "Your mind is full and you must rest."
						$huntpro_action = 99
					end
				end
			end

			if checkmind == "saturated"
				if huntpro_setting_hunt_while_fried != "0"
					nil
				else
					if $huntpro_extra_fried <= 60
						$huntpro_extra_fried = $huntpro_extra_fried + 1
					elsif $huntpro_extra_fried >= 61
						$huntpro_return_why = "Your mind is saturated and you must rest."
						$huntpro_action = 99
					end
				end
			end

			#Mana Traps
			if $huntpro_group_ai == "1"
				if percentmana >= 50
					nil
				elsif percentmana >= 25 && percentmana <= 49 && $huntpro_group_sharemana != "0"
					
					if $huntpro_mana_cooldown == 0
						$huntpro_mana_cooldown = 25
						$huntpro_group_mana_target = "#{Char.name}"
						fput "whisper group #{$huntpro_group_mana_target} MANA"
						sleep 0.5
					elsif $huntpro_mana_cooldown > 0
						$huntpro_mana_cooldown = $huntpro_mana_cooldown - 1
					end			
				end
				
				#Wrack Check Goes Here
				Huntpro_toolkit.wrack_checker if $huntpro_my_society == "Col" && percentmana <= 24
				
				if huntpro_setting_130_fog != "0" && Char.level >= 30 && checkmana >= 30 && checkmana <= 41
					$huntpro_return_why = "You have low mana."
					$huntpro_action = 99
				elsif percentmana <= 13
					$huntpro_return_why = "You have low mana."
					$huntpro_action = 99
				end
			else
				#Wrack Check Goes Here
				Huntpro_toolkit.wrack_checker if $huntpro_my_society == "Col" && percentmana <= 24
				
				if huntpro_setting_130_fog != "0" && Char.level >= 30 && checkmana >= 30 && checkmana <= 41
					$huntpro_return_why = "You have low mana."
					$huntpro_action = 99
				elsif percentmana <= 13
					$huntpro_return_why = "You have low mana."
					$huntpro_action = 99
					
				end
			end



			if percenthealth <= 50
				#respond "Debug - Health is less than 50"
				if $huntpro_group_ai == "1" && $huntpro_group_empath != "0"
					if $huntpro_heal_cooldown == 0
						$huntpro_heal_cooldown = 1
						fput "whisper group #{$huntpro_group_empath} please heal us."
						Script.pause('huntpro')
					elsif $huntpro_heal_cooldown == 1
						$huntpro_heal_cooldown = 0
					end
				else
					if huntpro_setting_empath_self_heal != "0" && Char.prof == "Empath" && checkmana >= 10
						fput "cure"
					elsif $huntpro_use_herbs == "1"
						$huntpro_heal_toggle = 1
						Huntpro_toolkit.combat_use_herbs
					else	
						$huntpro_return_why = "You have low health."
						$huntpro_action = 99
					end
				end
			end

			if percentstamina <= 10
				$huntpro_return_why = "You have low stamina."
				$huntpro_action = 99
			end

			if percentspirit <= 10
				$huntpro_return_why = "You have low spirit."
				$huntpro_action = 99
			end

			if percentencumbrance >= $huntpro_value_encumbrance.to_i
				if huntpro_setting_disable_encumbrance != "0"
					nil
				else
					$huntpro_return_why = "You have encumbrance."
					$huntpro_action = 99
				end
			end


			
			if huntpro_setting_empath_self_heal != "0" && Char.prof == "Empath"
				if Wounds.head >= 1 || Wounds.neck >= 1 || Wounds.abs >= 1 || Wounds.lhand >= 1 || Wounds.rhand >= 1 || Wounds.larm >= 1 || Wounds.rarm >= 1 || Wounds.chest >= 1 || Wounds.back >= 1 || Wounds.rleg >= 1 || Wounds.lleg >= 1 || Wounds.nerves >= 1 || Wounds.torso >= 1 || Wounds.leye >= 1 || Wounds.reye >= 1 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
					Huntpro_toolkit.empath_self_heal
				end
			elsif $huntpro_empath_self_heal == "1" && Char.prof == "Empath"
				if Wounds.head >= 1 || Wounds.neck >= 1 || Wounds.abs >= 1 || Wounds.lhand >= 1 || Wounds.rhand >= 1 || Wounds.larm >= 1 || Wounds.rarm >= 1 || Wounds.chest >= 1 || Wounds.back >= 1 || Wounds.rleg >= 1 || Wounds.lleg >= 1 || Wounds.nerves >= 1 || Wounds.torso >= 1 || Wounds.leye >= 1 || Wounds.reye >= 1 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
					Huntpro_toolkit.empath_self_heal
				end
			end
			
			
			if $huntpro_heal_toggle == 0
				sleep 0.05
				#respond "Debug Output - I'm in heal toggle 0"
				if Wounds.head >= 2 || Wounds.neck >= 2 || Wounds.abs >= 2 || Wounds.lhand >= 2 || Wounds.rhand >= 2 || Wounds.larm >= 2 || Wounds.rarm >= 2 || Wounds.chest >= 2 || Wounds.back >= 2 || Wounds.rleg >= 2 || Wounds.lleg >= 2 || Wounds.nerves >= 2 || Wounds.torso >= 2 || Wounds.leye >= 2 || Wounds.reye >= 2 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
			
					if $huntpro_group_ai == "1" && $huntpro_group_empath != "0"
						if $huntpro_heal_cooldown == 0
							$huntpro_heal_cooldown = 1
							fput "whisper group #{$huntpro_group_empath} please heal us."
							Script.pause('huntpro')
						elsif $huntpro_heal_cooldown == 1
							$huntpro_heal_cooldown = 0
						end
						
					elsif $huntpro_use_herbs == "1"
						$huntpro_heal_toggle = 1
						#respond "Debug Output - I'm about to use some herbs."
						Huntpro_toolkit.combat_use_herbs
						
					
					else
						sleep 0.10
					
						if Wounds.head >= 2 || Wounds.neck >= 2 || Wounds.abs >= 2 || Wounds.lhand >= 2 || Wounds.rhand >= 2 || Wounds.larm >= 2 || Wounds.rarm >= 2 || Wounds.chest >= 2 || Wounds.back >= 2 || Wounds.rleg >= 2 || Wounds.lleg >= 2 || Wounds.nerves >= 2 || Wounds.torso >= 2 || Wounds.leye >= 2 || Wounds.reye >= 2 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
							$huntpro_return_why = "You are injured or have major scars."
							$huntpro_action = 99
						end
					end
				end
				
			elsif $huntpro_heal_toggle == 1
				sleep 0.05
				#respond "Debug Output - I'm in heal toggle 1"
					$huntpro_heal_toggle = 0
					if Wounds.head >= 2 || Wounds.neck >= 2 || Wounds.abs >= 2 || Wounds.lhand >= 2 || Wounds.rhand >= 2 || Wounds.larm >= 2 || Wounds.rarm >= 2 || Wounds.chest >= 2 || Wounds.back >= 2 || Wounds.rleg >= 2 || Wounds.lleg >= 2 || Wounds.nerves >= 2 || Wounds.torso >= 2 || Wounds.leye >= 2 || Wounds.reye >= 2 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
							$huntpro_return_why = "You are injured or have major scars."
							$huntpro_action = 99
					end
			end
			
			
			

			

			if checkstunned
				$huntpro_return_why = "You were stunned and I chose to run away so you could fight another day." unless $huntpro_no_stun == "1"
				$huntpro_action = 99 unless $huntpro_no_stun == "1"
			end

			if checkwebbed
				$huntpro_return_why = "You were webbed and I chose to run away so you could fight another day."
				$huntpro_action = 99
			end

			if checkbound
				$huntpro_return_why = "You were bound and I chose to run away so you could fight another day."
				$huntpro_action = 99
			end

			if checkpoison
				if Spell[114].known? && Char.level >= 14 && Spell[114].affordable?
					waitcastrt?
					Spell[114].cast() 
					sleep 3
				else
					$huntpro_return_why = "You were poisoned."
					$huntpro_action = 99
				end
			end

			if checkdisease
				if Spell[113].known? && Char.level >= 13 && Spell[113].affordable?
						waitcastrt?
						Spell[113].cast() 
						sleep 3
				else
					$huntpro_return_why = "You were diseased."
					$huntpro_action = 99
				end
			end

			if checkprone
				fput "stand"
			end
			
			$huntpro_heal_toggle = 0 if Wounds.head <= 1 && Wounds.neck <= 1 && Wounds.abs <= 1 && Wounds.lhand <= 1 && Wounds.rhand <= 1 && Wounds.larm <= 1 && Wounds.rarm <= 1 && Wounds.chest <= 1 && Wounds.back <= 1 && Wounds.rleg <= 1 && Wounds.lleg <= 1 && Wounds.nerves <= 1 && Wounds.torso <= 1 && Wounds.leye <= 1 && Wounds.reye <= 1 && Scars.head <= 1 && Scars.neck <= 1 && Scars.abs <= 1 && Scars.lhand <= 1 && Scars.rhand <= 1 && Scars.larm <= 1 && Scars.rarm <= 1 && Scars.chest <= 1 && Scars.back <= 1 && Scars.rleg <= 1 && Scars.lleg <= 1 && Scars.nerves <= 1 && Scars.torso <= 1 && Scars.leye <= 1 && Scars.reye <= 1
}

huntpro_group_status_check = proc {
	
	if $huntpro_group_quiet == "1"
		nil
		
	else
			if checkdead
				do_client ";chat to #{$huntpro_captain} Dead"
				Script.kill "huntpro"
				exit
			end

			#Wrack Check Goes Here
			Huntpro_toolkit.wrack_checker if $huntpro_my_society == "Col" && percentmana <= 24
				
			if percentmana <= 10
			
				do_client ";chat to #{$huntpro_captain} #{Char.name} needs MANA" if $huntpro_group_sharemana != "0"
				sleep 10
			end

			
		
	
	


			if percentstamina <= 10
				do_client ";chat to #{$huntpro_captain} I'm running low on stamina."
				sleep 10
			end

			if percentspirit <= 10
				do_client ";chat to #{$huntpro_captain} I'm running low on spirit."
				sleep 10
			end

			if percentencumbrance >= $huntpro_value_encumbrance.to_i
				if huntpro_setting_disable_encumbrance != "0"
					nil
				else
					do_client ";chat to #{$huntpro_captain} I have encumbrance."
					sleep 10
				end
			end

			
			if checkstunned
				do_client ";chat to #{$huntpro_captain} I'm stunned." unless $huntpro_no_stun == "1"
				sleep 10
			end

			if checkwebbed
				do_client ";chat to #{$huntpro_captain} I'm webbed."
				sleep 10
			end

			if checkbound
				do_client ";chat to #{$huntpro_captain} I'm bound."
				sleep 10
			end

			if checkpoison
				
				if Spell[114].known? && Char.level >= 14 && Spell[114].affordable?
					waitcastrt?
					Spell[114].cast() 
					sleep 3
				else
					do_client ";chat to #{$huntpro_captain} #{Char.name} is poisoned"
					sleep 10
				end
			end

			if checkdisease
				if Spell[113].known? && Char.level >= 13 && Spell[113].affordable?
					waitcastrt?
					Spell[113].cast() 
					sleep 3
				else
					do_client ";chat to #{$huntpro_captain} #{Char.name} is diseased"
					sleep 10
				end
			end
			
			
	end
	
	if checkprone
		
		fput "stand"
	end
	

	if percenthealth <= 50
		if huntpro_setting_empath_self_heal != "0" && Char.prof == "Empath" && checkmana >= 10
			fput "cure"
		elsif $huntpro_use_herbs == "1"
				$huntpro_heal_toggle = 1
				Huntpro_toolkit.combat_use_herbs
		else	
			do_client ";chat to #{$huntpro_captain} Low Health."
			sleep 10
		end
	end
			
			
	
	if huntpro_setting_empath_self_heal != "0" && Char.prof == "Empath"
		if Wounds.head >= 1 || Wounds.neck >= 1 || Wounds.abs >= 1 || Wounds.lhand >= 1 || Wounds.rhand >= 1 || Wounds.larm >= 1 || Wounds.rarm >= 1 || Wounds.chest >= 1 || Wounds.back >= 1 || Wounds.rleg >= 1 || Wounds.lleg >= 1 || Wounds.nerves >= 1 || Wounds.torso >= 1 || Wounds.leye >= 1 || Wounds.reye >= 1 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
			Huntpro_toolkit.empath_self_heal
		end
	elsif $huntpro_empath_self_heal = "1" && Char.prof == "Empath"
		if Wounds.head >= 1 || Wounds.neck >= 1 || Wounds.abs >= 1 || Wounds.lhand >= 1 || Wounds.rhand >= 1 || Wounds.larm >= 1 || Wounds.rarm >= 1 || Wounds.chest >= 1 || Wounds.back >= 1 || Wounds.rleg >= 1 || Wounds.lleg >= 1 || Wounds.nerves >= 1 || Wounds.torso >= 1 || Wounds.leye >= 1 || Wounds.reye >= 1 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
			Huntpro_toolkit.empath_self_heal
		end
	end
	
	if $huntpro_heal_toggle == 0
		sleep 0.05
		if $huntpro_use_herbs == "1"
		
			if Wounds.head >= 2 || Wounds.neck >= 2 || Wounds.abs >= 2 || Wounds.lhand >= 2 || Wounds.rhand >= 2 || Wounds.larm >= 2 || Wounds.rarm >= 2 || Wounds.chest >= 2 || Wounds.back >= 2 || Wounds.rleg >= 2 || Wounds.lleg >= 2 || Wounds.nerves >= 2 || Wounds.torso >= 2 || Wounds.leye >= 2 || Wounds.reye >= 2 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
				$huntpro_heal_toggle = 1
				Huntpro_toolkit.combat_use_herbs
			end
			
		elsif Wounds.head >= 2 || Wounds.neck >= 2 || Wounds.abs >= 2 || Wounds.lhand >= 2 || Wounds.rhand >= 2 || Wounds.larm >= 2 || Wounds.rarm >= 2 || Wounds.chest >= 2 || Wounds.back >= 2 || Wounds.rleg >= 2 || Wounds.lleg >= 2 || Wounds.nerves >= 2 || Wounds.torso >= 2 || Wounds.leye >= 2 || Wounds.reye >= 2 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
			do_client ";chat to #{$huntpro_captain} I'm injured." unless $huntpro_group_quiet == "1"
			sleep 10
			
		end
		
	elsif $huntpro_heal_toggle == 1
		sleep 0.05
		$huntpro_heal_toggle = 0
		if Wounds.head >= 2 || Wounds.neck >= 2 || Wounds.abs >= 2 || Wounds.lhand >= 2 || Wounds.rhand >= 2 || Wounds.larm >= 2 || Wounds.rarm >= 2 || Wounds.chest >= 2 || Wounds.back >= 2 || Wounds.rleg >= 2 || Wounds.lleg >= 2 || Wounds.nerves >= 2 || Wounds.torso >= 2 || Wounds.leye >= 2 || Wounds.reye >= 2 || Scars.head >= 2 || Scars.neck >= 2 || Scars.abs >= 2 || Scars.lhand >= 2 || Scars.rhand >= 2 || Scars.larm >= 2 || Scars.rarm >= 2 || Scars.chest >= 2 || Scars.back >= 2 || Scars.rleg >= 2 || Scars.lleg >= 2 || Scars.nerves >= 2 || Scars.torso >= 2 || Scars.leye >= 2 || Scars.reye >= 2
			do_client ";chat to #{$huntpro_captain} I'm injured." unless $huntpro_group_quiet == "1"
			sleep 10
		end
	end

}


huntpro_gameobj_check = proc {



#if $huntpro_auto_cloud_check == 1
	Huntpro_toolkit.cloud_check
#end

#if $huntpro_auto_void_check == 1
	Huntpro_toolkit.void_check
#end

#if $huntpro_auto_vine_check == 1
	Huntpro_toolkit.vine_check
#end

	Huntpro_toolkit.sandstorm_check

#if $huntpro_auto_web_check == 1
	Huntpro_toolkit.web_check
#end

Huntpro_toolkit.arm_check
Huntpro_toolkit.tempest_check


}	

huntpro_upkeep_buffs = proc {
	
	sleep 0.2
	
	if huntpro_setting_upkeep140 == "0"
		nil
	else
		#Divergence
		if $huntpro_divergence == "1"
			if $huntpro_140_divergence == "1"
				nil
			else
				Spell[140].cast() if Spell[140].known? && Char.level >= 40 && Spell[140].affordable?  unless Spell.active? "140"
				$huntpro_140_divergence = "1"
			end
		else
			
			Spell[140].cast() if Spell[140].known? && Char.level >= 40 && Spell[140].affordable?  unless Spell.active? "140"
			
		end
	end
	
	if huntpro_setting_upkeep240 == "0"
		nil
	else
		#Divergence
		if $huntpro_divergence == "1"
			if $huntpro_240_divergence == "1"
				nil
			else
				Spell[240].cast() if Spell[240].known? && Char.level >= 40 && Spell[240].affordable?  unless Spell.active? "240"
				$huntpro_240_divergence = "1"
			end
		else
			Spell[240].cast() if Spell[240].known? && Char.level >= 40 && Spell[240].affordable?  unless Spell.active? "240"
		end
	end

	if huntpro_setting_upkeep515 == "0"
		nil
	else
		if Char.prof != "Wizard"
			nil
		else
			waitcastrt?
			if Spell.active? "599"
				nil
			elsif Spell.active? "515"
				nil
			else
				Spell[515].cast() if Spell[515].known? && Spell[515].affordable?
				sleep 0.25
			end
		end
	end

	if huntpro_setting_upkeep919 == "0"
		nil
	else
		if Char.prof != "Wizard"
			nil
		else
			waitcastrt?
			if Spell.active? "919"
				nil
			else
				Spell[919].cast() if Spell[919].known? && Spell[919].affordable?
			end
		end
	end

	#Wizards >= 30 will upkeep 515
	if Char.prof == "Wizard" && Char.level >= 30
			waitcastrt?
				if Spell.active? "599"
					nil
				elsif Spell.active? "515"
					nil
				else
					sleep 0.25
					Spell[515].cast() if Spell[515].known? && Spell[515].affordable?			
				end
	end

	if huntpro_setting_upkeep1035 == "0"
		nil
	else
		Spell[1035].cast() if Spell[1035].known? && Char.level >= 35 && Spell[1035].affordable?  unless Spell.active? "1035"
		
	end

	#Dangerous Upkeep 140

	if $huntpro_my_area =~ /rift4|northscatter|southscatter|tiotfnorth|teraswelemental|terasradical|terassentry/
		waitcastrt?
		Spell[140].cast() if Spell[140].known? && Char.level >= 40 && Spell[140].affordable?  unless Spell.active? "140"
		waitcastrt?
	end	
		
	#Dangerous Upkeep 240	
	if $huntpro_my_area =~ /rift4|northscatter|southscatter|tiotfnorth/
		waitcastrt?
		Spell[240].cast() if Spell[240].known? && Char.level >= 40 && Spell[240].affordable?  unless Spell.active? "240"
		waitcastrt?
	end
	
	#Dangerous Upkeep 919
	if $huntpro_my_area =~ /northscatter|southscatter|rift1|rift2|rift3|rift4|rift5|wlillokeelder|tiotfnorth|tiithzir|tiotfwest/
		waitcastrt?
		Spell[919].cast() if Spell[919].known? && Char.level >= 19 && Spell[919].affordable?  unless Spell.active? "919"
		waitcastrt?
	end
}


huntpro_run_script = proc {
if Script.exists? "#{huntpro_setting_run_script}"
	do_client ";#{huntpro_setting_run_script}" unless huntpro_setting_run_script == "0"
end
if Script.exists? "#{huntpro_setting_run_script2}"
do_client ";#{huntpro_setting_run_script2}" unless huntpro_setting_run_script2 == "0"
end
if Script.exists? "#{huntpro_setting_run_script3}"
do_client ";#{huntpro_setting_run_script3}" unless huntpro_setting_run_script3 == "0"
end

if $huntpro_my_style =~ /1|2|3|4|5|6|7|8/
	do_client ";reactive"
end

if huntpro_setting_character_society =~ /Voln/
	do_client ";symbolz" unless $huntpro_no_society == "1"
end
if huntpro_setting_character_society =~ /Gos/
	do_client ";isigils" unless $huntpro_no_society == "1"
end
if huntpro_setting_character_society =~ /Col/
	do_client ";isigns" unless $huntpro_no_society == "1"
end

if Char.prof == "Bard"
	do_client ";song-manager"
end

}
huntpro_kill_script = proc {

if Script.exists? "#{huntpro_setting_run_script}"
	Script.kill "#{huntpro_setting_run_script}" unless huntpro_setting_run_script == "0"
end
if Script.exists? "#{huntpro_setting_run_script2}"
Script.kill "#{huntpro_setting_run_script2}" unless huntpro_setting_run_script2 == "0"
end
if Script.exists? "#{huntpro_setting_run_script3}"
Script.kill "#{huntpro_setting_run_script3}" unless huntpro_setting_run_script3 == "0"
end

if $huntpro_my_style =~ /1|2|3|4|5|6|7|8/
	Script.kill "reactive"
end

if huntpro_setting_character_society =~ /Voln/
	Script.kill "symbolz"
end
if huntpro_setting_character_society =~ /Gos/
	Script.kill "isigils"
end
if huntpro_setting_character_society =~ /Col/
	Script.kill "isigns"
end

if Char.prof == "Bard"
	Script.kill "song-manager"
end
}
huntpro_ready_gear = proc {

	if Char.name == "Coirpre"
		if checkleft == "harp"
			fput "stow left"
		end
		if checkright == "harp"
			fput "stow right"
		end
	end
	if $huntpro_my_style == "9"
		if Char.name == "Delyorik"
			Huntpro_toolkit.stow_all
			fput "ready weapon"
			fput "ready shield"
		else
			Huntpro_toolkit.stow_all
			fput "ready weapon"
		end
	elsif $huntpro_my_style == "8"
		Huntpro_toolkit.stow_all
		fput "ready ranged"
	elsif $huntpro_my_style == "7"
		Huntpro_toolkit.stow_all
		fput "ready ranged"
	elsif $huntpro_my_style == "6"
		Huntpro_toolkit.stow_all
		fput "ready ranged"
	elsif $huntpro_my_style == "5"
		Huntpro_toolkit.stow_all
		fput "ready ranged"
	elsif $huntpro_my_style == "4"
		Huntpro_toolkit.stow_all
		fput "ready weapon"
		fput "ready 2weapon"
		fput "ready shield"
	elsif $huntpro_my_style == "3"
		Huntpro_toolkit.stow_all
		fput "ready weapon"
		fput "ready 2weapon"
		fput "ready shield"
	elsif $huntpro_my_style == "2"
		Huntpro_toolkit.stow_all
	elsif $huntpro_my_style == "1"
		if Char.prof == "Bard"
			Huntpro_toolkit.stow_all
			fput "ready weapon"
			fput "tell weapon to attack"
		else
			Huntpro_toolkit.stow_all
		end
	end
	
	if huntpro_setting_use_shield == "0"
		nil
	else
		fput "ready shield"
	end
}

huntpro_group_check = proc {
if $huntpro_group_ai == "1"
	#respond "Debug Output - Group Mode Is Active, checking for group members."
		
		#if $huntpro_my_area =~ /rift1|rift2|rift3|rift4|rift5|northscatter|southscatter/
			#Spell[213].cast() if Spell[213].known? && Char.level >= 13 && Spell[213].affordable?
		#end
		
		until GameObj.pcs.length >= $huntpro_group_array.length
			respond "Waiting for group members to arrive."
			sleep 3
		end
		
	if huntpro_setting_group_nine == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_nine}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_nine}"
		end
	end
	
	if huntpro_setting_group_eight == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_eight}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_eight}"
		end
	end
	
	if huntpro_setting_group_seven == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_seven}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_seven}"
		end
	end
	
	if huntpro_setting_group_six == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_six}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_six}"
		end
	end
	
	if huntpro_setting_group_five == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_five}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_five}"
		end
	end
	
	if huntpro_setting_group_four == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_four}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_four}"
		end
	end
	
	if huntpro_setting_group_three == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_three}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_three}"
		end
	end

	if huntpro_setting_group_two == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_two}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_two}"
		end
	end
	
	if huntpro_setting_group_one == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_one}"
			$huntpro_group_counter = $huntpro_group_counter +1
			fput "hold #{huntpro_setting_group_one}"
		end
	end
else
	nil	
end

if $huntpro_group_counter == $huntpro_group_array.length
	nil
else
	respond "Not all group members are here.  Holding hands and waiting for more."
	$huntpro_group_counter = 0
	sleep 3
end


}

huntpro_soft_group = proc {

	if huntpro_setting_group_nine == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_nine}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_nine} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end
	
	if huntpro_setting_group_eight == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_eight}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_eight} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end
	
	if huntpro_setting_group_seven == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_seven}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_seven} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end
	
	if huntpro_setting_group_six == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_six}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_six} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end
	
	if huntpro_setting_group_five == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_five}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_five} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end

	if huntpro_setting_group_four == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_four}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_four} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end

	if huntpro_setting_group_three == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_three}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_three} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end
	
	if huntpro_setting_group_two == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_two}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_two} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end
	
	if huntpro_setting_group_one == "0"
		nil
	else
		if checkpcs "#{huntpro_setting_group_one}"
			nil
		else
			respond "#{Char.name}, I'm missing #{huntpro_setting_group_one} from the group."
			$huntpro_group_counter = 0
			sleep 1
		end
	end



}

huntpro_group_cluster = proc {

if $huntpro_group_ai == "1"
	huntpro_soft_group.call
	if $huntpro_group_counter == 0
		until $huntpro_group_counter == $huntpro_group_array.length
			huntpro_group_check.call
			sleep 0.5
			
			if $huntpro_group_shareinfo == "0"
				fput "whisper ooc group We are hunting in a level #{$huntpro_my_area_level} Zone."
				fput "whisper ooc group Prepare for #{$huntpro_my_area_type} creatures."
				$huntpro_group_shareinfo = "1"
			end
		end
	end
end


}
huntpro_group_support = proc {

if $huntpro_group_ai == "0"
	nil
else

	if $huntpro_group_empath != "0"
		nil
	else
		if Char.prof == "Empath" && $huntpro_group_ai != "0"
			sleep 0.5
			do_client ";chat to #{$huntpro_captain} #{Char.name} EMPATH" unless $huntpro_captain == "#{Char.name}"
			$huntpro_group_empath = "#{Char.name}"
		end
	end

	#Thanks to Darkcipher for making ;unstun.  This routine is a slightly modified version of it.
	if(!checkstunned && !checkdead && players = GameObj.pcs)
		players.each do |p|
		waitcastrt?
		
			if p.status =~ /stun/i
				#respond "#{p.noun} is stunned."
				if Spell[108].known? && Spell[108].affordable? && Char.level >= 8
					fput "prep 108"
					fput "cast " + p.noun
				end
				sleep 3
			elsif p.status =~ /dead/i
				#respond "#{p.noun} is dead."
			elsif p.status =~ /lying down/i
				fput "pull " + p.noun
				sleep 3
			end
		end
		pause 0.1
	end
	
	if $huntpro_buff_padding >= 0 && $huntpro_buff_padding <= 9
		$huntpro_buff_padding = $huntpro_buff_padding + 1
		
	elsif $huntpro_buff_padding >= 10
	
		if Skills.slblessings >= 65 && Spell[215].known? && Spell[215].affordable?
			if $huntpro_group_upkeep215 == "0"
				waitcastrt?
				Spell[215].cast() if Spell[215].known? && Char.level >= 15 && Spell[215].affordable?
				$huntpro_group_upkeep215 = "1"
			end
		end
		
		if Skills.slblessings >= 50 && Spell[211].known? && Spell[211].affordable?
			if $huntpro_group_upkeep211 == "0"
				waitcastrt?
				Spell[211].cast() if Spell[211].known? && Char.level >= 11 && Spell[211].affordable?
				$huntpro_group_upkeep211 = "1"
			end
		end
		
		pause 0.1
		
	end
	
end




}



huntpro_setup = proc {

	huntpro_load_settings.call unless $huntpro_consider_setup == "1"
	
	respond "Hello #{Char.name}!  Your profession is #{Char.prof} and you're level #{Char.level}."
	respond "Society: #{huntpro_setting_character_society}"
	respond "Version: #{huntpro_version}"
	respond
	respond "Left Hand Equipment: #{huntpro_setting_left_hand_detect}" unless huntpro_setting_left_hand_detect == "0"
	respond "Right Hand Equipment: #{huntpro_setting_right_hand_detect}" unless huntpro_setting_right_hand_detect == "0"
	respond
	respond "For Setup Option List visit Huntpro Help: http://tinyurl.com/huntprohelp"
	respond
	
	#Force Creature Skip
	if huntpro_setting_force_skip_list == "0"
		nil
	else
		if huntpro_setting_force_skip_list != "0" && huntpro_setting_force_skip_list2 != "0" && huntpro_setting_force_skip_list3 != "0"
			respond "You're currently ignoring these creatures: #{huntpro_setting_force_skip_list}, #{huntpro_setting_force_skip_list2}, #{huntpro_setting_force_skip_list3}."
		elsif huntpro_setting_force_skip_list != "0" && huntpro_setting_force_skip_list2 != "0" && huntpro_setting_force_skip_list3 == "0"
			respond "You're currently ignoring these creatures: #{huntpro_setting_force_skip_list}, #{huntpro_setting_force_skip_list2}."
		else
			respond "You're currently ignoring these creatures: #{huntpro_setting_force_skip_list}."
		end
	end
	
	#Compound Ignore  (Skip earth elementals, but fight greaters or vice versa.)
	
	if huntpro_setting_compound_ignore == "0"
		nil
	else
		respond "You're currently ignoring this compound creature: #{huntpro_setting_compound_ignore}."
	end
	
	#Run Scripts
	if huntpro_setting_run_script == "0"
		nil
	else
		if huntpro_setting_run_script != "0" && huntpro_setting_run_script2 != "0" && huntpro_setting_run_script3 != "0"
			respond "You will run these scripts during hunting: #{huntpro_setting_run_script}, #{huntpro_setting_run_script2}, #{huntpro_setting_run_script3}."
		elsif huntpro_setting_run_script != "0" && huntpro_setting_run_script2 != "0" && huntpro_setting_run_script3 == "0"
			respond "You will run these scripts during hunting: #{huntpro_setting_run_script}, #{huntpro_setting_run_script2}."
		else
			respond "You will run these scripts during hunting: #{huntpro_setting_run_script}."
		end
	end
	
	#Empath Self Heal	
	if huntpro_setting_empath_self_heal == "0"
		nil
	else 
		if Char.prof == "Empath"
			respond "With enough resources, you will use healing spells if injured before returning to town."
		else
			nil
		end
	end
	
	if huntpro_setting_voln_fog == "0"
		nil
	else 
		if huntpro_setting_character_society == "Voln"
			respond "You will use the Symbol of Return when finishing a hunt."
		else
			nil
		end
	end
	
	if huntpro_setting_130_fog == "0"
		nil
	else 
		if Spell[130].known? && Char.level >= 30
			respond "You will use Spirit Guide when finishing a hunt."
		else
			nil
		end
	end
	
	if huntpro_setting_1020_fog == "0"
		nil
	else 
		if Spell[1020].known? && Char.level >= 20
			respond "You will use Traveler's Song when finishing a hunt."
		else
			nil
		end
	end
	
	if huntpro_setting_hunt_while_fried == "0"
		nil
	else
		respond "You will continue to hunt while Saturated or Fried."
	end
	
	if huntpro_setting_value_encumbrance == 50
		nil
	else
		respond "Your encumbrance value is #{$huntpro_value_encumbrance} percent."
	end
	
	if huntpro_setting_disable_encumbrance == "0"
		nil
	else
		respond "You will continue to hunt while encumbered."
	end

	if huntpro_setting_wrack == "0"
		nil
	else 
		if Spell[9918].known? && $huntpro_my_society == "Col"
			respond "You will use sign of wracking when low on mana if you have sufficient spirit."
		else
			nil
		end
	end

	if huntpro_setting_upkeep140 == "0"
		nil
	else 
		if Spell[140].known? && Char.level >= 40
			respond "You will upkeep 140 Wall of Force."
		else
			nil
		end
	end
	
	if huntpro_setting_upkeep240 == "0"
		nil
	else 
		if Spell[240].known? && Char.level >= 40
			respond "You will upkeep 240 Spirit Slayer."
		else
			nil
		end
	end
	
	if huntpro_setting_upkeep515 == "0"
		nil
	else 
		if Spell[515].known? && Char.level >= 15
			respond "You will upkeep 515 Rapid Fire."
		else
			nil
		end
	end
	
	if huntpro_setting_upkeep919 == "0"
		nil
	else 
		if Spell[919].known? && Char.level >= 19
			respond "You will upkeep 919 Wizard's Shield."
		else
			nil
		end
	end
	
	if huntpro_setting_upkeep1035 == "0"
		nil
	else 
		if Spell[1035].known? && Char.level >= 35
			respond "You will upkeep 1035 Song of Tonis."
		else
			nil
		end
	end
		
	if huntpro_setting_stay_offensive == "0"
		nil
	else
		respond "You will stay in an offensive stance during combat."
	end
	
	if huntpro_setting_loot_script == "0"
		nil
	else
		respond "Your current chosen loot script is #{huntpro_setting_loot_script}."
	end
	
	if huntpro_setting_spell_default == "0"
		nil
	else
		respond "When using style 9, your default spell choice is #{huntpro_setting_spell_default}."
	end
	
	if huntpro_setting_evoke_default == "0"
		nil
	else
		respond "When using style 9, you will evoke your default spell in offensive."
	end	

	if huntpro_setting_rest_room == "0"
		nil
	else
		respond "Your default resting room is #{huntpro_setting_rest_room}."
	end	
	
	if huntpro_setting_use_shield == "0"
		nil
	else
		respond "You will ready a shield at the start of combat."
	end	
	
	if huntpro_setting_leader == "0"
		nil
	else
		respond "Group features are active. Group leader is #{huntpro_setting_leader}."
	end	
	
	if huntpro_setting_group_one == "0"
		nil
	else
		if huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four != "0" && huntpro_setting_group_five != "0" && huntpro_setting_group_six != "0" && huntpro_setting_group_seven != "0" && huntpro_setting_group_eight != "0" && huntpro_setting_group_nine != "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}, #{huntpro_setting_group_four}, #{huntpro_setting_group_five}, #{huntpro_setting_group_six}, #{huntpro_setting_group_seven}, #{huntpro_setting_group_eight}, #{huntpro_setting_group_nine}."
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four != "0" && huntpro_setting_group_five != "0" && huntpro_setting_group_six != "0" && huntpro_setting_group_seven != "0" && huntpro_setting_group_eight != "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}, #{huntpro_setting_group_four}, #{huntpro_setting_group_five}, #{huntpro_setting_group_six}, #{huntpro_setting_group_seven}, #{huntpro_setting_group_eight}."
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four != "0" && huntpro_setting_group_five != "0" && huntpro_setting_group_six != "0" && huntpro_setting_group_seven != "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}, #{huntpro_setting_group_four}, #{huntpro_setting_group_five}, #{huntpro_setting_group_six}, #{huntpro_setting_group_seven}."		
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four != "0" && huntpro_setting_group_five != "0" && huntpro_setting_group_six != "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}, #{huntpro_setting_group_four}, #{huntpro_setting_group_five}, #{huntpro_setting_group_six}."		
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four != "0" && huntpro_setting_group_five != "0" && huntpro_setting_group_six == "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}, #{huntpro_setting_group_four}, #{huntpro_setting_group_five}."		
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four != "0" && huntpro_setting_group_five == "0" && huntpro_setting_group_six == "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}, #{huntpro_setting_group_four}."		
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three != "0" && huntpro_setting_group_four == "0" && huntpro_setting_group_five == "0" && huntpro_setting_group_six == "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}, #{huntpro_setting_group_three}."		
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two != "0" && huntpro_setting_group_three == "0" && huntpro_setting_group_four == "0" && huntpro_setting_group_five == "0" && huntpro_setting_group_six == "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}, #{huntpro_setting_group_two}."		
		elsif huntpro_setting_group_one != "0" && huntpro_setting_group_two == "0" && huntpro_setting_group_three == "0" && huntpro_setting_group_four == "0" && huntpro_setting_group_five == "0" && huntpro_setting_group_six == "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			respond "You're the group leader and being followed by #{huntpro_setting_group_one}."		
		elsif huntpro_setting_group_one == "0" && huntpro_setting_group_two == "0" && huntpro_setting_group_three == "0" && huntpro_setting_group_four == "0" && huntpro_setting_group_five == "0" && huntpro_setting_group_six == "0" && huntpro_setting_group_seven == "0" && huntpro_setting_group_eight == "0" && huntpro_setting_group_nine == "0"
			nil
		end
	
	end	
	
	if huntpro_setting_group_quiet == "0"
		nil
	else
		respond "As a group follower, you will not alert the leader of status conditions."
	end
	
	if huntpro_setting_group_peace == "0"
		nil
	else
		respond "As a group follower, you are peaceful and will not attack during combat."
	end
	
	if huntpro_setting_group_sharemana == "0"
		nil
	else
		respond "You will ask for and share mana in a group."
	end 

	if huntpro_setting_combat_cleanup == "0"
		nil
	else
		respond "You will run ;huntpro cleanup at the end of your hunt."
	end	
	
	if huntpro_setting_no_waggle == "0"
		nil
	else
		respond "You will skip ;waggle during cleanup feature."
	end
	

	if huntpro_setting_crowd_control == "0"
		nil
	else
		respond "You will use crowd control options during combat."
	end	
	
	if huntpro_setting_no_crowd_control == "0"
		nil
	else
		respond "Override: You will not use crowd control/hybrid options."
	end	
	
	if huntpro_setting_cman_control == "0"
		nil
	else
		respond "You will use Combat Maneuvers feature."
	end	
	
	if huntpro_setting_no_cman_control == "0"
		nil
	else
		respond "Override: You will not use Combat Maneuvers feature."
	end	
	
	
	
	if huntpro_setting_no_society == "0"
		nil
	else
		respond "Override: You will not use society scripts or society crowd control abilities."
	end	
	
	if huntpro_setting_no_stun == "0"
		nil
	else
		respond "Override: You will ignore getting stunned."
	end	
	
	if huntpro_setting_bounty_noherb == "0"
		nil
	else
		respond "Bounty Option: You will not complete herb bounties."
	end	
	
	if huntpro_setting_bounty_noskin == "0"
		nil
	else
		respond "Bounty Option: You will not complete skin bounties."
	end	
	$huntpro_consider_setup = "0"
	
	if huntpro_setting_force_target == "0"
		nil
	else
		respond "Override: You will focus on killing this creature: #{$huntpro_force_target}."
		respond "          Reminder: This disables default bounty targets & ignores built in priority logic."
		respond "                    The ftarget option takes priority over blite option."
		respond "                    You can disable this feature with ;huntpro setup change ftarget 0 "
	end	
	
	if huntpro_setting_bounty_lite == "0"
		nil
	else
		respond "Override: When you're on a bounty, you'll hunt all creatures in that zone."
		respond "          Reminder: The ftarget option takes priority over blite option."
	end
	
	if huntpro_setting_no_cock == "0"
		nil
	else
		respond "You will not COCK a ranged weapon during combat."
	end
	
	if huntpro_setting_no_herbs == "0"
		nil
	else
		respond "You will not use the combat herb feature for any zone."
	end
	
	if huntpro_setting_use_herbs == "0"
		nil
	else
		respond "You will use the combat herb feature for all zones."
	end
	
	
}	


#########################################
#########################################

#Start of Script

#########################################
#########################################


#New User Check
if Script.exists? ('intel_huntpro')
	nil
else
	Huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, I am updating your script. Please stand by for just a moment."
	Huntpro_toolkit.bottom_menu
	Script.run('repository', 'download intel_huntpro.lic')
	Script.run('intel_huntpro', 'update_all')
	exit
end

#Script Dependency Check

if Script.exists? ('go2name')
	nil
else
	Script.run('repository', 'download go2name.lic')
end

#Update Check
if script.vars[1].downcase =~ /update/
	Huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, I am updating your script. Please stand by for just a moment."
	Huntpro_toolkit.bottom_menu
	Script.run('repository', 'download intel_huntpro.lic')
	Script.run('intel_huntpro', 'update_all')
	exit
end

#Equipment Reset

if script.vars[1].downcase =~ /ereset/

	#Equipment Settings
	
	Settings[Char.name]['huntpro_setting_right_hand_detect'] = "0"
	Settings[Char.name]['huntpro_setting_left_hand_detect'] = "0"
	sleep 1
	Settings.save
	sleep 1
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, Equipment Settings have been reset."
	Huntpro_toolkit.bottom_menu
	exit
end
	
#Group Reset
if script.vars[1].downcase =~ /greset/
	Huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, I am resetting your Group settings.  Please stand by for just a moment."
	Huntpro_toolkit.bottom_menu
	Settings[Char.name]['huntpro_setting_leader']	= "0"
	Settings[Char.name]['huntpro_setting_group_one']	= "0"
	Settings[Char.name]['huntpro_setting_group_two']	= "0"
	Settings[Char.name]['huntpro_setting_group_three']	= "0"
	Settings[Char.name]['huntpro_setting_group_four']	= "0"
	Settings[Char.name]['huntpro_setting_group_five']	= "0"
	Settings[Char.name]['huntpro_setting_group_six']	= "0"
	Settings[Char.name]['huntpro_setting_group_seven']	= "0"
	Settings[Char.name]['huntpro_setting_group_eight']	= "0"
	Settings[Char.name]['huntpro_setting_group_nine']	= "0"
	Settings[Char.name]['huntpro_setting_group_quiet']	= "0"
	Settings[Char.name]['huntpro_setting_group_peace']	= "0"
	Settings[Char.name]['huntpro_setting_group_sharemana']	= "0"
	
	sleep 1
	Settings.save
	sleep 1
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, Settings have been reset."
	Huntpro_toolkit.bottom_menu
	exit
end


#Reset Check
if script.vars[1].downcase =~ /reset/
	Huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, I am resetting your settings.  Please stand by for just a moment."
	Huntpro_toolkit.bottom_menu
	
	Settings[Char.name]['huntpro_setting_leader']	= "0"
	Settings[Char.name]['huntpro_setting_group_one']	= "0"
	Settings[Char.name]['huntpro_setting_group_two']	= "0"
	Settings[Char.name]['huntpro_setting_group_three']	= "0"
	Settings[Char.name]['huntpro_setting_group_four']	= "0"
	Settings[Char.name]['huntpro_setting_group_five']	= "0"
	Settings[Char.name]['huntpro_setting_group_six']	= "0"
	Settings[Char.name]['huntpro_setting_group_seven']	= "0"
	Settings[Char.name]['huntpro_setting_group_eight']	= "0"
	Settings[Char.name]['huntpro_setting_group_nine']	= "0"
	Settings[Char.name]['huntpro_setting_group_quiet']	= "0"
	Settings[Char.name]['huntpro_setting_group_peace']	= "0"
	Settings[Char.name]['huntpro_setting_group_sharemana']	= "0"
		
	Settings[Char.name]['huntpro_setting_profile_detection']	= "0"
	Settings[Char.name]['huntpro_setting_character_society']	= "0"
	Settings[Char.name]['huntpro_setting_force_target']	= "0"
	Settings[Char.name]['huntpro_setting_force_skip_list']	= "0"
	Settings[Char.name]['huntpro_setting_force_skip_list2']	= "0"
	Settings[Char.name]['huntpro_setting_force_skip_list3']	= "0"
	Settings[Char.name]['huntpro_setting_compound_ignore']	= "0"
	Settings[Char.name]['huntpro_setting_empath_self_heal']	= "0"
	Settings[Char.name]['huntpro_setting_voln_fog']	= "0"
	Settings[Char.name]['huntpro_setting_130_fog']	= "0"
	Settings[Char.name]['huntpro_setting_1020_fog']	= "0"
	Settings[Char.name]['huntpro_setting_hunt_while_fried']	= "0"
	Settings[Char.name]['huntpro_setting_value_encumbrance']	= 50
	Settings[Char.name]['huntpro_setting_disable_encumbrance']	= "0"
	
	Settings[Char.name]['huntpro_setting_wrack']	= "0"
	Settings[Char.name]['huntpro_setting_upkeep140']	= "0"
	Settings[Char.name]['huntpro_setting_upkeep240']	= "0"
	Settings[Char.name]['huntpro_setting_upkeep515']	= "0"
	Settings[Char.name]['huntpro_setting_upkeep919']	= "0"
	Settings[Char.name]['huntpro_setting_upkeep1035']	= "0"
	Settings[Char.name]['huntpro_setting_run_script']	= "0"
	Settings[Char.name]['huntpro_setting_run_script2']	= "0"
	Settings[Char.name]['huntpro_setting_run_script3']	= "0"
	Settings[Char.name]['huntpro_setting_stay_offensive']	= "0"
	Settings[Char.name]['huntpro_setting_loot_script']	= "0"
	Settings[Char.name]['huntpro_setting_spell_default']	= "0"
	Settings[Char.name]['huntpro_setting_evoke_default']	= "0"
	Settings[Char.name]['huntpro_setting_rest_room']	= "0"
	Settings[Char.name]['huntpro_setting_use_shield']	= "0"
	Settings[Char.name]['huntpro_setting_combat_cleanup']	= "0"
	Settings[Char.name]['huntpro_setting_no_society'] = "0"
	Settings[Char.name]['huntpro_setting_crowd_control'] = "0"
	Settings[Char.name]['huntpro_setting_no_crowd_control'] = "0"
	Settings[Char.name]['huntpro_setting_no_stun'] = "0"
	Settings[Char.name]['huntpro_setting_no_cock'] = "0"
	Settings[Char.name]['huntpro_setting_no_waggle'] = "0"
	Settings[Char.name]['huntpro_setting_no_herbs'] = "0"
	Settings[Char.name]['huntpro_setting_use_herbs'] = "0"
	
	#Cman
	Settings[Char.name]['huntpro_setting_cman_control'] = "0"
	Settings[Char.name]['huntpro_setting_no_cman_control'] = "0"
	
	#Bounty Settings
	Settings[Char.name]['huntpro_setting_bounty_noherb'] = "0"
	Settings[Char.name]['huntpro_setting_bounty_noskin'] = "0"
	Settings[Char.name]['huntpro_setting_bounty_lite'] = "0"
	
	#Equipment Settings
	
	Settings[Char.name]['huntpro_setting_right_hand_detect'] = "0"
	Settings[Char.name]['huntpro_setting_left_hand_detect'] = "0"
	
	
	
	sleep 1
	Settings.save
	sleep 1
	Huntpro_toolkit.top_menu
	respond "#{Char.name}, Settings have been reset."
	Huntpro_toolkit.bottom_menu
	exit
end

#Styles Check

if script.vars[1].downcase =~ /styles|style/
Huntpro_toolkit.top_menu
respond "Style List:"
respond "        - Style 1 - UAC Brawling"
respond "STEALTH - Style 2 - UAC Brawling"
respond "        - Style 3 - Melee (1H, 2H, Shield)"
respond "STEALTH - Style 4 - Melee (1H, 2H, Shield)"
respond "        - Style 5 - Bow + Arrow"
respond "STEALTH - Style 6 - Bow + Arrow"
respond "        - Style 7 - Crossbow + Bolt"
respond "STEALTH - Style 8 - Crossbow + Bolt"
respond "        - Style 9 - Magic (Excludes: Warriors, Rogues, Monks)"
Huntpro_toolkit.bottom_menu
exit

end

#Help Check
if script.vars[1].downcase =~ /help/
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.help
	respond
	respond "Version: #{huntpro_version}"
	Huntpro_toolkit.bottom_menu
	exit
end

#Level 0 Check

if Char.level == 0
	Huntpro_toolkit.level0
end


#Nil Check
if script.vars[1].downcase == nil
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.help
	respond
	respond "Version: #{huntpro_version}"
	Huntpro_toolkit.bottom_menu
	exit
end

#Setup Check

if script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /cignore/
	if script.vars[4].downcase != nil && script.vars[5].downcase == nil && script.vars[6].downcase == nil
		$huntpro_compound_ignore = script.vars[4].downcase
	elsif script.vars[4].downcase != nil && script.vars[5].downcase != nil && script.vars[6].downcase == nil
		$huntpro_compound_ignore = "#{script.vars[4].downcase}" + " #{script.vars[5].downcase}"
	elsif script.vars[4].downcase != nil && script.vars[5].downcase != nil && script.vars[6].downcase != nil
		$huntpro_compound_ignore = "#{script.vars[4].downcase}" + " #{script.vars[5].downcase}" + " #{script.vars[6].downcase}"
	end

	Settings[Char.name]['huntpro_setting_compound_ignore']	= $huntpro_compound_ignore
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /ignore/
	Settings[Char.name]['huntpro_setting_force_skip_list']	= "#{script.vars[4].downcase}"
	Settings[Char.name]['huntpro_setting_force_skip_list2']	= "#{script.vars[5].downcase}" unless script.vars[5].downcase == nil
	Settings[Char.name]['huntpro_setting_force_skip_list3']	= "#{script.vars[6].downcase}" unless script.vars[6].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit



elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /scripts/
	Settings[Char.name]['huntpro_setting_run_script']	= "#{script.vars[4].downcase}"
	Settings[Char.name]['huntpro_setting_run_script2']	= "#{script.vars[5].downcase}" unless script.vars[5].downcase == nil
	Settings[Char.name]['huntpro_setting_run_script3']	= "#{script.vars[6].downcase}" unless script.vars[6].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit

elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /selfheal/
	Settings[Char.name]['huntpro_setting_empath_self_heal']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /volnfog/
	Settings[Char.name]['huntpro_setting_voln_fog']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /130fog/
	Settings[Char.name]['huntpro_setting_130_fog']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /1020fog/
	Settings[Char.name]['huntpro_setting_1020_fog']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /fried/
	Settings[Char.name]['huntpro_setting_hunt_while_fried']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /valueencumbrance/
	Settings[Char.name]['huntpro_setting_value_encumbrance']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /encumbrance/
	Settings[Char.name]['huntpro_setting_disable_encumbrance']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /wrack/
	Settings[Char.name]['huntpro_setting_wrack']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit		
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /upkeep140/
	Settings[Char.name]['huntpro_setting_upkeep140']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /upkeep240/
	Settings[Char.name]['huntpro_setting_upkeep240']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /upkeep515/
	Settings[Char.name]['huntpro_setting_upkeep515']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /upkeep919/
	Settings[Char.name]['huntpro_setting_upkeep919']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /upkeep1035/
	Settings[Char.name]['huntpro_setting_upkeep1035']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /offensive/
	Settings[Char.name]['huntpro_setting_stay_offensive']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /loot/
	Settings[Char.name]['huntpro_setting_loot_script']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /spell/
	Settings[Char.name]['huntpro_setting_spell_default']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /evoke/
	Settings[Char.name]['huntpro_setting_evoke_default']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /restroom/
	Settings[Char.name]['huntpro_setting_rest_room']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /shield/
	Settings[Char.name]['huntpro_setting_use_shield']	= "#{script.vars[4].downcase}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /leader/
	Settings[Char.name]['huntpro_setting_leader']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /group/
	Settings[Char.name]['huntpro_setting_group_one']	= "#{script.vars[4]}"
	Settings[Char.name]['huntpro_setting_group_two']	= "#{script.vars[5]}" unless script.vars[5].downcase == nil
	Settings[Char.name]['huntpro_setting_group_three']	= "#{script.vars[6]}" unless script.vars[6].downcase == nil
	Settings[Char.name]['huntpro_setting_group_four']	= "#{script.vars[7]}" unless script.vars[7].downcase == nil
	Settings[Char.name]['huntpro_setting_group_five']	= "#{script.vars[7]}" unless script.vars[8].downcase == nil
	Settings[Char.name]['huntpro_setting_group_six']	= "#{script.vars[7]}" unless script.vars[9].downcase == nil
	Settings[Char.name]['huntpro_setting_group_seven']	= "#{script.vars[7]}" unless script.vars[10].downcase == nil
	Settings[Char.name]['huntpro_setting_group_eight']	= "#{script.vars[7]}" unless script.vars[11].downcase == nil
	Settings[Char.name]['huntpro_setting_group_nine']	= "#{script.vars[7]}" unless script.vars[12].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /gquiet/
	Settings[Char.name]['huntpro_setting_group_quiet']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /gpeace/
	Settings[Char.name]['huntpro_setting_group_peace']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /gshare/
	Settings[Char.name]['huntpro_setting_group_sharemana']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /cleanup/
	Settings[Char.name]['huntpro_setting_combat_cleanup']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit

elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /nosociety/
	Settings[Char.name]['huntpro_setting_no_society']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /nostun/
	Settings[Char.name]['huntpro_setting_no_stun']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /nowaggle/
	Settings[Char.name]['huntpro_setting_no_waggle']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /nocrowd/
	Settings[Char.name]['huntpro_setting_no_crowd_control']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /crowd/
	Settings[Char.name]['huntpro_setting_crowd_control']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit

elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /noherbs/
	Settings[Char.name]['huntpro_setting_no_herbs']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /useherbs/
	Settings[Char.name]['huntpro_setting_use_herbs']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
	
	
	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /nocman/
	Settings[Char.name]['huntpro_setting_no_cman_control']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /cman/
	Settings[Char.name]['huntpro_setting_cman_control']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
	
	
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /bnoherb/
	Settings[Char.name]['huntpro_setting_bounty_noherb']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /bnoskin/
	Settings[Char.name]['huntpro_setting_bounty_noskin']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /blite/
	Settings[Char.name]['huntpro_setting_bounty_lite']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /ftarget/
	Settings[Char.name]['huntpro_setting_force_target']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/ && script.vars[2].downcase =~ /change/ && script.vars[3].downcase =~ /nocock/
	Settings[Char.name]['huntpro_setting_no_cock']	= "#{script.vars[4]}" unless script.vars[4].downcase == nil
	sleep 0.25
	Settings.save
	Huntpro_toolkit.top_menu
	Huntpro_toolkit.confirm_settings
	Huntpro_toolkit.bottom_menu
	exit
elsif script.vars[1].downcase =~ /setup/
	Huntpro_toolkit.top_menu
	huntpro_setup.call
	Huntpro_toolkit.bottom_menu
	exit
end

#Cleanup Check
if script.vars[1].downcase =~ /cleanup/
	huntpro_load_settings.call
	Huntpro_toolkit.intel_check
	Huntpro_toolkit.cleanup
	exit
end

#Nil Room Check

Huntpro_toolkit.check_nil

Huntpro_toolkit.cman_debugger

#Variables load better with a proc compared to oop.
#You can call global variables starting with $ inside oop.
#Can pull setup options through here.
huntpro_load_settings.call

Huntpro_toolkit.cman_debugger

#User Error Trap
huntpro_error_trap.call

#Run Setup Scripts
huntpro_run_script.call

#Ready Gear

huntpro_ready_gear.call

#Initial Intel Check
Huntpro_toolkit.intel_check

fput "cman info" if $huntpro_cman_control == "1" unless $huntpro_no_cman_control != "0"
sleep 1.5 unless $huntpro_no_cman_control != "0"
fput "look" unless $huntpro_no_cman_control != "0"

sleep 2

#Stop looking for your cman abilities.
$huntpro_cman_watch = "0"

#Go to the hunting zone and escape from a nil room
huntpro_hunting_zones.call



	




#Personal Debugger
#huntpro_feedback.call
#Huntpro_toolkit.huntpro_feedback

#Pre Loop Group Check
huntpro_group_cluster.call
#if $huntpro_group_ai == "1"
#	until $huntpro_group_counter == $huntpro_group_array.length
#		huntpro_group_check.call
#		sleep 1
#	end
#end

#Pre Loop Group Fork
if $huntpro_group_ai == "2"
	goto "TAILMODE"
else
	nil
end


loop {
#respond "Debug Output - Loop starting."
#respond "Debug Output - Intel Check."
Huntpro_toolkit.intel_check
#respond "Debug Output - Setup Call."
huntpro_setup.call if $huntpro_consider_setup == "1"
#respond "Debug Output - Status Check 1."
huntpro_status_check.call

#Check for all group members
#respond "Debug Output - Group Cluster."
huntpro_group_cluster.call
#respond "Debug Output - Group Support."
huntpro_group_support.call
#respond "Debug Output - Status Check 2."
#respond "Debug Output - Upkeep Buffs."
huntpro_upkeep_buffs.call
#huntpro_upkeep_society.call
#respond "Debug Output - Status Check 3."
#respond "Debug Output - Game Obj Check."
huntpro_gameobj_check.call

#Huntpro Action Choice

	#respond "Debug Output - Huntpro Action Choice"
	#respond "My $huntpro action is #{$huntpro_action}."
	if $huntpro_action == 0
			$huntpro_action = 6
		
	elsif $huntpro_action == 6
		#respond "Debug Output - Starting Movemgr in loop"
		Huntpro_toolkit.movemgr
		
	elsif $huntpro_action == 7
		#respond "Debug Output - Starting combat in loop"
		if $huntpro_recent_eviction != "0"
			nil
			$huntpro_recent_eviction = "0"
		else
			Huntpro_toolkit.combat
		end
		
	elsif $huntpro_action == 97
	
		huntpro_run_script.call
		
		until GameObj.targets.length < 1
			
			huntpro_upkeep_buffs.call
			Huntpro_toolkit.target_check
			Huntpro_toolkit.combat unless $huntpro_recent_eviction == "1"
			$huntpro_recent_eviction = "0" if $huntpro_recent_eviction == "1"
		
		end
		
		Huntpro_toolkit.oop_script_kill
		
		Huntpro_toolkit.top_menu
		respond "#{Char.name}, no more targets to kill."
		Huntpro_toolkit.bottom_menu
		exit
		
			
			
	elsif $huntpro_action == 98
		#respond "Debug Output - I've been evicted in the loop."
		$huntpro_recent_eviction = "0"
		Huntpro_toolkit.evicted		
		
	elsif $huntpro_action == 99
		#respond "Debug Output - I am being told to go home in the loop."
		#Return to Safe Room
		
		$huntpro_right_hand_detect = "#{checkright}" unless checkright == nil
		$huntpro_left_hand_detect = "#{checkleft}" unless checkleft == nil
		
		Settings[Char.name]['huntpro_setting_right_hand_detect']	= "#{$huntpro_right_hand_detect}" unless $huntpro_right_hand_detect == "0"
		Settings[Char.name]['huntpro_setting_left_hand_detect']	= "#{$huntpro_left_hand_detect}" unless $huntpro_left_hand_detect == "0"
		Settings.save
		
		huntpro_kill_script.call
		
		if $huntpro_my_society == "Voln" && percenthealth <= 50
			waitrt?
			fput "sym restoration"
			fput "sym restoration"
		end
		
		if huntpro_setting_voln_fog != "0" && huntpro_setting_character_society == "Voln"
			fput "symbol of return"
			$huntpro_recent_escape = "1"
			sleep 1
		
		end
		
		#Dangerous Area 130 Escape
		if $huntpro_my_area =~ /rift1|rift2|rift3|rift4|rift5|northscatter|southscatter|tiotfnorth/
			Spell[130].cast() if Spell[130].known? && Char.level >= 30 && Spell[130].affordable? unless $huntpro_recent_escape == "1"
			$huntpro_recent_escape = "1"
			sleep 1
			
		#Jara 130 override.
		elsif Char.name == "Jara" && $huntpro_my_area =~ /solcentaur/
			Spell[130].cast() if Spell[130].known? && Char.level >= 30 && Spell[130].affordable?
			$huntpro_recent_escape = "1"
			sleep 1
		end
		
		
		if huntpro_setting_130_fog != "0"
			Spell[130].cast() if Spell[130].known? && Char.level >= 30 && Spell[130].affordable? unless $huntpro_recent_escape == "1"
			sleep 1
			$huntpro_recent_escape = "0"
		else
			nil
		end
		
		if huntpro_setting_1020_fog != "0"
			Spell[1020].cast() if Spell[1020].known? && Char.level >= 20 && Spell[1020].affordable?
			sleep 1
		else
			nil
		end
		

		
	
		Huntpro_toolkit.safe_room_default	
		
	end


huntpro_zone_reset_check.call

}



TAILMODE:

loop {
Huntpro_toolkit.intel_check
huntpro_setup.call if $huntpro_consider_setup == "1"
huntpro_group_status_check.call
huntpro_group_support.call
huntpro_upkeep_buffs.call

#if checkgrouped

#respond "Debug Output - I'm grouped."
#elsif !checkgrouped && checkpcs "#{$huntpro_captain}"
#respond "Debug Output - I'm not in a group but I'm with the captain."
#elsif !checkgrouped && !checkpcs "#{$huntpro_captain}"
#respond "Debug Output - I'm not in a group and the #captain is missing."
#end


if checkpcs "#{$huntpro_captain}"
	#respond "Debug Output - I'm with the captain."
	sleep 0.1
else
	#respond "Debug Output - Default ELSE, no conditions met."
	respond "#{Char.name}, I've lost the group leader #{$huntpro_captain}."
	fput "group open"
	Huntpro_toolkit.room_nil_walk
	do_client ";go2name #{$huntpro_captain}"
	wait_while {running? "go2"}
	sleep 1
	fput "join #{$huntpro_captain}"
end





result = dothistimeout "look", 5, /#{$huntpro_captain} swings|#{$huntpro_captain} gestures|#{$huntpro_captain} fires|#{$huntpro_captain} attempts to|#{$huntpro_captain} skillfully weaves|#{$huntpro_captain} punches with|#{$huntpro_captain} channels/

	
	if result =~ /#{$huntpro_captain} swings/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
	elsif result =~ /#{$huntpro_captain} gestures/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
	elsif result =~ /#{$huntpro_captain} fires/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
	elsif result =~ /#{$huntpro_captain} attempts to/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
	elsif result =~ /#{$huntpro_captain} skillfully weaves/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
	elsif result =~ /#{$huntpro_captain} punches with/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
	elsif result =~ /#{$huntpro_captain} channels/
		Huntpro_toolkit.target_check unless $huntpro_group_peace == "1"
		Huntpro_toolkit.combat unless $huntpro_group_peace == "1"
		
		
		
	end

if $huntpro_group_peace == "0"
	respond "Group ;huntpro is active. ;ka to stop all scripts. Leader: #{$huntpro_captain}."
	sleep 3
else
	respond "Group ;huntpro is active. You are peaceful and will not attack.  ;ka to stop all scripts. Leader: #{$huntpro_captain}."
	sleep 3
end

}