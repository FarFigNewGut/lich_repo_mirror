# Hot Potato script for when an arctic titan or similar hits you with Weapon Fire.
# Drop it like it's sho'nuff hot.
# author: Emmavaria 

# Release history:
# 16 Oct 2016 - v1.0.0 - First release on ;repository
# 22 Oct 2016 - v1.0.1 - Fixed a bug involving scenario where a weapon won't fit in a disk

# To do: 
# * Better hand detection algorithm if at ALL possible

name = checkname

  # Attempt to detect the presence of a floating disk...
if GameObj[/^.*#{name} (disk)$/] == nil
   echo "Floating disk is NOT DETECTED!\n(Or maybe you're on the move and it just hasn't caught up yet.)\nWeapon fire will be avoided by dropping your weapon on the ground!  To avoid this terrible fate, obtain a disk and then restart hotpot.\nCasting a disk now will NOT cause it to be retroactively recognised without a restart."
   disk = false
else
   disknum = "#"+GameObj[/^.*#{name} (disk)$/].id
   diskname = GameObj[/^.*#{name} (disk)$/].name
   echo "Floating disk detected: "+disknum+", \"the "+diskname+"\"."
   disk = true
end


# Let the user know the script has loaded.  Make them feel safe.  Comfortable.
echo "Waiting for weapon fire.  I got your back, "+name+"."

start:
# Wait for it...
weapon, mob = matchfind "^Your ? is struck with ?'s cast."
# Hot potato!

# Weapon name is probably multiple words.  While a regex search for whitespace is successful,
# trim the leading word (and the whitespace at the end of it).  Repeat until no more whitespace.
while offset = weapon =~ /\s/ do
   idx = weapon.bytesize
   offset = weapon =~ /\s/
   offset = offset +1
   weapon = weapon[offset..idx]
end

# Try and determine which hand was hit by the weapon fire
# First we'll see if the weapon variable matches the name or noun of the right hand's contents
if GameObj.right_hand.name == "Empty"
   rh_match = false
else
   if GameObj.right_hand.name == weapon || GameObj.right_hand.noun == weapon
      rh_match = true
   else
      rh_match = false
   end
end

# Next we'll see if the weapon variable matches the name or noun of the left hand's contents
if GameObj.left_hand.name == "Empty"
   lh_match = false
else
   if GameObj.left_hand.name == weapon || GameObj.left_hand.noun == weapon
      lh_match = true
   else
      lh_match = false
   end
end

# Figure out which weapon is the hot potato based upon the checks above.
# Boy it'd be nice if gameobj.right_hand.status just reflected the weapon fire instead of having
# to use these hacky workarounds.
case
when lh_match == true && rh_match == false
   dropme = "#"+GameObj.left_hand.id
when lh_match == false && rh_match == true
   dropme = "#"+GameObj.right_hand.id.to_s
when lh_match == true && rh_match == true
   # Logically, morally, ethically, and aesthetically, This Is Wrong.  But we have nothing else to
   # go on than the fact that my testing has showed Weapon Fire hitting the right hand *way* more 
   # often than the left.  It could be either, but statistically, it is more likely to be right.
   dropme = "#"+GameObj.right_hand.id.to_s
when lh_match == false && rh_match == false
   # Should never be the case - it means the weapon hit by the weapon fire is not in EITHER hand.
   echo "Nothing to do.  How is this happening?!  Something is deeply wrong."
   exit
end
   # After all that, "dropme" should now be a globally unique object id which we can use later when
   # retrieving the weapon.

   # Build all the above checks and their resultant logic into a string which will be sent as the
   # sole argument to an fput
if disk
   # Floating disk was detected earlier, so use that
   force = "put "+dropme+" in "+name+" disk"
else
   # No disk; just throw it away
   force = "drop "+dropme
end

# Force-put so that in case of roundtime, stun, or the like, it continues to try until that bitch
# be GONE.  If this results in a message indicating that it won't fit in your disk, drop.
   echo "Forcing: "+force
   
result = fput force, "You put", "You drop", "won't fit in the"

if result == "won't fit in the"
   fput "drop "+dropme, "You drop"
end

# If it was the right hand weapon AND if there was something in the left hand, swap.
if GameObj.right_hand.name == "Empty" && GameObj.left_hand.name != "Empty"
   put "swap"
   swapped = true
else
   swapped = false
end
# The major part of the ordeal is over.  Hooray!

# Now we're just going to watch to see when the weapon goes safe again and can be re-picked-up.
throwaway = matchfind "The ? returns to normal."
# Cold potato!

# This should work whether in a disk or on the ground.
if swapped == true
   put "swap"
   put "get "+dropme
end

# Lather, rinse, repeat.
echo "Weapon fire complete.  Returning to passive observation."
goto "start"