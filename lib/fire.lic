=begin
--------------------------------------------------------------------------------
 Title : Fire
 Date : 12/17/2014
 Author : Oweodry

 Use :
  ;fire
  ;fire <(first|second|...|tenth) creature (leg) (force)>

 Details :
  Aiming and targeting script for archers. The main function is to rotate aimed
  locations based on wounds to maximize crit-kills. Crossbow compatibility not
  included as-is. Target/aiming features:
  - Targeting preference based on arguments:
      - Numbered target : exact match > name match > anything
      - Unnumbered target : disabled name match > name match > anything
      - No target : disabled creature > anything
  - Aiming preferece based on arguments:
      - Default : left eye > right eye > head > neck (based on NPC's wounds)
      - 'leg' : left leg > right leg > default
  - Force mode:
      - "Force" argument will force target an NPC even if NOT "aggressive"
      - May be required for invasion creatures
      - May cause targeting of ranger animal companions (or similar NPCs)

 Notes :
  - This script WILL fire at a target if an aggressive NPC is present
  - You need to set a quiver: ;settings add quiver <container>
  - If you want to snipe (otherwise it won't hide): ;settings add sniper <true>
  - If you don't like AIMing, remove the two blocks with "(AIMING)" comment
  - I'd like to know about creautures where the woundinfo match doesn't work
  - No support or future updates are guranteed
  - My scripts: http://forum.gsplayers.com/showthread.php?73663

 Updates :
  - 09/30/2011 Released
  - 12/06/2011 Added a Lich.sniper setting for hide logic
               Improved targeting logic (exception list, better logic, etc)
               Firing uses an "exec" script so it can be spammed without pause
  - 12/06/2011 Script will only target aggressive NPCs
  - 12/07/2011 Cleaned up targeting mess and added a 'leg' option
  - 01/24/2013 Fixed 'aim neck' regex to be gender neutral
  - 09/25/2013 Added "force" option (mostly for invation creatures)
  - 12/17/2014 Added status detection for tangleweeded creatures

 Thanks :
  - Specie for giving a little open archer feedback
  - BigWorm from the PC for setting me straight with the aggressive npcs
  - Eldrec for poking the bees nest
  - Shacael for bringing up tangleweed status effect

--------------------------------------------------------------------------------
=end

# Notes - Puncture Crit Ranks
#	FATAL : Eyes: 4, Head: 6, Neck: 6, Abdomen: 8, Back: 8, Chest: 8
#	KNOCKDOWN : Legs: 2, 4+

# Check that a quiver is being used
if !Lich.quiver then echo "### You must set a quiver!"; echo "### ;settings add quiver <container>"; exit; end

# Set some basic variables & helpers, add disabled strings as you please
disabled=['webbed','frozen','stunned','kneeling','sitting','prone','lying down','entangled by a thorny vine']
enumeratives=['first','second','third','fourth','fifth','sixth','seventh','eighth','ninth','tenth']

# Prep for sniping
if Lich.sniper then if !hidden? then waitrt?; fput "hide"; end; end

# Criteria required of all targets
def targetvalid(target,vars)
	forcemode = vars.any? { |var| var == "force" }
	return ((target.type =~ /aggressive/i or forcemode) and target.status !~ /dead/)
end

# Injury aiming logic (for fatal wounds)
def aimfatal(woundinfo)
	if woundinfo =~ /severe head trauma and bleeding from .* ears/ and woundinfo =~ /(blinded.*){2}/ then fput "aim neck"
	elsif woundinfo =~ /(blinded.*){2}/ then fput "aim head"
	elsif woundinfo =~ /blinded left eye/ then fput "aim right eye"
	elsif woundinfo =~ /blinded right eye/ then fput "aim left eye"
	else fput "aim left eye"; end
end

# NPC Targeting (this is messier and more redundant than I would like)
if enumeratives.include?(variable[1])
	# If first/second/etc is specified, target that creature directly (this is a cool line)
	target = GameObj.npcs.find_all { |npc| npc.name =~ /#{variable[2]}/i and targetvalid(npc,script.vars) } [enumeratives.index(variable[1])]
	# If the creature is dead, or has moved at the last second, find a new target that matches
	if target.nil? then target = GameObj.npcs.find { |npc| npc.name =~ /#{variable[2]}/i and targetvalid(npc,script.vars) }; end
elsif variable[1]
	# If a noun is specified, target the first alive (disabled if possible) matching NPC
	target = GameObj.npcs.find { |npc| npc.name =~ /#{variable[0]}/i and disabled.include?(npc.status) and targetvalid(npc,script.vars) }
	if target.nil? then target = GameObj.npcs.find { |npc| npc.name =~ /#{variable[1]}/i  and targetvalid(npc,script.vars) }; end
else
	# If nothing is specified, target the first alive (disabled if possible) NPC
	target = GameObj.npcs.find { |npc| disabled.include?(npc.status) and targetvalid(npc,script.vars) }
end

# If all targeting attempts have failed, just target something that's not dead!
if target.nil? then target = GameObj.npcs.find { |npc| targetvalid(npc,script.vars) }; end

if !target.nil?

	# (AIMING) Assess injuries
	fput "look ##{target.id}"
	woundinfo = matchtimeout(0.1, /(he|she|it) has .*/i)

	# (AIMING) Choose aim location based on injuries
	if variable[0] =~ /\bleg\b/i
		if woundinfo =~ /severed left leg/ and woundinfo =~ /severed right leg/ then aimfatal(woundinfo)
		elsif woundinfo =~ /severed left leg/ then fput "aim right leg"
		elsif woundinfo =~ /severed right leg/ then fput "aim left leg"
		else fput "aim left leg"; end
	else aimfatal(woundinfo); end

	# Get ammunition and fire
	if GameObj.right_hand.name !~ /arrow/ then waitrt?; fput "get 1 arrow from my #{Lich.quiver}"; end
	start_exec_script('multifput "stance off","fire #'+target.id+'"; wait_until { checkrt > 0 }; fput "stance def"')

else echo "### Target is nil, no aggressive targets..."
end
