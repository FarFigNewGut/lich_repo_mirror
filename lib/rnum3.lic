=begin
This is an rnum edit by Drafix.

* Fix broken behaviour of Nelemar
* Allow room IDs to work with remote viewing / familiar
* Append the Lich room ID# to your in-game room title.
* Ex: [Gyldemar Forest, Outpost - 4740]

	author: Drafix
	game: GS
	tags: utility
	version: 0.5

	Changelog:
	0.2 - fixed remote viewing code to be entirely based on the string captured rather than XMLData
	0.3 - fixed remote viewing rooms with no exits (Nelemar Nexus)
	0.4 - fixed familiar look to have new lines where necessary
	0.5 - used mutex instead of sleep
=end

def findroom(title, desc, paths)
	return results = Map.list.find_all{|room|
		room.title.find{|it| it == "[#{title}]"} && 
		room.desc.find{|it| it == desc.strip } && 
		room.paths.find{|it| it == paths.strip}
	}
end

def strip(line)
   return line if line == "\r\n"
   line = line.gsub(/<pushStream id=["'](?:spellfront|inv|bounty|society|speech|talk)["'][^>]*\/>.*?<popStream[^>]*>/m, '')
   line = line.gsub(/<stream id="Spells">.*?<\/stream>/m, '')
   line = line.gsub(/<(compDef|inv|component|right|left|spell|prompt)[^>]*>.*?<\/\1>/m, '')
   line = line.gsub(/<[^>]+>/, '')
   line = line.gsub('&gt;', '>')
   line = line.gsub('&lt;', '<')

   return nil if line.gsub("\n", '').gsub("\r", '').gsub(' ', '').length < 1
   return line
end

before_dying{DownstreamHook.remove(script.name)}
remote_viewing = fam_room_title = fam_room_description = fam_room_paths = nil
lines = []

action = proc {|server_string|
	if server_string =~ /<style id="roomName" \/>\[(.*?)\]/
		room_title = $1
		if server_string =~ /<pushStream id=.familiar.*?>/
			remote_viewing = true
			fam_room_title = room_title
			lines.push(server_string)
			# <pushStream id="familiar" ifClosedStyle="watching"/><resource picture="0"/><nav/><style id="roomName" />[Icemule Trace, Ice Garden]]
			
			# [exec1: <style id=""/><style id="roomDesc"/>Alpine flowerbeds ring this tucked-away courtyard, their bright colors a feast for the eyes in comparison to the white of all the snow that lies beyond the <a exist="-11029" noun="gate">gate</a>.  Tamped snow paths keep footsteps soft in this small haven as travellers make their way to and from the chambers north of here.  Centered in a bed of white edelweiss and aromatic <a exist="-34851" noun="calamintha">purple-flowered calamintha</a> is an <a exist="-34852" noun="fountain">ice fountain</a>, its watery spray frozen in a sparkling plume.  <style id=""/>You also see the <a exist="47852246" noun="disk">Dayzed disk</a>, the <a exist="44472953" noun="disk">earth brown Drafix disk</a>, a <a exist="152263" noun="snow">blanket of snow</a>, an <a exist="152262" noun="barrel">iron-banded birchwood barrel</a>, a <a exist="-11029" noun="gate">wrought iron gate</a> and a <a exist="152231" noun="box">frost-covered glass box</a>.]
			
			# [exec1: Also here: <a exist="-10334615" noun="Saturninus">Saturninus</a> who is kneeling, <a exist="-10086573" noun="Dayzed">Dayzed</a>]
			
			# [exec1: Obvious paths: <a exist="-10285438" coord="2524,1864" noun="north">north</a>]

			# [exec1: <compass><dir value="n"/></compass><popStream/>The vision fades and your surroundings come back into focus.]
			server_string = nil
		else
			unless room_title =~ /Ruined Temple, Dais/
				server_string = server_string.sub(/\[.*?\]/, "[#{room_title} - #{Room.current.id}]") if Room.current.id
			end
		end
		server_string
	elsif remote_viewing
		if server_string =~ /<compass>.*<\/compass><popStream\/>/
			lines.push(server_string)

			results = findroom(fam_room_title, fam_room_description, fam_room_paths)
			if results.size > 0
				lines[0] = lines[0].sub(/\[.*?\]/, "[#{fam_room_title} - #{results.collect{|room| room.id}.join(', ')}]")
			end

			server_string = lines.collect{|it| it.strip + "\n"}.join
			remote_viewing = false
			lines = []

			server_string
		elsif server_string =~ /<style id="roomDesc"\/>(.+)<style id=""\/>/
			fam_room_description = strip($1)
			lines.push(server_string)
			nil
		elsif server_string =~ /^Also here:/
			lines.push(server_string)
			nil
		elsif server_string =~ /^Obvious (?:paths|exits)/
			fam_room_paths = strip(server_string)
			lines.push(server_string)
			nil
		else
			server_string
		end
	else
		server_string
	end
}
DownstreamHook.add(script.name, action)

mutex = Mutex.new
resource = ConditionVariable.new

mutex.synchronize {
    resource.wait(mutex)
}