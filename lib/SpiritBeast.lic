=begin

  SpiritBeast.lic: A script to capture, display information about, track, and eventually fight spirit beasts

        author: Deathravin
          game: Gemstone
          tags: spiritbeasts
       version: 0.91

  Discord: Valendr0s

  v0.80 - 2023-04-24
    - initial release
  v0.85 - 2023-04-25
    - Output of Beast Info hidden - that was a lot of scroll
    - Stopped selecting the beast to get info
    - Changed echo display a bit, added a fifth quality, and a wider room #
    - Re-ordered to the best beasts to the bottom
  v0.90 - 2023-07-16
    - Updated beast list
    - Added 'listed' and 'challenge' match types
      Isn't going to be choosing the best beast for a challenge yet
    - Changed battle logic to detect > lash > special - seems to work a bit better
    - Added display options for "element" and "class"
  v0.91 - 2023-07-19
    - Updated Beast List

  Still quite beta

  Future Features:
    - Save beast database via Saved Logfile
    - Fix Train logic - massive updates needed
    - Add Syringe and Loytalty stuff
    - Add in stat bonuses?
    - Add in displaying Armaments?

=end

def sb_waitrt()
  pause("0.25s")
  if checkrt > 0
    wait_while { checkrt > 0 }
    pause("0.75s")
  end
end

def sb_track_wounds(type)
  if type == nil or type == "any"
    XMLData.injuries.each { |gg| if gg[1]['wound'] > 1 or gg[1]['scar'] > 1 then return true end }
  elsif type == "all"
    XMLData.injuries.each { |gg| if gg[1]['wound'] > 0 or gg[1]['scar'] > 0 then return true end }
  elsif type == "wound"
    XMLData.injuries.each { |gg| if gg[1]['wound'] > 1 then return true end }
  end
  return false
end

def sb_spirit_beast_savefile(filename)
  saveLines = []
  File.foreach(filename) { |line|
    lineSB = line.gsub("\n","").split("\t")
    saveLines.push "#{lineSB[0]}\t#{lineSB[1]}\t#{lineSB[2]}\t#{lineSB[3]}\t#{lineSB[4]}" if lineSB[0] != Char.name
  }
  echo "Saving Spirit Beasts to File - Starting"
  file = File.open(filename, 'w')
  saveLines.each { |l|
    file.puts("#{l}")
  }
  @sb_spirit_beasts.find_all { |k,v| v[:Own] == true }.each { |k,v|
    file.puts("#{Char.name}\t#{k}\t#{v[:Level]}\t#{v[:ExpToNext]}\t#{v[:QualityN]}")
  }
  file.close
  echo "Saving Spirit Beasts to File - Finished"
end

def sb_spirit_beast_reset()
  @sb_spirit_beasts = {
  # Purchasable
    "Battle Cardinal"       => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Legendary" },
    "Rolton King"           => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Legendary" },
    "Beleaguered Healer"    => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Uncommon"  },
    "Headless Pooka"        => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Uncommon"  },
    "fennec fox"            => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "great panda"           => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "raven"                 => { :Own => false , :Location => "AP" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
  # Unknown
    "Breath of Fire"        => { :Own => false , :Location => "AU" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Legendary" },
    "Restless Lookout"      => { :Own => false , :Location => "AU" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Legendary" },
    "Wave Ascendant"        => { :Own => false , :Location => "AU" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Legendary" },
    "Honey Bear"            => { :Own => false , :Location => "AU" , :Room => " "        , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Uncommon"  },
    "sea maiden"            => { :Own => false , :Location => "AU" , :Room => " "        , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Event - Troubled Waters
    "Black Buccaneer"       => { :Own => false , :Location => "AW" , :Room => " "        , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Legendary" },
    "Krolvin Warfarer"      => { :Own => false , :Location => "AW" , :Room => " "        , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Uncommon"  },
  # Event: Caligos Isle
    "Electric Eel"          => { :Own => false , :Location => "CI" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Piers"                         , :Rarity => "Uncommon"  },
  # Event: Evermore Hollow - 2022
    "ashrim revenant"       => { :Own => false , :Location => "CI" , :Room => ""         , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "giant mantis"          => { :Own => false , :Location => "CI" , :Room => ""         , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "mire troll"            => { :Own => false , :Location => "CI" , :Room => ""         , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "mire wight"            => { :Own => false , :Location => "CI" , :Room => ""         , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "skeletal warrior"      => { :Own => false , :Location => "CI" , :Room => ""         , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "swamp witch"           => { :Own => false , :Location => "CI" , :Room => ""         , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Cysaegir
    "aelotoi guardsman"     => { :Own => false , :Location => "CY" , :Room => "u14050039", :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "butterfly"             => { :Own => false , :Location => "CY" , :Room => "u14050039", :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Event: Evermore Hollow - 2023
    "ametheist"             => { :Own => false , :Location => "EH" , :Room => "u8083001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => "Evermore Hollow"               , :Rarity => "Common"    },
    "murk crow"             => { :Own => false , :Location => "EH" , :Room => "u8083001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => "Evermore Hollow"               , :Rarity => "Common"    },
    "Votive Eater"          => { :Own => false , :Location => "EH" , :Room => "u8083128" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => "Evermore Hollow"               , :Rarity => "Legendary" },
  # FWI
    "capuchin monkey"       => { :Own => false , :Location => "FW" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "great tortoise"        => { :Own => false , :Location => "FW" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "seagull"               => { :Own => false , :Location => "FW" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "snapping turtle"       => { :Own => false , :Location => "FW" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
  # Hinterwilds
    "Battleborn Berserker"  => { :Own => false , :Location => "HW" , :Room => "u7503498" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Angargreft"                    , :Rarity => "Legendary" },
    "Chthonian Sybil"       => { :Own => false , :Location => "HW" , :Room => "u7503444" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pit of the Dead"               , :Rarity => "Legendary" },
    "Brawny Disir"          => { :Own => false , :Location => "HW" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Angargreft"                    , :Rarity => "Uncommon"  },
    "halfling cannibal"     => { :Own => false , :Location => "HW" , :Room => "u7503101" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "hinterboar"            => { :Own => false , :Location => "HW" , :Room => "u7503101" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "warg"                  => { :Own => false , :Location => "HW" , :Room => "u7503101" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Icemule
    "Ancient Jeweler"       => { :Own => false , :Location => "IM" , :Room => "u4130016" , :CapLevel =>  30 , :Swim =>   0 , :Climb =>   0 , :Area => "Icemule, Ruins"                , :Rarity => "Legendary" },
    "Harried Apprentice"    => { :Own => false , :Location => "IM" , :Room => "u7530030" , :CapLevel =>  10 , :Swim =>   0 , :Climb =>   0 , :Area => "Underground"                   , :Rarity => "Legendary" },
    "Librarian"             => { :Own => false , :Location => "IM" , :Room => "u4132039" , :CapLevel =>  30 , :Swim =>   0 , :Climb =>   0 , :Area => "Abbey"                         , :Rarity => "Legendary" },
    "Mother Superior"       => { :Own => false , :Location => "IM" , :Room => "u4132048" , :CapLevel =>  30 , :Swim =>   0 , :Climb =>   0 , :Area => "Abbey"                         , :Rarity => "Legendary" },
    "Rotting Seductress"    => { :Own => false , :Location => "IM" , :Room => "u4128071" , :CapLevel =>  15 , :Swim =>   0 , :Climb =>   0 , :Area => "Abandoned Farm"                , :Rarity => "Legendary" },
    "Stunted Firemage"      => { :Own => false , :Location => "IM" , :Room => "u4045251" , :CapLevel =>  20 , :Swim =>   0 , :Climb =>   0 , :Area => "Subterranean Tunnels"          , :Rarity => "Legendary" },
    "Subterranean Spirit"   => { :Own => false , :Location => "IM" , :Room => "u4045242" , :CapLevel => 30  , :Swim => 0   , :Climb => 0   , :Area => "Subterranean Island, Stones"   , :Rarity => "Legendary" },
    "Titanic Shaman"        => { :Own => false , :Location => "IM" , :Room => "u4044138" , :CapLevel =>  30 , :Swim =>   0 , :Climb =>   0 , :Area => "Off the trail"                 , :Rarity => "Legendary" },
    "Two-Headed Snake"      => { :Own => false , :Location => "IM" , :Room => "u4127045" , :CapLevel => 40  , :Swim => 0   , :Climb => 30  , :Area => "Ice Plains"                    , :Rarity => "Legendary" },
    "Frostling"             => { :Own => false , :Location => "IM" , :Room => "u4160001" , :CapLevel => 20  , :Swim => 0   , :Climb => 0   , :Area => "Frozen Garden"                 , :Rarity => "Uncommon"  },
    "Halfling Pioneer"      => { :Own => false , :Location => "IM" , :Room => "u4128063" , :CapLevel => 20  , :Swim => 0   , :Climb => 0   , :Area => "Pioneer Cemetary"              , :Rarity => "Uncommon"  },
    "Ravenous Incubus"      => { :Own => false , :Location => "IM" , :Room => "u4132201" , :CapLevel => 100 , :Swim => 0   , :Climb => 0   , :Area => "Den of Rot"                    , :Rarity => "Uncommon"  },
    "Reckless Firestormer"  => { :Own => false , :Location => "IM" , :Room => "u4124014" , :CapLevel => 40  , :Swim => 0   , :Climb => 0   , :Area => "Abandoned Farm"                , :Rarity => "Uncommon"  },
    "penguin"               => { :Own => false , :Location => "IM" , :Room => "u7133001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "silverback orc"        => { :Own => false , :Location => "IM" , :Room => "u7133001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "striped snowcat"       => { :Own => false , :Location => "IM" , :Room => "u7133001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "thyril"                => { :Own => false , :Location => "IM" , :Room => "u7133001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "timber wolf"           => { :Own => false , :Location => "IM" , :Room => "u7133001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "vereri"                => { :Own => false , :Location => "IM" , :Room => "u7133001" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Kraken's Fall
    "Ghost Pirate"          => { :Own => false , :Location => "KF" , :Room => "u7119102" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => "Widowmaker's Road"             , :Rarity => "Uncommon"  },
    "coconut crab"          => { :Own => false , :Location => "KF" , :Room => "u7119101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "storm petrel"          => { :Own => false , :Location => "KF" , :Room => "u7119101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Pinefar
    "arctic wolverine"      => { :Own => false , :Location => "PF" , :Room => "u4564003" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pinefar"                       , :Rarity => "Common"    },
    "fox"                   => { :Own => false , :Location => "PF" , :Room => "u4564003" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pinefar"                       , :Rarity => "Common"    },
    "glacei"                => { :Own => false , :Location => "PF" , :Room => "u4564003" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pinefar"                       , :Rarity => "Common"    },
    "polar bear"            => { :Own => false , :Location => "PF" , :Room => "u4564003" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pinefar"                       , :Rarity => "Common"    },
    "seeker"                => { :Own => false , :Location => "PF" , :Room => "u4564003" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pinefar"                       , :Rarity => "Common"    },
    "snowy owl"             => { :Own => false , :Location => "PF" , :Room => "u4564003" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Pinefar"                       , :Rarity => "Common"    },
  # Rift
    "Flameborn Lich"        => { :Own => false , :Location => "RF" , :Room => "u4571026" , :CapLevel => 100 , :Swim => 200 , :Climb => 200 , :Area => "Scatter"                       , :Rarity => "Uncommon"  },
    "Hungry Crawler"        => { :Own => false , :Location => "RF" , :Room => "u4569023" , :CapLevel => 100 , :Swim => 200 , :Climb => 200 , :Area => "Plane 4"                       , :Rarity => "Uncommon"  },
    "Painted Doll"          => { :Own => false , :Location => "RF" , :Room => "u4571024" , :CapLevel => 100 , :Swim => 200 , :Climb => 200 , :Area => "Scatter"                       , :Rarity => "Uncommon"  },
    "Rift-Twisted Aivren"   => { :Own => false , :Location => "RF" , :Room => "u4568001" , :CapLevel => 100 , :Swim => 200 , :Climb => 200 , :Area => "Plane 3"                       , :Rarity => "Uncommon"  },
    "Vvrael Adherent"       => { :Own => false , :Location => "RF" , :Room => "u4571016" , :CapLevel => 100 , :Swim => 200 , :Climb => 200 , :Area => "Scatter"                       , :Rarity => "Uncommon"  },
    "cerebralite"           => { :Own => false , :Location => "RF" , :Room => "u4566001" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "raving lunatic"        => { :Own => false , :Location => "RF" , :Room => "u4566001" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # River's Rest
    "Dread Stallion"        => { :Own => false , :Location => "RR" , :Room => "u2103003" , :CapLevel =>   5 , :Swim =>   0 , :Climb =>   0 , :Area => "Citadel Stables"               , :Rarity => "Legendary" },
    "Hanged Man"            => { :Own => false , :Location => "RR" , :Room => "u5003010" , :CapLevel => 50  , :Swim => 40  , :Climb => 40  , :Area => "Marsh Keep"                    , :Rarity => "Legendary" },
    "Master Arcanist"       => { :Own => false , :Location => "RR" , :Room => "u377327"  , :CapLevel =>  65 , :Swim =>   0 , :Climb =>   0 , :Area => "Citadel"                       , :Rarity => "Legendary" },
    "Vengeful Archer"       => { :Own => false , :Location => "RR" , :Room => "u2103014" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "River Tunnels"                 , :Rarity => "Legendary" }, # u2103010
    "Citadel Guardian"      => { :Own => false , :Location => "RR" , :Room => "u377312"  , :CapLevel => 60  , :Swim => 20  , :Climb => 20  , :Area => "Citadel Dungeon"               , :Rarity => "Uncommon"  },
#    "Citadel Guardian"      => { :Own => false , :Location => "RR" , :Room => "u377312"  , :CapLevel => 80  , :Swim => 20  , :Climb => 20  , :Area => "Citadel Dungeon"               , :Rarity => "Uncommon"  },
    "River Rat"             => { :Own => false , :Location => "RR" , :Room => "u2103019" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => "Tunnels"                       , :Rarity => "Uncommon"  },
    "aardvark"              => { :Own => false , :Location => "RR" , :Room => "u7125101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "chimera"               => { :Own => false , :Location => "RR" , :Room => "u7125101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "krolvin"               => { :Own => false , :Location => "RR" , :Room => "u7125101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "pale crab"             => { :Own => false , :Location => "RR" , :Room => "u7125101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "pirate"                => { :Own => false , :Location => "RR" , :Room => "u7125101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Solhaven
    "Deathless Knight"      => { :Own => false , :Location => "SH" , :Room => "u4900308" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Dark Cavern"                   , :Rarity => "Legendary" },
    "Demonic Echo"          => { :Own => false , :Location => "SH" , :Room => "u319140"  , :CapLevel => 65  , :Swim => 0   , :Climb => 40  , :Area => "Bonespear Tower"               , :Rarity => "Legendary" },
    "Dwarven Zealot"        => { :Own => false , :Location => "SH" , :Room => "u2130205" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Cairnfang"                     , :Rarity => "Legendary" },
    "Fledgling Kraken"      => { :Own => false , :Location => "SH" , :Room => "u4202110" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Vornavian Coast"               , :Rarity => "Legendary" },
    "Jantalarian Piper"     => { :Own => false , :Location => "SH" , :Room => "u4215007" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Outlands"                      , :Rarity => "Legendary" },
    "Mysterious Huntsman"   => { :Own => false , :Location => "SH" , :Room => "u4215717" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Outlands"                      , :Rarity => "Legendary" },
    "Nascent Duskborn"      => { :Own => false , :Location => "SH" , :Room => "u4202174" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Vornavian Coast"               , :Rarity => "Legendary" },
    "Oceanic Oracle"        => { :Own => false , :Location => "SH" , :Room => "u4902101" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Solhaven"                      , :Rarity => "Legendary" },
    "Pale Woman"            => { :Own => false , :Location => "SH" , :Room => "u4900076" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Temples"                       , :Rarity => "Legendary" },
    "Questionable Warcat"   => { :Own => false , :Location => "SH" , :Room => "u4900610" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Temples"                       , :Rarity => "Legendary" },
    "Sunderer's Titan"      => { :Own => false , :Location => "SH" , :Room => "u4209096" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Charl's Quay"                  , :Rarity => "Legendary" },
    "Tortured Paladin"      => { :Own => false , :Location => "SH" , :Room => "u4215170" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Outlands"                      , :Rarity => "Legendary" },
    "Woeful Magister"       => { :Own => false , :Location => "SH" , :Room => "u4900072" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Temples"                       , :Rarity => "Legendary" },
    "Famished Vesperti"     => { :Own => false , :Location => "SH" , :Room => "u4007001" , :CapLevel => 40  , :Swim => 0   , :Climb => 20  , :Area => "Ruined Temple"                 , :Rarity => "Uncommon"  },
    "Freeport Smuggler"     => { :Own => false , :Location => "SH" , :Room => "u4902195" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => "Crooked Way"                   , :Rarity => "Uncommon"  },
    "Jantalarian Reaver"    => { :Own => false , :Location => "SH" , :Room => "u4215101" , :CapLevel => 60  , :Swim => 0   , :Climb => 0   , :Area => "Outlands Manor, Courtyard"     , :Rarity => "Uncommon"  },
    "Waernmaster"           => { :Own => false , :Location => "SH" , :Room => "u319100"  , :CapLevel => 80  , :Swim => 0   , :Climb => 20  , :Area => "Bonespear Tower"               , :Rarity => "Uncommon"  },
    "alleycat"              => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "daggerbeak"            => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "fenghai"               => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "hound"                 => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "lobster"               => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "roa'ter"               => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "shan"                  => { :Own => false , :Location => "SH" , :Room => "u7124101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Sanctum of Scales
    "Scaled Shaper"         => { :Own => false , :Location => "SS" , :Room => "u4216048" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Sanctum Tower"                 , :Rarity => "Uncommon"  },
    "morduska"              => { :Own => false , :Location => "SS" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "qahzumar"              => { :Own => false , :Location => "SS" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "selshis"               => { :Own => false , :Location => "SS" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
    "veiled sentinel"       => { :Own => false , :Location => "SS" , :Room => "u4216048" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Sanctum Tower"                 , :Rarity => "Common"    },
    "yierka"                => { :Own => false , :Location => "SS" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => ""                              , :Rarity => "Common"    },
  # Sylvarraend
    "Pampered Tomcat"       => { :Own => false , :Location => "SY" , :Room => "u13050003", :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Sylvarraend"                   , :Rarity => "Common"    },
  # Teras  
    "Drowned Lover"         => { :Own => false , :Location => "TE" , :Room => "u3011007" , :CapLevel => 101 , :Swim => 20  , :Climb => 0   , :Area => "Kharam Dzu"                    , :Rarity => "Legendary" },
    "Glaesine Horror"       => { :Own => false , :Location => "TE" , :Room => "u3051026" , :CapLevel =>  80 , :Swim =>   0 , :Climb =>  50 , :Area => "Glaes Caverns"                 , :Rarity => "Legendary" },
    "Mistwood Treant"       => { :Own => false , :Location => "TE" , :Room => "u3021001" , :CapLevel =>  40 , :Swim =>   0 , :Climb =>   0 , :Area => "Greymist Wood"                 , :Rarity => "Legendary" },
    "Phoenix Hatchling"     => { :Own => false , :Location => "TE" , :Room => "u3023107" , :CapLevel => 100 , :Swim =>   0 , :Climb =>  80 , :Area => "The F'Eyrie"                   , :Rarity => "Legendary" },
    "Saltsinger"            => { :Own => false , :Location => "TE" , :Room => "u3031107" , :CapLevel => 100 , :Swim => 100 , :Climb =>   0 , :Area => "Nelemar"                       , :Rarity => "Legendary" },
    "Dervish Lord"          => { :Own => false , :Location => "TE" , :Room => "u3040010" , :CapLevel => 80  , :Swim => 0   , :Climb => 0   , :Area => "Wind Tunnel"                   , :Rarity => "Uncommon"  },
    "Effulgent Firebird"    => { :Own => false , :Location => "TE" , :Room => "u3023116" , :CapLevel => 100 , :Swim => 0   , :Climb => 80  , :Area => "The F'Eyrie"                   , :Rarity => "Uncommon"  },
    "Sacrificial Victim"    => { :Own => false , :Location => "TE" , :Room => "u3041016" , :CapLevel => 80  , :Swim => 0   , :Climb => 0   , :Area => "Temple of Luukos"              , :Rarity => "Uncommon"  },
    "Sea Thrak"             => { :Own => false , :Location => "TE" , :Room => "u3070005" , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Boat to Teras"                 , :Rarity => "Uncommon"  },
    "cinder wasp"           => { :Own => false , :Location => "TE" , :Room => "u7123101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "fire elemental"        => { :Own => false , :Location => "TE" , :Room => "u7123101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "tsark"                 => { :Own => false , :Location => "TE" , :Room => "u7123101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "water elemental"       => { :Own => false , :Location => "TE" , :Room => "u7123101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "wind wraith"           => { :Own => false , :Location => "TE" , :Room => "u7123101" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Ta'Illistim
    "Great Machinist"       => { :Own => false , :Location => "TI" , :Room => "u13021038", :CapLevel =>  80 , :Swim =>   0 , :Climb =>   0 , :Area => "Maaghara Tower"                , :Rarity => "Legendary" },
    "Lady of Skulls"        => { :Own => false , :Location => "TI" , :Room => "u13300080", :CapLevel =>  80 , :Swim =>   0 , :Climb =>   0 , :Area => "Temple Wyneb"                  , :Rarity => "Legendary" },
    "Starseer"              => { :Own => false , :Location => "TI" , :Room => "u13025021", :CapLevel => 80  , :Swim => 0   , :Climb => 0   , :Area => "Seethe Naedal"                 , :Rarity => "Legendary" },
    "Aelotoi Revolutionary" => { :Own => false , :Location => "TI" , :Room => "u13037001", :CapLevel => 60  , :Swim => 0   , :Climb => 0   , :Area => "Maernstrike Caverns"           , :Rarity => "Uncommon"  },
    "Flayer"                => { :Own => false , :Location => "TI" , :Room => "u13120101", :CapLevel => 80  , :Swim => 0   , :Climb => 0   , :Area => "Mularos shrine"                , :Rarity => "Uncommon"  },
    "Majestic Qyn'arj"      => { :Own => false , :Location => "TI" , :Room => "u17002221", :CapLevel => 100 , :Swim => 200 , :Climb => 0   , :Area => "Old Ta'Faendryl, East woods"   , :Rarity => "Uncommon"  },
    "Weeping Farlook"       => { :Own => false , :Location => "TI" , :Room => "u13300032", :CapLevel => 100 , :Swim => 0   , :Climb => 0   , :Area => "Temple Wyneb"                  , :Rarity => "Uncommon"  },
    "griffin"               => { :Own => false , :Location => "TI" , :Room => "u13017097", :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "kiramon"               => { :Own => false , :Location => "TI" , :Room => "u13017097", :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "moulis sapling"        => { :Own => false , :Location => "TI" , :Room => "u13017097", :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "yeti"                  => { :Own => false , :Location => "TI" , :Room => "u13017097", :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Ta'Vaalor
    "bobcat"                => { :Own => false , :Location => "TV" , :Room => "u7136031" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "fanged rodent"         => { :Own => false , :Location => "TV" , :Room => "u7136031" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "grass snake"           => { :Own => false , :Location => "TV" , :Room => "u7136031" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "hawk"                  => { :Own => false , :Location => "TV" , :Room => "u7136031" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "urgh"                  => { :Own => false , :Location => "TV" , :Room => "u7136031" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "wolfshade"             => { :Own => false , :Location => "TV" , :Room => "u7136031" , :CapLevel => 0   , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Wehnimer's Landing
    "Featherdancer"         => { :Own => false , :Location => "WL" , :Room => "u2123030" , :CapLevel =>  35 , :Swim =>   0 , :Climb =>   0 , :Area => "Elven Village"                 , :Rarity => "Legendary" },
    "Frost Lich"            => { :Own => false , :Location => "WL" , :Room => "u18209"   , :CapLevel =>  20 , :Swim =>   0 , :Climb =>   0 , :Area => "Graveyard"                     , :Rarity => "Legendary" },
    "Frostwyrm"             => { :Own => false , :Location => "WL" , :Room => "u4044008" , :CapLevel => 30  , :Swim => 0   , :Climb => 0   , :Area => "Glatoph"                       , :Rarity => "Legendary" },
    "Ghostfin"              => { :Own => false , :Location => "WL" , :Room => "u386022"  , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Coastal Cliffs"                , :Rarity => "Legendary" },
    "Golden Champion"       => { :Own => false , :Location => "WL" , :Room => "u386033"  , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Shrines"                       , :Rarity => "Legendary" },
    "Hulking Blademaster"   => { :Own => false , :Location => "WL" , :Room => "u46027"   , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Catacombs"                     , :Rarity => "Legendary" },
    "Hungering Serpent"     => { :Own => false , :Location => "WL" , :Room => "u68033"   , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Shrines"                       , :Rarity => "Legendary" },
    "Kobold High Shaman"    => { :Own => false , :Location => "WL" , :Room => "u373016"  , :CapLevel => 10  , :Swim => 0   , :Climb => 0   , :Area => "Kobold Village"                , :Rarity => "Legendary" },
    "Moon Serpent"          => { :Own => false , :Location => "WL" , :Room => "u52017"   , :CapLevel => 101 , :Swim =>   0 , :Climb =>  50 , :Area => "Melgorehn's Reach"             , :Rarity => "Legendary" },
    "Nightchild"            => { :Own => false , :Location => "WL" , :Room => "u45134"   , :CapLevel => 101 , :Swim =>   0 , :Climb =>  30 , :Area => "Darkstone Keep"                , :Rarity => "Legendary" },
    "Prim Navigator"        => { :Own => false , :Location => "WL" , :Room => "u14022"   , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Danjirland"                    , :Rarity => "Legendary" },
    "Pyrelord"              => { :Own => false , :Location => "WL" , :Room => "u35025"   , :CapLevel => 30  , :Swim => 0   , :Climb => 0   , :Area => "Glatoph"                       , :Rarity => "Legendary" },
    "Rose Lord"             => { :Own => false , :Location => "WL" , :Room => "u4121003" , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Upper Dragonsclaw"             , :Rarity => "Legendary" },
    "Stone Guardian"        => { :Own => false , :Location => "WL" , :Room => "u374017"  , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Colossus"                      , :Rarity => "Legendary" },
    "Weary Rider"           => { :Own => false , :Location => "WL" , :Room => "u386003"  , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Shrines"                       , :Rarity => "Legendary" },
    "Wellwisher"            => { :Own => false , :Location => "WL" , :Room => "u46018"   , :CapLevel => 10  , :Swim => 0   , :Climb => 0   , :Area => "Catacombs"                     , :Rarity => "Legendary" },
    "Whiskey Spirit"        => { :Own => false , :Location => "WL" , :Room => "u338001"  , :CapLevel =>   0 , :Swim =>   0 , :Climb =>   0 , :Area => "Wehnimer's Landing"            , :Rarity => "Legendary" },
    "Elusive Warcat"        => { :Own => false , :Location => "WL" , :Room => "u92120"   , :CapLevel => 35  , :Swim => 0   , :Climb => 0   , :Area => "Blackened Cave"                , :Rarity => "Uncommon"  },
    "Greenwing Queen"       => { :Own => false , :Location => "WL" , :Room => "u4285042" , :CapLevel => 40  , :Swim => 0   , :Climb => 0   , :Area => "Castle Anwyn"                  , :Rarity => "Uncommon"  },
    "Hungering Ghoul"       => { :Own => false , :Location => "WL" , :Room => "u18003"   , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => "Graveyard"                     , :Rarity => "Uncommon"  },
    "Iron Kobold"           => { :Own => false , :Location => "WL" , :Room => "u401004"  , :CapLevel => 20  , :Swim => 0   , :Climb => 0   , :Area => "Kobold Mines"                  , :Rarity => "Uncommon"  },
    "Kobold Villager"       => { :Own => false , :Location => "WL" , :Room => "u373006"  , :CapLevel => 20  , :Swim => 0   , :Climb => 0   , :Area => "Kobold Village"                , :Rarity => "Uncommon"  },
    "Mournful Nymph"        => { :Own => false , :Location => "WL" , :Room => "u67030"   , :CapLevel => 20  , :Swim => 0   , :Climb => 0   , :Area => "Coastal Cliffs"                , :Rarity => "Uncommon"  },
    "Primal Minotaur"       => { :Own => false , :Location => "WL" , :Room => "u2167023" , :CapLevel => 40  , :Swim => 0   , :Climb => 30  , :Area => "Hidden Plateau, Ruins"         , :Rarity => "Uncommon"  },
    "Rampaging Ki-Lin"      => { :Own => false , :Location => "WL" , :Room => "u95182"   , :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => "Sheruvian Monestary"           , :Rarity => "Uncommon"  , :CapSpecial => Spell[407].known? },
    "Vanquished Invader"    => { :Own => false , :Location => "WL" , :Room => "u9008"    , :CapLevel => 10  , :Swim => 0   , :Climb => 0   , :Area => "Exterior"                      , :Rarity => "Uncommon"  },
    "Willow Spirit"         => { :Own => false , :Location => "WL" , :Room => "u2123009" , :CapLevel => 45  , :Swim => 0   , :Climb => 0   , :Area => "Upper Trollfang, Winding Trees", :Rarity => "Uncommon"  },
    "goblin"                => { :Own => false , :Location => "WL" , :Room => "u7122101" , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "hyena"                 => { :Own => false , :Location => "WL" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Broken Lands"                  , :Rarity => "Common"    },
    "jackal"                => { :Own => false , :Location => "WL" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Broken Lands"                  , :Rarity => "Common"    },
    "kobold"                => { :Own => false , :Location => "WL" , :Room => "u7122101" , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "mammoth arachnid"      => { :Own => false , :Location => "WL" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Spider Temple"                 , :Rarity => "Common"    },
    "manticore"             => { :Own => false , :Location => "WL" , :Room => "u7122101" , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "mare"                  => { :Own => false , :Location => "WL" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Shadow Valley"                 , :Rarity => "Common"    },
    "pony"                  => { :Own => false , :Location => "WL" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Shadow Valley"                 , :Rarity => "Common"    },
    "rat"                   => { :Own => false , :Location => "WL" , :Room => "u7122101" , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "rolton"                => { :Own => false , :Location => "WL" , :Room => "u7122101" , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "stallion"              => { :Own => false , :Location => "WL" , :Room => " "        , :CapLevel => 101 , :Swim =>   0 , :Climb =>   0 , :Area => "Shadow Valley"                 , :Rarity => "Common"    },
    "thrak"                 => { :Own => false , :Location => "WL" , :Room => "u7122101" , :CapLevel => 15  , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  # Zul Logoth
    "bat"                   => { :Own => false , :Location => "ZL" , :Room => "u13007001", :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "krynch"                => { :Own => false , :Location => "ZL" , :Room => "u13007001", :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
    "whelk"                 => { :Own => false , :Location => "ZL" , :Room => "u13007001", :CapLevel => 101 , :Swim => 0   , :Climb => 0   , :Area => ""                              , :Rarity => "Common"    },
  }
  @sb_spirit_beasts.each { |k,v|
    @sb_spirit_beasts[k][:Level]     = 0
    @sb_spirit_beasts[k][:ExpToNext] = 0
    @sb_spirit_beasts[k][:Class]     = " "
    @sb_spirit_beasts[k][:Element]   = " "
    @sb_spirit_beasts[k][:Loyalty]   = " "
    @sb_spirit_beasts[k][:LoyaltyN]  = 0
    @sb_spirit_beasts[k][:Quality]   = " "
    @sb_spirit_beasts[k][:QualityN]  = 0
    @sb_spirit_beasts[k][:Power]     = 0
    @sb_spirit_beasts[k][:Defense]   = 0
    @sb_spirit_beasts[k][:Insight]   = 0
    @sb_spirit_beasts[k][:Accuracy]  = 0
    @sb_spirit_beasts[k][:Speed]     = 0
    
    @sb_spirit_beasts[k][:RarityN]   = 0
    @sb_spirit_beasts[k][:RarityN]   = 1 if @sb_spirit_beasts[k][:Rarity] == "Common"
    @sb_spirit_beasts[k][:RarityN]   = 2 if @sb_spirit_beasts[k][:Rarity] == "Uncommon"
    @sb_spirit_beasts[k][:RarityN]   = 3 if @sb_spirit_beasts[k][:Rarity] == "Legendary"

  }
end

def sb_spirit_beast_inventory()
  beastList = []
  count = 0
  counttot = 0
  startrec = false
  put "beast list all"
  loop {
    line = get
    counttot += 1
    if line =~ /You have bound the following Common Spirit Beasts:/
      startrec = true
    elsif line =~ /You have bound the following Uncommon Spirit Beasts:/
      startrec = true
    elsif line =~ /You have bound the following Legendary Spirit Beasts:/
      startrec = true
    elsif line =~ /You have bound a total of/
      break
    elsif startrec and line =~ /^(.+)$/
      mob = $1
      count += 1
      if mob.length > 1
        beastList.push mob
      end
    end
    
    break if line =~ /You have bound a total of/
    break if counttot > 200
    break if count > 150
  }
  return beastList
end

def sb_spirit_beast_select(sbname)
  sb_waitrt() if checkrt > 0
  good = false
  10.times {
    fput "Beast select #{sbname}"
    result = matchtimeout 5, "Focusing intently inward", "That is not a Spirit Beast currently in your collection.", "is already equipped for use in Spirit Battles."
    if result =~ /Focusing intently inward, you select your (.+) for use in Spirit Battles\./
      selected = $1
      good = true if sbname == selected
    elsif result =~ /Your (.+) is already equipped for use in Spirit Battles\./
      selected = $1
      good = true if sbname == selected
    elsif result =~ /That is not a Spirit Beast currently in your collection\./
      good = true
    end
    break if good
    pause("1s")
  }
  return good
end

def sb_spirit_beast_sense(beast = "any")
  legendaryRooms = [ 8083128, 2103014, 4130016, 7530030, 4132039, 4132048, 4128071, 4045251, 4044138, 4127045, 2103003, 5003010, 377327, 4900308, 319140, 2130205, 4202110, 4215007, 4215717, 4202174, 4902101, 4900076, 4900610, 4209096, 4215170, 4900072, 3011007, 3051026, 3021001, 3023107, 3031107, 13021038, 13300080, 13025021, 2123030, 4044008, 18209, 386022, 386033, 46027, 68033, 373016, 52017, 45134, 14022, 35025, 4121003, 374017, 386003, 46018, 338001 ]
  commonRooms    = [ 8083001 ]
  findLine = []
  count = 0
  counttot = 0
  startrec = false
  fput "beast sense"
  loop {
    line = get
    counttot += 1
    if line =~ /The surroundings feel too civilized to hold any spiritual energy\./
      return "Error"
    elsif line =~ /You will need to wait another/
      return "Error"
    elsif line =~ /You focus your thoughts/
      startrec = true
    elsif line =~ /\.\.\.wait/
      break
    elsif line =~ /Roundtime/
      break
    elsif startrec and Char.name =~ /^(Nobody)$/    and !legendaryRooms.include?(XMLData.room_id) and line =~ /^You detect the presence of a common (.+) spirit(\.|!)$/
      mob = $1
      count += 1
      if mob.length > 1 and (beast == "any" or beast == mob)
        findLine.push mob
      end
    elsif startrec                                  and  commonRooms.include?(XMLData.room_id)    and line =~ /^You detect the presence of a common (.+) spirit(\.|!)$/
      mob = $1
      count += 1
      if mob.length > 1 and (beast == "any" or beast == mob)
        findLine.push mob
      end
    elsif startrec                                  and !legendaryRooms.include?(XMLData.room_id) and line =~ /^You detect the presence of an uncommon (.+) spirit(\.|!)$/
      mob = $1
      count += 1
      if mob.length > 1 and (beast == "any" or beast == mob)
        findLine.push mob
      end
    elsif startrec and line =~ /^You detect the presence of a tremendously powerful legendary spirit: the (.+)!$/
      mob = $1
      count += 1
      if mob.length > 1 and (beast == "any" or beast == mob)
        findLine.push mob
      end
    end
    
    break if line =~ /Roundtime/
    break if counttot > 50
    break if count > 25
  }
  return findLine
end

def sb_spirit_beast_info(spirit)
  count = 0
  counttot = 0
  startrec = false
  mobName = "na"
  debug = false
  result=Lich::Util.quiet_command_xml("beast info #{spirit}", /^The Spirit Beast/, /<\/prompt>/, true, 5, false)
  result.each { |line|
    if line =~ /The Spirit Beast is (a|an) (common|uncommon|legendary) (.+) of ([0-9]+) training(s|) with the following traits:/
      mobName = $3
      mobLevel = $4
      @sb_spirit_beasts[mobName] = {} if !@sb_spirit_beasts[mobName]
      @sb_spirit_beasts[mobName][:Level] = mobLevel
      @sb_spirit_beasts[mobName][:Location] = "" if !@sb_spirit_beasts[mobName][:Location]
      @sb_spirit_beasts[mobName][:Room]     = "" if !@sb_spirit_beasts[mobName][:Room]
      @sb_spirit_beasts[mobName][:Own] = true
    elsif line =~ /Exp\. to Next:[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:ExpToNext] = $1.to_i
      echo "#{mobName} - ExpToNext: #{@sb_spirit_beasts[mobName][:ExpToNext]}" if debug
    elsif line =~ /Class:[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Class] = $1
      echo "#{mobName} - Class: #{@sb_spirit_beasts[mobName][:Class]}" if debug
    elsif line =~ /Element:[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Element] = $1
      echo "#{mobName} - Element: #{@sb_spirit_beasts[mobName][:Element]}" if debug
    elsif line =~ /Rarity:[ ]+([^ ]+)/
      result = $1
      @sb_spirit_beasts[mobName][:Rarity] = result
      @sb_spirit_beasts[mobName][:RarityN] = 0
      @sb_spirit_beasts[mobName][:RarityN] = 1 if result == "Common"
      @sb_spirit_beasts[mobName][:RarityN] = 2 if result == "Uncommon"
      @sb_spirit_beasts[mobName][:RarityN] = 3 if result == "Legendary"
      echo "#{mobName} - Rarity: #{@sb_spirit_beasts[mobName][:Rarity]}" if debug
    elsif line =~ /Loyalty:[ ]+([^ ]+)/
      result = $1
      @sb_spirit_beasts[mobName][:Loyalty] = result
      @sb_spirit_beasts[mobName][:LoyaltyN] = 0
      @sb_spirit_beasts[mobName][:LoyaltyN] = 1 if result == "Disinterested"
      @sb_spirit_beasts[mobName][:LoyaltyN] = 2 if result == "Average"
      @sb_spirit_beasts[mobName][:LoyaltyN] = 3 if result == "High"
      @sb_spirit_beasts[mobName][:LoyaltyN] = 4 if result == "Exceptional"
      echo "#{mobName} - Loyalty: #{@sb_spirit_beasts[mobName][:Loyalty]}" if debug
    elsif line =~ /Quality:[ ]+([^ ]+)/
      result = $1
      @sb_spirit_beasts[mobName][:Quality] = result
      @sb_spirit_beasts[mobName][:QualityN] = 0
      @sb_spirit_beasts[mobName][:QualityN] = 1 if result == "Unimpressive"
      @sb_spirit_beasts[mobName][:QualityN] = 2 if result == "Average"
      @sb_spirit_beasts[mobName][:QualityN] = 3 if result == "Robust"
      @sb_spirit_beasts[mobName][:QualityN] = 4 if result == "Perfect"
      @sb_spirit_beasts[mobName][:QualityN] = 5 if result == "Extraordinary"
      echo "#{mobName} - Quality: #{@sb_spirit_beasts[mobName][:Quality]}" if debug
    elsif line =~ /Power:[ ]+[^ ]+[ ]+[^ ]+[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Power] = $1.to_i
      echo "#{mobName} - Power: #{@sb_spirit_beasts[mobName][:Power]}" if debug
    elsif line =~ /Defense:[ ]+[^ ]+[ ]+[^ ]+[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Defense] = $1.to_i
      echo "#{mobName} - Defense: #{@sb_spirit_beasts[mobName][:Defense]}" if debug
    elsif line =~ /Insight:[ ]+[^ ]+[ ]+[^ ]+[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Insight] = $1.to_i
      echo "#{mobName} - Insight: #{@sb_spirit_beasts[mobName][:Insight]}" if debug
    elsif line =~ /Accuracy:[ ]+[^ ]+[ ]+[^ ]+[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Accuracy] = $1.to_i
      echo "#{mobName} - Accuracy: #{@sb_spirit_beasts[mobName][:Accuracy]}" if debug
    elsif line =~ /Speed:[ ]+[^ ]+[ ]+[^ ]+[ ]+([^ ]+)/
      @sb_spirit_beasts[mobName][:Speed] = $1.to_i
      echo "#{mobName} - Speed: #{@sb_spirit_beasts[mobName][:Speed]}" if debug
    elsif line =~ /^Appearance and Attacks$/
      break
    end
  }
end

def sb_spirit_beast_echo(type = "echo",rarity = "Legendary")
  
  if type == "echo"
    echoItems = @sb_spirit_beasts.find_all { |k,v| v[:Own] }.sort_by { |k,v| [ v[:Level].to_i, v[:QualityN], v[:RarityN], k ] }
  elsif type == "types"
    echoItems = @sb_spirit_beasts.find_all { |k,v| v[:Own] }.sort_by { |k,v| [ v[:Element], v[:Level].to_i, v[:Power].to_i, v[:Speed].to_i, k ] }
  elsif type == "class"
    echoItems = @sb_spirit_beasts.find_all { |k,v| v[:Own] }.sort_by { |k,v| [ v[:Class], v[:Level].to_i, v[:Power].to_i, v[:Speed].to_i, k ] }
  elsif type == "collection"
    if rarity =~ /^(Legendary|Uncommon|Common)$/i
      echoItems = @sb_spirit_beasts.find_all { |k,v| v[:Rarity] == rarity }.sort_by { |k,v| [ v[:Location], v[:RarityN] * -1, k ] }
    elsif rarity == "All"
      echoItems = @sb_spirit_beasts.sort_by { |k,v| [ v[:Location], v[:RarityN] * -1, k ] }
    else
      echoItems = @sb_spirit_beasts.sort_by { |k,v| [ v[:Location], v[:RarityN] * -1, k ] }
    end
  else
    return false
  end
  startcount = 20
  startloc = "HW"
  newType = "none"
#  @sb_spirit_beasts.find_all { |k,v| v[:Own] }.sort_by { |k,v| [ v[:Level].to_i, v[:QualityN], v[:RarityN], k ] }.each { |beast,value|
  echoItems.each { |beast,value|
    if (type == "types" and value[:Element] != newType) or (type == "class" and value[:Class] != newType)
      respond '|=======================================================================================================================|'
      respond sprintf '| %22s | %2s %-9s | %2s %4s | %10s | %9s |%3s|%5s|%4s| %3s | %3s | %3s | %3s | %3s |', "Name", value[:Location], "Room", "Lv", "TNL", "Class", "Element", "Rar", "Qulty", "Loyl", "Pow", "Def", "Ins", "Acc", "Spd"
      respond '|=======================================================================================================================|'
      newType = value[:Element] if type == "types"
      newType = value[:Class]   if type == "class"
      startcount = 0
    elsif startcount >= 20 or (type == "collection" and rarity == "All" and startloc != value[:Location] and startcount >= 10) or (type == "collection" and rarity =~ /^(Legendary|Uncommon|Common)$/i and startloc != value[:Location])
      respond '|=======================================================================================================================|'
      respond sprintf '| %22s | %2s %-9s | %2s %4s | %10s | %9s |%3s|%5s|%4s| %3s | %3s | %3s | %3s | %3s |', "Name", value[:Location], "Room", "Lv", "TNL", "Class", "Element", "Rar", "Qulty", "Loyl", "Pow", "Def", "Ins", "Acc", "Spd"
      respond '|=======================================================================================================================|'
      startcount = 0
    end
    startloc = value[:Location]
    respond sprintf '| %22s | %2s %-9s | %2s %4s | %10s | %9s |%3s|%5s|%4s| %3s | %3s | %3s | %3s | %3s |', beast, value[:Location], value[:Room], value[:Level], value[:ExpToNext], value[:Class], value[:Element], ['@'].cycle(value[:RarityN]).to_a.join(""), ['@'].cycle(value[:QualityN]).to_a.join(""), ['@'].cycle(value[:LoyaltyN]).to_a.join(""), value[:Power], value[:Defense], value[:Insight], value[:Accuracy], value[:Speed]
    startcount += 1
  }
  respond '|=======================================================================================================================|'
  respond ' '
  respond " Next Capture Time: #{([0, 900 - (Time.now - @sb_spirit_beast_Time)].max).to_i} seconds"
  respond ' '
end

def sb_spirit_beast_Redeem()

  lootcont = gd_inv_item_find("pouch")
  opened = false
  
  fput "store all" if righthand? or lefthand?
  fput "stow all" if righthand? or lefthand?
  
  fput "redeem"
  matchtimeout 5, /A snooty green goblin says, "Yeah, yeah, I gotcher winnings right here!"|A snooty green goblin says, "It don't look like you've won anything in the arena."/
  
  if righthand? or lefthand?
    if GameObj.right_hand.name =~ / sack$/ or GameObj.left_hand.name =~ / sack$/
      fput "open ##{lootcont.id}"
      opened = true
      
      itemlook = GameObj.right_hand if GameObj.right_hand.name =~ / sack$/
      itemlook = GameObj.left_hand  if GameObj.left_hand.name =~ / sack$/
      if itemlook.contents.length == 0 or itemlook.contents.length == nil
        fput "look in ##{itemlook.id}"
        pause("2s")
      end
      itemlook.contents.each { |lootitem|
        gd_item_drag(lootitem, [lootcont]) if lootitem.name !~ / lockbox$/
      }
      if itemlook.contents.length == 0 or itemlook.contents.length == nil
        fput "throw ##{itemlook.id}"
      else
        gd_item_drag(itemlook, [lootcont])
      end
      
    elsif GameObj.right_hand.name !~ /woven red and gold sack$/ and GameObj.left_hand.name !~ /woven red and gold sack$/ and GameObj.right_hand.name !~ / lockbox$/ and GameObj.left_hand.name !~ / lockbox$/
      fput "open ##{lootcont.id}"
      opened = true
      gd_item_drag(GameObj.right_hand, [lootcont]) if GameObj.right_hand.name != "Empty"
      gd_item_drag(GameObj.left_hand,  [lootcont]) if GameObj.left_hand.name  != "Empty"
    end
  end
  
  fput "close ##{lootcont.id}" if opened
  
end


sb_spirit_beast_reset() if !defined?(@sb_spirit_beasts) and variable[1] !~ /^red/i
@sb_spirit_beast_listed = false if !defined?(@sb_spirit_beast_listed)
@sb_spirit_beast_Time = Time.now - (60 * 16) if !defined?(@sb_spirit_beast_Time)
filename                = "#{$lich_dir}logs/spirit_beasts-#{XMLData.game}-All.log"

before_dying {
  stop_script "CheckHide" if running?("CheckHide")
}

sb_element_weakness = {
  "Unattuned"     => { :Weakest => "none"   , :Weak => "none"  , :Strong => "none"  , :Strongest => "none"   },
  "Air"           => { :Weakest => "Spirit" , :Weak => "Fire"  , :Strong => "Water" , :Strongest => "Earth"  },
  "Earth"         => { :Weakest => "Air"    , :Weak => "Water" , :Strong => "Fire"  , :Strongest => "Spirit" },
  "Fire"          => { :Weakest => "Water"  , :Weak => "Earth" , :Strong => "Air"   , :Strongest => "Spirit" },
  "Spirit"        => { :Weakest => "Fire"   , :Weak => "Earth" , :Strong => "Water" , :Strongest => "Air"    },
  "Water"         => { :Weakest => "Spirit" , :Weak => "Air"   , :Strong => "Earth" , :Strongest => "Fire"   },
  "Wild Magic"    => { :Weakest => "(Air|Earth|Fire|Water)" , :Weak => "none", :Strong => "none", :Strongest => "Spirit"                 },
  "Rift Armament" => { :Weakest => "Spirit"                 , :Weak => "none", :Strong => "none", :Strongest => "(Air|Earth|Fire|Water)" },
}

if variable[1] =~ /^(hel|set)/i
  respond ""
  respond "Spirit Beasts"
  respond "  by Deathravin"
  respond " "
  respond "Usage:"
  respond "  ;SpiritBeast reset              - Clears all gathered beast information"
  respond "  ;SpiritBeast info               - Gathers information about all captured beasts"
  respond "  ;SpiritBeast echo               - Displays information about all captured beasts"
  respond "  ;SpiritBeast element            - Displays information about all captured beasts - ordered by Element"
  respond "  ;SpiritBeast class              - Displays information about all captured beasts - ordered by Class"
  respond "  ;SpiritBeast collection         - Displays information about your collection"
  respond "  ;SpiritBeast train <x>          - Requires SpiritBeastTrack - will attempt to run to train at the arena 'x' times."
  respond "  ;SpiritBeast challenge          - Requires SpiritBeastTrack - will attempt to run a challenge at the arena."
  respond "    train & challenge is definiately incomplete. The logic isn't nearly good enough yet."
  respond " "
  respond "  ;SpiritBeast capture"
  respond "    Will capture a beast in your current room"
  respond "    Will wait for a Legendary if in a room that is known to contain a Legendary"
  respond " "
  respond "  ;SpiritBeast capture <location>"
  respond "    <location> is the general city. Can be WL, SH, TE, RR, IL"
  respond "    Will go capture a legendary beast in your level, swimming, climbing skill range"
  respond "    Will capture a legendary beast in the selected area you don't own first"
  respond "    Will capture the least quality (less than Perfect) legendary beast in the selected area next"
  respond " "

elsif variable[1] =~ /^(info)/i or (!$sb_spirit_beast_listed and variable[0] !~ /^red/i)
  sb_spirit_beast_reset()
  ownedSpirits = sb_spirit_beast_inventory()
  ownedSpirits.each { |spirit|
    sb_spirit_beast_info(spirit)
    pause("0.25s")
  }
  $sb_spirit_beast_listed = true
  sb_spirit_beast_echo()
  sb_spirit_beast_savefile(filename)
elsif variable[1] =~ /^echo/i
  sb_spirit_beast_echo("echo")
elsif variable[1] =~ /^(type|elem)/i
  sb_spirit_beast_echo("types")
elsif variable[1] =~ /^class/i
  sb_spirit_beast_echo("class")
elsif variable[1] =~ /^col/i
  if variable[2]
    sb_spirit_beast_echo("collection", variable[2])
  else
    sb_spirit_beast_echo("collection")
  end
elsif variable[1] =~ /^red/i
  startRoom = Room.current.id
  start_script "go2", ["u4903604", "_disable_confirm_"]
  wait_while { running?("^go2$") }
  sb_spirit_beast_Redeem()
  start_script "go2", [startRoom, "_disable_confirm_"]
  wait_while { running?("^go2$") }
elsif variable[1] =~ /^cap/i
  startRoom = Room.current.id
  if @sb_spirit_beast_Time + 900 > Time.now
    echo " "
    echo " Too soon since last spirit beast capture"
    echo " Next Capture Time: #{([0, 900 - (Time.now - @sb_spirit_beast_Time)].max).to_i} seconds"
    echo " "
    exit
  end
  if variable[2] =~ /^(WL|SH|TI|TV|TE|IM|RR|KF|EH|RF)$/i
    gotoroom         = 0
    foundBeast       = @sb_spirit_beasts.find { |k,v| !v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 3 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ }
    if !foundBeast and XMLData.room_id.to_s =~ /^808[0-9]{4}$/
      foundBeast     = @sb_spirit_beasts.find { |k,v| !v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 3 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ }
    end
    if !foundBeast
      ["Unimpressive", "Average", "Robust"].each { |qual|
        foundBeast   = @sb_spirit_beasts.find { |k,v|  v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 3 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ and v[:Quality] == qual }
        break if foundBeast
      }
    end
    if !foundBeast
      foundBeast     = @sb_spirit_beasts.find { |k,v| !v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 2 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ }
    end
    if !foundBeast and XMLData.room_id.to_s =~ /^808[0-9]{4}$/
      foundBeast     = @sb_spirit_beasts.find { |k,v| !v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 2 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ }
    end
    if !foundBeast
      ["Unimpressive", "Average", "Robust"].each { |qual|
        foundBeast   = @sb_spirit_beasts.find { |k,v|  v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 2 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ and v[:Quality] == qual }
        break if foundBeast
      }
    end
    if !foundBeast and XMLData.room_id.to_s =~ /^808[0-9]{4}$/
      foundBeast     = @sb_spirit_beasts.find { |k,v| !v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 1 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ }
    end
    if !foundBeast and XMLData.room_id.to_s =~ /^808[0-9]{4}$/
      ["Unimpressive", "Average", "Robust"].each { |qual|
        foundBeast   = @sb_spirit_beasts.find { |k,v|  v[:Own] and v[:Location] == variable[2] and v[:RarityN] == 1 and Skills.climbing >= v[:Climb] and Skills.swimming >= v[:Swim] and Char.level >= v[:CapLevel] and v[:Room] =~ /^u[0-9]+$/ and v[:Quality] == qual }
        break if foundBeast
      }
    end
    if foundBeast
	  gotoroom = foundBeast[1][:Room]
      echo "Going to capture [#{foundBeast[0]}] in [#{foundBeast[1][:Area]}] at [#{gotoroom}]"
      fput "gird"
      fput "stance def" if checkstance != "defensive"
      start_script "go2", [gotoroom, "_disable_confirm_"]
      wait_while { running?("^go2$") }
    else
      echo "Unable to find unperfect uncaptured beast in selected area"
      exit
    end
  elsif variable[2] != nil
    fput "gird"
    fput "stance def" if checkstance != "defensive"
    gotoroom = variable[2]
    start_script "go2", [gotoroom, "_disable_confirm_"]
    wait_while { running?("^go2$") }
  end
  if gotoroom != 0 and variable[2] != nil
    20.times {
      pause("0.25s") if "u#{XMLData.room_id}" != gotoroom
    }
    if "u#{XMLData.room_id}" != gotoroom
      echo "Didn't end up in the right room, going back"
      start_script "go2", [startRoom, "_disable_confirm_"]
      wait_while { running?("^go2$") }
      echo "Didn't end up in the right room, came back"
      exit
    end
  end
#  if Char.name == "Locksmith" and !running?("CheckHide")
#    start_script "CheckHide"
#    fput "hide"
  if !hidden and Skills.stalkingandhiding >= 50
    fput "hide" 
  elsif !invisible? and Spell[916].known? and Spell[916].affordable?
    fput "incant 916"
  end
  sb_waitrt()
  finished = false
  foundSpirits = []
  count = 0
  until foundSpirits.count > 0 or count > 20 or foundSpirits == "Error" or GameObj.loot.find { |looz| looz.name =~ /(vine|insect swarm|tempest|cloud|void)$/ } or sb_track_wounds("wound") or stunned? or !percenthealth(80)
#    fput "incant 1035" if checkmana(80) and !Spell[1035].active? and Spell[1035].known?
    sb_waitrt()
    foundSpirits = sb_spirit_beast_sense(foundBeast[0])
    exit if foundSpirits == "Error"
    count += 1
  end
  foundSpirits.reverse.each { |spirit|
    if !@sb_spirit_beasts[spirit][:Own]
      echo "Grabbing that [#{spirit}] because I don't have one yet"
      sb_waitrt()
      fput "beast attune #{spirit}"
      sb_waitrt()
      fput "beast capture"
      pause("0.25s")
      sb_spirit_beast_info(spirit)
      finished = true
      break
    end
  }
  if !finished
    ["Unimpressive", "Average", "Robust"].each { |qual|
      foundSpirits.reverse.each { |spirit|
        if @sb_spirit_beasts[spirit][:Quality] == qual
          echo "Grabbing that [#{spirit}] because my current one has a quality of: [#{@sb_spirit_beasts[spirit][:Quality]}]"
          sb_waitrt()
          pause("1s")
          if sb_spirit_beast_select(spirit)
            fput "beast expel"
            fput "beast expel"
            sb_waitrt()
            fput "beast attune #{spirit}"
            sb_waitrt()
            fput "beast capture"
            pause("0.5s")
            sb_spirit_beast_info(spirit)
          else
            echo "couldn't verify select - moving on"
          end
          finished = true
          break
        end
      }
      break if finished
    }
  end
  if finished
    @sb_spirit_beast_Time = Time.now
    sb_spirit_beast_savefile(filename)
  end
  pause("1s")
#  stop_script "CheckHide" if running?("CheckHide")
  start_script "go2", [startRoom, "_disable_confirm_"] if Room.current.id != startRoom
  wait_while { running?("^go2$") }
  fput "store all"
elsif variable[1] =~ /^(blood|vial|syr|draw)/i
  fput "get syringe from my pouch"
  fput "kneel"
  GameObj.npcs.find_all { |npc| npc.status == "dead" }.each { |npc|
    fput "draw ##{npc.id} with syringe"
    sb_waitrt()
    fput "loot ##{npc.id}"
  }
  fput "put my syringe in my pouch"
  fput "stand"
elsif variable[1] =~ /^reset/i
  sb_spirit_beast_reset()
elsif variable[1] =~ /^(train|chal|listed)/i

  startRoom = Room.current.id
  start_script "go2", ["u4903602", "_disable_confirm_"]
  wait_while { running?("^go2$") }

  count = 1
  if    variable[2] =~ /all/ then count = 100
  elsif variable[2] != nil   then count = variable[2]
                           else ; count = 1 ; end
  count = count.to_i
  total = 0
#    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] == 4 and v[:Level].to_i < 20 }.sort_by { |k,v| [ (v[:Power] + v[:Speed]) * -1, k ] }.sample
  if variable[1] =~ /^(train)/i
    beast     = @sb_spirit_beasts.find { |k,v| k == "beastthatdoesntexist" }
    if beast == nil
      if Char.name == "Locksmith"
        beast = @sb_spirit_beasts.find { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i < 20 and k == "Citadel Guardian"      } if beast == nil
        beast = @sb_spirit_beasts.find { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i < 20 and k == "Ghost Pirate"          } if beast == nil
      elsif Char.name == "Esk"
        beast = @sb_spirit_beasts.find { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i < 20 and k == "Famished Vesperti"     } if beast == nil
        beast = @sb_spirit_beasts.find { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i < 20 and k == "Waernmaster"           } if beast == nil
      end
    end
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i < 20 and v[:Level].to_i > 1       }.sort_by { |k,v| v[:Level].to_i * -1     }[0] if beast == nil
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i == 1 and v[:ExpToNext].to_i < 300 }.sort_by { |k,v| v[:ExpToNext].to_i * -1 }[0] if beast == nil
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i == 1                              }.sample                                       if beast == nil
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i == 1 and v[:ExpToNext].to_i < 300 }.sort_by { |k,v| v[:ExpToNext].to_i * -1 }[0] if beast == nil
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i == 1                              }.sample                                       if beast == nil
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own]                       and v[:Level].to_i == 1                              }.sample                                       if beast == nil
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own]                                                                            }.sample                                       if beast == nil
  elsif variable[1] =~ /^(chal|listed)/i
    beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i == 20 and v[:LoyaltyN] > 1 }.sort_by { |k,v| (v[:Power].to_i + v[:Speed].to_i) * -1 }[0]
  end
  if beast == nil
    echo "No Level 20 beasts"
    exit
  end
  sb_spirit_beast_select(beast[0])

  count.times {
    total += 1
    wait_while { XMLData.room_id != 4903602 or running?("^SpiritBeastTrack$") }
    start_script "SpiritBeastTrack" if !running?("^SpiritBeastTrack$")
    pause("1s")
    sb_EchoDebug("Starting Run :-: #{total} of #{count}")
    fput "inquire training"  if variable[1] =~ /^(train)/i
    fput "inquire challenge" if variable[1] =~ /^(chal)/i
    fput "inquire listed"    if variable[1] =~ /^(listed)/i
    if variable[1] =~ /^(chal)/i
      result = matchtimeout 30, /You've currently defeated .* of the seven trainers\./, /You haven't defeated any of them yet/, /You've already defeated all of the challengers this week\./
      break if result =~ /You've already defeated all of the challengers this week./
#    elsif variable[1] =~ /^(listed)/i
#      result = matchtimeout 30, /If you lose more than three Listed Fights, you're done for the week\./
#      if result =~ //
    end
    fput "go grate"
    result = matchtimeout 120, "challenges you to a Spirit Battle"
    if result !~ /challenges you to a Spirit Battle/
      stop_script "SpiritBeastTrack" if running?("^SpiritBeastTrack$")
      exit
    end
    fput "beast challenge accept"
    fput "beast command detect"
    GameObj.loot.each { |looz| fput "look at ##{looz.id}" }
    @sb_Status[:Mine][:CommandNext] = "lash"
    @sb_Status[:Mine][:Command] = "detect"
    while running?("^SpiritBeastTrack$")
      if    @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] != "none"
        fput "beast command #{@sb_Status[:Mine][:CommandNext]}"
        @sb_Status[:Mine][:Command] = @sb_Status[:Mine][:CommandNext]
        @sb_Status[:Mine][:CommandNext] = "none"
        
#      elsif @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] == "none" and  @sb_Status[:Them][:Defending] and @sb_Status[:Mine][:AP] >= 1 and @sb_Status[:Mine][:SAC] <  3
#        fput "beast command lash"
        
      elsif @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] == "none"                                                                    and @sb_Status[:Mine][:SAC] >= 4 and @sb_Status[:Them][:Condition] =~ /^(on the verge of defeat)$/
        fput "beast command special"
        
      elsif @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] == "none" and !@sb_Status[:Them][:Defending]                                 and @sb_Status[:Mine][:SAC] >= 4
        fput "beast command special"

      elsif @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] == "none"                                    and @sb_Status[:Mine][:AP] >= 1
        fput "beast command lash"

#        @sb_Status[:Mine][:Command] = "detect"
#        @sb_Status[:Mine][:Command] = "special"
        
#      elsif @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] == "none"                                    and @sb_Status[:Mine][:AP]  > 0                                  and @sb_Status[:Mine][:Condition] =~ /^(on the verge of defeat)$/
#        fput "beast command fortify"
#        @sb_Status[:Mine][:Command] = "fortify"
#        @sb_Status[:Mine][:CommandNext] = "heal"
        
      elsif @sb_Status[:Mine][:Command] == "attack" and @sb_Status[:Mine][:CommandNext] == "none" and  @sb_Status[:Them][:Defending] and @sb_Status[:Mine][:AP] >= 3                                  and @sb_Status[:Mine][:Condition] =~ /^(is critically wounded)$/
        fput "beast command heal"
        
      end
      
      sb_waitrt()
    end
    wait_while { XMLData.room_id != 4903602 or running?("^SpiritBeastTrack$") }
    sb_spirit_beast_info(beast[0])
    if variable[1] =~ /^(chal|listed)/i
      beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] and v[:QualityN] >= 4 and v[:Level].to_i == 20 and v[:LoyaltyN] > 1 }.sort_by { |k,v| (v[:Power].to_i + v[:Speed].to_i) * -1 }[0]
      break if beast == nil
      sb_spirit_beast_select(beast[0])
    end
  }
  wait_while { XMLData.room_id != 4903602 }
  sb_spirit_beast_info(beast[0])
  beast = @sb_spirit_beasts.find_all { |k,v| v[:Own] }.sort_by { |k,v| [ v[:QualityN], v[:Level].to_i, k ] }[0]
  sb_spirit_beast_select(beast[0]) if beast
  pause("1s")
  start_script "go2", [startRoom, "_disable_confirm_"] if Room.current.id != startRoom
  wait_while { running?("^go2$") }
  
end