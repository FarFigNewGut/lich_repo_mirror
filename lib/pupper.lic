=begin

*This script is designed to run exclusively in the StormFront FE, it will not run in any other.*

Have you ever wanted a pet pupper to follow you around and to interact with?  Well now you can have one of your very own design!

The TownCrier Team is glad to bring you ;pupper - a script that creates a client side ONLY puppy.

Please use the following resources to learn how to use this script:

video Tutorial - https://www.youtube.com/watch?v=sETMajBOCrk
the lich channel "Pupper" has been created, you can discuss the script, ideas for it, and ask questions there,
however there is no guarantee someone knowledgeable will be on to answer them at all times.
If you join this channel, please be topical.

Any questions, feedback, or bugs can be sent to - puppers@gstowncrier.com

Please read the credits using pupper credits to see the list of folks who worked on this script!

If you would like to contribute a personality profile of your own design, we are accepting submissions from writers.  
There is no guarantee a submission will be selected for a future update release, but if it is, you will be credited for it.  
To submit an idea please complete the following form.
https://drive.google.com/open?id=1xHy8moWrUpRHxdTHbwm5JdlkCqrLU-970PeKY491OiY

tags: puppy, pupper, pup, dog, doggie, towncrier, pet, invisible, ambients

Change Log -
V. 1.0.1 - Typo Fix 5/11/2019
V. 1.0 - Inital Release 5/9/2019

=end

ambient_cooldown = 0
ambient_cycles = 0
pupcommand = nil
pupcmdarray = nil
puparg = nil
rng = nil
temppup = nil
temppuptwo = nil
tempsplitflag = nil
spacecount = nil
puppersilent = false
profilenumb = nil
puppro = 1
current_room = nil


if $frontend == 'stormfront'
	room_window_begin = "<pushStream id=\"room\" ifClosedStyle=\"watching\"/>"
	room_window_end   = "<popStream/>\r\n"
	story_window_begin = "<pushStream id=\"story\" ifClosedStyle=\"watching\"/>"
	story_window_end   = "<popStream/>\r\n"
else
	"respond This script is currently only designed to function in Stormfront, please use that if you wish to experience this script!"
	exit
end


#user vars to save pupper info
UserVars.pupper                    ||= {}
UserVars.pupper[:pupperdesc]			= "cute looking puppy"								if UserVars.pupper[:pupperdesc].nil?
UserVars.pupper[:puppergender]			= "N"												if UserVars.pupper[:puppergender].nil?
UserVars.pupper[:pupperroompost]		= "is close by you."								if UserVars.pupper[:pupperroompost].nil?
UserVars.pupper[:pupperroompre]			= ""												if UserVars.pupper[:pupperroompre].nil?
UserVars.pupper[:pupperfollowpost]		= "runs into the area following behind you."		if UserVars.pupper[:pupperfollowpost].nil?
UserVars.pupper[:pupperfollowpre]		= ""												if UserVars.pupper[:pupperfollowpre].nil?
UserVars.pupper[:pupperwindowpost]		= "is here."										if UserVars.pupper[:pupperwindowpost].nil?
UserVars.pupper[:pupperwindowpre]		= ""												if UserVars.pupper[:pupperwindowpre].nil?
UserVars.pupper[:pupperreturnpost]		= "just ran into the area, sensing your return!"	if UserVars.pupper[:pupperreturnpost].nil?
UserVars.pupper[:pupperreturnpre]		= ""												if UserVars.pupper[:pupperreturnpre].nil?
UserVars.pupper[:pupperambienttimer]	= 60												if UserVars.pupper[:pupperambienttimer].nil?
UserVars.pupper[:pupperdismisspost]		= "scampers off into the distance!"	   				if UserVars.pupper[:pupperdismisspost].nil?
UserVars.pupper[:pupperdismisspre]		= ""												if UserVars.pupper[:pupperdismisspre].nil?
UserVars.pupper[:pupperlookdesc]		= "The cutest dang puppy you've ever seen!"			if UserVars.pupper[:pupperlookdesc].nil?
UserVars.pupper[:puppershowroom]		= true

if UserVars.pupper[:pupperprofile].nil? or UserVars.pupper[:pupperprofile].count != 5
	UserVars.pupper[:pupperprofile]			= [["Default",true],["Playful", false], ["Narcoleptic", false], ["Loyal", false], ["Independent", false]]
end



def ambient_message(ambient_request)
	pupgeneral = nil
	puppc = nil
	pupothers = nil
	pupstuff = nil
	puppet = nil
	pupspeak = nil
	puptemptarget = nil
	tempa_an = nil
	temparray = nil
	tempcheck = nil
	
	room_window_begin = "<pushStream id=\"room\" ifClosedStyle=\"watching\"/>"
	room_window_end   = "<popStream/>\r\n"
	story_window_begin = "<pushStream id=\"story\" ifClosedStyle=\"watching\"/>"
	story_window_end   = "<popStream/>\r\n"
	
	
	

	if (ambient_request == "PC")
		puptemptarget = GameObj.pcs.sample
		tempcheck = false
	elsif (ambient_request == "NPC")
		puptemptarget = GameObj.npcs.sample.name
	elsif (ambient_request == "STUFF")
		if GameObj.loot != nil
			temparray = temparray + GameObj.loot
		end
		if GameObj.room_desc != nil
			temparray = temparray + GameObj.room_desc
		end
		if temparray != nil
			puptemptarget = temparray.sample.name
		else
			ambient_request = "GEN"
		end
	end
		
	if puptemptarget != nil and tempcheck == nil
		if puptemptarget.start_with?('a','e','i','o','u')
			tempa_an = "An"
		else
			tempa_an = "A"
		end
	end

	if UserVars.pupper[:puppergender] == "M"
		theyheshe = "He"
		theirhisher = "His"
		itshishers = "His"
		itshisher = "His"
		itheshe = "He"
		ithimher = "Him"
	elsif UserVars.pupper[:puppergender] == "F"
		theyheshe = "She"
		theirhisher = "Her"
		itshishers = "Hers"
		itshisher = "Her"
		itheshe = "She"
		ithimher = "Her"
	elsif UserVars.pupper[:puppergender] == "N"
		theyheshe = "They"
		theirhisher = "Their"
		itshishers = "Its"
		itshisher = "Its"
		itheshe = "It"
		ithimher = "It"
	end


	if UserVars.pupper[:pupperdesc].start_with?('a','e','i','o','u')
		a_an = "An "
	else
		a_an = "A "
	end



	#DEFAULT

	defaultgeneral 		= 	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> barks at you.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sniffs around for a treat.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> walks around in a circle before lying down at your feet.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sneezes suddenly, giving a yalp of surprise.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> spots a patch of dirt and rolls around in it.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> looks up at you with those adorable puppy dog eyes."]

	defaultpc 			= 	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> barks at #{puptemptarget}.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sits next to #{puptemptarget}."]

	defaultothers		=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> barks at #{tempa_an.downcase} #{puptemptarget}.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sits next to #{tempa_an.downcase} #{puptemptarget}."]

	defaultstuff 		= 	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sniffs around #{tempa_an.downcase} #{puptemptarget}.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> paws at #{tempa_an.downcase} #{puptemptarget}."]

	defaultpet 			= 	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> wags #{itshisher.downcase} tail happily.", 
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> rolls over and lets you rub #{itshisher.downcase} belly."]

	defaultspeak	 	= 	["On cue <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> barks."]


	#Playful - By Luxie
	
	playfulgeneral 		=	["The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> pounces on a fallen leaf, missing it! Giving a little yelp of surprise, #{itheshe.downcase} gleefully chases after the leaf, as if #{itheshe.downcase} has never seen one before. A bright reflection from something catches #{itshisher.downcase} eye as #{itheshe.downcase} passes by and #{itheshe.downcase} comes to a full stop to investigate. Then #{itheshe.downcase} looks up where the leaf was and glances around in confusion. Where'd it go?",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> flops down on #{itshisher.downcase} belly, letting out a massive sigh. From the corner of #{itshisher.downcase} eye, #{itheshe.downcase} suddenly spies something moving just behind #{itshisher.downcase} and lunges from  #{itshisher.downcase} prone stance. #{itshisher} mouth wide open, #{itheshe.downcase} attempts a comical circular scramble at the wagging thing behind #{ithimher.downcase}! Falling short, #{itheshe.downcase} spins out all akilter after that uncatchable tail.  #{itshisher} head plops to the ground halfway twisted across  #{itshisher.downcase} body.  #{itshisher} adorable expression states quite clearly that #{itheshe.downcase} meant to end up like that. You believe #{ithimher.downcase}, right?",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> sprawls on the ground, splayed out with oversized paws out to either side and #{itshisher.downcase} chin lying flat against the ground. After a moment, #{itheshe.downcase} rolls to one side onto #{itshisher.downcase} back with a whimpering noise and lifts one paw in a clear invitation for *someone* to rub #{itshisher.downcase} belly.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> perks up, gazing far into the distance for a long moment. Despite the utter absence of anything observable, the puppy lets out a joyous peal of barking, tail wagging furiously.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> crouches low, #{itshisher.downcase} tail turning tight circles as #{itshisher.downcase} haunches wiggle in the air. With a furious bark, #{itheshe.downcase} lunges at... nothing. Quite satisfied with #{ithimher.downcase}self, the puppy looks up with a doggy grin waiting for your praise on #{itshisher.downcase} conquest.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> yelps, wagging #{itshisher.downcase} tail back and forth quickly. #{itheshe} freezes for a moment in a pose where #{itshisher.downcase} nose is pointed purposefully at something you cannot see or sense.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> scampers over to you wagging #{itshisher.downcase} tail excitedly. #{itheshe} jumps up against your legs and looks up at you with big eyes.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> nudges at your ankles and looks up expectantly at you as if saying, 'Isn't it time to go somewhere?'",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> begins to scamper away, then looks back at you. Keep up!",
							"A flying furball comes out of nowhere, aimed for your legs! Coming to a screeching halt, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> slides fast as #{itheshe.downcase} closes in on you and lands hard against your leg. #{itheshe} meant to do that. #{itheshe} is gonna just stay there for a while to make sure you know it, too.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> comes up and begins sniffing your shoes, checking out exactly where you have been and with whom. Satisfied that #{itheshe.downcase} has puzzled out all there is to smell, #{itheshe.downcase} looks up at you and shifts restlessly. It's #{itshisher.downcase} turn now to play with you!",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> trots purposefully over to you with a stick in #{itshisher.downcase} mouth, dropping it at your feet. #{itheshe} sits in front of you, with #{itshisher.downcase} tail wagging and barks eagerly. Pushing the stick even closer to you, #{itheshe.downcase} eyes you with pleading eyes. Man, how are you going to resist those puppy dog eyes?"]
	
	playfulpc			=	["The tail of <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> wags faster and faster as #{itheshe.downcase} bounces over to #{puptemptarget} as if #{itheshe.downcase} found a long lost friend!",
							"Sniffing along the ground, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> follows some invisible trail right up to #{puptemptarget} where #{itheshe.downcase} promptly parks #{itshisher.downcase} furry backside and looks like #{itheshe.downcase} just won the best prize ever!",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> dashes over between the legs of #{puptemptarget}, racing around, between and back again. It's a wonder someone isn't on the ground after that!",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> goes bounding towards #{puptemptarget}, yelping excitedly!"]
	
	playfulothers		=	["The tail of <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> wags faster and faster as #{itheshe.downcase} bounces over to #{tempa_an.downcase} #{puptemptarget} as if #{itheshe.downcase} found a long lost friend!",
							"Sniffing along the ground, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> follows some invisible trail right up to #{tempa_an.downcase} #{puptemptarget} where #{itheshe.downcase} promptly parks #{itshisher.downcase} furry backside and looks like #{itheshe.downcase} just won the best prize ever!",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> dashes over between the legs of #{tempa_an.downcase} #{puptemptarget}, racing around, between and back again. It's a wonder someone isn't on the ground after that!",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> goes bounding towards #{tempa_an.downcase} #{puptemptarget}, yelping excitedly!"]
	
	playfulstuff		=	["The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> goes over to the #{puptemptarget} and nudges it carefully with #{itshisher.downcase} nose. Eyeing the #{puptemptarget}, #{itheshe.downcase} then sniffs at it and with a seeming nod of #{itshisher.downcase} head, #{itheshe.downcase} sits protectively next to it, as if daring anyone to take #{itshisher.downcase} new #{puptemptarget}.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> chases round and round #{tempa_an.downcase} #{puptemptarget}, yelping with excitement. #{itshisher} tail is wagging like mad as #{itheshe.downcase} finally makes a spirited pounce at #{tempa_an.downcase} #{puptemptarget}. Then #{itheshe.downcase} rolls over and sits at full alertness, ready for #{tempa_an.downcase} #{puptemptarget} to play with #{ithimher.downcase}.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> spots the #{puptemptarget} and cautiously edges up next to it, batting at it with #{itshisher.downcase} paw, then pushing it with #{itshisher.downcase} snout. The very patient #{puptemptarget} remains still. The perplexed puppy tries again and again, but nothing happens. Finally, exhausted, #{itheshe.downcase} plops down next to the #{puptemptarget} and takes a nap.",
							"Stalking #{tempa_an.downcase} #{puptemptarget}, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> circles it, keeping #{itshisher.downcase} eye on it, then pounces on it with a little puppy bark of delight! Got it!"]
	
	playfulpet			=	["You reach over and run your hand over the head and neck of the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/>. #{itheshe} squirms and lifts #{itshisher.downcase} head up to try to lick you!",
							"You give the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> a fond pat on #{itshisher.downcase} head. #{itheshe} looks up at you with a sparkle in #{itshisher.downcase} adoring, bright eyes and nuzzles under your hand playfully."]
	
	playfulspeak		=	["You wave your hands at the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> with a grand gesture, and #{itheshe.downcase} starts yipping and yapping!",
							"You ask the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/>, 'What do you think?' Three sharp yelps escape from the puppy as #{itheshe.downcase} crouches down, wagging #{itshisher.downcase} tail excitedly and gazes up at you. It is time to play, clearly, that is what #{itheshe.downcase} thinks."]
	
	
	#Narcoleptic - By Mnute
	
	
	sleepygeneral		=	["Swaying side to side in an effort to remain awake, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> suddenly falls over with a quiet *thumph*. Soooo sleepy.",
							"Nodding #{itshisher.downcase} head slower and slower, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> unceremoniously keels forward and conks #{itshisher.downcase} head on the ground with a light *thunk*. #{itshisher} tail twitches slightly as #{itheshe.downcase} sleeps.",
							"A buzzing fly slowly circles the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/>. Lifting to #{itshisher.downcase} haunches, #{itshisher.downcase} head moves to follow it. As the fly dips back behind #{itshisher.downcase} ears, #{itshisher.downcase} head lolls back and #{itheshe.downcase} falls over backwards. Asleep. Again.",
							"In a rare moment of crystal clarity, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> catches sight of #{itshisher.downcase} twitching tail. #{itheshe} flashes to #{itshisher.downcase} feet in a spinning chase, only to tumble out of it and end up motionless on #{itshisher.downcase} back. With a limp tongue hanging out the side of #{itshisher.downcase} mouth, #{itshisher.downcase} legs continue in a slow motion dream pursuit. So close. So close...",
							"As if struck by a bolt from the Gods, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> collapses into a sleeping puddle of cuteness.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> wanders about aimlessly, pausing for bouts of microsleep before happily continuing #{itshisher.downcase} adventure.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> insistently bumps your ankle with #{itshisher.downcase} head to get your attention. By the time you look down to see what #{itheshe.downcase} wants, #{itheshe.downcase} is already fast asleep.",
							"Hearing a noise that you can't, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> tilts #{itshisher.downcase} head in an effort to discern its location. Having pinpointed the hidden beast, #{itheshe.downcase} takes two steps, then weebles, wobbles, and falls onto #{itshisher.downcase} side. Probably safer for all that the source of the sound remains a mystery.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> stares up at you with large puppy eyes brimming with love and trust. Before you can reach down and return the sentiment, the eyes glaze over with an unseeing blanket of slumber. However, the love and trust remain a warm feeling within your heart.",
							"In a surprising burst of energy, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> prances circles around you, ready to play and share some puppy-power! *PLOP* Aaaaaand the moment is gone."]
	
	sleepypc			=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> toddles over to #{puptemptarget}, sniffs their foot, and promptly passes out. How embarrassing.",
							"Sniffing in the direction of #{puptemptarget}, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> issues a warning bark and instantly falls over backwards in blissful narcoleptic slumber.",
							"Scrambling to #{itshisher.downcase} feet after a quick nap, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> trots over to #{puptemptarget} to curl up and take a longer nap.",
							"With #{itshisher.downcase} head uncomfortably askew, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> approaches #{puptemptarget} for assistance but collapses at their feet, precipitously knocking #{ithimher.downcase}self straight again."]
	
	sleepyothers		=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> toddles over to #{tempa_an.downcase} #{puptemptarget}, sniffs their foot, and promptly passes out. How embarrassing.",
							"Sniffing in the direction of #{tempa_an.downcase} #{puptemptarget}, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> issues a warning bark and instantly falls over backwards in blissful narcoleptic slumber.",
							"Scrambling to #{itshisher.downcase} feet after a quick nap, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> trots over to #{tempa_an.downcase} #{puptemptarget} to curl up and take a longer nap.",
							"With #{itshisher.downcase} head uncomfortably askew, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> approaches #{tempa_an.downcase} #{puptemptarget} for assistance but collapses at their feet, precipitously knocking #{ithimher.downcase}self straight again."]
	
	sleepystuff			=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> warily stalks over to #{tempa_an.downcase} #{puptemptarget}, barks at it from a safe distance and stiff leggedly falls over, asleep. The puppy immediately returns to wakefulness, notices and barks at #{tempa_an.downcase} #{puptemptarget} again, and gets stuck in a narcoleptic loop. Someone's going to sleep well tonight.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> presses #{itshisher.downcase} head against #{tempa_an.downcase} #{puptemptarget} and falls asleep.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sniff for treats around #{tempa_an.downcase} #{puptemptarget} then decides to take a nap instead.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> engages in a staring contest with #{tempa_an.downcase} #{puptemptarget} and loses consciousness."]
	
	sleepypet			=	["You reach down to pet <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/>. #{itshisher} tail thumps the ground excitedly. When you scratch that perfect spot, #{itheshe.downcase} alarmingly goes limp as a ragdoll. Tiny snores let you know all is well in puppy-land."]
	
	sleepyspeak			=	[" You gently command your <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> to speak. #{itheshe} locks eyes with you and scoots backwards with a muffled closed-mouth 'maarf'. Then looks as if #{itheshe.downcase} is waiting for something else to happen.",
							"You gently command your <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> to speak. #{itheshe} erupts with an ear piercing high pitched yelp. The puppy basks in proud accomplishment briefly, then falls over sideways."]

	#Loyal - By Darcena

	loyalgeneral		=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> stiffens #{itshisher.downcase} front legs and leans forward, warily looking around for any danger to #{itshisher.downcase} owner.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> tilts #{itshisher.downcase} head to the side, #{itshisher.downcase} ear perked, as #{itheshe.downcase} listens to something otherwise unheard.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> takes a few steps away, sniffs around, and then wanders back to #{itshisher.downcase} original position.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> gallops forward towards an imaginary enemy then skids to a stop, looking back over #{itshisher.downcase} shoulder. #{itheshe} slowly walks back to #{itshisher.downcase} starting place, panting lightly.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> mouths at #{itshisher.downcase} paws, leaving sticky strands of saliva on the bottom of #{itshisher.downcase} feet.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> snaps #{itshisher.downcase} teeth at something on #{itshisher.downcase} haunches and growls lightly under #{itshisher.downcase} breath.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> noses your leg, nudging almost to the point of knocking you off balance. #{itheshe} glances up at you apologetically with faithful eyes.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> winds around your feet, whining pitifully, looking as if #{itheshe.downcase} just wants a friendly pat or a scratch behind the ear.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> nudges your hand with #{itshisher.downcase} head, quickly darting out #{itshisher.downcase} tongue to lick you. #{itheshe} seems to want some attention!",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> meanders in circles around you, alternating sniffing at the air and listening for some far off sounds.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> lies down on the ground near your feet with #{itshisher.downcase} haunches high in the air and creeps forward little by little on #{itshisher.downcase} paws. Suddenly #{itheshe.downcase} takes off with a shot, chasing some imaginary foe, before #{itheshe.downcase} races back and sits smartly back where #{itheshe.downcase} began."]
	
	loyalpc				=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> stiffens #{itshisher.downcase} body, the hair raising along #{itshisher.downcase} spine, growling at #{puptemptarget}.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> prowls closer to #{puptemptarget}, sniffing at the air along the way. #{itheshe} lowers #{itshisher.downcase} head and snarls a little.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> stiff-leggedly walks towards #{puptemptarget}, barking at full bore, then abruptly stops and races back to you.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> rumbles a warning towards #{puptemptarget} for daring to turn in your direction. Watch out, world.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> carefully places #{itshisher.downcase} own body between you and #{puptemptarget}, watching #{puptemptarget} intently."]
	
	loyalothers			=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> stiffens #{itshisher.downcase} body, the hair raising along #{itshisher.downcase} spine, growling at #{tempa_an.downcase} #{puptemptarget}.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> prowls closer to #{tempa_an.downcase} #{puptemptarget}, sniffing at the air along the way. #{itheshe} lowers #{itshisher.downcase} head and snarls a little.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> stiff-leggedly walks towards #{tempa_an.downcase} #{puptemptarget}, barking at full bore, then abruptly stops and races back to you.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> rumbles a warning towards #{tempa_an.downcase} #{puptemptarget} for daring to turn in your direction. Watch out, world.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> carefully places #{itshisher.downcase} own body between you and #{tempa_an.downcase} #{puptemptarget}, watching #{tempa_an.downcase} #{puptemptarget} intently."]
	
	loyalstuff			=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> sniffs at #{tempa_an.downcase} #{puptemptarget} and suddenly starts barking uncontrollably. Just as abruptly, the puppy stops and sneezes at it.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> rolls #{itshisher.downcase} eyes at #{tempa_an.downcase} #{puptemptarget}, #{itshisher.downcase} sclera bright, then growls lightly. #{tempa_an} #{puptemptarget} is surely scared.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> growls at #{tempa_an.downcase} #{puptemptarget}; the saliva rolls over #{itshisher.downcase} lips and dangles towards the ground before gravity finally wins as a wet glob drip breaks off and hits the ground.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> is wagging #{itshisher.downcase} tail happily until #{itheshe.downcase} notices #{tempa_an.downcase} #{puptemptarget}. The puppy barks fiercely as if #{itheshe.downcase} thinks #{itheshe.downcase} is going to scare off the terrifying #{puptemptarget}."]
	
	loyalpet			=	["You scratch your <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> behind #{itshisher.downcase} ears and #{itheshe.downcase} nuzzles into your hand.",
							"You stroke the head of your <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> and #{itheshe.downcase} lets out a grateful sigh."]
	
	loyalspeak			=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> watches you closely and once #{itheshe.downcase} sees the command, #{itheshe.downcase} lets out a resounding and echoing bark.",
							"<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> pants with delight while successive growls get louder and louder until the puppy lets out one fierce bark."]


	#Independent - By Lynaera
							
	indiegeneral		=	["Barking softly, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> curiously tilts #{itshisher.downcase} head to listen",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> pauses to sniff the air and snorts disinterestedly.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> lowers #{ithimher.downcase}self into a crouch, #{itshisher.downcase} front paws twitching as #{itshisher.downcase} head darts back and forth. Suddenly, the puppy bounds forward to inspect what #{itheshe.downcase} sees, however, #{itheshe.downcase} stumbles over #{itshisher.downcase} own paws! The puppy gazes around the area sheepishly, embarrassed about the whole spectacle.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> gazes around the area aloofly, clearly unimpressed by #{itshisher.downcase} surroundings.",
							"Bounding around the area, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> is content to explore on #{itshisher.downcase} own for a short while.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> lies down to take a quick rest, but keeps an ear raised.",
							"Leaping forward confidently, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> rolls around on the ground, kicking up dust and loose debris.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> takes a few bold steps about the area and looks back at you expectantly.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> paws gently at your feet, but turns away when you look down at #{ithimher.downcase}. The puppy gazes around the area, trying to avoid drawing more attention to #{ithimher.downcase}self.",
							"Whining at you, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> demands your attention as #{itheshe.downcase} gazes around the area. Does #{itheshe.downcase} want you to take #{ithimher.downcase} on a walk?",
							"Confidently walking around the area, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> stops every few steps to quickly look back at you.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> walks over to your leg and rolls around on the ground, kicking up dust and loose debris.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> meanders around the area and then back to your side, sitting down on your feet.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> crawls over to you and gently wags #{itshisher.downcase} tail."]

	indiepc				=	["The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> sees #{puptemptarget} and runs in a small circle, but suddenly #{itshisher.downcase} own tail catches #{itshisher.downcase} eye and a chase ensues.",
							"Freezing up when #{itheshe.downcase} sees #{puptemptarget}, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> looks to you for guidance.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> barks a challenge in the direction of #{puptemptarget}. When #{puptemptarget} doesn't respond, the puppy snorts anxiously before returning to your side.",
							"Sniffing at #{puptemptarget} and shaking #{itshisher.downcase} head, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> sneezes violently and bounds away from them.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> gazes at #{puptemptarget} and begins to wag #{itshisher.downcase} tail. Maybe they know each other?",
							"Anxious due to the presence of #{puptemptarget}, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> slowly creeps away from them."]
							
	indieothers			=	["The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> sees #{tempa_an.downcase} #{puptemptarget} and runs in a small circle, but suddenly #{itshisher.downcase} own tail catches #{itshisher.downcase} eye and a chase ensues.",
							"Freezing up when #{itheshe.downcase} sees #{tempa_an.downcase} #{puptemptarget}, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> looks to you for guidance.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> barks a challenge in the direction of #{tempa_an.downcase} #{puptemptarget}. When #{tempa_an.downcase} #{puptemptarget} doesn't respond, the puppy snorts anxiously before returning to your side.",
							"Sniffing at #{tempa_an.downcase} #{puptemptarget} and shaking #{itshisher.downcase} head, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> sneezes violently and bounds away from them.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> gazes at #{tempa_an.downcase} #{puptemptarget} and begins to wag #{itshisher.downcase} tail. Maybe they know each other?",
							"Anxious due to the presence of #{tempa_an.downcase} #{puptemptarget}, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> slowly creeps away from them."]
	
	indiestuff			=	["Apparently startled by #{tempa_an.downcase} #{puptemptarget}, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> barks defensively as #{itheshe.downcase} slowly inches towards the #{puptemptarget} to inspect it closely.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> leaps towards #{tempa_an.downcase} #{puptemptarget} and rolls over onto #{itshisher.downcase} side, batting #{tempa_an.downcase} #{puptemptarget} with one paw while licking the ground near it.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> creeps up on #{tempa_an.downcase} #{puptemptarget} and sniffs it. Displeased by #{tempa_an.downcase} #{puptemptarget}, the puppy shakes #{itshisher.downcase} head and sneezes.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> leaves your side and darts over towards #{tempa_an.downcase} #{puptemptarget} to inspect it! Looking back at you for a moment, #{itheshe.downcase} looks like #{itheshe.downcase} is making sure you don't go running off on your own!",
							"Lowering #{itshisher.downcase} head to the ground, <pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> sniffs at the ground. Following a trail of smell, the puppy about bumps into #{tempa_an.downcase} #{puptemptarget} before #{itheshe.downcase} notices its presence.",
							"Wagging #{itshisher.downcase} tail, the <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> glances between you and #{tempa_an.downcase} #{puptemptarget} and barks expectantly."]
	
	indiepet			=	["You reach down to pet your <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> on the head and down the neck. The puppy pretends not to notice, however, #{itshisher.downcase} wagging tail gives away how #{itheshe.downcase} really feels.",
							"You reach down to thoroughly pet your <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/>. #{itheshe} responds by rolling over onto #{itshisher.downcase} side and wagging #{itshisher.downcase} tail. The puppy tries to play it cool and reign in their excitement, but #{itheshe.downcase} is not fooling anyone."]
	
	indiespeak			=	["<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> watches you closely as you speak to it; #{itshisher.downcase} ears perks up and #{itshisher.downcase} tail slowly wags from side to side.",
							"The <pushBold\/>#{UserVars.pupper[:pupperdesc]}<popBold\/> perks up as you speak to it, however, #{itheshe.downcase} decides to gaze about the area aloofly."]
			
	

	#Check the profiles
	UserVars.pupper[:pupperprofile].each {|type, status|
		
		if ((type == "Playful") and (status == true))
			pupgeneral = pupgeneral + playfulgeneral
			puppc = puppc + playfulpc
			pupothers = pupothers + playfulothers
			pupstuff = pupstuff + playfulstuff
			puppet = puppet + playfulpet
			pupspeak = pupspeak + playfulspeak
		end
		
		if ((type == "Narcoleptic") and (status == true))
			pupgeneral = pupgeneral + sleepygeneral
			puppc = puppc + sleepypc
			pupothers = pupothers + sleepyothers
			pupstuff = pupstuff + sleepystuff
			puppet = puppet + sleepypet
			pupspeak = pupspeak + sleepyspeak
		end
		
		if ((type == "Loyal") and (status == true))
			pupgeneral = pupgeneral + loyalgeneral
			puppc = puppc + loyalpc
			pupothers = pupothers + loyalothers
			pupstuff = pupstuff + loyalstuff
			puppet = puppet + loyalpet
			pupspeak = pupspeak + loyalspeak
		end
		
		if ((type == "Independent") and (status == true))
			pupgeneral = pupgeneral + indiegeneral
			puppc = puppc + indiepc
			pupothers = pupothers + indieothers
			pupstuff = pupstuff + indiestuff
			puppet = puppet + indiepet
			pupspeak = pupspeak + indiespeak
		end
		

	}

	#If all profiles are inactive, load the default list.
	if pupgeneral == nil
		pupgeneral = defaultgeneral
	end
	if puppc == nil
		puppc = defaultpc
	end
	if pupothers == nil
		pupothers = defaultothers
	end
	if pupstuff == nil
		pupstuff = defaultstuff
	end
	if puppet  == nil
		puppet = defaultpet
	end
	if pupspeak == nil
		pupspeak = defaultspeak
	end



	#do the action!
	if ambient_request == "GEN"
		puts("#{story_window_begin}#{pupgeneral.sample} \r\n#{story_window_end}")
	elsif ambient_request == "PC"
		puts("#{story_window_begin}#{puppc.sample} \r\n#{story_window_end}")
	elsif ambient_request == "NPC"
		puts("#{story_window_begin}#{pupothers.sample} \r\n#{story_window_end}")
	elsif ambient_request == "STUFF"
		puts("#{story_window_begin}#{pupstuff.sample} \r\n#{story_window_end}")
	elsif ambient_request == "PET"
		puts("#{story_window_begin}#{puppet.sample} \r\n#{story_window_end}")
	elsif ambient_request == "SPEAK"
		puts("#{story_window_begin}#{pupspeak.sample} \r\n#{story_window_end}")
	end
	nil

end







#Load in a/an settings for current pupper
if UserVars.pupper[:pupperdesc].start_with?('a','e','i','o','u')
	a_an = "An "
else
	a_an = "A "
end

#Load in gender pronoun settings for current pupper
if UserVars.pupper[:puppergender] == "M"
	theyheshe = "he"
	theirhisher = "his"
	itshishers = "his"
	ithisher = "his"
	itheshe = "he"
	ithimher = "him"
elsif UserVars.pupper[:puppergender] == "F"
	theyheshe = "she"
	theirhisher = "her"
	itshishers = "hers"
	itshisher = "her"
	itheshe = "she"
	ithimher = "her"
elsif UserVars.pupper[:puppergender] == "N"
	theyheshe = "they"
	theirhisher = "their"
	itshishers = "its"
	ithisher = "it"
	itheshe = "it"
	ithimher = "it"
end





#Startup messages
if UserVars.pupper[:pupperreturnpre] != ""	
	puts("#{story_window_begin}#{UserVars.pupper[:pupperreturnpre]}<pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperreturnpost]} \r\n#{story_window_end}")
else
	puts("#{story_window_begin}#{UserVars.pupper[:pupperreturnpre]}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperreturnpost]} \r\n#{story_window_end}")
end

#Hooks

#For putting the puppy in the room description
puppyroom = proc {|server_string|
	if server_string =~ /<style id="roomDesc"\/>(?<contents>.*?)\.  <style id=""\/>/ and UserVars.pupper[:puppershowroom] == true
		UserVars.pupper[:puppershowroom] = false
		cap = server_string.match(/<style id="roomDesc"\/>(.*)<style id=""\/>/).captures[0].to_s
		if UserVars.pupper[:pupperroompre] != ""
			cap += "#{UserVars.pupper[:pupperroompre]}<pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperroompost]}  "
		else
			cap += "#{UserVars.pupper[:pupperroompre]}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperroompost]}  "
		end
		server_string.sub(/<style id="roomDesc"\/>(?<contents>.*?)<style id=""\/>/, "#{cap}")
	elsif server_string =~ /<style id="roomDesc"\/>(?<contents>.*?)\.<style id=""\/>/ and UserVars.pupper[:puppershowroom] == true
		UserVars.pupper[:puppershowroom] = false
		cap = server_string.match(/<style id="roomDesc"\/>(.*)<style id=""\/>/).captures[0].to_s
		if UserVars.pupper[:pupperroompre] != ""
			cap += "  #{UserVars.pupper[:pupperroompre]}<pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperroompost]}  "
		else
			cap += "  #{UserVars.pupper[:pupperroompre]}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperroompost]}  "
		end
		server_string.sub(/<style id="roomDesc"\/>(?<contents>.*?)<style id=""\/>/, "#{cap}")	
	else
		server_string
	end
}
DownstreamHook.add('puppyroom', puppyroom)
before_dying {
    DownstreamHook.remove('puppyroom')
}

#For being able to do commands at the puppy
hook_proc = proc { |client_string|
	begin
		if client_string =~ /^(?:<c>)?pupper(.*)/i
			pupcommand = nil
			pupcmdarray = nil
			puparg = nil
			pupcommand = $1
			pupcmdarray = pupcommand.split
			if pupcmdarray.count <= 1
				cmd = pupcmdarray[0]
			else
				cmd = pupcmdarray[0]
				puparg = pupcmdarray[1..pupcmdarray.count - 1]
			end
			
			
			#pet command - pet the pupper!
			if cmd.downcase.strip == 'pet'
				ambient_message("PET")
				nil
			end
			
			#pupper speak command
			if cmd.downcase.strip == 'speak'
				ambient_message("SPEAK")
				nil
			end
			
			
			
			if cmd.downcase.strip == 'help' or cmd.downcase.strip == 'menu' or cmd.downcase.strip == 'setup' or cmd.downcase.strip == ""
				respond "Pupper help Menu - Basic commands described below."
				respond ""
				respond "PUPPER PET         - Pet your pupper!"
				respond "PUPPER SPEAK       - Command the pupper to speak up!"
				respond "PUPPER ACTIVE      - Toggle the ambient messages on or off."
				respond "PUPPER PROFILE     - Display the list of profiles you can load for your pupper's personality."
				respond "PUPPER TIMER       - Enter a number, in seconds, between ambient messages."
				respond "PUPPER DESC        - Describe your puppy.  Do not use a/an at the start, and do not put any punctuation at the end."
				respond "PUPPER GENDER      - You can change the pronouns used in ambient messages for your pupper.  "
				respond "                     Use M for male, F for female, and N for neutral gender pronouns!"
				respond "PUPPER LOOK        - PUPPER LOOK by itself will display the show description for your pupper, "
				respond "                   - Use PUPPER LOOK followed by text to edit the show description of your pupper."
				respond "                     PUPPER LOOK The spaniel has big black spots on her white fur, floppy ears, and big bright eyes that look at you as if you are the center of her world."
				respond ""
				respond "When using the PUPPER WINDOW, DISMISS, FOLLOW, ROOM, and RETURN options as listed below:"
				respond "                    Use %p for where you want the pupper's description to appear."
				respond "                    (a/an are added automatically before the pupper description when you do this.)"
				respond ""
				respond "PUPPER WINDOW     - Change how the pupper appears in the ROOM Window of SF."
				respond "                    Example: PUPPER WINDOW %p is here, too!"
				respond "PUPPER FOLLOW     - Change the messaging when the pupper follows you to another room."
				respond "                    Example: PUPPER FOLLOW Close at your heels, %p runs in behind you!"
				respond "PUPPER ROOM       - Change the messaging when a pupper appears in the room's LOOK description of your STORY Window."
				respond "                    Example: PUPPER ROOM %p is playing near you."
				respond "PUPPER DISMISS    - Will send your pupper away, and end the script."
				respond "                    PUPPER DISMISS by itself will exits the script."
				respond "                    PUPPER DISMISS followed by text will edit the messaging without closing the script."
				respond "                    Example: PUPPER DISMISS You point over to a quiet corner and %p goes over there to rest quietly."
				respond "PUPPER RETURN     - Change the messaging when you start the script, and the pupper comes to you."
				respond "                    PUPPER RETURN Greeting you with an excited yelp, %p hurries over to you with a big puppy welcome!"
				respond ""
				respond "PUPPER CREDITS    - See the list of folks who made this script happen!"
				nil
			end
			
			
			if cmd.downcase.strip == 'credits'
				respond "                        ~CREDITS~"
				respond "              TownCrier Team - Pupper Script"
				respond ""
				respond "     Luxie          -     Creative Director, Organizer, Millisha,"
				respond "                          Co-Creator, Menu Designer, Recruitment,"
				respond "                          Editor, Playful Ambient Writer, Bardess."
				respond ""
				respond "     Claudaro       -     Coder, Co-Creator, Default Ambient Writer,"
				respond "                          Producer, Evil Wizard."
				respond ""
				respond "     Avawren        -     Millisha Wardrobe."
				respond ""
				respond "     Darcena        -     Tutorial Video Voice and Production,"
				respond "                          Loyal Ambient Writer."
				respond ""
				respond "     Lynaera        -     Independent Ambient Writer."
				respond ""
				respond "     Mnute          -     Narcoleptic Ambient Writer."
				respond ""
				respond ""   
				respond "                          -SPECIAL THANKS-"
				respond ""
				respond "                     Tysong, Kragdruk, and Ondreian"
				respond "         For answering questions about coding, and providing so many"
				respond "         great scripts to the community that I read the code of to"
				respond "         learn what I needed to in order to complete this project."
				respond ""
				respond "                          All The Puppers Everywhere"
				respond "         For being so dang cute and lovable, and inspiring this project."
				respond ""
				respond "                                  YOU"
				respond "               For taking the time to read these credits."
				respond ""
				nil
			end
			
			
			
			if cmd.downcase.strip == 'profile'
				if puparg[0] == nil or puparg[0].to_i <= 0
					profilenumb = 0
					UserVars.pupper[:pupperprofile].each{|term, stat|
						if profilenumb != 0
							if stat == false
								puts("#{story_window_begin}#{profilenumb}. #{term} \r\n#{story_window_end}")
							else
								puts("#{story_window_begin}<pushBold\/>#{profilenumb}. #{term}<popBold\/> \r\n#{story_window_end}")
							end
						end
						profilenumb = profilenumb +1
					}
				else
					if UserVars.pupper[:pupperprofile][(puparg[0].to_i)][1] == true
						UserVars.pupper[:pupperprofile][(puparg[0].to_i)][1] = false
					elsif UserVars.pupper[:pupperprofile][(puparg[0].to_i)][1] == false
						UserVars.pupper[:pupperprofile][(puparg[0].to_i)][1] = true
					end
					profilenumb = 0
					UserVars.pupper[:pupperprofile].each{|term, stat|
						if profilenumb != 0
							if stat == false
								puts("#{story_window_begin}#{profilenumb}. #{term} \r\n#{story_window_end}")
							else
								puts("#{story_window_begin}<pushBold\/>#{profilenumb}. #{term}<popBold\/> \r\n#{story_window_end}")
							end
						end
						profilenumb = profilenumb +1
					}
				end
				respond ""
				puts("#{story_window_begin}Profiles can be toggled <pushBold\/>ON<popBold\/> or OFF by using this command again with the appropriate number selected.  EX: pupper profile 1 \r\n#{story_window_end}")
				nil
			end
					
			
			
			
			#pupper active
			if cmd.downcase.strip == 'active'
				if puppersilent == false
					puppersilent = true
					puts("#{story_window_begin}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> settles down for a nap. \r\n#{story_window_end}")
				elsif puppersilent == true
					puppersilent = false
					puts("#{story_window_begin}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> wakes up and moves around once more. \r\n#{story_window_end}")
				end
				nil
			end
			
			
			#change ambient message cooldown
			if cmd.downcase.strip == 'timer'
				pupaval = nil
				pupaval = puparg[0].to_i
				if pupaval > 0
					#echo "#{pupaval}"
					UserVars.pupper[:pupperambienttimer] = (pupaval)
					ambient_cooldown = UserVars.pupper[:pupperambienttimer]
				else
					respond "This is not a valid entry, please use a numeric value."
				end
				nil
			end
			
			#desc command - change the pupper's description!
			if cmd.downcase.strip == 'desc'
				temppup = nil
				spacecount = puparg.count - 1
				puparg.each {|pupterm|
					temppup = temppup + pupterm
					if spacecount > 0
						temppup = temppup + " "
					end
					spacecount = spacecount - 1
				}
				#echo "#{temppup}"
				UserVars.pupper[:pupperdesc] = temppup
				if UserVars.pupper[:pupperdesc].start_with?('a','e','i','o','u')
					a_an = "An "
				else
					a_an = "A "
				end
				nil
			end
			
			#gender command - Change the pupper's gender!
			if cmd.downcase.strip == 'gender'
				if puparg[0].downcase == "m"
					UserVars.pupper[:puppergender] = "M"
				elsif puparg[0].downcase == "f"
					UserVars.pupper[:puppergender] = "F"
				elsif puparg[0].downcase == "n"
					UserVars.pupper[:puppergender] = "N"
				else
					respond "Please enter a value as the letters m, f, or n, for male, female, or neutral gender pronouns.  No change has been made."
				end
				
				if UserVars.pupper[:puppergender] == "M"
					theyheshe = "he"
					theirhisher = "his"
					itshishers = "his"
					ithisher = "his"
					itheshe = "he"
					ithimher = "him"
				elsif UserVars.pupper[:puppergender] == "F"
					theyheshe = "she"
					theirhisher = "her"
					itshishers = "hers"
					itshisher = "her"
					itheshe = "she"
					ithimher = "her"
				elsif UserVars.pupper[:puppergender] == "N"
					theyheshe = "they"
					theirhisher = "their"
					itshishers = "its"
					ithisher = "it"
					itheshe = "it"
					ithimher = "it"
				end
				nil
			end
			
			#window command - sets the pupper descript in the room window, if enabled.
			if cmd.downcase.strip == 'window'
				temppup = ""
				tempuptwo = ""
				tempsplitflag = nil
				spacecount = puparg.count - 1
				puparg.each {|pupterm|
					if pupterm.downcase == "%p"
						tempsplitflag = true
						spacecount = spacecount - 1
					elsif tempsplitflag == nil 
						temppup = temppup + pupterm
						if spacecount > 0
							temppup = temppup + " "
						end
						spacecount = spacecount - 1
					elsif tempsplitflag == true
						temppuptwo = temppuptwo + pupterm
						if spacecount > 0
							temppuptwo = temppuptwo + " "
						end
						spacecount = spacecount - 1
					end
				}
				UserVars.pupper[:pupperwindowpre] = temppup
				UserVars.pupper[:pupperwindowpost] = temppuptwo
				temppup = ""
				temppuptwo = ""
				tempsplitflag = nil
				nil
			end
			
			#follow messaging
			if cmd.downcase.strip == 'follow'
				temppup = ""
				tempuptwo = ""
				tempsplitflag = nil
				spacecount = puparg.count - 1
				puparg.each {|pupterm|
					if pupterm.downcase == "%p"
						tempsplitflag = true
						spacecount = spacecount - 1
					elsif tempsplitflag == nil 
						temppup = temppup + pupterm
						if spacecount > 0
							temppup = temppup + " "
						end
						spacecount = spacecount - 1
					elsif tempsplitflag == true
						temppuptwo = temppuptwo + pupterm
						if spacecount > 0
							temppuptwo = temppuptwo + " "
						end
						spacecount = spacecount - 1
					end
				}
				UserVars.pupper[:pupperfollowpre] = temppup
				UserVars.pupper[:pupperfollowpost] = temppuptwo
				temppup = ""
				temppuptwo = ""
				tempsplitflag = nil
				nil
			end
			
			#Room Desc
			if cmd.downcase.strip == 'room'
				temppup = ""
				tempuptwo = ""
				tempsplitflag = nil
				spacecount = puparg.count - 1
				puparg.each {|pupterm|
					if pupterm.downcase == "%p"
						tempsplitflag = true
						spacecount = spacecount - 1
					elsif tempsplitflag == nil 
						temppup = temppup + pupterm
						if spacecount > 0
							temppup = temppup + " "
						end
						spacecount = spacecount - 1
					elsif tempsplitflag == true
						temppuptwo = temppuptwo + pupterm
						if spacecount > 0
							temppuptwo = temppuptwo + " "
						end
						spacecount = spacecount - 1
					end
				}
				UserVars.pupper[:pupperroompre] = temppup
				UserVars.pupper[:pupperroompost] = temppuptwo
				temppup = ""
				temppuptwo = ""
				tempsplitflag = nil
				nil
			end
			
			#Return Message
			if cmd.downcase.strip == 'return'
				temppup = ""
				tempuptwo = ""
				tempsplitflag = nil
				spacecount = puparg.count - 1
				puparg.each {|pupterm|
					if pupterm.downcase == "%p"
						tempsplitflag = true
						spacecount = spacecount - 1
					elsif tempsplitflag == nil 
						temppup = temppup + pupterm
						if spacecount > 0
							temppup = temppup + " "
						end
						spacecount = spacecount - 1
					elsif tempsplitflag == true
						temppuptwo = temppuptwo + pupterm
						if spacecount > 0
							temppuptwo = temppuptwo + " "
						end
						spacecount = spacecount - 1
					end
				}
				UserVars.pupper[:pupperreturnpre] = temppup
				UserVars.pupper[:pupperreturnpost] = temppuptwo
				temppup = ""
				temppuptwo = ""
				tempsplitflag = nil
				nil
			end
			
			
			#look command
			if cmd.downcase.strip == 'look'
				temppup = ""
				tempuptwo = ""
				tempsplitflag = nil
				if puparg[0] == nil
					puts("#{story_window_begin}#{UserVars.pupper[:pupperlookdesc]} \r\n#{story_window_end}")
				else
					spacecount = puparg.count - 1
					puparg.each {|pupterm|
						temppup = temppup + pupterm
						if spacecount > 0
							temppup = temppup + " "
						end
						spacecount = spacecount - 1
					}
					UserVars.pupper[:pupperlookdesc] = temppup
				end
				nil
			end
			
			
			#dismiss message
			if cmd.downcase.strip == 'dismiss'
				temppup = ""
				tempuptwo = ""
				tempsplitflag = nil
				if puparg[0] == nil
					if UserVars.pupper[:pupperdismisspre] != ""	
						puts("#{story_window_begin}#{UserVars.pupper[:pupperdismisspre]}<pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperdismisspost]} \r\n#{story_window_end}")
					else
						puts("#{story_window_begin}#{UserVars.pupper[:pupperdismisspre]}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperdismisspost]} \r\n#{story_window_end}")
					end
					kill_script "pupper"
					nil
				end
				spacecount = puparg.count - 1
				puparg.each {|pupterm|
					if pupterm.downcase == "%p"
						tempsplitflag = true
						spacecount = spacecount - 1
					elsif tempsplitflag == nil 
						temppup = temppup + pupterm
						if spacecount > 0
							temppup = temppup + " "
						end
						spacecount = spacecount - 1
					elsif tempsplitflag == true
						temppuptwo = temppuptwo + pupterm
						if spacecount > 0
							temppuptwo = temppuptwo + " "
						end
						spacecount = spacecount - 1
					end
				}
				UserVars.pupper[:pupperdismisspre] = temppup
				UserVars.pupper[:pupperdismisspost] = temppuptwo
				temppup = ""
				temppuptwo = ""
				tempsplitflag = nil
				nil
			end
			
			
			
		else
			if client_string =~ /^(?:<c>)?look/i or client_string =~ /^(?:<c>)?l/i or client_string =~ /^(?:<c>)?lo/i or client_string =~ /^(?:<c>)?loo/i
				UserVars.pupper[:puppershowroom] = true
			end
			client_string
		end
	rescue
		respond $!
		respond $!.backtrace
		UpstreamHook.remove('puppercmd')
		client_string
	end
}
before_dying { UpstreamHook.remove('puppercmd') }
UpstreamHook.add('puppercmd', hook_proc)




#Ambient Timer
ambient_cooldown = UserVars.pupper[:pupperambienttimer]
loop do

	if puppersilent == true
		ambient_cycles = 0
	end

	if Room.current.id != current_room
		current_room = Room.current.id
		if UserVars.pupper[:pupperwindowpre] != ""
			puts("#{room_window_begin}#{UserVars.pupper[:pupperwindowpre]}<pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperwindowpost]} \r\n#{room_window_end}")
		else
			puts("#{room_window_begin}#{UserVars.pupper[:pupperwindowpre]}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperwindowpost]} \r\n#{room_window_end}")
		end
		if UserVars.pupper[:pupperfollowpre] != ""
			puts("#{story_window_begin}#{UserVars.pupper[:pupperfollowpre]}<pushBold\/>#{a_an.downcase}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperfollowpost]} \r\n#{story_window_end}")
		else
			puts("#{story_window_begin}#{UserVars.pupper[:pupperfollowpre]}<pushBold\/>#{a_an}#{UserVars.pupper[:pupperdesc]}<popBold\/> #{UserVars.pupper[:pupperfollowpost]} \r\n#{story_window_end}")
		end
	end
	
	
	if ambient_cooldown <= ambient_cycles 
		#ambient_cooldown = UserVars.pupper[:pupperambienttimer] + (rand * 10)
		if ambient_cooldown < 5
			ambient_cooldown = 5
		end
		ambient_cycles = 0
		pupambienttype = nil
		pupambienttype = ((rand * 100) + 1).to_i
		if (GameObj.pcs != nil and pupambienttype < 25)
			ambient_message("PC")
		elsif (GameObj.npcs != nil and pupambienttype < 35)
			ambient_message("NPC")
		elsif (((GameObj.loot != nil) or (GameObj.room_desc != nil)) and ((pupambienttype > 35) and (pupambienttype < 65)))
			ambient_message("STUFF")
		else
			ambient_message("GEN")
		end

	end
	ambient_cycles = ambient_cycles + 0.2
	sleep 0.2
end

