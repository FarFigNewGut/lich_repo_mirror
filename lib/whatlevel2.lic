=begin
This script is useless if you are not capped. If you are, it extrapolates what level you would be if the levels continued, and when you type exp it shows you that level instead of just 100. It also adds to the end of the exp display the amount of exp you have to the next level.

	2017.1.3: Modified to work with long-term experience
	2017.1.21: Found a bug that was squelching Long-Term Exp in BOOST INFO etc
	2020.10.10: Tysong updates for commas
=end

def whatlevel(ex)
	if ex<2500 then
		return 0
	else
		midway=ex-2500
	end

	if ex<265000 then
		lev=Math.sqrt(625+2*midway)/50-1.to_f/2
		lev=lev.to_i
		return 1+lev
	else
		midway=ex-265000
	end

	if ex<725000 then
		lev=(Math.sqrt(3240000+10*midway)/100-18).to_i
		return 15+lev
	else
		midway=ex-725000
	end

	if ex<1730000 then
		lev=(Math.sqrt(31080625+30*midway)/150-223.to_f/6).to_i
		return 25+lev
	else
		midway=ex-1730000
	end

	if ex<2560000 then
		lev=(Math.sqrt(15210000+5*midway)/50-78).to_i
		return 40+lev
	else
		midway=ex-2560000
	end

	lev=(Math.sqrt(51400625+10*ex)/50.to_f-251.to_f/2).truncate
	return lev
end


def levelexp(lev)
	return 2560000+87500*(lev-50)+500*(lev-49)*(lev-50)/2
end


def tonext(ex)
	return levelexp(whatlevel(ex)+1)-ex
end

silence_me

ex=0

action = proc { |server_string|
	if server_string =~ /Total Exp: ([0-9,]+)/
		ex=$1.gsub(',','').to_f
		server_string
	elsif server_string =~ /^\s+ Long-Term Exp: ([0-9,]+)/
		server_string = "  Long-Term Exp: #{$1}".ljust(40, ' ') + "GS3 Level: #{whatlevel(ex).to_s}, #{tonext(ex).to_i.to_s} TNL\n"
	else
		server_string
	end
}
if script.vars[1]
	DownstreamHook.add('whatlevel2', action)
	DownstreamHook.remove('whatlevel2')
	#DownstreamHook.add('#{script.name}', action)
	#DownstreamHook.remove('#{script.name}')
	echo "Removing #{script.name} from DownstreamHook..."
else
	DownstreamHook.add('whatlevel2', action)
	#DownstreamHook.add('#{script.name}', action)
	echo "Adding #{script.name} to DownstreamHook..."
end
