=begin
  
  I recommend you get spring water from Mayor Leifiara's office (7976)
  
  This will water your chia pet once per day. 
  
  It keeps a log of what it does so you can review it with:
  
  ;chia_pet journal
  
  journal/log/report etc work
  
  ;e echo UserVars.chia_pet='clay petname'
  ;e echo UserVars.chia_container='containername'
  
  water and the chia pet go in the chia_container
  
          author: Xanlin (Xanlin#4407 on discord)
            game: GS
            tags: utility, ch-ch-chia
  requires_trust: true
        required: Lich >= 4.6.4
         version: 5
         
=end

#------------------------------------------------------------------------------#
# check uservars
#------------------------------------------------------------------------------#
#UserVars.chia_pet       =
#UserVars.chia_container =
(echo "missing ;e echo UserVars.chia_pet='clay pet'";exit) if UserVars.chia_pet.nil?;
(echo "missing ;e echo UserVars.chia_container='pet/water container'";exit) if UserVars.chia_container.nil?;
UserVars.chia_notes     = [] if UserVars.chia_notes.nil?;
#------------------------------------------------------------------------------#
# misc procs
#------------------------------------------------------------------------------#
chia_journal = proc {
  respond "#{"-"*20} Chia Journal #{"-"*20}";
  UserVars.chia_notes.each { |d,t,n|
    respond "#{d}, #{t}: #{n}";
  };
  respond "#{"-"*54}";
};

all_done = proc {
  fput "put my #{UserVars.chia_pet} in my #{UserVars.chia_container}";
  fput "put my water in my #{UserVars.chia_container}";
  fill_hands
  chia_journal.call;
  exit;
};
#------------------------------------------------------------------------------#
# check if log only
#------------------------------------------------------------------------------#
if script.vars[0] =~ /repo?r?t?s?|logs?|jour?n?a?l?|histo?r?y?|notes?/i and !UserVars.chia_notes.nil?
  chia_journal.call;
  exit;
end;
#------------------------------------------------------------------------------#
# get game time
#------------------------------------------------------------------------------#
months = { 'Lormesta' => '01', 'Fashanos' => '02', 'Charlatos'=> '03', 'Olaesta' => '04', 'Ivastaen' => '05', 'Lumnea' => '06', 'Koaratos' => '07', 'Phoenatos'=> '08', 'Imaerasta'=> '09', 'Jastatos' => '10', 'Eoantos' => '11', 'Eorgaen' => '12', };
time_pattern = /Today is .*?, day (?<day>\d+) of the month (?<month>\w+) in the year (?<year>\d+).  It is (?<time>\d+:\d+)/
stime = dothistimeout "time",3, time_pattern;
m = time_pattern.match(stime); 
sdatetime = "#{m[:year].to_i-3100}-#{m[:month].gsub(/#{months.keys.join("|")}/,months)}-#{m[:day].to_i < 10 ? "0" : ""}#{m[:day]} #{m[:time]} EDT"; 
sdate = "#{m[:year].to_i-3100}-#{m[:month].gsub(/#{months.keys.join("|")}/,months)}-#{m[:day].to_i < 10 ? "0" : ""}#{m[:day]}"; 
stime = "#{m[:time]}"
#------------------------------------------------------------------------------#
# patterns
#------------------------------------------------------------------------------#
get_pattern      = /^You (?:shield the opening of .*? from view as you |discreetly |carefully |deftly )?(?:remove|draw|grab|get|reach|slip|tuck|retrieve|already have)|^Get what\?$|^Why don't you leave some for others\?$|^You need a free hand/;
get_fail_pattern = /Get what\?|^Why don't you leave some for others\?$|^You need a free hand/;
water_pattern    = /^Overwater|^Once you begin, you will be committed to caring for this|^Raising both/;
#------------------------------------------------------------------------------#
# get ready
#------------------------------------------------------------------------------#
get_ready = proc{
  empty_hands
  get_water = dothistimeout "get my water from my #{UserVars.chia_container}", 3, get_pattern
  if get_water =~ get_fail_pattern
    UserVars.chia_notes << [ sdate, stime, 'OUT OF WATER' ]
    exit
  end
  get_pet = dothistimeout "get my #{UserVars.chia_pet} from my #{UserVars.chia_container}", 3, get_pattern
  if get_pet =~ get_fail_pattern
    UserVars.chia_notes << [ sdate, stime, 'WHERE IS MY PET?!?!!' ]
    exit
  end
};
#------------------------------------------------------------------------------#
# do stuff
#------------------------------------------------------------------------------#
water_pet_proc = proc {
  water_pet = dothistimeout "pour my water on my #{UserVars.chia_pet}",3,/^Overwater|^Once you begin, you will be committed to caring for this|^Raising both.*you carefully pour|This clay .*? is not able to grow any more flora./
  if water_pet =~ /^Overwater/;
    UserVars.chia_notes << [ sdate, stime, 'Water already done, did not overwater' ];
    all_done.call;
  elsif water_pet =~ /^Raising both/;
    UserVars.chia_notes << [ sdate, stime, 'Water success' ];
    sleep 0.5;waitrt?
    all_done.call;
  elsif water_pet =~ /^Once you begin/;
    UserVars.chia_notes << [ sdate, stime, 'First day, starting watering schedule now' ];
    water_pet_proc.call;
  elsif water_pet =~ /This clay .*? is not able to grow any more flora./
    UserVars.chia_notes << [ sdate, stime, 'All done!  Can\'t grow any more flora.' ];
    all_done.call;
  end;
};
#------------------------------------------------------------------------------#
# do stuff
#------------------------------------------------------------------------------#
last_note = UserVars.chia_notes[-1]
if last_note.nil? or Time.parse(sdate) > Time.parse(last_note[0]) or (sdate == last_note[0] and last_note[2] !~ /^Water|First/)
  get_ready.call
  water_pet_proc.call
else
  UserVars.chia_notes << [ sdate, stime, 'Water skipped because I think I already watered it today']
end
chia_journal.call
#------------------------------------------------------------------------------#
# stuff done
#------------------------------------------------------------------------------#


