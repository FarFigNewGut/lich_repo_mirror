=begin

	This script is a blatant hack of Tillmen's autoforage for those of us who would rather just buy the damn herbs.
	
	Script will buy and bundle 50 bites of each herb.
	
	***IMPORTANT:  CURRENTLY ONLY WORKS IN THE LANDING!!!***

	~Ifor Get

=end

unless defined?(Map.dijkstra) and defined?(dothis)
	echo 'Your version of Lich is too old for this script.'
	exit
end

unless Lich.herbsack
	echo 'No herbsack has been set.  Use ;settings change herbsack <container>'
	exit
end

unless Lich.lootsack
	echo 'No lootsack has been set.  Use ;settings change lootsack <container>'
	exit
end

#
# list of herbs that will be purchased
#
#herb_list = [ 'acantha leaf', 'ambrominas leaf', 'cactacae spine', 'basal moss', 'aloeas stem', 'haphip root', 'pothinir grass', 'ephlox moss', 'calamia fruit', 'sovyn clove', 'wolifrew lichen', 'woth flower', 'torban leaf' ]
herb_list = [ '1', '6', '8', '14', '11', '12', '15', '7', '9', '19', '2', '5', '4' ]

#
# where to go when done foraging
#
done_goto = Room.current.id.to_s


#
#    this function handles all the purchasing and bundling in a room
#    returns true if the bundle is full and we should move on to the next herb
#
buy_herb = proc { |herb|
	bundle_full = false
	begin
		#
		# paranoia
		#
		if checkleft
			dothis 'stow left', /^You put|^You are not holding anything in your left hand\.$/
		end
		if checkright
			dothis 'stow right', /^You put|^You are not holding anything in your right hand\.$/
		end		
		#
		# Buy Herbs
		#
		dothistimeout 'order ' + herb, 5, /^You may order a QUANTITY of this item, ORDER something else, or BUY this item\./
		buy_result = dothistimeout 'buy', 5, /^But you do not have enough silver!|Thanks for your patronage/
		sleep 0.5

		if buy_result =~ /Thanks for your patronage/
			#
			# we found something, try to bundle it
			#
			
			if herb == "1"
				herb_name = "acantha leaf"
			elsif herb == "6"
				herb_name = "ambrominas leaf"
			elsif herb == "8"
				herb_name = "cactacae spine"
			elsif herb == "14"
				herb_name = "basal moss"
			elsif herb == "11"
				herb_name = "aloeas stem"
			elsif herb == "12"
				herb_name = "haphip root"
			elsif herb == "15"
				herb_name = "pothinir grass"
			elsif herb == "7"
				herb_name = "ephlox moss"
			elsif herb == "9"
				herb_name = "calamia fruit"
			elsif herb == "19"
				herb_name = "sovyn clove"
			elsif herb == "2"
				herb_name = "wolifrew lichen"
			elsif herb == "5"
				herb_name = "woth flower"
			elsif herb == "4"
				herb_name = "torban leaf"
			end
			
			get_result = dothis 'get my ' + herb_name + ' from my ' + Lich.herbsack, /^You remove|^Get what/
			if get_result =~ /^You remove/
				#
				# bundle; if theres too much to bundle, eat and try again
				#
				loop {
					bundle_result = dothistimeout 'bundle', 3, /^Carefully, you combine|^If you add anything more to this bundle|^You do not have anything to bundle!$/
					if bundle_result =~ /^Carefully, you combine/
						dothis 'put my ' + herb_name + ' in my ' + Lich.herbsack, /^You put|^I could not find what you were referring to\.$/
						break
					elsif bundle_result =~ /^If you add anything more to this bundle/
						dothis 'eat my ' + herb_name, /^You take a bite/
						#
						# stop foraging for this herb
						#
						bundle_full = true
					else
						break
					end
				}
			else
				#
				# there's nothing to bundle with, just put it away and continue
				#
				dothis 'put my ' + herb_name + ' in my ' + Lich.herbsack, /^You put|^I could not find what you were referring to\.$/
			end
		elsif buy_result =~ /^But you do not have enough silver!/
			currentherbalist = room = Room.current.id							#Save current location
			start_script 'go2', [ 'bank', '_disable_confirm_' ]; wait_while{running?('go2')}		#Go to nearest bank
				fput "withdraw 10000 silver"
			start_script 'go2', [ currentherbalist, '_disable_confirm_' ]; wait_while{running?('go2')}	#Return to herbalist
		end
		#
		# try again unless the room is dry or the bundle is full
		#
	end until (bundle_full == true)
	bundle_full
}


#
# try to open the herb pouch, remember to close it or not
#
open_result = dothis 'open my ' + Lich.herbsack, /^You open|^That is already open\.$/
if open_result =~ /^You open/
	close_herbsack = true
else
	close_herbsack = false
end
#
# need both hands empty for bundling
#
close_lootsack = false
if right_thing_in_the_way = checkright
	put_result = dothis 'put my ' + right_thing_in_the_way + ' in my ' + Lich.lootsack, /^You put|^You can't.+It's closed!$/
	if put_result =~ /^You can't.+It's closed!$/
		dothis 'open my ' + Lich.lootsack, /^You open|^That is already open\.$/
		dothis 'put my ' + right_thing_in_the_way + ' in my ' + Lich.lootsack, /^You put/
		close_lootsack = true
	end
else
	right_thing_in_the_way = nil
end
if left_thing_in_the_way = checkright
	put_result = dothis 'put my ' + left_thing_in_the_way + ' in my ' + Lich.lootsack, /^You put|^You can't.+It's closed!$/
	if put_result =~ /^You can't.+It's closed!$/
		dothis 'open my ' + Lich.lootsack, /^You open|^That is already open\.$/
		dothis 'put my ' + left_thing_in_the_way + ' in my ' + Lich.lootsack, /^You put/
		close_lootsack = true
	end
else
	left_thing_in_the_way = nil
end

used_rooms = Array.new

for herb in herb_list
	
	loop {
		start_script 'go2', [ '325', '_disable_confirm_' ]; wait_while{running?('go2')}	#Go to Herbalist
					#
					# buy herb until the bundle is full
					#
					bundle_full = buy_herb.call(herb)
					#
					# move on to the next herb if the bundle is full
					#
					break if bundle_full
	}

end

#
# if something was put away to free a hand, get it back out
#
if right_thing_in_the_way
	dothis 'get my ' + right_thing_in_the_way + ' from my ' + Lich.lootsack, /^You remove/
end

#
# close the herbsack if we opened it
#

if close_herbsack
	dothis 'close my ' + Lich.herbsack, /^You close|^That is already closed\.$/
end

#
# close the lootsack if we opened it
#
if close_lootsack
	dothis 'close my ' + Lich.lootsack, /^You close|^That is already closed\.$/
end

#
# go somewhere nice
#
if done_goto
	start_script 'go2', [ done_goto, '_disable_confirm_' ]
	wait_while { running? 'go2' }
end
