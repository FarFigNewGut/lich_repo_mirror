=begin
    Re-unifies the Cooldowns, Buffs, Debuffs, and Active Spell panels.

     author: Jymamon (gs4-jymamon@hotmail.com)
       game: Gemstone
       tags: active spells, buffs, debuffs, cooldowns, utility
    version: 2021.07.26.02

    history:
        2021.07.26.02 - Fix id's of progress bar to retain old color settings.
        2021.07.26.01 - Initial version

    TODO:
    - Help message for configuration Debuffs,Cooldowns,Buffs,Active Spells,ActiveSpells

=end

no_kill_all
no_pause_all
hide_me

$active_effects = Hash.new

# Let users override the order of effects.
if ( Vars['unified-effects'].nil? )
    # NOTE: ActiveSpells is current GSIV Prime  "Active Spells" is what is in GSIV Test.
    Vars['unified-effects'] = "Debuffs,Cooldowns,Buffs,Active Spells,ActiveSpells"
end

close_dialog_proc = proc{|name|
    puts("<closeDialog id='#{name}'/>")
}

display_dialog_proc = proc{|name|
    window_text = "<dialogData id='#{name}' clear='t'></dialogData><dialogData id='#{name}'>"
    top = 0

    Vars['unified-effects'].split(/,/).each{|type|
        next if (type =~ /^$/ || type.nil? || $active_effects[type].nil?)
        data = $active_effects[type]

        # The regex here is more complicated than might make initial sense in order to support differences between how the lines are written before the
        # change from "ActiveSpells" to "Active Spells", "Buffs", etc.
        data.scan(/<progressBar id=["'](.*?)["'] value='(\d+)' text=\"([^"]+)\" left='\d+%' top='\d+' width='\d+%' height='\d+'(?: time='([^']+)')?\/><label id=["'](.*?)["'] value='([^']+)' top='\d+' left='\d+' justify='\d+' anchor_right=["'].*?["']\/>/) {|barId, barValue, barText, barTime, labelId, labelValue|
            spellActiveId = barText
            spellActiveId.gsub!("'", "&apos;");
            window_text += "<progressBar id='#{spellActiveId}' value='#{barValue}' text=\"#{barText}\" left='22%' top='#{top}' width='76%' height='15' time='#{barTime}'/>"
            window_text += "<label id='#{labelId}' value='#{labelValue}' top='#{top}' left='0' justify='2' anchor_right='#{barId}'/>"
            top = top + 16
        }
    }

    window_text += "</dialogData>"
    puts window_text;
}

create_dialog_proc = proc{|name|
    before_dying {
        close_dialog_proc.call(name)
    }

    dialog_text =  "<closeDialog id='#{name}'/>"
    dialog_text += "<openDialog type='dynamic' id='#{name}' title='#{name}' target='#{name}' location='main' height='232' width='190' resident='true'>"
    dialog_text += "<dialogData id='#{name}'></dialogData>"
    dialog_text += "</openDialog>";

    puts(dialog_text)
    display_dialog_proc.call(name)
}

create_dialog_proc.call("ActiveSpells")

action = proc { |server_string|
    if server_string =~ /<dialogData id='(Cooldowns|Debuffs|Buffs|Active Spells|ActiveSpells)'>(.*)<\/dialogData>/
        type = $1
        $active_effects[type] = $2

        if ( $active_effects[type] =~ /<label id='lblNone' value='No .* found.' top='0' left='0' align='center'\/>/ )
            $active_effects[type] = ""
        end

        display_dialog_proc.call("ActiveSpells")
    end

    server_string
}

hookname = "unified-effects-tracker"

before_dying {
    DownstreamHook.remove(hookname)
}

before_dying {
    DownstreamHook.remove(hookname)
}

DownstreamHook.add(hookname, action)

init_action = proc { |server_string|
    if server_string =~ /<prompt/
        server_string
        DownstreamHook.remove("unified-effects-init")
    end
}

DownstreamHook.add("unified-effects-init", init_action)
fput "spell active"

loop { pause 60; }
