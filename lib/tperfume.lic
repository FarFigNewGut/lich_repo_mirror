=begin
    Shifting Perfume Vial Scent Finder
    Script will rub/anal your vial of shifting perfume until scent found.

    SYNTAX - ;tperfume <SCENT STRING/LINE TO SEARCH FOR>

       todo: n/a
     author: Tysong
       name: tperfume
       tags: perfume, shifting perfume, cologne
    version: 1.0

    changelog:
        1.0 (2018-10-27)
            Initial Release

    credit & thanks:
        Naamit for letting me borrow her vial
=end

silence_me

UserVars.tperfume ||= {}
UserVars.tperfume[:bottle] = nil 		if UserVars.tperfume[:bottle].nil?

if variable[1].downcase =~ /help/i || variable[0].size == 0 || variable[0].size.nil?
	if variable[0].size == 0 || variable[0].size.nil?
		respond "    You need to search for a fragrance, be sure to include it when starting script" 
		respond  ""
	end
	respond  "    Shifting Perfume Vial Scent Finder"
    respond  "    Script will rub/anal your vial of shifting perfume until scent found."
    respond  ""
	respond  "    SYNTAX - ;tperfume <SCENT STRING/LINE TO SEARCH FOR>"
	respond  "       **do note, copying from wiki may have issues**"
	respond  "       **as it removes extra spaces from sentences**"
	respond  "       **use the first sententce if copy/pasting from wiki**"
	respond  ""
	respond  "    Set your perfume bottle noun with following syntax:"
	respond  "    ;e echo UserVars.tperfume[:bottle] = \"vial\""
	exit
end

if UserVars.tperfume[:bottle].nil?
	respond "   You need to set your perfume bottle noun"
	respond "   ;e echo UserVars.tperfume[:bottle] = \"vial\""
	exit
end

perfume_anal = Regexp.union(
	/You analyze your <a exist="\d+" noun="\w+">[\w\s\-\']+<\/a> and sense that the item is largely free from merchant alteration restrictions\./,
	/The creator has also provided the following information:/,
	/^When applied, this perfume will produce the following scent\./,
	/^ Third-person: /,
	/This <a exist="\d+" noun="\w+">[\w\s\-\']+<\/a> is a shifting vial, containing unlimited use of all available scents\.  Current verbs are MEASURE, PULL, SMELL, and TICKLE\.  You can set up to 5 favorite scents using the following commands:/,
	/RUB the <a exist="\d+" noun="\w+">\w+<\/a> to change to the next scent\./,
	/NUDGE the <a exist="\d+" noun="\w+">\w+<\/a> to store a favorite \(up to 5\)\./,
	/PONDER the <a exist="\d+" noun="\w+">\w+<\/a> to see a list of stored favorites\./,
	/WHISPER the # of your favorite to set the <a exist="\d+" noun="\w+">\w+<\/a> to that scent\./,
	/Set the favorite you want to clear, and then CLEAN the <a exist="\d+" noun="\w+">\w+<\/a> to free up that favorite slot\./,
	/You get no sense of whether or not the <a exist="\d+" noun="\w+">\w+<\/a> may be further lightened\./,
	/You rub your <a exist="\d+" noun="\w+">[\w\s\-\']+<\/a>, causing its contents to shimmer briefly\./
)

silence = proc {
	action = proc { |server_string|
		if server_string.strip.length == 0
			nil
			next
		end
		if server_string =~ perfume_anal
			nil
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}_silence", action)
}

before_dying { 
	DownstreamHook.remove("#{script.name}_silence")
}

silence.call
counter = 0
first_anal = nil

loop {
	line = dothistimeout "anal my #{UserVars.tperfume[:bottle]}", 5, /First-person: You have /
	first_anal = line if counter == 0
	if line.downcase =~ /#{variable[0].downcase}/i
		echo "Frangance found after #{counter} rubs."
		break
	elsif line.downcase == first_anal.downcase && counter != 0
		echo "You've gone through all possible options, search string not found!"
		echo "#{counter} Total Rubs Performed"
		exit
	end
	fput "rub my #{UserVars.tperfume[:bottle]}"
	counter += 1
}
DownstreamHook.remove("#{script.name}_silence")