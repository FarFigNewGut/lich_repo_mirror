SCRIPT_NAME = "badge"
options = [ 'binding', 'material', 'device', 'motif', 'gem' ]

def nth_triage(dig)
	f = 0; for i in 1..dig; f += i; end; f
end

do_detect = proc {

	max_lifetime = 0
	fput "bounty"
	while (line = get) !~ /You are not currently assigned a task|Your have been tasked/
		if line =~ /accumulated a total of (\d+) lifetime bounty points/
			max_lifetime = $1.to_i
			break
		end
	end

	binding = -1
	material = -1
	device = -1
	motif = -1
	gem = -1

	fput "look my badge"
	while (line = get) !~ /At the very bottom is a tiny bolted plate/
	end
	
	binding = 0 if line =~ /tin|lead|copper/
	binding = 1 if line =~ /brass|turquoise|coral/
	binding = 2 if line =~ /pewter|pyrite|obsidian/
	binding = 3 if line =~ /lapis lazuli|platinum|ivory/
	binding = 4 if line =~ /bound with ora|faenor|invar/
	binding = 5 if line =~ /alexandrite|gornar|alum/
	binding = 6 if line =~ /drakar|zorchar|mithglin/
	binding = 7 if line =~ /glaes|rhimar|laje/
	binding = 8 if line =~ /vaalorn|razern|vaalin/
	binding = 9 if line =~ /rolaren|eonake|kelyn/
	binding = 10 if line =~ /veniom,|golvern|eahnor/
	
	material = 0 if line =~ /rat hide|ceramic|linen/
	material = 1 if line =~ /leather|kobold skin|maoral/
	material = 2 if line =~ /bronze|goblin skin|silk/
	material = 3 if line =~ /suede|orc pelt|snakeskin/
	material = 4 if line =~ /steel|granite|ebonwood/
	material = 5 if line =~ /spidersilk|troll hide|ironwood/
	material = 6 if line =~ /silver|marble|deringo/
	material = 7 if line =~ /gold|ogre bone|orase/
	material = 8 if line =~ /mithril|kiramon chitin|faewood/
	material = 9 if line =~ /imflass|myklian scale|witchwood/
	material = 10 if line =~ /vultite|vruul skin|fireleaf/
	
	device = 0 if line =~ /a single coin|a nicked dagger|a magic wand/
	device = 1 if line =~ /several coins|a rusty sword|a small crystal/
	device = 2 if line =~ /a small stack of coins|a sharp falchion|an ancient scroll/
	device = 3 if line =~ /a modest pile of coins|a flanged mace|an old staff/
	device = 4 if line =~ /a glittering gem|a pointy pike|a rune-inscribed amulet/
	device = 5 if line =~ /a bulging moneybag|a pair of crossed broadswords|a jewel-encrusted ring/
	device = 6 if line =~ /several precious stones|a mighty longbow|a large crystal orb/
	device = 7 if line =~ /a silver bar|an engraved battle axe|an artifact surrounded by sparks of energy/
	device = 8 if line =~ /a chest full of jewels|a gleaming war hammer|an arcane spellbook/
	device = 9 if line =~ /a triangular stack of silver bars|a deadly flamberge|an orb-capped runestaff/
	device = 10 if line =~ /gleaming piles of silver and jewels|a flaming longsword|a powerful burst of magical energy/
	
	motif = 0 if line =~ /a worn pair of hiking boots|a snarling rat|a knapsack full of supplies/
	motif = 1 if line =~ /a fleeing kobold|a skinning knife|or a walking stick/
	motif = 2 if line =~ /a cowering orc|a patched traveler's cloak|a pack mule/
	motif = 3 if line =~ /a howling troll|a piece of an old map|an old leather saddle bag/
	motif = 4 if line =~ /a confused ogre|a long dusty trail|a long-maned riding horse/
	motif = 5 if line =~ /a drooling spider|a tarnished compass|a rusty mining cart/
	motif = 6 if line =~ /an evil spirit|a crossed shovel and pick|a graceful stallion/
	motif = 7 if line =~ /a clicking kiramon|an X-marked treasure map|a package-laden carriage/
	motif = 8 if line =~ /a raging golem|an extended telescope|a rugged dwarven juggernaut/
	motif = 9 if line =~ /a prancing ki-lin|a towering haunted castle|a tall sailing ship/
	motif = 10 if line =~ /a foul ravenous beast|a distant mountainscape|a fantastic elven airship/
	
	gem = 0 if line =~ /a quartz crystal|a zircon|a topaz/
	gem = 1 if line =~ /a bloodstone|an onyx|an azurite stone/
	gem = 2 if line =~ /a malachite stone|a peridot|a tourmaline/
	gem = 3 if line =~ /an ametrine|an amber cabachon|an agate/
	gem = 4 if line =~ /an eostone|a heliodor|an amethyst/
	gem = 5 if line =~ /an opal|a jade stone|a garnet/
	gem = 6 if line =~ /a pearl|a beryl|a jacinth/
	gem = 7 if line =~ /a sapphire|a starstone|a dreamstone/
	gem = 8 if line =~ /a ruby|a moonstone|a glimaerstone/
	gem = 9 if line =~ /an emerald|a sunstone|a feystone/
	gem = 10 if line =~ /a diamond|a blazestar|a firestone/
	
	next_uprade_cost = 10000
	if gem <= binding && gem <= device && gem <= motif && gem <= material
		next_up = 'gem'
		next_upgrade_cost = nth_triage(gem + 1) * 10000
	end
	if motif <= binding && motif <= device && motif <= material && motif <= gem
		next_up = 'motif'
		next_upgrade_cost = nth_triage(motif + 1) * 10000
	end
	if device <= binding && device <= material && device <= motif && device <= gem
		next_up = 'device'
		next_upgrade_cost = nth_triage(device + 1) * 10000
	end
	if material <= binding && material <= device && material <= motif && material <= gem
		next_up = 'material'
		next_upgrade_cost = nth_triage(material + 1) * 10000
	end
	if binding <= material && binding <= device && binding <= motif && binding <= material
		next_up = 'binding'
		next_upgrade_cost = nth_triage(binding + 1) * 10000
	end
	
	total_points_spent = (nth_triage(binding) * 10000) + (nth_triage(material) * 10000) + (nth_triage(device) * 10000) + (nth_triage(motif) * 10000) + (nth_triage(gem) * 10000)
	next_upgrade_at = total_points_spent + next_upgrade_cost
	still_to_go = next_upgrade_at - max_lifetime
	
	output = "\nThis is based on materials alone! If you are not showing the best materials, this may be wrong."
	output.concat "\nYou can go to the treasure master and use ;badge changes to show the best materials for your badge and keep this simple."
	output.concat "\nYour badge is currently #{binding}/#{material}/#{device}/#{motif}/#{gem}"
	output.concat "\nYou have spent a total of #{total_points_spent} upgrade points, and you have earned #{max_lifetime}"
	output.concat "\nNext you should upgrade #{next_up} at #{next_upgrade_at} total lifetime points"
	if max_lifetime > next_upgrade_at
		output.concat "\nIt looks like you can upgrade now!"
	else
		output.concat "\nYou have #{still_to_go} until the next upgrade"
	end
	output.concat "\n\n"
	respond output
}

auto_up = proc {
	tm = GameObj.npcs.find { |npc| npc.name =~ /treasure master/i }
	if !tm
		echo "You should go to the treasure master if you want to upgrade."
		next
	end
	
	level_set = Array.new
	options.each { |option|
		max_option = 1
		fput "ask #{tm.noun} about change #{option}"
		while (line = get) !~ /Click or ASK/
			if line =~ /(\d+)\)/
				max_option = $1.to_i
			end
			if line =~ /Please have/
				empty_hands
				fput "remove my badge"
				sleep 0.5
				fput "ask #{tm.noun} about change #{option}"
			end
		end
		
		fput "ask #{tm.noun} about change #{option} to #{max_option}"
		level_set.push( (max_option / 3 - 1).to_i )
	}
	
	respond "You are now set to the best materials possible for your badge, which is #{level_set[0]}/#{level_set[1]}/#{level_set[2]}/#{level_set[3]}/#{level_set[4]}"
}

show_help = proc {
	output = "\n"
	output.concat "Usage:\n"
	output.concat "\n"
	output.concat "  #{$clean_lich_char}#{SCRIPT_NAME} help           -- shows this help screen\n"
	output.concat "  #{$clean_lich_char}#{SCRIPT_NAME} detect         -- looks at your badge and tells you its updgrade state\n"
	output.concat "  #{$clean_lich_char}#{SCRIPT_NAME} changes        -- makes your badge use the best materials you can, cosmetic only\n"
	output.concat "\n"
	respond output
	exit
}

if script.vars[1] =~ /^detect/
	do_detect.call()
elsif script.vars[1] =~ /^changes/
	auto_up.call()
elsif script.vars[1].nil?
	show_help.call
else
	show_help.call
end

