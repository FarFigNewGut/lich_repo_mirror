=begin
  Starts you out in Vaalor.
  
  Not sure who the original author of StartVaalor was, but I modified this to do the sprite quest as well.
=end

if Char.level > 4
  echo "You are too old to get any experience from this"
  exit
end
@WATER_BAG = "longcoat"; 
locrest = 3493
$vwlastwater = Time.now - 6000 if $vwlastwater == nil
$vwlastmess = Time.now - 6000 if $vwlastmess == nil
$locguardlist = {}
fput "stance def" if checkstance != "defensive"

def pmultimove(direction)
# Multimove is too freaking sloooooowwwww. So I did this to speed things along a bit.
  if direction.shift == "y" then		# A Govenor. Will hopefully solve some of those issues we've been having with crashing. So it will go type-ahead from places that need it (starting, before & after a portal) but not places that don't (between center and final destiation).
    if direction[0] != nil then put direction.shift end
    if direction[0] != nil then put direction.shift end
  end
  direction.each do |currdirection|
    put currdirection
    waitfor "obvious"
  end
end

def startvaalor_Start()
  flags = [
    ["LogOn",		"OFF"],
    ["LogOff",		"OFF"],
    ["Disconnect",	"ON"],
    ["ShowDeaths",	"ON"],
    ["RoomNames",	"ON"],
    ["Description",	"OFF"],
    ["RoomBrief",	"OFF"],
    ["CombatBrief",	"OFF"],
    ["CombatNoNumbers",	"OFF"],
    ["CombatSelfFull",	"ON"],
    ["MonsterBold",	"ON"],
    ["Inactivity",	"ON"],
    ["Death",		"OFF"],
    ["Group",		"OFF"],
    ["GroupLoot",	"OFF"],
    ["RightHand",	"OFF"],
    ["LeftHand",	"OFF"],
    ["AutoThink",	"OFF"],
    ["GatherCoins",	"ON"],
    ["AnnounceTPs",	"OFF"],
    ["Portrait",	"ON"],
    ["Dialogs",		"ON"],
    ["Inventory",	"ON"],
    ["ShowSpellName",	"ON"],
    ["Fame",		"OFF"],
    ["ShowCulture",	"OFF"],
    ["LayerClothing",	"OFF"],
    ["RefuseSilvers",	"OFF"],
    ["NoGroupShare",	"OFF"],
    ["ChannelIncant",	"OFF"],
    ["SilentLogon",	"ON"],
    ["SilentLogoff",	"ON"]]

  flags.each do |flaggy|
    fput "flag #{flaggy[0]} #{flaggy[1]}"
  end
  fput "stow right"
  fput "accept"
	
  if Room.current.id != 14659
    start_script "go2", [3506, "_disable_confirm_"]
    wait_while { running?("go2") }
  else ; fput o ; end
  rounding = ["y", se, s, e, e, e, s, "go armory", o, n, w, n, n, "go building", "go doorway", o, o, n, n, n, n, e, "go exchange", o, n, e, e, "go building", o, w, ne, "go inn", o, e, n, "go hall", o, s, e, "go bank", "go arch", o, o, se, w, "go warehouse", o, e, e, s, e, s, s, "go cottage", o, n, e, e, s, s, "go cottage", o, s, "go hall", o, s, s, w, w, w, s, w, "go structure", o, w, w, w, "go hall", o, w, "go inn", o]
  pmultimove(rounding)

  start_script "go2", [10320, "_disable_confirm_"]
  wait_while { running?("go2") }
  fput "ask clerk for papers"
  fput "stow right"
  start_script "go2", [3493, "_disable_confirm_"]
  wait_while { running?("go2") }
  do_sprite() #not complete wait until im done before you remove the comment block.
end

def startvaalor_checktime()
  timewater = 900
  timemess = 300
  if Char.level > 4
    echo "You are too old to get any experience from this"
    echo "Go find something to hunt... just not rats. Rats suck"
    exit
  elsif Char.level > 3
    return "Water" if $vwlastwater + timewater < Time.now
  else
    return "Water" if $vwlastwater + timewater < Time.now
    return "Message" if $vwlastmess + timemess < Time.now
  end
  return "None"
end

def do_sprite()
	fput "tell sprite to speed up"
	fput "tell sprite to speed up"
	pause 1
	fput "sheath"
	fput "stow l"
	dothistimeout "nod sprite", 30, /you should take a LOOK at him./
	dothistimeout "look man", 30, /Let's SIT down and see what happens next./	
	dothistimeout "sit", 30, /Did you see a thin man in here?/
	dothistimeout "'yes", 30, /Use SEARCH to look for hidden people/
	dothistimeout "search", 30, /offers you a small shield./
	dothistimeout "accept", 30, /You just give me a NOD when you\'re ready to look for more trouble./
	fput "stow l"
	fput "stow r"
	pause 1 #broken here fix it
	dothistimeout "nod sprite", 60, /Why don't we go for a stroll about town?/
	dothistimeout "nod sprite", 30, /a depressed young warrior wanders/
	dothistimeout "ask warrior about help", 30, /You can say YES or NO to answer him./
	dothistimeout "'yes", 30, /let\'s go get that warrior a new sword!/
	start_script "go2", ["weaponshop", "_disable_confirm_"]
    wait_while { running?("go2") }
	fput "order 2"
	dothistimeout "buy", 30, /Yes, that\'s perfect!/
	dothistimeout "out", 30, /Ah, there you are!  I\'ve/
	dothistimeout "give sword to warrior", 30, /NOD when you\'re ready./
	dothistimeout "nod sprite", 30, /Perhaps you can help me./
	dothistimeout "accept", 30, /DIRECTIONS ALCHEMIST/
	start_script "go2", ["alchemist", "_disable_confirm_"]
	wait_while { running?("go2") }
	waitfor "HIDE"
	dothistimeout "hide", 30, /STEAL from him./
	dothistimeout "steal smugg", 30, /you can probably UNHIDE now that they\'re gone./
	dothistimeout "unhide", 30, /look around for the guard!/
	dothistimeout "out", 30, /SHOW the paper to the guard!/
	dothistimeout "show paper to guard", 30, /Well, say YES/
	dothistimeout "'yes", 30, /Get DIRECTIONS/
	start_script "go2", [10369, "_disable_confirm_"]
	wait_while { running?("go2") }
	waitfor "smuggler, say yes"
	dothistimeout "'yes", 30, /ACCEPT the offer or DECLINE it/
	dothistimeout "accept", 30, /I bet we can use DIRECTIONS/
	start_script "go2", ["locksmith", "_disable_confirm_"]
	wait_while { running?("go2") }
	waitfor "you've got my package."
	dothistimeout "give package to man", 30, /We\'re rich!/
	start_script "go2", ["bank", "_disable_confirm_"]
	wait_while { running?("go2") }
	fput "deposit all"
	fput "withdraw 5"
	start_script "go2", [3486, "_disable_confirm_"]
	wait_while { running?("go2") }
	dothistimeout "nod sprite", 30, /Oh, should we help her?/
	dothistimeout "nod sprite", 30, /It looks like she\'s/
	dothistimeout "wait", 60, /We should lifekeep/
	dothistimeout "pour flask in child", 30, /GIVE the cleric a few silvers./
	fput "stow r"
	dothistimeout "give cleric 5", 60, /ACCEPT the offer or DECLINE it./
	dothistimeout "dec", 60, /I\'ve heard some stories about/
	dothistimeout "nod sprite", 50, /What you want to do is GET/
	dothistimeout "ready weapon", 50, /"When you're all"/
	fput "ready shield"
	dothistimeout "say ready", 50, /"When you're all set"/
	dothistimeout "say ready", 50, /"Well, here we are!"/
	fput "stance def"
	movement = ["y", n, ne, n, nw, "go bri"]
	pmultimove(movement)
	waitfor "A carrion worm"
	target = GameObj.npcs.find { |i| i.status !~ /dead|gone/ }
	fput "stance off"
	while(target && target.status !~ /dead|gone/)
		fput "attack worm"
		sleep(1)
		waitrt?
	end
	fput "stance def"
	dothistimeout "search worm", 60, /nearly hidden under a pile of scraps/
	fput "stow right" if GameObj.right_hand.name != "Empty"
	fput "stow left" if GameObj.left_hand.name != "Empty"
	fput "get pot"
	dothistimeout "stow r", 60, /Whenever you want to head back, just say ready./
	fput "say ready"
	until(percentmind < 40)
	  pause 30
	  fput "exp"
	end
	fput "nod sprite"
	sleep(3)
	fput "shake head at sprite"
	start_script "go2", ["bank", "_disable_confirm_"]
	wait_while { running?("go2") }
	fput "withdraw 500"
end


def startvaalor_waitmind()
  fput "stow right" if GameObj.right_hand.name != "Empty"
    
  while !hidden? and startvaalor_checktime() == "None"
    waitrt?
    fput "hide"
    pause("2s")
  end
  wait_while { startvaalor_checktime() == "None" }
  return startvaalor_checktime()
end

def vaalorwater_order(waters)
  water = 9 - waters.to_i
  if water <= 0 then return end
  water.times do
    put "order 3"
    #waitfor "The attentive elven"
    fput "get water from bar"
    fput "stow right"
	waitfor "You put"
  end
end

def get_container_contents(container_name)
	
	if container_name.nil?
		echo 'Blank name passed to get_container_contents'
		sleep 1
		exit
	else
		container_contents = GameObj.inv.find { |obj| obj.name =~ /#{Regexp.escape(container_name.strip)}/i } || GameObj.inv.find { |obj| obj.name =~ /#{Regexp.escape(container_name).sub(' ', ' .*')}/i }
		if container_contents.nil?
			echo "warning: failed to find your water bag (#{container_name})"
			sleep 1
		else
			if container_contents.contents.nil?
				open_result = dothistimeout "open ##{container_contents.id}", 10, /You open|already open/
				close_container_contents = true if open_result =~ /You open/
				if container_contents.contents.nil?
					dothistimeout "look in ##{container_contents.id}", 10, /In the .* you see/
					if container_contents.contents.nil?
						echo "warning: failed to find the contents of your water bag (#{container_name})"
						sleep 1
					end
				end
			end
		end
	end
	return container_contents.contents
end

def vaalorwater_check()
  counting = 0
  GameObj.inv.each do |obby|
  itemObject = obby.contents.find_all { |invy| invy.name =~ /flute of crystal clear water/ }
    if itemObject != nil then counting += itemObject.length end
  end
  return counting
end

def vaalorwater_loop()
  locbar = 10386
  locguards = [5907, 5906, 5827, 3495, 3727]
  waters = vaalorwater_check()

  if waters < 9
    start_script "go2", [locbar, "_disable_confirm_"]
    wait_while { running?("go2") }
    vaalorwater_order(waters)
  end

  locguards.each do |locy|
    start_script "go2", [locy, "_disable_confirm_"]
    wait_while { running?("go2") }
    guards = GameObj.npcs.find_all { |npc| npc.name =~ /Guardsman/ }
    guards.each do |guardy|
      $locguardlist[guardy.noun] = locy
      fput "get my water" if GameObj.right_hand.name !~ /water/ and GameObj.left_hand.name !~ /water/
      fput "give my water to ##{guardy.id}"
      result = matchtimeout 5, "peers at you then says", "gives you 1 silver which you quickly pocket."
      if result =~ /gives you 1 silver which you quickly pocket/
	$vwlastwater = Time.now
      elsif result =~ /peers at you then says/
	$vwlastwater = Time.now - 870
	fput "stow right" if GameObj.right_hand.name != "Empty"
	return
      end
    end
    fput "stow right" if GameObj.right_hand.name != "Empty"
  end
end

def vaalormess_check()
  fput "ask sassion for job"
  result = matchtimeout 5, "Now, take this to ", "but I don't have any tasks for you at the moment", "Flailing wildly, you tumble through"
  if result =~ /Now, take this to Guardsman ?(.+)\.  You\'ll be paid or you will be given a reply to return to me\.  I expect it will take you at least five minutes to do the job properly\.  When you are done, come back and I should have other jobs waiting for you\.\"/
    location = $1
    $vwlastmess = Time.now
    return location
  elsif result =~ /but I don't have any tasks for you at the moment/
    $vwlastmess = Time.now - 270
    return "quickrest"
  elsif result =~ /Flailing wildly, you tumble through/
    return "redo"
  else ; return "error" ; end
end

def vaalormess_loop()
  locmess = 13519
  locrest = 3493
  locguards = [5907, 5906, 5827, 3495, 3727]

  loop {
    start_script "go2", [locmess, "_disable_confirm_"]
    wait_while { running?("go2") }
    person = vaalormess_check()
    if person == "quickrest"
      start_script "go2", [locrest, "_disable_confirm_"]
      wait_while { running?("go2") }
      pause("10s")
      return
    elsif person == "redo"
    elsif person == "error"
      echo ""
      echo "person == error"
      echo "I'm not as good of a coder as I think I am"
      echo ""
      exit
    else
      if $locguardlist[person] == nil
	locguards.each do |locy|
	  start_script "go2", [locy, "_disable_confirm_"]
	  wait_while { running?("go2") }
	  guards = GameObj.npcs.find_all { |npc| npc.name =~ /Guardsman/ }
	  guards.each do |guardy|
	    $locguardlist[guardy.noun] = locy
	  end
	end
      end
      if $locguardlist[person] == nil
	echo ""
	echo "Can't find the guard you need"
	echo "I suck balls"
	echo ""
	exit
      end
      start_script "go2", [$locguardlist[person], "_disable_confirm_"]
      wait_while { running?("go2") }
      
      guard = GameObj.npcs.find { |npc| npc.noun =~ /#{person}/ }
      if guard == nil
	echo ""
	echo "The guard you need isn't here"
	echo "I suck balls"
	echo ""
	exit
      end
      fput "Give message to ##{guard.id}"
	
      if GameObj.right_hand.name != "Empty"
	start_script "go2", [locmess, "_disable_confirm_"]
	wait_while { running?("go2") }
	fput "give message to sassion"
      end
      start_script "go2", [10325, "_disable_confirm_"]
      wait_while { running?("go2") }
      fput "deposit all"
      fput "withdraw 500"
      return
    end
    echo "help if you see this a bunch of times in a row, I'm stuck in a loop! kill me!"
  }
end

startvaalor_Start() if Room.current.id == 14659 or variable[1] =~ /start|zero|one|1|0/i
#reroll_New() if Room.current.id == blah blah
start_script "go2", [locrest, "_disable_confirm_"]
wait_while { running?("go2") }

GameObj.inv.each do |obby|
  if obby.contents.nil? then fput "look in ##{obby.id}" end
end

loop {

  start_script "go2", [locrest, "_disable_confirm_"]
  wait_while { running?("go2") }
  whattodo = startvaalor_waitmind()
  if whattodo == "Water" then vaalorwater_loop()
  elsif whattodo == "Message" then vaalormess_loop()
  else
    echo ""
    echo "You are too old or something weird happened"
    echo "Or I'm not as good of a coder as I think I am"
    echo ""
    exit
  end
}
