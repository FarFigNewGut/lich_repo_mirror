load 'scripts/prioritytargets.rb'

target = nil

indices = {
	"first" => 1,
	"second" => 2,
	"third" => 3,
	"fourth" => 4,
	"fifth" => 5,
	"sixth" => 6,
	"seventh" => 7,
	"eighth" => 8,
	"ninth" => 9,
	"tenth" => 10,

	"1" => 1,
	"2" => 2,
	"3" => 3,
	"4" => 4,
	"5" => 5,
	"6" => 6,
	"7" => 7,
	"8" => 8,
	"9" => 9,
	"10" => 10,

	"other" => 2,
}

targetId = nil

if script.vars.length > 0
	targetIndex = 0
	args = script.vars.dup
	args.shift
	if indices.keys.include?(args[0].downcase)
		targetIndex = indices[args[0].downcase] - 1
		args.shift
	end

	target = args.join(' ').downcase
	found = GameObj.npcs.find_all { | npc | !npc.status.include?('dead') && npc.name.downcase.include?(target) }
	
	if found && found.length > targetIndex
		targetId = found[targetIndex].id
	elsif found && found.length > 0
		echo "WARNING: Could not find enemy with the requested index.  Using the last enemy instead."
		targetId = found.last.id
	else
		echo "Could not find matching enemy.  Target not set."
	end
elsif GameObj.npcs.length > 0
	# $priorityTargets is defined in scripts/priorityGroups.rb
	$priorityTargets.each { | priorityTarget |
		found = GameObj.npcs.find { | npc | !npc.status.include?('dead') && npc.name.downcase == priorityTarget.downcase }		
		if found
			echo "Picking target #{found.id}"
			targetId = found.id
			break
		end
	}

	# if there is no priority target in the room, check the bounty description
	if targetId == nil
		if XMLData.bounty_task =~ /You have been tasked to (?:help .+)? suppress (.*) activity/
			priorityTarget = $1.dup
			found = GameObj.npcs.find { | npc | !npc.status.include?('dead') && npc.name.downcase == priorityTarget.downcase }
			if found
				targetId = found.id
			end
		end
	end

	# if there is no priority target or bounty target in the room, just pick the first living guy.
	if targetId == nil
		found = GameObj.npcs.find { | npc | !npc.status.include?('dead')}
		if found
			targetId = found.id
		end
	end
end


if targetId
	fput "target ##{targetId}"
end