=begin
    Searches for collectibles in three locations:
        - your gemsack
        - your lootsack
        - your overflowsack

    Deposits them at the local collectibles shop.

    by: Daedeus
=end


Collectibles = [/antique lockpick/,
                /sliver of rough moonstone/,
                /fossilized shell/,
                /meteorite chipping/,
                /small blue clay mortar/,
                /marbled blue marble pestle/,
                /some grey-colored powder/,
                /thin-lipped clear glass bottle/,
                /blood-stained bandana/,
                /Elanthian Guilds Council token/,
                /ethereal chain/,
                /ethereal pendant/,
                /tiny ethereal orb/,
                /piece of cloudy glass/,
                /polished stone/,
                /shard of cloudy soulstone/,
                /golden piece of eight/,
                /ruby shard/,
                /luminescent sandstone chunk/,
                /whisper of divine essence/,
                /handful of (?:silver|gold|icy blue|iron|coral) flakes/,
                /miniature (?:warrior|rogue|wizard|cleric|empath|sorcerer|ranger|bard|monk|paladin) figurine/,
                /threaded (?:pink|grey|white|black|green) pearl/,
                /(?:blue|yellow|red|black) cotton swathe/,
                /ornate (?:Charl|Cholen|Eonak|Imaera|Jastev|Kai|Koar|Lorminstra|Lumnis|Oleani|Phoen|Ronan|Tonis|Andelas|Eorgina|Fash'lo'nae|Ivas|Luukos|Marlu|Mularos|Sheru|V'tull|Gosaena|Zelia|Huntress|Leya|Onar|Voln|Aeia|Jaston|Kuon|Meyno|Niima|Illoke|Amasalen|Arachne|Laethe|Tilamaire|Voaris|Voln) statuette/,
                /(?:oblong|glossy|shiny|slick|rounded|cubic|flat|ovoid|heavy|mottled) smooth stone/
                ];

                sacks = [UserVars.gemsack,UserVars.lootsack,UserVars.overflowsack]

StartRoom = Room.current.id

go_collectible = proc {
    unless Room.current.tags.include? 'collectibles'
        start_script 'go2', ['collectibles']
        wait_while { running? 'go2' }
    end
}

right =  nil
unless checkright.nil?
    right = GameObj.right_hand 
    fput "stow ##{right.id}"
end

deposited = []
sacks.each {
    |sack|
    s = GameObj[sack]
    next if s.nil?
    
    fput "look in ##{s.id}" if s.contents.length == 0

    s.contents.each { |i|
        if Collectibles.any? { |r| i.name =~ r }
            echo "found collectibe #{i.name}"
            deposited.push(i.name)
            go_collectible.call
            fput "get ##{i.id}"
            fput "deposit ##{i.id}"
            
        end
    }
}

unless right.nil?
    fput "get ##{right.id}"
end

if Room.current.id != StartRoom
    start_script 'go2', [StartRoom]
    wait_while { running? 'go2' }
end

if deposited.length == 0
    echo "We found no collectibles."
else
    echo "We found and deposited #{deposited.length} items: "
    deposited.each { |d| 
        echo "--- #{d}"
    }
end
