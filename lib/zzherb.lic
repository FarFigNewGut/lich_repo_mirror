=begin
        locates and forages what you want and how many then returns you to the room you started.
		       
        ***Script will immediately exit if both hands are full.  Empty hands or empty the one hand you want to forage with***
       
    syntax is ;zzherb <herb name> <qty you want to find> <location (optional)>
       
        example: ;zzherb some pothinir grass 9 greymist woods (to find 9 pothinir in greymist woods only)
        or ;zzherb some acantha leaf 17 (just to find 17 acantha leaf anywhere close)
       
        ****Item name has to match, almost all herbs have 'some' in front, 'some acantha leaf'****
       
        finds any forageable items including sticks and wiregrass
       
        This script doesnt care if creatures are in the room, so be careful using it.
        *******AGAIN, THIS SCRIPT HAS NO COMBAT CAPABILITIES, DO NOT LEAVE UNATTENDED!!!*******
       
        author: Zzentar
                location function added by Baswab/Gibreficul
		tags: foraging, herbs
   
=end
 

 
#hands full check
 
if not(checkleft and checkright).nil?
        puts "#{monsterbold_start} YOU MUST HAVE AT LEAST ONE HAND EMPTY TO USE THIS SCRIPT.#{monsterbold_end}"
        puts "#{monsterbold_start} WAITING UNTIL YOU EMPTY A HAND.#{monsterbold_end}"
        wait_until{(checkleft and checkright).nil?}
        puts "#{monsterbold_start} OK, CONTINUING.#{monsterbold_end}"
end

unless Lich.lootsack
	echo 'No lootsack has been set.  Use ;settings change lootsack <container>'
	exit
end

lootsack = GameObj[UserVars.lootsack]
#echo lootsack
#echo lootsack.id



#timer start
start_time = Time.now

 
# ******variable definitions******

righthand = false
lefthand = false


if checkright.nil?
	righthand = true
	else lefthand = true
end
 
herb_count = 0
location = false
 
if script.vars[0] =~ /(.*?)\s+(\d+)\s+(.*)/
    herb = $1
    qty = $2.to_i
    location = $3
elsif script.vars[0] =~ /(.*?)\s+(\d+)/
    herb = $1
    qty = $2.to_i
else
    respond "***  ERROR ***"
    respond "*  Correct syntax for this script's usage is:"
    respond "*  #{$clean_lich_char}#{Script.self} <herbname> <number> <location (optional)>"
    respond "*  EXITING"
    quiet_exit
    exit
end
 
if herb =~ /ayana (weed|lichen|berry|root)/ then herb = 'ayana leaf' end
if herb =~ /ayana'al (weed|lichen|berry|root)/ then herb = "ayana'al leaf" end
   
if Room.tags.include?(herb)
        respond "#{herb} is found"
else
        echo  "error: can't find #{herb}"
        similiar = Room.tags.find_all { |tag| tag =~ /#{herb}/ }
        echo "try: #{similiar.join(', ')}" unless similiar.empty?
        exit
end
 
if location
    echo "Number to find:  #{qty}  Item:  #{herb}  Location:  #{location}"
else
    echo "Number to find:  #{qty}  Item:  #{herb}"
end
   
 
# ******HERB ROOM GENERATION******    
 
target_list = Array.new
 
if herb == 'ayana leaf'
    Room.list.each{|room| target_list.push(room.id)  if room.tags.include?("ayana leaf") || room.tags.include?("ayana lichen") || room.tags.include?("ayana weed") || room.tags.include?("ayana berry")|| room.tags.include?("ayana root")}
elsif herb == "ayana'al leaf"
    Room.list.each{|room| target_list.push(room.id)  if room.tags.include?("ayana'al leaf") || room.tags.include?("ayana'al lichen") || room.tags.include?("ayana'al weed") || room.tags.include?("ayana'al berry")|| room.tags.include?("ayana'al root")}
else
    Room.list.each { |room| target_list.push(room.id) if room.tags.include?(herb) }
end
 
previous, shortest_distances = Map.dijkstra(Room.current.id)
 
if location
    target_list.delete_if { |room_num| (Room[room_num].location == nil && Room[room_num].title[0] !~ /#{location}/i) }
    target_list.delete_if { |room_num| (Room[room_num].location != nil && Room[room_num].location !~ /#{location}/i) }
end
 
if location and target_list.size == 0
        location_list = []
        Room.list.each{|places| location_list.push(places.location) if places.tags.include?(herb)}
        location_list = location_list.flatten.uniq
        location_list.delete_if {|x| x == true}
        location_list.delete_if {|x| x == nil}
        puts "#{monsterbold_start} The location does not seem valid. Here is a list of locations that have that herb#{monsterbold_end}"
        location_list.each{|locations| respond "#{locations}"}
        exit
end
 
target_list.delete_if { |room_num| shortest_distances[room_num].nil? }
wait_time = 20  #was 20
wait_time += 580 if location
target_list.delete_if { |room_num| shortest_distances[room_num].to_i > wait_time }
target_list.sort! { |a,b| shortest_distances[a] <=> shortest_distances[b] }
echo "**"
target_list.each{ |item|
    echo "#{Room[item].title}, #{item}"
}
room = Room.current.id
for herb_room in target_list
 
   
    start_script 'go2', [ herb_room.to_s ]
        wait_while { running?('go2') }
   
 
       
foragename = herb
 
if foragename == 'twisted black mawflower' then foragename = 'mawflower'
elsif foragename == 'stem of freesia flowers' then foragename = 'freesia flowers'
elsif foragename == 'small green olive' then foragename = 'green olive'
elsif foragename == 'mass of congealed slime' then foragename = 'congealed slime'
elsif foragename == 'oozing fleshsore bulb' then foragename = 'fleshsore bulb'
elsif foragename == 'rotting bile green fleshbulb' then foragename = 'fleshbulb'
elsif foragename == 'discolored fleshbinder bud' then foragename = 'fleshbinder bud'
elsif foragename == 'slime-covered grave blossom' then foragename = 'grave blossom'
elsif foragename == "sprig of Imaera's Lace" then foragename = "Imaera's Lace"
elsif foragename == 'handful of elderberries' then foragename = 'elderberries'
elsif foragename == 'sprig of wild lilac' then foragename = 'lilac'
elsif foragename == 'fragrant white lily' then foragename = 'white lily'
elsif foragename == 'handful of huckleberries' then foragename = 'huckleberries'
elsif foragename == 'trollfear mushroom' then foragename = 'mushroom'
elsif foragename == 'bunch of wild grapes' then foragename = 'wild grapes'
elsif foragename == 'handful of blueberries' then foragename = 'blueberries'
elsif foragename == 'handful of raspberries' then foragename = 'raspberries'
elsif foragename == 'layer of onion skin' then foragename = 'onion skin'
elsif foragename == 'vermilion fire lily' then foragename = 'fire lily'
elsif foragename == 'handful of walnuts' then foragename = 'walnuts'
elsif foragename == 'orange tiger lily' then foragename = 'tiger lily'
elsif foragename == 'small branch of acacia' then foragename = 'branch of acacia'
elsif foragename == 'golden flaeshorn berry' then foragename = 'flaeshorn berry'
elsif foragename == 'white alligator lily' then foragename = 'alligator lily'
elsif foragename == 'white spider lily' then foragename = 'spider lily'
elsif foragename =~ /(silver|bright blue|fiery red|snow white|pale violet|peach|soft orange|pink|yellow|lavender|ice blue|azure|bright red|pale green|soft yellow|bright green|light red) iceblossom/ then foragename = 'iceblossom'
elsif foragename =~ /(bent|short|heavy) stick/ then foragename = 'stick'
elsif foragename =~ /(blue|red|green|pink|purple|yellow|white) mold/ then foragename = 'mold'
elsif foragename == 'handful of snowberries' then foragename = 'snowberries'
elsif foragename == 'sprig of edelweiss' then foragename = 'edelweiss'
elsif foragename == 'handful of bearberries' then foragename = 'bearberries'
elsif foragename == 'cluster of woad leaves' then foragename = 'woad leaves'
elsif foragename == 'large black toadstool' then foragename = 'black toadstool'
elsif foragename == 'some glowing green lichen' then foragename = 'green lichen'
elsif foragename == 'luminescent green fungus' then foragename = 'green fungus'
elsif foragename == 'black-tipped wyrm thorn' then foragename = 'wyrm thorn'
elsif foragename == 'some fetid black slime' then foragename = 'black slime'
elsif foragename == 'sprig of sky-blue delphinuris' then foragename = 'delphinuris'
elsif foragename == 'handful of mustard seeds' then foragename = 'mustard seeds'
elsif foragename == 'handful of snowberries' then foragename = 'snowberries'
elsif foragename == 'sprig of wild phlox' then foragename = 'phlox'
elsif foragename == 'cluster of gorse' then foragename = 'gorse'
elsif foragename == 'giant glowing toadstool' then foragename = 'glowing toadstool'
 
 
end
 
   
    ## forage loop ##
   
    loop {
   
        if Spell[402].known? and not Spell[402].active?
                Spell[402].cast
        end    
       
        if Spell[506].known? and not Spell[506].active?
                fput 'stop 506'
                Spell[506].cast
        end    
       
        if Spell[603].known? and not Spell[603].active?
                Spell[603].cast
        end    
       
        if Spell[1035].known? and not Spell[1035].active?
                Spell[1035].cast
        end    
       
        if herb_count > (qty - 1)
                echo "task done"
                break
    end
       
    forage_result = dothistimeout 'forage for ' + foragename, 5, /^You forage|^You make so much noise that only the dead would not notice you thrashing about in your unsuccessful search\.$|^You stumble about in a fruitless attempt at foraging\.$|you are unable to find anything useful|^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for\.|^You begin to forage around when your hand comes into contact with something that stabs you in the finger\.$|^As you forage around you suddenly feel a sharp pain in your right hand!|^You begin to forage around when suddenly you feel a burning sensation in your hand\.$|^You fumble about so badly in your search that you can only hope no one was watching you\.$/
    sleep 0.5
    waitrt?
                if forage_result =~ /^You forage briefly and manage to find/
						if righthand
							foragehand = GameObj.right_hand
						else
							foragehand = GameObj.left_hand
						end
				fput "_drag ##{foragehand.id} ##{lootsack.id}"
				herb_count += 1
                elsif forage_result =~ /^As you forage around you suddenly feel a sharp pain in your right hand!/
                        if (limb_repair = Spell[1102]) and limb_repair.known? and limb_repair.affordable?
                                limb_repair.cast
                else
                        start_script 'useherbs'
                                wait_while { running? 'useherbs' }
                end
    end
   
#  ****try again unless the room is foraged out or task is finished****
    #
   
    if forage_result.nil? or (forage_result =~ /you are unable to find anything useful|^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for\./)
                echo "bad room or its foraged out"
                break
    end
    }
   
    if herb_count > (qty - 1)
                echo "task done"
                break
    end
   
end
    start_script('go2', [ room.to_s ])
                wait_while{running?('go2')}
               
echo "Found " + herb_count.to_s + " of " + herb
   
   
total_time = Time.now.to_f - start_time.to_f
##respond "Time to forage: #{((Time.now.to_f - start_time.to_f) / 60.00).as_time}"
##respond (total_time/60.0).as_time
puts "#{monsterbold_start}It took #{Time.now.to_i - start_time.to_i} seconds to find #{herb_count} of #{foragename}#{monsterbold_end}"
