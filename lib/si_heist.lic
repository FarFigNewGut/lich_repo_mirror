#si_heist

=begin

Author:  Alastir
Version:  1.0

This script will complete the Silent Investors Bank Heist.
Download the companion script ;repo download si_timer to see your Heist time!

Variables used:
Vars.bookletsack = Where your booklets are stored
Vars.lootsack = Where loot will be placed.

	Uses ;BIGSHOT QUICK for hunting logic. So make sure your bigshot is setup correctly.
        Hunting Tab:
		valid targets = (?:.*)
		quickhunt targets = (?:.*)
		active hunting scripts = isigns, etc.
		society abilities/spells/cmans = etc.
		This script DOES use the loot script field, input something like = sloot
		
        Commands Tab:
		Fill these boxes with how you want it to attack
		hunting commands(a): = 917 target(m17), attack target(x20), etc.
		quick hunting commands: 917 target(m17), attack target(x20), etc.
        Set everything else up with how you want it.
		
		Start the script with your combat gear in your hands, or with empty hands and it will use GIRD.
		
		It is recommended that you have at least 1x perception, and possibly survival training.

=end

Script.run('repository', "set-updatable si_heist.lic")
#Script.run('autostart', "add --global repository download-updates")

respond 'This script provided by Alastir'
respond 'Feedback about scripts can be left here -- http://forum.gsplayers.com/showthread.php?116895-My-Scripts-Feedback-Suggestions-Bug-Reports --'
respond ''
respond ';repo info si_heist for details about setting up the attack portion'
respond ''
respond 'This script makes use of GIRD to put your weapon/shield/runestaff in your hand'
respond 'Ready weapon <weaponname>'
respond 'Example: Ready weapon runestaff'
respond 'or'
respond 'Ready weapon axe'
respond 'Ready shield shield'
respond ''
respond 'Variables used:'
respond 'Vars.bookletsack = Where voucher booklets are stored (Best to use a non-scripted container)'
respond "Vars.bookletsack is set to #{Vars.bookletsack}"
respond 'You can change this by typing -- ;vars set bookletsack=container'
respond ''
respond 'Vars.lootsack = Where treasure is stored'
respond "Vars.lootsack is set to #{Vars.lootsack}"
respond 'You can change this by typing -- ;vars set lootsack=container'
respond ''
respond 'Bloodscrip will be automatically redeemed'
respond ''
respond 'This script should be started at Room # 27162'
respond ';unpause si_heist if you are satisfied with this setup.'
pause_script
start_script ("si_timer")


def stand()
	return if dead?
	fput 'stand' until standing?
end

PRONE = /sleeping|webbed|stunned|kneeling|sitting|^lying|prone/

if $frontend == 'stormfront'
	fam_window_begin = "<pushStream id=\"speech\" ifClosedStyle=\"watching\"/>"
	fam_window_end   = "<popStream/>\r\n"
else
	fam_window_begin = "\034GSe\r\n"
	fam_window_end   = "\034GSf\r\n"
end

def lounge()

	if $frontend == 'stormfront'
		fam_window_begin = "<pushStream id=\"speech\" ifClosedStyle=\"watching\"/>"
		fam_window_end   = "<popStream/>\r\n"
	else
		fam_window_begin = "\034GSe\r\n"
		fam_window_end   = "\034GSf\r\n"
	end

	fput "open my pouch"
#	fput "rummage my bloodscrip pouch"
	result = dothistimeout "look in ##{GameObj.right_hand.id}", 5, /In the burlap pouch|There is nothing in there./
	if result =~ /In the burlap pouch/
		GameObj.right_hand.contents.each { |item|
			if item.noun =~ /painting|mandolin|vase/
				#puts("#{fam_window_begin}Won Common: #{item.name}\r\n#{fam_window_end}")
				fput "get ##{item.id}"
				fput "put ##{item.id} in my #{Vars.lootsack}"
			elsif item.noun =~ /manuscript|portrait|pipe/
				#puts("#{fam_window_begin}Won Uncommon: #{item.name}\r\n#{fam_window_end}")
				fput "get ##{item.id}"
				fput "put ##{item.id} in my #{Vars.lootsack}"
			elsif item.noun =~ /ferroniere|statue/
				#puts("#{fam_window_begin}Won Rare: #{item.name}\r\n#{fam_window_end}")
				fput "get ##{item.id}"
				fput "put ##{item.id} in my #{Vars.lootsack}"
			elsif item.noun =~ /slippers|egg|falcon/
				puts("#{fam_window_begin}Won Very Rare: #{item.name}\r\n#{fam_window_end}")
				fput "get ##{item.id}"
				fput "put ##{item.id} in my #{Vars.lootsack}"			
			elsif item.noun =~ /crystal/
				puts("#{fam_window_begin}Won Ultra Rare: #{item.name}\r\n#{fam_window_end}")
				fput "get ##{item.id}"
				loop {
					respond " *** FOUND THE BLOOD CRYSTAL *** "
					respond " *** FOUND THE BLOOD CRYSTAL *** "
					respond " *** FOUND THE BLOOD CRYSTAL *** "
					respond " *** FOUND THE BLOOD CRYSTAL *** "
					respond " *** FOUND THE BLOOD CRYSTAL *** "
					sleep 30
					}
			else
				fput "get ##{item.id}"
				fput "put ##{item.id} in my #{Vars.lootsack}"
			end
		}
	elsif result =~ /There is nothing in there./
		fput "drop my pouch"
	end
	while (percentencumbrance > 10) do
		echo "You're too fat to hunt, lighten up!"
		kill_script ("si_heist")
	end
	if Room.current.id == 27164
		start_script "go2", ['27162']
		wait_while { running? 'go2' }
		empty_hands
		fput "get booklet from my #{Vars.bookletsack}"
		fput "go marauder"
		fput "put booklet in my #{Vars.bookletsack}"
		fput "gird"
	end
end






if Room.current.id == 27162
	empty_hands
	result = dothistimeout("get my booklet", 5, /You remove|Get what\?/)
	if result =~ /You remove/
		fput "go marauder"
		fput "put my booklet in my #{Vars.bookletsack}"
	elsif result =~ /Get what\?/
		respond 'Out of booklets!'
		kill_script ("si_heist")
	end
	fput "gird"
elsif Room.current.id == 27164
	lounge()
else
	respond 'You need to start this script at room # 27162'
end

loop {
	5.times{
		waitrt?
		waitcastrt?
		fput "gird"
		result = dothistimeout("listen", 5, /brace yourself for combat.|You hear something nearby.|You should guard it before it is stolen\./)
		if result =~ /brace yourself for combat.|You hear something nearby./
			sleep 2
			waitrt?
			waitcastrt?
			wait_while{ stunned? }
			wait_until { count_npcs > 0 }
			while GameObj.npcs.size > 0
				target = GameObj.npcs.find{ |npc| npc.name =~ // if npc.status !~ /dead|gone/ }
				waitrt? if !(target.status =~ /dead|gone/)
				waitcastrt? if !(target.status =~ /dead|gone/)
				while target.status !~ /dead|gone/
					if !(target.status =~ /dead|gone/)
						start_script "bigshot", [ "quick" ]
						wait_while {running?("bigshot")}
					end
				end
			end
		elsif result =~ /You should guard it before it is stolen\./
			waitrt?
			waitcastrt?
			fput "guard"
			sleep 0.1
			wait_while{ stunned? }
			while GameObj.npcs.size > 0
				target = GameObj.npcs.find{ |npc| npc.name =~ // if npc.status !~ /dead|gone/ }
				waitrt? if !(target.status =~ /dead|gone/)
				waitcastrt? if !(target.status =~ /dead|gone/)
				while target.status !~ /dead|gone/
					if !(target.status =~ /dead|gone/)
						start_script "bigshot", [ "quick" ]
						wait_while {running?("bigshot")}
					end
				end
			end
		end
		
		if Room.current.id == 23733
			while GameObj.npcs.size > 0
				target = GameObj.npcs.find{ |npc| npc.name =~ // if npc.status !~ /dead|gone/ }
				waitrt? if !(target.status =~ /dead|gone/)
				waitcastrt? if !(target.status =~ /dead|gone/)
				while target.status !~ /dead|gone/
					if !(target.status =~ /dead|gone/)
						start_script "bigshot", [ "quick" ]
						wait_while {running?("bigshot")}
					end
				end
			end
			waitrt?
			waitcastrt?
			empty_hands
			fput "track"
			break
		else
			waitrt?
			waitcastrt?
			fput "stance defensive"
			result = dothistimeout("track", 5, /You attempt to track any threats within the bank|not safe enough to track anything\./)
			if result =~ /You attempt to track any threats within the bank/
			elsif result =~ /not safe enough to track anything\./
				while GameObj.npcs.size > 0
					target = GameObj.npcs.find{ |npc| npc.name =~ // if npc.status !~ /dead|gone/ }
					waitrt? if !(target.status =~ /dead|gone/)
					waitcastrt? if !(target.status =~ /dead|gone/)
					while target.status !~ /dead|gone/
						if !(target.status =~ /dead|gone/)
							start_script "bigshot", [ "quick" ]
							wait_while {running?("bigshot")}
						end
					end
				end
				waitrt?
				waitcastrt?
				fput "track"
			end
		end
	}
	
	sleep 10.0
    lounge()
    sleep 1.0

}