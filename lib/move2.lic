=begin

  Fork of step2.lic by Tillmen.
  Adds support for Real IDs (u######) and Lich IDs.
  Moves one room towards your destination.
  Will attempt movement call up to 3x before erroring out.

   author: elanthia-online
     game: any
     tags: movement, step2, go2
  version: 1.0.0

  2024-07-06 - 1.0.0
    - initial release and fork from step2.lic
    - add support for u##### (real ID#s)
    - attempt up to 3x way.call

=end

unless Script.current.vars[1] =~ /^u?[0-9]+$/
  echo "usage: #{$lich_char}#{script.name} <room number>"
  exit
end

unless (start_room = Room.current)
  echo 'current room was not found in the map database'
  exit
end

if Script.current.vars[1] =~ /^[0-9]+$/
  unless (destination_room = Room[script.vars[1]])
    echo 'destination room was not found in the map database'
    exit
  end
elsif Script.current.vars[1] =~ /^u[0-9]+$/
  unless (destination_room = Room[Map.ids_from_uid((Script.current.vars[1])[1..-1].to_i).first])
    echo 'destination room was not found in the map database'
    exit
  end
end

if start_room == destination_room
  echo 'start room and destination room are the same'
  exit
end

unless $step2_path and (s = $step2_path.index(start_room.id)) and (d = $step2_path.index(destination_room.id)) and (s < d)
  previous, _shortest_distances = Map.dijkstra(Room.current.id, variable[1].to_i)
  unless previous[destination_room.id]
    echo "error: failed to find a path between your current room (#{start_room.id}) and destination room (#{destination_room.id})"
    exit
  end
  $step2_path = [destination_room.id]
  $step2_path.push(previous[$step2_path[-1]]) until previous[$step2_path[-1]].nil?
  $step2_path.reverse!
end

way = start_room.wayto[$step2_path[$step2_path.index(start_room.id) + 1].to_s]

3.times {
  break unless start_room == Room.current
  waitrt?
  if way.class == String
    move way
  elsif way.class == Proc
    way.call
  else
    echo 'error in the map database'
    break
  end
}
echo "Movement failed! Please move yourself manually!" if start_room == Room.current
