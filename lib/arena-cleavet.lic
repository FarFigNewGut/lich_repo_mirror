#arena-cleavet
#author: Nylis
#If you know what's good for you you will read the introductory
#comments and the comments interspersed throughout the code
#I'm not much of a coder, so this script is probably inefficient
#in ways that I don't even understand, but it works for me.
#This script requires you to have your lich lootsack set and for
#it to be the container that you store your bloodscrip, 
#pre-torn arena slips, and other arena loot in. I highly #recommend that this container is large and otherwise empty
#because the script will get fouled if your winnings don't fit
#you must manually monitor when that container is full
#in fact, you should keep an eye on the script, both to avoid
#getting busted, and because it hangs every once in a while
#if the script hangs I use a macro that kills it and immediately
#restarts it.  then i kill the current enemy manually and the
#script picks up from there
#on the subject of not getting caught, I have silenced the
#script to avoid screen scroll and I have also set combat brief #on and used Stormfront to ignore repetative irrelvant text.
#I haven't been script checked yet, but you can bet I want to be
#able to see the script check through the screen scroll
#manually I was getting something like 200-220 bloodscrip
#with this script I get 240-250 with much less aggravation

#to use the script run it before you enter the arena.  it will 
#then complete the arena, collect and stow your loot, and 
#immediately re-enter the arena.  you must manually monitor it
#because it will freak out if you run out of slips




def watch()

#please note that this procedure calls two other scripts that I
#use, haste and universalkill.  if you don't use haste in the
#arena, just comment out the sections marked below using the #
#otherwise insert your own prefered haste script
#you will also need to insert your own combat script where
#marked below or simply include fput "kill" or something like
#that.  keep in mind that I am a lance Paladin so I just swing
#regardless of the enemy. if you plan on doing something fancier
#then that you'd better know how to code better than I do
#note that I have only marked the sections in the "back pedal"
#code below but you will need to make your prefered changes in
#each section

	
	waitrt?
	fput "watch"
	line = waitfor "...wait", "back pedal", "bob back and forth", "lean out of the way", "try to duck down", "roll out of the way", "prepare to jump", "doesn't appear to be up to anything", "looking for any untoward activities", "You've already spotted", "watching your every move", "while berserking"
	if(line =~ /back pedal/)
		waitrt?
		fput "pedal"

#if you don't use haste comment out from here

		
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end

#to here

#insert your attack script or kill command between here

	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end

#and here

		watch()
	end
	if(line =~ /bob back and forth/)
		waitrt?
		fput "bob"
		if !Spell[506].active and !Spell[9607].active 

			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end
		watch()
	end
	if(line =~ /lean out of the way/)
		waitrt?
		fput "lean"
		if !Spell[506].active and !Spell[9607].active 

			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end
		watch()
	end
	if(line =~ /try to duck down/)
		waitrt?
		fput "duck"
		if !Spell[506].active and !Spell[9607].active 

			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end
		watch()
	end
	if(line =~ /roll out of the way/)
		waitrt?
		fput "roll"
		if !Spell[506].active and !Spell[9607].active 

			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end
		watch()
	end
	if(line =~ /prepare to jump/)
		waitrt?
		fput "jump"
		if !Spell[506].active and !Spell[9607].active 

			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end
		watch()
	end
	if(line =~ /You've already spotted|doesn't appear to be up to anything|watching your every move/)
		waitrt?
		if !Spell[506].active and !Spell[9607].active 

			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
		end
		watch()
	end
	if(line =~ /"...wait/)
		sleep 1
		watch()
	end
end

def champion()

#THIS IS THE NEW PROCEDURE FOR CHAMPIONS

#please note that this procedure calls two other scripts that I
#use, haste and universalkill.  if you don't use haste in the
#arena, just comment out the sections marked below using the #
#otherwise insert your own prefered haste script
#you will also need to insert your own combat script where
#marked below or simply include fput "kill" or something like
#that.  keep in mind that I am a lance Paladin so I just swing
#regardless of the enemy. if you plan on doing something fancier
#then that you'd better know how to code better than I do
#note that I have only marked the sections in the "back pedal"
#code below but you will need to make your prefered changes in
#each section

	
	waitrt?
	fput "watch"
	line = waitfor "...wait", "back pedal", "bob back and forth", "lean out of the way", "try to duck down", "roll out of the way", "prepare to jump", "doesn't appear to be up to anything", "looking for any untoward activities", "You've already spotted", "watching your every move", "while berserking"
	if(line =~ /back pedal/)
		waitrt?
		fput "pedal"
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end

	if(line =~ /bob back and forth/)
		waitrt?
		fput "bob"
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end
	if(line =~ /lean out of the way/)
		waitrt?
		fput "lean"
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end
	if(line =~ /try to duck down/)
		waitrt?
		fput "duck"
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end
	if(line =~ /roll out of the way/)
		waitrt?
		fput "roll"
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end
	if(line =~ /prepare to jump/)
		waitrt?
		fput "jump"
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end
	if(line =~ /You've already spotted|doesn't appear to be up to anything|watching your every move/)
		waitrt?
		if !Spell[506].active and !Spell[9607].active 
			start_script("haste")
			wait_while {running?("haste")}
			waitcastrt?
		end
	if !Spell[9607].active and stamina >= 50 and !Spell[9699].active 
		fput "berserk"
		waitrt?
	elseif !Spell[9607].active and stamina < 50
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	elseif Spell[9699].active 
			start_script("universalkill")
			wait_while {running?("universalkill")}
		waitrt?
	end
	waitrt?
		champion()
	end
	if(line =~ /"...wait/)
		sleep 1
		champion()
	end
end


def rinse()

#in this procedure you must substitute your weapon and sheath

	wait_until{!Spell[9607].active}
	fput "put my warlance in my harness"
	sleep 1
	fput "open my package"
	sleep 1
	fput "empty my package into my #{Lich.lootsack}"
	waitrt?
	sleep 1
	fput "get my bloodscrip from my package"
	sleep 1
	fput "drop my package"
	sleep 1
	fput "get my bloodscrip from my #{Lich.lootsack}"
	sleep 1
	fput "bundle"
	sleep 1
	fput "put my bloodscrip in my #{Lich.lootsack}"
	sleep 1
	fput "get my warlance"
	sleep 1
	fput "get my slip from my #{Lich.lootsack}"
	sleep 1

#this language requires you to have the latest mapdb such that 
#the room with the arena entrance is marked as a node in go2

	start_script("go2", ["node"])
	wait_while {running?("go2")}

	fput "go entrance"

end

silence_me

loop {
line = waitfor "Send in a champion", "Send in another one", "FIGHT!", "Here are your winnings"
if(line =~ /Send in another one|FIGHT!/)
	watch()
elseif(line =~ /Send in a champion/)
	champion()
end
if(line =~ /Here are your winnings/)
	rinse()
end

}
