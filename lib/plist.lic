=begin

    plist - show the professions for those in the room
	
    Have you ever come into a common gathering place with people you have not met wanting to know everyones professions?  Empaths, Clerics, Wizards, etc? Then plist is for you.
			
    author: Akono (lordakono@gmail.com)
    version: 2017.01.16.01

    history:
    - 2017.01.16.01 Initial version
	
=end

dialogs_setting=nil
squelch_dialogs_off = proc {
	hook_name = 'squelch-dialogs-off'
	hook_proc = proc { |s|
		if s =~ /<prompt/
			DownstreamHook.remove(hook_name)
			nil
		elsif s =~ /You have disabled viewing of most special panels and dialogs/
			DownstreamHook.remove(hook_name)
			# dialogs turned off
			dialogs_setting="off"
			nil
		else
			s
		end
	}
	DownstreamHook.add(hook_name, hook_proc)
	# silently put 'flags', and return the script to non-silent unless it was silent to start with
	silence_me unless undo_silence = silence_me
	put 'flags dialogs off'
	silence_me if undo_silence
}



profession=nil
pname=nil

squelched_profile = proc {
	return if pname==nil
	started = false
	hook_name = 'squelch-profile'
	hook_proc = proc { |s|
		if started
			# "profile" output already started
			if s =~ /<prompt/
				# the "profile" output is followed by a prompt, so remove the hook
				# this is also a good fail-safe, since we won't go long without seeing a prompt even if something goes wrong
				DownstreamHook.remove(hook_name)
				(profession = "Hidden") unless (profession)
			elsif s =~ /Profession: (\w+).*/
				# Save the professions
				profession = $1
			end
			# squelch stuff and the last prompt
			nil
		elsif s =~ /PERSONAL INFORMATION/
			# this is the start of the "profile" output, so start squelching
			started = true
			nil
		elsif s =~ /Player .* not found.  Need help?/
			DownstreamHook.remove(hook_name)
			profession = "Gone"
			nil
		else
			# "profile" output hasn't started yet; don't squelch unrelated lines
			s
		end
	}
	DownstreamHook.add(hook_name, hook_proc)
	# silently put 'profile', and return the script to non-silent unless it was silent to start with
	silence_me unless undo_silence = silence_me
	put 'profile ' + pname
	silence_me if undo_silence
}

plist = Hash.new
squelch_dialogs_off.call

respond "************** Generating Listing **************"
respond "***************** Please Wait ******************"

GameObj.pcs.each { |p| 
	pname = p.to_s
	squelched_profile.call
	wait_until {profession}
	next if profession == "Gone"
	if plist[profession]
		plist[profession] = plist[profession] + ", " + pname
	else
		plist[profession] = pname
	end
	profession=nil
}

if plist.count > 0
	respond "************** Profession Listing **************"
	plist.keys.sort.each {|key| respond "  " +key + ": " + plist[key] }
	respond "************************************************"
	respond "************************************************"
else
	respond "Only you are present here."
end

