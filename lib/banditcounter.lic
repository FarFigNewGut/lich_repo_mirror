silence_me

=begin
    Shows current bandit & cull bounty counts for everyone present so you can finally stop guessing/asking "How many left??"

    Make sure your group members do ;lnet allow bounty all

    Usage: ;banditcounter

    Suggested Usage: ;alias add bc=;banditcounter [or tied to a hotkey]

    author: Ryjex
=end

########### These two flags can be changed: [showdeniers = true] will include those who denied permission into recital, [vocal = false] will echo the counts for your eyes only.
showdeniers = false
vocal=!!Vars.vocal
###########

txt = ""
denied = false

get_target_info = proc { |target|
	if defined?(LNet.get_data)
		LNet.get_data(target, 'bounty')
	else
		nil
	end
}

get_bandit_count = proc { |target|
	bounty_info = get_target_info.call(target)
	if (bounty_info == false)
		# ignore, not a lich user
	elsif (bounty_info.nil?)
		txt << ", " << target << ": Denied" if showdeniers
		denied = true
	elsif (bounty_info =~/suppress/)
		bandit_count = bounty_info.scan(/\d+/).first
		bandit_count = "..." if bandit_count.nil?
		txt << ", " << target << ": " << bandit_count
	elsif (bounty_info =~/succeeded in your task/)
		txt << ", " << target << ": Done"
	else
		txt << ", " << target << ": No Bounty"
	end
}

if (XMLData.bounty_task =~ /suppress|succeeded in your task/ && checkarea !~ /Warcamp|Duskruin Arena|Raging Thrak/ && !checkpcs.count.nil? && checkpcs.count < 20)
	if (XMLData.bounty_task =~ /suppress/)
		txt << checkname << ": " << XMLData.bounty_task.scan(/\d+/).first
	elsif (XMLData.bounty_task =~ /succeeded in your task/)
		txt << checkname << ": Done"
	end
	GameObj.pcs.each { |pc| get_bandit_count.call(pc.noun) }

	echo "Those who denied permission need to ;lnet allow bounty all" << "\n\n" if denied
	if (vocal)
		waitrt?
		fput "recite #{txt}"
	else
		echo txt
	end
end	
