=begin

     author: Demandred
       name: saccept
       tags: inventory
    version: 1.2
		
		saccept is my new auto-accept and stow solution.
		It requires at least one empty hand to function.
		If you don't have an empty hand it will exit.
		
		Usage: 	
				;saccept # <stow selection>
				;saccept <stow selection> #
					These uses will accept # of items and stow them in the container you have
					setup under stow set <stow selection>
					i.e. - ;saccept 8 gem --- This will accept 8 items and stow them in your stow gem container
				
				;saccept #
					This will accept # of items and stow them in your default stow container
				
				;saccept <stow selection>
					This will accept items forever and put them in the stow set <stow container>
				
				;saccept
					This will accept items forever and stow them in your default stow container.
					
						If you mispell the stow container setting it will still use the default

		If problems are found, let me know! Enjoy!

			changelog:
				1.2   - (1-24-2021)
									Added a single waitrt? to help if you're trying
									to accept things while doing other things. Might
									not work every time, but most times, perhaps.
				1.1		-	(1-20-2021)
									Added support for Ruby versions pre 2.4
									- Follow the directions on lines 54 and	77 to use this pre-2.4 ruby.
										To see your ruby version, try ;version
				1.01 	- (1-20-2021)
									Added ;saccept usage to header.
				1.0 	- (1-19-2021)
									Initial release.

=end


bag = nil
counter = nil
all_vars = script.vars[0]
VARS_PATTERN = /(?'bag'^[a-zA-Z]+$)|(?'counter'^\d+$)|(?'counter1'\d+) (?'bag1'[a-zA-Z]+$)|(?'bag2'^[a-zA-Z]+) (?'counter2'\d+$)/

# In order to use this with a ruby version less than 2.4 
# remove the # before the =begin on line 57 and the =end
# on line 75
#=begin
match = all_vars.match(VARS_PATTERN)

if match&.named_captures&.fetch('bag') != nil
	bag = match&.named_captures&.fetch('bag')
elsif match&.named_captures&.fetch('bag1') != nil
	bag = match&.named_captures&.fetch('bag1')
elsif match&.named_captures&.fetch('bag2') != nil
	bag = match&.named_captures&.fetch('bag2')
end
	
if match&.named_captures&.fetch('counter') != nil
	counter = match&.named_captures&.fetch('counter')
elsif match&.named_captures&.fetch('counter1') != nil
	counter = match&.named_captures&.fetch('counter1')
elsif match&.named_captures&.fetch('counter2') != nil
	counter = match&.named_captures&.fetch('counter2')
end
#=end

# In order to use this with a ruby version less than 2.4
# add a # before the =begin on line 80 and the =end
# on line 98
=begin
match = all_vars.match(VARS_PATTERN) || {}

if match[:bag] != nil
	bag = match[:bag]
elsif match[:bag1] != nil
	bag = match[:bag1]
elsif match[:bag2] != nil
	bag = match[:bag2]
end
	
if match[:counter] != nil
	counter = match[:counter]
elsif match[:counter1] != nil
	counter = match[:counter1]
elsif match[:counter2] != nil
	counter = match[:counter2]
end
=end

if counter == nil
	status_tags
	while line = get
		#echo line
		if line =~ /.*? offers you.*?\<a exist="(.*?)" noun.*? The offer will expire in 30 seconds/i
			waitrt?
			if checkright == nil
				put "accept"
				if bag == nil
					put "stow right"
				else
					put "stow right #{bag}"
				end
				next
			elsif checkleft == nil
				put "accept"
				if bag == nil
					put "stow left"
				else
					put "stow left #{bag}"
				end
				next
			else
				echo "**** YOU HAVE NO EMPTY HAND TO ACCEPT SOMETHING, EMPTY A/BOTH HAND/S AND RESTART THIS SCRIPT ****"
				exit
			end
		end
	end
else
	counter.to_i.times do
		result = waitfor "Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\."
		if result =~ /.* offers you (.*)\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\./
			waitrt?
			if checkright == nil
				put "accept"
				if bag == nil
					put "stow right"
				else
					put "stow right #{bag}"
				end
			elsif checkleft == nil
				put "accept"
				if bag == nil
					put "stow left"
				else
					put "stow left #{bag}"
				end
			else
				echo "**** YOU HAVE NO EMPTY HAND TO ACCEPT SOMETHING, EMPTY A HAND AND RESTART THIS SCRIPT ****"
				exit
			end
		end
	end
end
