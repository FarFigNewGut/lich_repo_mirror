=begin
  Auto-daubs all your bingo numbers! Win GS!
  
  Functions:
    - daub numbers as they are called by:
      ;ghoul_2022
    - daub all the numbers already called by:
      ;ghoul_2022 catchup
    - auto yell GHOUL! when a certain number comes up by:
      ;ghoul_2022 <letter> <number>
        ex: ;ghoul_2022 o 37

  original by: Drafix
  
  this one by: Xanlin

  version: 202210132237
=end

module Ghoul2022

  def self.look_cabinet
    status_tags
    put "look runed cabinet"
    cabinet_spots = []
    while line = get
      if line =~ /^\| ([GHOULSETIR]) \|~\| (.+)$/
        letter = $1
        line_numbers = $2
        numbers = line_numbers.scan(/<pushBold\/>(\d\d) <popBold\/>/).flatten
        spots = numbers.map{ |n| "#{letter} #{n}"}
        cabinet_spots = spots + cabinet_spots
        count = count + 1
        break if count >= 5
      end
    end
    status_tags
    return cabinet_spots
  end
  
  def self.look_card
    status_tags
    put "look my card"
    card_spots = []
    letters_pattern = /^\|  ([GHOULSETIR])   \|  ([GHOULSETIR])   \|  ([GHOULSETIR])   \|  ([GHOULSETIR])   \|  ([GHOULSETIR])   \|$/
    numbers_start_pattern = /^\| (?: |<pushBold\/> )\d\d/
    while line = get
      if line =~ letters_pattern
        letters = line.scan(letters_pattern).flatten
      elsif line =~ numbers_start_pattern
        numbers = line.scan(/  (\d\d)  /).flatten
        spots = []
        numbers.each_with_index{ |n,index| spots << "#{letters[index]} #{n}"}
        card_spots = spots + card_spots
        count = count + 1
        break if count >= 5
      end
    end
    status_tags
    return card_spots
  end

  def self.catchup()
    cabinet_spots = self.look_cabinet
    card_spots    = self.look_card
    spots_to_daub = card_spots & cabinet_spots
    spots_to_daub.each { |spot| fput "daub my card #{spot}"}
  end
  
  if Script.current.vars[1].nil? or Script.current.vars[1] =~ /catchup/i
    self.catchup if Script.current.vars[1] =~ /catchup/i
    card_spots = self.look_card
    echo "#{card_spots.size} of 25 spots remaining"
    echo "watching for announcements"
    while line = get
      if line =~ /^A painted wooden ball floats out .*?An ethereal voice calls out, "([GHOULSETIR] \d\d)" before the ball drifts back into/
        if card_spots.include?($1)
          put "daub my card #{$1}" 
        else 
          respond "#{$1} is not on this card."
        end
      elsif line =~ /The period of time for making the first mark on your game card has started.  If it was already daubed prior to this announcement, it will not be eligible to win this round./
        put "daub my card o free"
        put "daub my card o free"
      elsif line =~ /you daub a space on your card./
        put "look my card"
      end
    end
  elsif Script.current.vars[0] =~ /^[GHOULSETIR] \d\d$/i
    echo "Waiting for \"#{Script.current.vars[0]}\" before yelling GHOUL!"
    while line = get
      if line =~ /^A painted wooden ball floats out .*?An ethereal voice calls out, "({#{Script.current.vars[0]})" before the ball drifts back into/i
        put "say GHOUL!"
        break
      end
    end
  end
end