#QUIET

timeout = $hat_timeout
$question_queue = Queue.new # Thread-safe queue
one_minute_warning = false
$player_questions = {} # Tracks active questions for players

fput("recite The floor is open. You may ask about your mates, but remember: you must pass the Kraken's test before I answer.")

# Thread to add questions to the queue
Lich::Messaging.msg("info", "Add question thread started.")
while Time.now < timeout
  line = get?
  if line =~ /(\w+).*whispers,?\s*["']?(?:What is )?(\w+)'?s? symbol\??["']?/i
    asker = $1.downcase
    target = $2.downcase

    if asker == target
      fput("whisper #{asker} Sneaky, eh? Try asking about someone else!")
      next
    end

    if !$hat_players.key?(asker) || !$hat_players.key?(target)
      fput("whisper #{asker} Invalid target or asker.")
      next
    end

    if $player_questions[asker]
      fput("whisper #{asker} You already have a pending question. Wait for your turn.")
      next
    end

    $question_queue << { asker: asker, target: target }
    $player_questions[asker] = true # Track question submission
    Lich::Messaging.msg("warn", "Question added: #{asker} asks about #{target}.")
  end

  if (timeout - Time.now) < 61 && !one_minute_warning
    fput("recite The Kraken grows hungry! One minute left!")
    one_minute_warning = true
  end
end

fput("recite Time's up for asking questions!")
Lich::Messaging.msg("info", "Add question thread ended.")