=begin
**************************************************
Wedges by Obsian                              v1.1
**************************************************
Automates creating superior wedges, and discards (by default) non-superior wedges.

    USAGE: ;wedges <container> <# wedges>
           ;wedges help
	
	IMPORTANT: Your Rogue Guild password must be saved in go2.
           [example]  ;vars set rogue_password=rub, tap, kick, punch, scream, flail
		   
	FUNCTIONS: 1) Take you to the bank
           2) Deposit any coins/notes you have
           3) Withdraw 300 coins per wedge you want to make
           4) Make wedges and keep the superior ones
           5) Return you to your starting room
	
    NOTES: 1) The Wehnimer's Landing guild workshop is stored in a variable,
              which can be changed for your town.
           2) This script assumes you are capable of making superior wedges. It will
              drop any non-superior wedge you make.
           3) If you want to keep all wedges, comment/uncomment the final lines of
              the script.
=end

#silence_me

#-----ROOM VARIABLES-----
#LANDING:	16574
#TERAS:		17387
room_workshop = 16574
room_return = Room.current.id

if (script.vars[1] == "help") || (script.vars[1] == "HELP")
	print "------------------------------------------------------------------------" "\n"
	_respond "<preset id='whisper'>USAGE:    ;wedges {container} {# wedges}</preset>" "\n\n"
	print "IMPORTANT:" "\n"
	print "Your Rogue Guild password must be saved in go2." "\n"
	print "[example]    ;vars set rogue_password: rub, tap, kick, punch, scream, flail" "\n\n"
	print "FUNCTIONS:" "\n"
	print "1) Take you to the bank" "\n"
	print "2) Deposit any coins/notes you have" "\n"
	print "3) Withdraw 300 coins per wedge you want to make" "\n"
	print "4) Make wedges and keep the superior ones" "\n"
	print "5) Return you to your starting room" "\n\n"
	print "NOTES:" "\n"
	print "1) The Wehnimer's Landing guild workshop is stored in a variable, which can be changed for your town." "\n"
	print "2) This script assumes you are capable of making superior wedges. It will drop any non-superior wedge you make." "\n"
	print "3) If you want to keep all wedges, comment/uncomment the final lines of the script." "\n"
	print "------------------------------------------------------------------------" "\n"
elsif script.vars[1] == nil
	_respond "<preset id='whisper'>[wedges] - Please specify a container and the number of wedges to make. See ;WEDGES HELP for usage.</preset>"
	exit
else
	container = script.vars[1]
	
	script.vars[2] = script.vars[2].to_i
	
	if (script.vars[2] == nil) || (script.vars[2] == 0) || (not script.vars[2].is_a? Numeric)
		_respond "<preset id='whisper'>[wedges] - You did not specify a number of wedges to make. Defaulting to 1 in five econds...</preset>"
		pause 1
		echo "4..."
		pause 1
		echo "3..."
		pause 1
		echo "2..."
		pause 1
		echo "1..."
		pause 1
		
		howmany = 1
	else
		howmany = script.vars[2]
	end
	
	withdraw = howmany.to_i * 300.to_i
	
	fput "open my #{container}"
	line = get
	
	if line =~ /What were you referring to/
		_respond "<preset id='whisper'>[wedges] - The container you specified was not found. Please try again.</preset>"
		exit
	else
		#-----GO TO BANK-----
		start_script "go2", [ "bank"]
		wait_while{running?("go2")}

		fput "deposit all"

		fput "withdraw #{withdraw} silvers"
		waitfor "The teller carefully records","The teller hands you"

		#-----GO TO WORKSHOP-----
		start_script 'go2', [ room_workshop.to_s ]
		wait_while{running?("go2")}

		fput "go toolbench"
		waitfor "You head over to the"

		#BEGIN
		howmany.times do |x|
			fput "order 1"
			waitfor "You can BUY"
			fput "buy 1"
			waitfor "hands you an uncarved"
			
			loop do
				waitrt?
				fput "carve my block"
				result = waitfor "nowhere near done","Keep it up"
				
				break if result =~ /Keep it up/
			end
			
			loop do
				waitrt?
				fput "carve my wedge"
				result = waitfor "some more carving","little more should do it","finish carving the wedge"
				
				break if result =~ /finish carving the wedge/
			end
			
			waitrt?
			fput "rub my wedge"
			waitfor "Grabbing a small pumice stone"
			result = get
			
			waitrt?
			if result =~ /superior wooden/
				fput "put my wedge in my #{container}"
				result = waitfor "You put a","fit in the"
				
				if result =~ /fit in the/
					_respond "<preset id='whisper'>[wedges] - The wedge won't fit in the container you specified.</preset>"
					exit
				end
			else
				#-----TO KEEP ALL WEDGES, COMMENT THIS LINE AND UNCOMMENT THE OTHER LINES-----
				fput "drop my wedge"
				
				#-----UNCOMMENT THESE LINES AND COMMENT OUT THE LINE ABOVE TO KEEP ALL WEDGES-----
				#fput "put my wedge in my #{container}"
				#result = waitfor "You put a","fit in the"
				#
				#if result =~ /fit in the/
				#	_respond "<preset id='whisper'>[wedges] - The wedge won't fit in the container you specified.</preset>"
				#	exit
				#end
			end
		end
		
		start_script 'go2', [ room_return.to_s ]
		wait_while{running?("go2")}
		
		fput "look in my #{container}"
		pause 0.5
		_respond "<preset id='whisper'>[wedges] - Done!</preset>"
	end
end