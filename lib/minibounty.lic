=begin

	Author: Demandred
	Version: 1.1
	Game: Gemstone
	Tags: bounties,bounty

	Changelog:
	1.1 - Some minor fixes and changes
	1.0 - Initial release.

	A minimalist version of uberbounty, removing all buttons and various other higher impact stuff.

	Goal: To minimize impact on system while still providing all pertinent bounty details.

	Super props to Hazado for the original uberbounty which was the core of this script.

=end

hide_me

longname_regex = /athletic dark-eyed incubus|behemothic gorefrost golem|blackened decaying tumbleweed|brawny gigas shield-maiden|cinereous chthonian sybil|colossal boreal undansormr|darkly inked fetish master|decaying Citadel guardsman|ethereal triton psionicist|heavily armored battle mastodon|immense gold-bristled hinterboar|patchwork flesh monstrosity|phantasmal bestial swordsman|roiling crimson angargeist|rotting Citadel arbalester|savage fork-tongued wendigo|seething pestilent vision|spectral triton protector|squamous reptilian mutant|stunted halfling bloodspeaker|withered shadow-cloaked draugr|writhing frost-glazed vine|frost-glazed vine/
longname_hash = {"athletic dark-eyed incubus" => "dark-eyed incubus", "behemothic gorefrost golem" => "gorefrost golem", "blackened decaying tumbleweed" => "decaying tumbleweed", "brawny gigas shield-maiden" => "gigas shield-maiden", "cinereous chthonian sybil" => "chthonian sybil", "colossal boreal undansormr" => "boreal undansormr", "darkly inked fetish master" => "inked fetish master", "decaying Citadel guardsman" => "Citadel guardsman", "ethereal triton psionicist" => "triton psionicist", "heavily armored battle mastodon" => "battle mastodon", "immense gold-bristled hinterboar" => "immense hinterboar", "patchwork flesh monstrosity" => "flesh monstrosity", "phantasmal bestial swordsman" => "bestial swordsman", "roiling crimson angargeist" => "crimson angargeist", "rotting Citadel arbalester" => "Citadel arbalester", "savage fork-tongued wendigo" => "savage wendigo", "seething pestilent vision" => "pestilent vision", "spectral triton protector" => "triton protector", "squamous reptilian mutant" => "reptilian mutant", "stunted halfling bloodspeaker" => "stunted bloodspeaker", "withered shadow-cloaked draugr" => "withered draugr", "writhing frost-glazed vine" => "frost-glazed vine"}

before_dying {
  puts("<closeDialog id='MiniBounty'/>")
}
puts("<closeDialog id='MiniBounty'/><openDialog type='dynamic' id='MiniBounty' title='MiniBounties' target='MiniBounty' location='main' height='68' resident='true'><dialogData id='MiniBounty'></dialogData></openDialog>")
oldbounty = nil
loop {
	wait_while{XMLData.bounty_task == oldbounty}
	oldbounty = XMLData.bounty_task
	line1 = line2 = line3 = line4 = nil
	if XMLData.bounty_task =~ /A local divinist has had visions of the child fleeing from (?:a|an) (?'target'.*?) (?:in|on|near|between|under) (?:the )?(?'area'.*?)(?:\s(near|between|under)|\.)/
		target = $~[:target]
		area = $~[:area]
		target = target.sub(longname_regex, longname_hash)
		line1 = "Rescue Child Task"
		line2 = target
		line3 = area
	elsif XMLData.bounty_task =~ /^You have been tasked to retrieve (?'count'\d+) (?'skin'.*?) of at least (?'quality'.*?) quality for .*\.  You can SKIN them off the corpse of (?:a|an) (?'target'.*?) or /
		target = $~[:target]
		count = $~[:count]
		skin = $~[:skin]
		quality = $~[:quality]
		quality = quality[0..3]
		skinline = "#{count} #{skin} (#{quality})"
		skinline1 = nil
		skinline2 = nil
		skinwords = skinline.split(" ")
		skinline1 = ""
		firstword = true
		loop do
			word = skinwords[0]
			unless firstword == true
				break if (skinline1 + " " + word).length > 24
				skinline1 += " "
			else
				firstword = false
			end
			skinline1 += word
			skinwords.delete(word)
			break if skinwords.empty?
			break if (skinline1 + " ").length > 24
		end
		unless skinwords.empty?
			skinline2 = ""
			firstword = true
			loop do
				word = skinwords[0]
				unless firstword == true
					break if (skinline2 + " " + word).length > 24
					skinline2 += " "
				else
					firstword = false
				end
				skinline2 += word
				skinwords.delete(word)
				break if skinwords.empty?
				break if (skinline2 + " ").length > 24
			end
		end
		target = target.sub(longname_regex, longname_hash)
		line1 = "Skinning Task"
		line2 = skinline1
		line3 = skinline2 unless skinline2.nil?
		line3 = target if skinline2.nil?
		line4 = target unless skinline2.nil?
	elsif XMLData.bounty_task =~ /received orders from multiple customers requesting (?:a|an|some) (?'gem'.*?)\..*?You have been tasked to retrieve (?'count'\d*) (?:more )?of them\..*?You can SELL/
		count = $~[:count]
		gem = $~[:gem]
		gemline = "#{count} #{gem}"
		gemline1 = nil
		gemline2 = nil
		gemwords = gemline.split(" ")
		gemline1 = ""
		firstword = true
		loop do
			word = gemwords[0]
			unless firstword == true
				break if (gemline1 + " " + word).length > 24
				gemline1 += " "
			else
				firstword = false
			end
			gemline1 += word
			gemwords.delete(word)
			break if gemwords.empty?
			break if (gemline1 + " ").length > 24
		end
		unless gemwords.empty?
			gemline2 = ""
			firstword = true
			loop do
				word = gemwords[0]
				unless firstword == true
					break if (gemline2 + " " + word).length > 24
					gemline2 += " "
				else
					firstword = false
				end
				gemline2 += word
				gemwords.delete(word)
				break if gemwords.empty?
				break if (gemline2 + " ").length > 24
			end
		end
		line1 = "Gem Task"
		line2 = gemline1
		line3 = gemline2 unless gemline2.nil?
	elsif XMLData.bounty_task =~ /concoction that requires (?:a |an )?(?'herb'.*?) found (?:in|on|near) (?:the )?(?'area'.*?)(?:\s(?:near|between|under).*\.|\.).*These samples must be in pristine condition\.\s+You have been tasked to retrieve (?'count'\d+) (?:more )?samples?\./
		herb = $~[:herb]
		count = $~[:count]
		area = $~[:area]
		herbline = "#{count} #{herb}"
		herbline1 = nil
		herbline2 = nil
		herbwords = herbline.split(" ")
		herbline1 = ""
		firstword = true
		loop do
			word = herbwords[0]
			unless firstword == true
				break if (herbline1 + " " + word).length > 24
				herbline1 += " "
			else
				firstword = false
			end
			herbline1 += word
			herbwords.delete(word)
			break if herbwords.empty?
			break if (herbline1 + " ").length > 24
		end
		unless herbwords.empty?
			herbline2 = ""
			firstword = true
			loop do
				word = herbwords[0]
				unless firstword == true
					break if (herbline2 + " " + word).length > 24
					herbline2 += " "
				else
					firstword = false
				end
				herbline2 += word
				herbwords.delete(word)
				break if herbwords.empty?
				break if (herbline2 + " ").length > 24
			end
		end
		line1 = "Foraging Task"
		line2 = herbline1
		line3 = herbline2 unless herbline2.nil?
		line3 = area if herbline2.nil?
		line4 = area unless herbline2.nil?
	elsif XMLData.bounty_task =~ /You have been tasked to (?:help )?(?'name'[a-zA-Z]+)? ?suppress bandit activity (?:in|on|near) (?:the )?(?'area'.*?)(?: near| between| under|\.).*You need to kill (?'count'.*?) (?:more )?of them to complete your task\./
		name = $~[:name]
		count = $~[:count]
		area = $~[:area]
		unless name.nil?
			line1 = "Help #{name}"
		else
			line1 = "Bandit Task"
		end
		line2 = "#{count} Bandits"
		line3 = area
	elsif XMLData.bounty_task =~ /You have been tasked to.*?(?: help (?'name'[a-zA-Z]+))?.*?suppress(?:ing)? (?!bandit)(?'target'.+?) activity (?:in|on|near) (?:the )?(?'area'.*?)(?:\s?(?:near|between|under).*\.|\.).*You need to kill (?'count'\d+) (?:more )?of them to complete your task\./
		target = $~[:target]
		area = $~[:area]
		count = $~[:count]
		name = $~[:name]
		target = target.sub(longname_regex, longname_hash)
		unless name.nil?
			line1 = "Help #{name}"
		else
			line1 = "Culling Task"
		end
		line2 = "#{count} #{target}"
		line3 = area
	elsif XMLData.bounty_task =~ /You have been tasked to hunt down and kill a particularly dangerous (?'target'.*?) that has established a territory (?:in|on|near) (?:the )?(?'area'.*?)(?:\s(?:in|on|near|between|under).*\.|\.).*You can/
		target = $~[:target]
		area = $~[:area]
		target = target.sub(longname_regex, longname_hash)
		line1 = "Dangerous Creature Task"
		line2 = target
		line3 = area
	elsif XMLData.bounty_task =~ /You have been tasked to hunt down and kill a particularly dangerous (?'target'.*?) that has established a territory (?:in|on|near) (?:the )?(?'area'.*?)(?:\s(?:in|on|near|between|under).*\.|\.)\s+ You have provoked/
		target = $~[:target]
		area = $~[:area]
		target = target.sub(longname_regex, longname_hash)
		line1 = "Found Dangerous"
		line2 = target
		line3 = area
	elsif XMLData.bounty_task =~ /You have been tasked to recover (?'heirloom'.*?) that an unfortunate citizen lost after being attacked by (?:a|an) (?'target'.*?) (?:in|on|near) (?:the )?(?'area'.*?)(?:\s(?:in|on|near|between|under)|\.).*The heirloom can be identified by the initials (?'initials'.*?) engraved upon it\..*?SEARCH the area until you find it\./
		target = $~[:target]
		heirloom = $~[:heirloom].split(" ").last.to_s
		initials = $~[:initials]
		area = $~[:area]
		target = target.sub(longname_regex, longname_hash)
		line1 = "SEARCH Heirloom"
		line2 = target
		line3 = "#{heirloom} (#{initials})"
		line4 = area
	elsif XMLData.bounty_task =~ /You have been tasked to recover (?'heirloom'.*) that an unfortunate citizen lost after being attacked by (?:a|an) (?'target'.*?) (?:in|on|near) (?:the )?(?'area'.*?)(?:\s(?:in|on|near|between|under).*\.|\.).*?The heirloom can be identified by the initials (?'initials'.*?) engraved upon it\..*?Hunt down the creature and LOOT the item from its corpse\./
		target = $~[:target]
		heirloom = $~[:heirloom].split(" ").last.to_s
		initials = $~[:initials]
		area = $~[:area]
		target = target.sub(longname_regex, longname_hash)
		line1 = "LOOT Heirloom"
		line2 = target
		line3 = "#{heirloom} (#{initials})"
		line4 = area
	elsif XMLData.bounty_task =~ /A certain client has hired us to provide a protective escort on .* upcoming journey\..*?Go to the .* and WAIT for .* to meet you there\..*?You must guarantee .* safety to (?'place'.*) as soon as you can, being ready for any dangers that the two of you may face\./
		place = $~[:place]
		line1 = "Escort Task"
		line2 = "Escort to #{place.gsub(/\'/, '&apos;')}"
	elsif XMLData.bounty_task =~ /You are not currently assigned a task\./
		line1 = ""
		line2 = "No task currently"
	elsif XMLData.bounty_task =~ /You have succeeded in your task and can return to the Adventurer\'s Guild to receive your reward\./
		line1 = ""
		line2 = "Turn in task at AG"
	elsif XMLData.bounty_task =~ /It appears they have a bandit problem they\'d like you to solve/
		line1 = "Visit Guard"
		line2 = "Bandits"
	elsif XMLData.bounty_task =~ /in order to help (?'person'.+?) take care of a bandit/
		person = $~[:person]
		line1 = "Visit Guard"
		line2 = "Help #{person} w/Bandits"
	elsif XMLData.bounty_task =~ /It appears they have a creature problem they\'d like you to solve/
		line1 = "Visit Guard"
		line2 = "Creatures"
	elsif XMLData.bounty_task =~ /urgently needs our help in some matter/
		line1 = "Visit Guard"
		line2 = "Rescue Kid"
	elsif XMLData.bounty_task =~ /It appears they need your help in tracking down some kind of lost heirloom/
		line1 = "Visit Guard"
		line2 = "Heirloom Task"
	elsif XMLData.bounty_task =~ /The local furrier .* has an order to fill and wants our help\..*?Head over there and see what you can do\./
		line1 = "Visit Furrier"
		line2 = "Skinning Bounty"
		# Attempting to consolidate all the foraging into one. pull the info and go to that person dynamically instead of three or four different task matches.
	elsif XMLData.bounty_task =~ /The local (?:halfling )?(?'person'healer|herbalist|alchemist)(?:.s ass.*?)?, .*?, has asked for our aid\..*?Head over there and see what you can do\./
		person = $~[:person].capitalize
		line1 = "Visit #{person}"
		line2 = "Foraging Bounty"
	#Illistim version of Herbalist task
	#elsif XMLData.bounty_task =~ /The local herbalist.s ass.*, has asked for our aid\..*?Head over there and see what you can do\./
	#	line1 = "Visit Herbalist"
	#	line2 = "Foraging Bounty"
	#elsif XMLData.bounty_task =~ /The local herbalist.*, has asked for our aid\..*?Head over there and see what you can do\./
	#	line1 = "Visit Herbalist"
	#	line2 = "Foraging Bounty"
	#elsif XMLData.bounty_task =~ /The local (?:halfling )?alchemist, .*, has asked for our aid\..*?Head over there and see what you can do\./
	#	line1 = "Visit Alchemist"
	#	line2 = "Foraging Bounty"
	elsif XMLData.bounty_task =~ /The local gem dealer, .*, has an order to fill and wants our help\..*?Head over there and see what you can do\./
		line1 = "Visit Gemshop"
		line2 = "Gem Bounty"
	elsif XMLData.bounty_task =~ /You succeeded in your task and should report back to/
		line1 = "Visit Guard"
		line2 = "Report Success"
	elsif XMLData.bounty_task =~ /You have located (?:a|an|the|some)? .* and should bring it back to/
		line1 = "Visit Guard"
		line2 = "Return Heirloom"
	elsif XMLData.bounty_task =~ /You have made contact with the child/
		line1 = ""
		line2 = "Return Child to Guard"
	elsif XMLData.bounty_task =~/The child you were tasked to rescue is gone and your task is failed\.|You have failed in your task\.  Return to the Adventurer's Guild for further instructions\./
		line1 = ""
		line2 = "FAILED BOUNTY!!"
	else
		line1 = "Unknown bounty"
		line2 = "Type BOUNTY and send"
		line3 = "to Demandred in"
		line4 = "Discord"
	end
	line1 = line1.gsub(/'/, '&apos;') unless line1.nil?
	line2 = line2.gsub(/'/, '&apos;') unless line2.nil?
	line3 = line3.gsub(/'/, '&apos;') unless line3.nil?
	line4 = line4.gsub(/'/, '&apos;') unless line4.nil?

	finalstring = "<dialogData id='MiniBounty' clear='t'>"
	unless line1.nil?
		finalstring += "<label id='BountyName' value='#{line1}' justify='3' anchor_top='top' top='-2' left='0' width='187'/>"
	end
	unless line2.nil?
		finalstring += "<label id='Task' value='#{line2}' justify='3' anchor_top='BountyName' top='0' left='0' height='15' width='187'/>"
	end
	unless line3.nil?
		finalstring += "<label id='Task2' value='#{line3}' justify='3' anchor_top='Task' top='0' left='0' height='15' width='187'/>"
	end
	unless line4.nil?
		finalstring += "<label id='Location' value='#{line4}' justify='3' anchor_top='Task2' top='0' left='0' height='15'  width='187'/>"
	end
	finalstring += "</dialogData>"
	puts(finalstring)
	sleep 0.1
}