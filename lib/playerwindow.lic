=begin
  https://discordapp.com/channels/226045346399256576/1339018254517145681

  This script creates a dedicated window to display other players in the room
  and their statuses in real time.
  Features:
  - Continuously updates with current players in the room.
  - Displays statuses (if available) in a standardized format.
  - Automatically removes players that leave.
  - Uses consistent window formatting.
  - Allows you to click on another player that is sleeping to POKE them awake.
  - Allows you to click on another player that is prone to PULL them up.
  - (Spell 108 Known) Allows you to click on another player that is stunned to cast 108 and UNSTUN them.
  - Allows you to click on another player that is stunned and wave any oak wand in your inventory at them to UNSTUN THEM.
  - (Spell 209 Known) Allows you to click on a player that is webbed to cast 209 and UNTRAMMEL them.
  - If you are an empath, allows you to click on another player that is injured and attempt to heal them using the lich script ;ecure.
  - Will only display player names (nouns) and will display them alphabetically.
  - Filters the story window to dramatically reduce scrolling and spam with Spam Filter and Animal Filter turned on (Do not use while hunting).

  Changelog:
   1.4.0 (2025-06-05)
        Layout button added to toggle between a one or two column format.
								Will save state between sessions for all commands.
        Updated Spam Filter to also block messaging of other players at the locksmith pool including disarming and lockpicking actions.
   1.3.1 (2025-06-04)
        Updated to allow familiar speech even with animal filter on.
   1.3.0 (2025-06-03)
        Added Animal Filter On|Off to allow you to filter out all animal companions, animates, familiars, pets, and spirits.
        This is designed to dramatically cut down on spam when resting in a crowded room such as the HW Pipe Den.
        You should turn off animal filter when hunting.
   1.2.1 (2025-06-02)
        Updated Spam Filter to also block messaging of other players at the consignment, gem shop, furrier, and pawn shop.
   1.2.0 (2025-05-31)
        Added Spam Filter On|Off to allow you to filter out all other players' spell casting, herb munching, empath healing, urchin movement, FWI Transport messaging, etc, etc, etc.
        This is designed to dramatically cut down on spam when resting in a crowded room such as the HW Pipe Den.
        You should turn off spam filter when hunting.
   1.0.0 (2025-02-11)
        Initial release.

author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, target, players, pc, spam, filter, silence, squelch, roleplay
=end

no_kill_all

require 'yaml'

LICH5_PATHS = [
  "C:\\Lich5\\scripts",
  File.expand_path("~/Desktop/Lich5/scripts")
]

WINDOW_SETTINGS_PATH = nil

LICH5_PATHS.each do |path|
  if Dir.exist?(path)
    WINDOW_SETTINGS_PATH = File.join(path, "lichwraythwindows.yaml")
    break
  end
end

def load_window_settings
  return {} unless File.exist?(WINDOW_SETTINGS_PATH)
  YAML.load_file(WINDOW_SETTINGS_PATH) || {}
end

window_settings = load_window_settings
player_window_settings = window_settings["playerwindow"] || {}

@filter_spam = player_window_settings["filter_spam"] || false
@filter_animals = player_window_settings["filter_animals"] || false
@pwsingle_column = player_window_settings["single_column"] || false

def save_window_settings(settings)
  File.write(WINDOW_SETTINGS_PATH, settings.to_yaml)
rescue => e
  echo "Failed to save window settings: #{e.message}"
end

# Open the players window using Wrayth's dynamic dialog.
puts("<closeDialog id='PlayerWindow'/><openDialog type='dynamic' id='PlayerWindow' title='Players' target='PlayerWindow' scroll='manual' location='main' justify='3' height='100' resident='true'><dialogData id='PlayerWindow'></dialogData></openDialog>")

@last_pcs = []
@last_filter_state = nil # Track last known state of @filter_spells

# Standardize status names for players.
# Standardize status names for players, prioritizing "stunned" over "prone".
def player_status_fix(status)
  return "dead" if status =~ /dead/i
  return "stunned" if status =~ /stunned/i # Ensure "stunned" takes precedence
  return "sleeping" if status =~ /unconscious|slumber|sleeping/i
  return "prone" if status =~ /lying down|prone|knocked to the ground/i
  return "sitting" if status =~ /sitting/i
  return "kneeling" if status =~ /kneeling/i
  return "calmed" if status =~ /calmed/i
  return "frozen" if status =~ /frozen/i
  return "held" if status =~ /held/i
  return "webbed" if status =~ /web/i
  return nil
end

def oak_wand_check
  wands = {}
  GameObj.containers.each { |container| wands[container[0]] = []; GameObj[container[0]].contents.each { |item| wands[container[0]].push(item) if item.name =~ /oak(?:en)? (?:rod|wand)$/ } }
  return wands.first
end

# ";e fput('get oak wand'); fput('wave wand at ##{player_id}')"
# Determine action based on player status.
def action_for_status(status, pc)
  case status
  when "stunned"
    if Spell[108].known?
      return ";e Spell[108].force_cast('##{pc.id}') if Spell[108].affordable?"
    elsif (wand_object = oak_wand_check)
      wand_container_id = wand_object[0]
      wand = wand_object[1].first # Get the first wand in the array
      if wand # Ensure there's a wand to work with
        return ";e empty_hand; fput 'get ##{wand.id}'; fput 'wave ##{wand.id} at ##{pc.id}'; fput '_drag ##{wand.id} ##{wand_container_id}'; fill_hand"
      end
    end
  when "sitting", "kneeling", "prone"
    return "pull ##{pc.id}"
  when "sleeping", "unconscious"
    return "poke ##{pc.id}"
  when "webbed"
    if Spell[209].known?
      return ";e Spell[209].force_cast('##{pc.id}') if Spell[209].affordable?"
    end
  when nil && Char.profession =~ /empath/i
    return ";e kill_script 'ecure' if running?('ecure'); start_script('ecure', ['#{pc.name}'])"
  end
end

# Extracts the noun from the XML-based name format: <a exist="-11226620" noun="Lamamelodia">Lamamelodia</a>
def extract_noun(pc)
  return pc.noun if pc.respond_to?(:noun) && pc.noun
  return pc.name # Fallback to name if noun is unavailable
end

# Build and push the player list to the window, sorting by noun with dead players on top and arranged in two columns
def push_players_to_window(pcs)
  sorted_pcs = pcs.sort_by do |pc|
    status = pc.respond_to?(:status) ? player_status_fix(pc.status) : nil
    is_dead = status == "dead" ? 0 : 1
    [is_dead, extract_noun(pc).downcase]
  end

  output = "<dialogData id='PlayerWindow' clear='t'>"
  current_top = 0
  column_value = @pwsingle_column ? 'Layout: Single Column' : 'Layout: Two Columns'
  column_cmd = "*pwcolumns"
  output += "<link id='column_toggle' value='#{column_value}' cmd='#{column_cmd}' echo='Toggling Column Layout...' justify='bottom' left='0' top='#{current_top}' />"
  current_top += 20

  if @pwsingle_column
    # First row: Spam Filter toggle
    filter_value = @filter_spam ? 'Spam Filter: ON' : 'Spam Filter: OFF'
    filter_cmd = "*filterspam"
    output += "<link id='filter_toggle' value='#{filter_value}' cmd='#{filter_cmd}' echo='Toggling Spam Filter...' justify='bottom' left='0' top='#{current_top}' />"
    current_top += 20

    # First row, right side: Animal Filter toggle
    animal_value = @filter_animals ? 'Animal Filter: ON' : 'Animal Filter: OFF'
    animal_cmd = "*filteranimals"
    output += "<link id='animal_toggle' value='#{animal_value}' cmd='#{animal_cmd}' echo='Toggling Animal Filter...' justify='bottom' left='0' top='#{current_top}' />"
    current_top += 20
  else
    # First row: Spam Filter toggle
    filter_value = @filter_spam ? 'Spam Filter: ON' : 'Spam Filter: OFF'
    filter_cmd = "*filterspam"
    output += "<link id='filter_toggle' value='#{filter_value}' cmd='#{filter_cmd}' echo='Toggling Spam Filter...' justify='bottom' left='0' top='#{current_top}' />"

    # First row, right side: Animal Filter toggle
    animal_value = @filter_animals ? 'Animal Filter: ON' : 'Animal Filter: OFF'
    animal_cmd = "*filteranimals"
    output += "<link id='animal_toggle' value='#{animal_value}' cmd='#{animal_cmd}' echo='Toggling Animal Filter...' justify='bottom' left='180' top='#{current_top}' />"
    current_top += 20
  end

  # Second row: PCs label
  output += "<label id='total' value='PCs: #{sorted_pcs.size}' justify='bottom' left='0' top='#{current_top}'/>"
  current_top += 20
  # Player rows in two-column layout
  row_height = 20
  col_left = 0
  col_right = 180
  top_offset = current_top / row_height

  slices = @single_column ? sorted_pcs.each_slice(1) : sorted_pcs.each_slice(2)
  slices.with_index do |pair, row|
    pair.each_with_index do |pc, col|
      if @single_column
        current_top += sorted_pcs.size * row_height
      else
        grid_rows = (sorted_pcs.size.to_f / 2).ceil
        current_top = row_height * (grid_rows + top_offset)
      end

      noun = extract_noun(pc)
      status = (pc.respond_to?(:status) && pc.status) ? player_status_fix(pc.status) : nil
      label_value = status ? "#{noun} (#{status})" : noun
      action_cmd = action_for_status(status, pc)

      left = col == 0 ? col_left : col_right
      top = row_height * (row + top_offset)

      output += "<link id='player_#{row}_#{col}' value='#{label_value}' cmd=\"#{action_cmd}\" echo=\"#{action_cmd}\" justify='bottom' left='#{left}' top='#{top}' />"
    end
  end

  output += "</dialogData>"
  puts(output)
end

UPSTREAM_HOOK_ID = "playerwindow::upstream"
DOWNSTREAM_HOOK_ID = "playerwindow::downstream"

UpstreamHook.add(UPSTREAM_HOOK_ID, proc do |command|
  case command.strip.downcase
  when /\*filterspam/i
    @filter_spam = !@filter_spam
    respond "Spam filtering is now #{@filter_spam ? 'ENABLED' : 'DISABLED'}."

    settings = load_window_settings
    settings["playerwindow"] ||= {}
    settings["playerwindow"]["filter_spam"] = @filter_spam
    save_window_settings(settings)

    pcs = GameObj.pcs.reject { |pc| pc.name == Char.name }
    push_players_to_window(pcs)

  when /\*filteranimals/i
    @filter_animals = !@filter_animals
    respond "Animal filtering is now #{@filter_animals ? 'ENABLED' : 'DISABLED'}."

    settings = load_window_settings
    settings["playerwindow"] ||= {}
    settings["playerwindow"]["filter_animals"] = @filter_animals
    save_window_settings(settings)

    pcs = GameObj.pcs.reject { |pc| pc.name == Char.name }
    push_players_to_window(pcs)

  when /\*pwcolumns/i
    @pwsingle_column = !@pwsingle_column
    respond "Column Layout: #{@pwsingle_column ? 'Single' : 'Double'}"

    settings = load_window_settings
    settings["playerwindow"] ||= {}
    settings["playerwindow"]["single_column"] = @pwsingle_column
    save_window_settings(settings)

    pcs = GameObj.pcs.reject { |pc| pc.name == Char.name }
    push_players_to_window(pcs)

    nil
  else
    command
  end
end)

@skip_next_line = false
@skip_two_lines = false

DownstreamHook.add(DOWNSTREAM_HOOK_ID, proc { |line, _server_string|
  line = line.to_s # ensure it’s always a String

  next line unless @filter_spam || @filter_animals

  # Always allow core XML state signals through
  # Allow all <indicator ... /> lines to pass through
  if line =~ /<indicator /
    next line
  end

  if line =~ /<roundTime value='\d+'\/>/
    next line
  end

  if line =~ /<castTime value='\d+'\/>/
    next line
  end

  if line =~ /<prompt time='\d+'>(.*?)<\/prompt>/
    next line
  end

  if line =~ /<preset id="speech">/i
    next line
  end

  if line =~ /Speaking in .*? says something you don't understand\./
    next line
  end

  # Skip certain You lines
  if line =~ /You are blinded momentarily by a flash of intense light\.|You notice .*? moving stealthily|You hear someone reciting a series of mystical phrases|You hear someone calling upon the powers of the elements|You hear someone chanting an arcane phrase|You feel more refreshed|You hear a distant song that lifts your spirits and touches memories of revelry long past|As your sight returns\, you realize|You see a blur out of the corner of your eye\, and .*? suddenly appears\.|You hear very soft footsteps\./
    next nil
  end

  if line =~ /^You/
    next line
  end

  if line =~ /^Your/
    next line
  end

  # Spell Effect
  if @skip_next_line
    @skip_next_line = false
    next nil
  end

  # Gesture & Sing
  if line =~ /gestures at you\./
    @skip_next_line = false
  elsif line =~ /<a [^>]+>[^<]+<\/a> gestures at <a [^>]+>[^<]+<\/a>\./i ||
        line =~ /<a [^>]+>[^<]+<\/a> gestures at a/i ||
        line =~ /<a [^>]+>[^<]+<\/a> makes a complex gesture at <a [^>]+>[^<]+<\/a>\./i ||
        line =~ /gestures\.|makes a complex gesture\.|continues to wax\.|skillfully begins to weave another verse into|sings a melody\.|gestures into the air\./
    @skip_next_line = true
    next nil
  end

  # Standard Spell Preps
  if line =~ /\.\.\.\s*$/ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # All Other Spell Preps
  if line =~ /.* murmurs words of power into the air, summoning the elements to do .* bidding\.|.* intones a mystical orison, petitioning for the aid of .* patron\.|.* murmurs soft words into the air, the liquid syllables summoning the spirits to .* aid\.|.* traces a burning rune into the air, melding the spiritual and elemental powers by sheer force of will\.|.* whispers quietly into the wind, summoning the forces of nature to .* call\.|.* raises .* voice in rhythmic song, commanding the aid of the elements\.|.* lifts .* voice in a rallying cry, calling confidently on the power of .* patron for aid\.|.* weaves .* hands through the air, streamers of elemental mana twisting between .* fingers\.|.* raises .* clasped hands, fervently calling on the guidance of .* patron\.|.* outlines a luminous rune in the air, summoning the spirits to .* aid\.|.* scribes a hazy, dark sigil into the air, fusing elemental and spiritual power\.|.* casts .* voice into the air, causing the spirits to swirl around (?:him|her|them) with a sound like rustling leaves\.|.* lifts .* voice in song, skillfully twining elemental mana into .* harmony\.|.* traces .* patron's holy symbol in the air, using it to focus .* invocation\.|.* quickly intones a battle chant, imploring .* patron to lend (?:him|her|them) aid\.|.* melds a climactic chord into .* melody, .* voice rising in a crescendo\.|.* murmurs a twisting phrase, commanding both the elements and spirits together\.|.* invokes a short blessing, .* hands clasped in prayer\.|.* chants a short phrase, embers leaping from .* fingertips, as .* clenches .* hand into a smoke-shrouded fist\.|.* intones a mystical phrase, .* words flowing in a burst of speed, as .* hands move rapidly\.|.* chants a reverent prayer, imploring .* patron for aid in restoring the fallen to life\.|.* whispers a mystical phrase, as a nebulous haze shimmers into view around .* hands, casting them in murky shadows\.|.* whispers a mystical phrase, as pearlescent energy builds around .* hands, casting them in an opalescent silhouette\.|.* utters a sharp phrase, tiny thorns rippling across .* arms in a wave that moves toward .* hands\.|.* tucks .* hand behind .* back for a moment before moving it back to .* side\.|.* shower of sparks cascade from .* hands as .* intones a few words\.|.* gallimaufry of sounds pours from .* mouth as .* stumbles over some words\.|.* utters a plaintive plea to .*\.|.* lips move soundlessly\.|.* whispers a short prayer to .* followed by a soft incantation\.|.* fingertips momentarily glow a deep sanguine red as .* murmurs a few words\.|Looking bored, .* drones out a few words in a monotone\.|.* steeples .* fingers together and touches .* forehead to .* thumbs as .* prepares a spell\.|.* makes small, intricately twisting movements with .* hands at .* chest before projecting them outward abruptly\.|Inky shadows and twinkling lights commix around .* in a hypnotic eddy\.|.* rasps out a few words as tendrils of white smoke slither from .* mouth\.|Seven phantom tentacles sprout from the base of .* spine, wrapping .* in a binding embrace\.|.* gestures and quietly utters a phrase of magic\.|.* whispers something softly, and a whirlwind of flower petals envelops (?:him|her|them) before fading away into nothingness\.|Crystalline snowflakes drift softly down upon .* as .* says a few words\.|The scent of mournblooms fills the air as .* speaks a few words\.|A loud ticking sound emanates from .* as .* murmurs a short phrase\.|.* invokes the fury of a storm as .* prepares a spell\.|Anguished whispers amplify into a cacophony of sound that nearly drowns out .* attempts to prepare a spell\.|.* sketches a tart symbol and mutters an invocation to an unintelligible arkati followed by cheerful recitation\.|As .* slowly chants, swirls of tea-scented steam twist about .* before fading to nothingness\.|hands over the ground\, and a sudden chill fills the air as shadows rise to|chants in an arcane language which causes|face suddenly darkens as a ghostly death mask pinches|calling the forces of nature to aid|A swarm of ethereal crimson butterflies circle around|Polychromatic tentacles wrap about .* as .* chants a magical phrase\.|wrists and condenses into thrice\-wrapped coils as|face twisted with pain as if .* very bones are aflame|upturned palms and drift upwards as they build in intensity|traces a series of glowing runes along|whispers a quiet invocation\.|intones a sonorous mantra and shifts|Reciting the mystical phrases of|skin is suffused with a subtle gold glow as|pulses with a white-blue light\!|focuses his thoughts\.|murmurs a brief incantation with a casual gesture\.|A soft\, white glow briefly surrounds|A strange cracking noise cuts across|hums an ancient hymnal that causes the shadows to strectch towards|intones a soft prayer and the patterns, which now dance like eels beneath waves|Calling out to the powers of chaos and life|Mystical phrases fill the air|whispers and a strawberry-hued wisp is summoned, flitting around|sending the cat back down its awkward perch as it accepts its bounty|murmurs a prayer to the spirits of the|eyes to the heavens as the fading image of Liabo appears behind|quickly growing in size as numerous sinuous misty tentacles reach out from within their untold depths|Someone begins singing|As someone sings|Someone unseen begins singing|eyes in concentration\, the runes on|murmurs a prayer to the dead that is an entreaty for aid|renews .* songs|stops singing\.|shaped vortex of air moves|releases upon .* a flurry of abjurations|Suddenly, a small bolt of energy arcs between them|eyes, looking slightly drained\.|strains, but nothing happens\.|The powerful look leaves|The light blue glow leaves|The very powerful look leaves|The white light leaves|The deep blue glow leaves|an eerie white glow blurring the outline of the bones beneath|Grating out an incomprehensible phrase|asking to be empassioned and have his desires fulfilled\.|fingers weave gossamer threads of energy into a weblike sigil\.|quickly intones a battle chant\, imploring|beseeches a reverent phrase while manifesting the elements\.|beseeches a reverent phrase while manifesting the elements\.|eyes flare and then emanate an amalgamation of elemental energy|With a sudden burst of enthusiasm, the sparks jump into .*? seems to glow with power\.|A vibrant stream of rainbow colors burst forth\, streaming alongside .*? motions before dispersing into an imperceptible mist\.|languidly traces a rune in the air\.|patron as sunlit gold radiance begins to take form\, swirling violently around|removes one of the chords from .*? harmony while maintaining the symmetry of those that remain\.|fingers\.\.\. but little else happens\.|gestures discreetly while murmuring a quiet incantation|stirring fingers through the ephemeral wings on|plucks two illusory strands out of the air and knots them together\.|gestures and utters a phrase of magic\.|prepares to sing\.|skillfully begins to weave another verse into|sings\, a squall of wind briefly swirls about|gestures while calling upon the lesser spirits for aid/i
    next nil
  end

  # Effects or Spells Beginning
  if line =~ /is surrounded by a white light\.|energy flicker restlessly about|A shimmering aura surrounds|form seems to momentarily waver and blend with the shadows\.|form shifts back from the shadows\.|With a crackling and splintering sound\, a latticework|vines dotted with crimson\-tipped thorns wrap eagerly about|carefully recombining the two halves of|body seems to glow with an internal strength\.|Wisps of blue flame crackle like static around|appears considerably more powerful.|The barrier of thorns surrounding|gains a look of renewed cognition of|assumes a stern, rough countenance, though|A faint blue glow surrounds|As the fragrant haze settles over .*? looks revitalized\.|blurs before your eyes\.|exhibits a much more regal air, power coursing through|appears to be keenly aware of|A faint .*? haze briefly tints the air about|appearance shimmers briefly\.|A brilliant aura surrounds|stands tall and appears more confident\.|as the violet flames surrounding it gain new life|causing violet flames to spring to life around it|blurs before your eyes\.|A fiery aura envelops|stops shimmering\.|The evanescent shield shrouding|Granules of cobalt light coalesce and dance around|Motes of .*? light appear and begin to swirl around|A sphere of snapping and crackling ethereal ripples expands outward from|Bolts of electricity dance restlessly around|The tempest of electricity swirls violently around|The sanguine liquid is visible for only an instant before it sinks into|Strands of translucent mana swirl about .*? in a protective barrier\.|You hear a loud \*POP\* come from .*? muscles\!|A churning spectral aura suddenly materializes around|appears filled with a confident and fearless composure\.|Dark red droplets seep out of .*? skin and evaporate\.|body suddenly grows darker\.|stands taller\, as if bolstered with a sense of confidence\.|body is surrounded by a dim dancing aura\.|is surrounded by a shimmering field of energy\.|appears somehow changed\.|is again\.  Perhaps it was a trick of the light\.|muscles seem to strain for an instant\.  A sense of loss can be seen in|face takes on a curiously blank expression\./ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # Effects or Spells Ending
  if line =~ /seems hesitant, looking unsure of|seems slightly different|air stops shimmering around|spirits are no longer lifted|undulate and grow stronger|slow down and become less nimble|slow down and become a bit less nimble|energy fades from around|gleam fades from|creaks and twists briefly before disintegrating|returns to its natural state|look of grim determination|slowly exhales as|suddenly appears less powerful|seems somewhat less buoyant|posture becomes noticeably more relaxed|The bright luminescence fades from around|appears to be less protected|appears to lose some confidence|The shimmering aura fades from around|loses some awareness\.|seems a bit less imposing\.|appears slightly less composed\.|The wall of force disappears from around|The mote of white light next to|becomes unbalanced for a second, then recovers\.|appears to lose some internal strength\.|The appearance of great calm leaves|The brilliant aura fades away from|The faint blue glow fades from around|complexion returns to normal\.|dull golden nimbus fades from around|look of renewed cognition fades\.|seems to thin slightly\.|becomes solid again\.|aura suddenly vanishes from around|undulate and fade away\.|movements no longer appear to be influenced by a divine power|seems less resolute\.|chest slows before dying away with a final burst of energy|blood shield shrivel and dry|doesn't seem quite the same as|The lust for blood fades from|flare up one last time before vanishing with a staticky crackle\.|suddenly stops moving light\-footedly|A few withered tendrils of .*? fall away from|body\, swiftly dissipating into the air\.|relaxes a little\.|seems to lose some dexterity\.|returns to normal color\.|The brilliant luminescence fades from around|regal air swiftly drifts away\.|Cobalt light separates itself from|Slowly evaporating, a faint hint of brine is all that remains upon|falls away\, unraveling as it fades\.|ethereal censer fades away\, leaving only a faint lingering scent of incense\.|The .*? fades from .*? eyes\.|The misty halo fades from|The focused look leaves|A blue\-green aura briefly flares up .*? before dissipating into nothingness\.|An incandescent veil fades from|The shimmering multicolored sphere fades from around|The tingling sensation and sense of security leaves|The silvery luminescence fades from around|glances around, looking a bit less confident\.|surge of empowerment fades\.|posture relaxes briefly\.|The sparking electricity surrounding|hazy and indistinct form returns to normal\.|appears somehow different\.|is no longer protected by the shimmering field of energy\.|no longer bristles with energy\.|The layer of raw elemental energy surrounding|spell falters as it takes hold on|one last time before fading entirely\.|The swirling whirlwind around|A faint silvery glow fades from around|The forceful strain in|glistening faintly before stilling to normalcy|looks less calm and refreshed than a moment ago\.|skin withdraw\, submerging out of sight|appears less dazed and confused\.|The rage fades from|The fiery aura surrounding|The ineffable aura of allure fades from|A look of concentration briefly passes across|loses .*? murky complexion\.|skin settles into quiescence\.|tension abates somewhat\.|suddenly shoot off in all directions, then quickly fade away\.|appears less confident\.|begins to breathe less deeply\.|The dim aura fades from around|Deep blue motes swirl away from|The opalescent aura fades from around|The dim aura fades from around|The air calms down around|A silvery fog coalesces around|stance\, no longer braced for impact|barrier flashes rapidly and the sound of breaking crystal can be heard as it cascades down around|sloughing away with a faint shimmer\.|The scant motes of darkness clinging to|The subtle nimbus that radiates from|The blood red haze dissipates from around|Swirls of mana encircling .*? slowly dissipate|seems to lose some internal strength\.|flickers once and shudders before fading completely\.|Dim steel grey lines of energy flicker one last time about|The radiant golden light that fills|As abruptly as it began\, the tailwind embracing .*? goes still\.|looks slightly less tense than he did a moment ago\.|intense rage dwindles away\.|appears less secure\.|The pure white radiance swirling around/ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # Magic Items
  if line =~ /rubs a.*?<a [^>]*?noun="[^"]+">[^<]+<\/a>.*?in <a [^>]*?noun="[^"]+">(?:his|her)<\/a> hand\./
    @skip_next_line = true
    next nil
  elsif line =~ /rubs <a [^>]*?noun="[^"]+">(?:his|her)<\/a> <a [^>]*?noun="[^"]+">[^<]+<\/a>/
    @skip_next_line = true
    next nil
  elsif line =~ /suddenly disintegrates\!/i && line !~ /^Your .* suddenly disintegrates\!/
    next nil
  end

  # NPCs
  if line =~ /stops to speak with|confers quietly with|lumbers in, swathed in darkness\.|falls deeper into bloodthirst\, the darkness swathing|lumbers .*? desiccated tendons in .*? legs popping as he goes\.|slack lips release a tormented moan\.|missing ears as if beset by voices only|taking on monstrous proportions before diminishing back to its original shape\.|decaying teeth in a horrible parody of a warrior's snarl\.|glowing tattoos pulses once, brightening precipitously before returning to normal\.|scampers up to .*? on its wooden legs\./
    next nil
  end

  # Animal Companions, Familiars, Spirits
  blocked_nouns = ["albatross", "badger", "bandicoot", "banishara", "bat", "baza", "bear", "beetle", "bloodhound", "boar", "boarrat", "bobcat", "bush", "bushwag", "buzzard", "caiverine", "caligos", "caracara", "caraval", "canid", "capybara", "castorides", "cat", "catamount", "cheetah", "chameleon", "cockatiel", "colocolo", "condor", "cougar", "coydog", "coyote", "crow", "culpeo", "curhound", "curwolf", "cygnet", "deerhound", "dhole", "dog", "dobrem", "elf-owl", "eagle", "falcon", "fennec", "ferret", "fishing", "fox", "foxhound", "frog", "fossa", "giraffe", "goshawk", "graiphel", "groundhog", "gryfalcon", "gannet", "hare", "harpy", "harrier", "hedgehog", "heron", "howler", "hound", "hawk", "hawk-eagle", "hispid", "hummingbird", "hyena", "iguana", "jackal", "jabady", "jaguar", "jaguarundi", "jungle", "karet", "kingfisher", "kite", "kodkod", "ledisa", "lemur", "leopard", "lion", "lizard", "loper", "lugger", "lynx", "macaw", "magpie", "maned", "margay", "marmot", "marmoset", "mastiff", "melomys", "merlin", "mink", "mongoose", "monkey", "mole", "mouse", "mudcat", "muskrat", "muzzlerat", "narmo", "nutria", "ocicat", "ocelot", "oncilla", "opossum", "osprey", "owl", "panther", "parakeet", "parrot", "passo", "pelican", "penguin", "peregrine", "petrel", "phantom", "phantasma", "pigeonhawk", "pitohui", "porcupine", "pterosaur", "puppet", "puma", "puppy", "pygmy-parrot", "rabbit", "raccoon", "raptor", "rasper", "rat", "raven", "redtail", "ringtail", "rockrat", "rodent", "rowl", "sandrat", "samoyed", "saker", "screech-owl", "seal", "seagull", "seahawk", "sealion", "seal-pup", "serpent", "serval", "shrika", "shrike", "skua", "sloth", "snowcat", "snow-owl", "sparrowhawk", "spirit", "spider", "squirrel", "stratis", "swift", "tanuki", "tamarin", "tarsier", "tigrina", "tiger", "toad", "tothis", "toucan", "trakel", "tunnelcat", "turtle", "vole", "vulture", "warthog", "weasel", "whale", "whiskrat", "wildcat", "wolf", "wolfhound", "wolverine", "woodchuck", "woodpecker", "woodshrew", "wombat", "wyrdling", "viper", "mandrake", "lamb", "scarab", "teadragon"]

  if @filter_animals && line =~ /noun="([^"]+)"/i
    nouns = line.scan(/noun="([^"]+)"/i).flatten.map(&:downcase)

    # Allow talking animals
    if line =~ /\b(says|asks|exclaims|shouts|mutters|growls|meows|snarls|purrs|sings|chants),\s*["“”']/
      next line
    end

    # Allow room descriptions that include "You also see ..."
    if line =~ /You also see .*<a .*?noun="([^"]+)"/
      next line
    end

    # Block everything else if a blocked animal noun is present
    if (nouns & blocked_nouns).any?
      next nil
    end

    # Animates
    if @filter_animals && line =~ /<a .*?>([^<]*animated[^<]*)<\/a>/i
      next nil
    end

  end

  # Ambients
  if line =~ /A feral golden gleam flashes through .*? eyes\./
    next nil
  end

  # Scripted Items
  if line =~ /idly spins the base of|and adopts a nefarious expression\.|center-most crystal winks briefly, but nothing else happens|A ripple of .*? light shimmers over the surface of the|A brief shimmer of .*? light erupts from inside the|A fiery plume of hissing smoke trails|then sets to work on each piece, meticulously checking the shaft, fletching, and tips for damage|the illumination of its sigils slowly ebbs away|touch, a number of sigils worked into its grain take on a faint luminescence|tracing the outline of an arcane sigil before sinking away|armoire|and the .*? flying above .*? shoulder glow slightly\.|shoulder places its hands out in front of itself|shoulder whispers something to|single .*? tentacle rises from its surface|at the top of .* disappearing back into the|The .*? flying over .*? shoulder says|and removes the silky strands that were binding it to|pushes the heel of .*? empty hand against|Fibrous tendrils of mana coalesce from the surroundings and coats|ear as the magical ward protecting|ripples faintly with contained energy\.|burst into baneful white flames|Impenetrable darkness erupts midair for a moment before vanishing into nothingness\.|separates the weapon into two halves\.|appears incorporated into some of the decorations on the|their rhythmic movement an ever\-shifting constellation|The distorted surface begins to mend as glyphs appear and fade across its surface|shoulder vanishes in a brief, white flash of light\.|eyes glow brightly for a moment and .*? appears energized\!|and adopts a grim look of empowerment\.|burst into pure white flames\!|Several sigils incised along .*? flicker briefly with|A low thrumming \*BOOM\* fills the area as ethereal motes form into a small pile of flickering sand that collects at|by the loop on the end of its handle\.|The latticework of .*? surrounding the|murmured invocation\, the sigil\'s power blazes forth in trails of pale energy and surges into|gently taps and strokes the vines wrapped around .*? and the vines recede|A wayward .*? shoulder and drifts to the floor.|glimmers of .*? energy flicker away from its billowing fabric like sparks and swirl around|runes scribed into the grain of its pole flare bright and fade in sequence one after another in a pattern reminiscent of tumbling embers|and an impenetrable darkness erupts around|fist\, a faint flicker of energy dances about|with a flash of .*?  A powerful burst of .*? lingers briefly in the air\.|hand drags itself by dint of arm strength and sheer will up|A low crackling sound accompanies the momentary flare of a sigil on/ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # Drinking, Eating, Healing, Transferring
  if line =~ /takes a drink|takes a bite|concentrates|gradually fades\, forming on|dwarf empath tattoo|begins to look better as the cuts on|focuses on .* with intense concentration|The cuts on .*? close and the bruises fade|The scar on .*? glows faintly white before fading altogether|The bruises around .*? fade\.|begins to look a little better\.|appears entirely restored\.|looks much more calm and refreshed\.|veins stand out briefly\.|begins to look better|gradually fades\, affecting|fingertips using a gentle\, circular motion\.|pours a dose|flesh as dark essence restores|wavers with sudden fatigue|looks better\.|skin looks healthier\.|loses some of .*? pallor.|bears the wound in|gobbles down a big bite|in one enormous bite|There is a bright flash and|flinches visibly in pain as|with an air of determination\.|An image of Liabo reflects in|is bathed in a column of silver moonlight\, invigorating|is bathed in a column of silver moonlight\, fully restored at|own keeping\, leaving behind new-grown flesh\.|Golden\-green warmth extends from/ && line !~ /#{Regexp.escape(Char.name)}/
    @skip_next_line = true
    next nil
  end

  # Disks
  if line =~ /goes off in search of its master.|arrives in the room, shivering violently.  It then disintegrates./
    next nil
  end

  # Selling Interaction
  if line =~ /<a [^>]*?noun="([^"]+)">[^<]*<\/a>\s*?(steps)|glances at it briefly\, then hands <a [^>]*?noun="[^"]+">(?:him|her)<\/a>|asks .*? a question.|to appraise the contents of|and inspects the contents carefully before saying|The .*? then returns a|That's not quite my field\,|asks .*? to appraise a|would like to buy the contents of|inspects the contents carefully\, and removes the gems she is interested in|hands it back to .*? along with some silver.|gives it a careful examination and hands|and inspects it carefully before having a quiet word with|not buying anything this valuable today|The pawnbroker takes|steps aside to talk with the pawnbroker about/ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # Inventory Interaction
  if line =~ /^<a [^>]*?noun="([^"]+)">[^<]*<\/a>\s*?(absent\-mindedly drops|adjusts|attaches|brushes|carefully adds|carefully eyes|carefully places|carefully pours|carefully removes|carefully straps|casually tosses|deftly removes|digs|discreetly stows|discreetly removes|drapes|draws|equips|fiddles with the|flips|flutters out from inside .*? dropping|gently layers|grabs|hangs|is admiring|just opened|just closed|passes|pops|pours|presses|produces|pulls|pulls back|pulls on|pushes|puts|put .*? in|put .*? in|quickly whips|raises|reaches|removes|retrieves|rummages|searches through|secures|securely attaches|seizes|sheathes|slides|slings|slips|stows|summons a swarm|swaps|takes|throws|traces|tosses|tries|tucks|twists|unsheathes|vanishes|withdraws|works)|reaches toward the|slides out a|With a slight roll of .*? shoulder|vanishes into the depths of|seemingly floats up out of|^Slipping its loop from|^Flicking .*? opens the blades of .*? in one smooth\, silent motion\.|^As .*? draws a|from a series of straps on the back of|then suddenly several articles of clothing fly out of the|one of the smaller compartments inside/ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # Lockpicking
  if line =~ /^<a [^>]*?noun="([^"]+)">[^<]*<\/a>\s*?(begins to meticulously examine|detaches a|settles into the difficult task of picking the lock on|appears extremely focused|looks up with a big grin on|goes about disarming|no longer appears focused|speaks briefly with|fiddles with .*? for a moment|gets .*? stuck in the lock|carefully pushes a small wad of cotton into the lock mechanism.\|removes a pair of metal grips from|refines .*? a bit\.)|Then\.\.\.CLICK\!  It opens\!|and slips it into the crack between the lid and the base, apparently cutting something within|and carefully reaches into the locking mechanism|The scintillating light fades from .*? hands\.|Using a pair of metal grips|peers thoughtfully into the lock mechanism of|Taking a small lump of putty from/ && line !~ /#{Regexp.escape(Char.name)}/
    next nil
  end

  # Log ON or OFF, Misc Movement
  if line =~ /just arrived\.|just left\.|Motes of .*? light flow in and resolve into|A softly scented breeze begins to swirl around|figure partially obscured by the flickering form|the shadows retreat back into the surroundings|belongings into a pile of dust that is swiftly borne away on the wind|tied to a red ribbon jingling follows|the door slams shut and vanishes\, leaving no traces of its existence|slowly fades into view with a gasp of breath and a slightly disoriented look|just moved quietly .*? group following closely\.|flounces in amidst a diffuse cloud of .*? glitter\.|The unmistakable scents of sulphur\, ether\, and brimstone rise from the ground near you\.|The faint sound of .*? tied to a red ribbon jingling touts|In the space between moments .*? body grows more and more translucent until|leaving a fading trail of multicolored footprints behind\.|suddenly appears out of nowhere\, one hand moving away from|You see a blur out of the corner of your eye/
    next nil
  end

  # Urchins
  if line =~ /with <a [^>]*?noun="([^"]+)">[^<]*<\/a>.*?in tow/
    next nil
  elsif line =~ /who nods to <a [^>]*?noun="([^"]+)">[^<]*<\/a> and quickly/
    next nil
  end

  # All Other Movement
  @last_seen_players ||= []
  @skip_next_line_after_player_component ||= false

  if line =~ /^<d cmd='go (\w+)'>\w+<\/d>$/ || line =~ /^You (?:go|walk|move) (\w+)/i
    @recent_self_movement = true
  end

  if line =~ /<component id='room players'>(.*?)<\/component>/i
    current_line = $1

    current_players = current_line.scan(/noun="([^"]+)"/i).flatten.map(&:capitalize).uniq

    joined = current_players - @last_seen_players
    left   = @last_seen_players - current_players

    if joined.size == 1
      respond "#{joined.first} enters."
    elsif joined.size > 1
      respond "#{joined.first} enters."
    end

    @pending_leavers = if @recent_self_movement
                         [] # Suppress all leave messages if you moved
                       else
                         left.reject { |name| name == Char.name }.dup
                       end

    @last_seen_players = current_players
    @recent_self_movement = false

    # Only suppress the XML line if someone joined or left
    if joined.any? || left.any?
      @skip_next_line_after_player_component = true
      next nil
    end
  end

  if @skip_next_line_after_player_component
    @skip_next_line_after_player_component = false

    # Match directional line
    if line =~ /<a .*?noun="([^"]+)">[^<]+<\/a> just went (?:<d cmd='go (\w+)'>\w+<\/d>|through a <a .*?>(.*?)<\/a>)/i
      name = $1.capitalize
      direction = $2 || $3&.downcase

      if @pending_leavers&.include?(name)
        respond "#{name} leaves #{direction}."
        @pending_leavers.delete(name)
        next nil
      end
    end

    # For any leavers not matched with direction
    if @pending_leavers&.any?
      name = @pending_leavers.shift
      respond "#{name} leaves."
    end
    @pending_leavers = []

    next nil # Always skip the second line
  end

  if line.strip == ">"
    echo "*** DEBUG: Unfiltered '>' line passed through: #{line.inspect} ***"
  end

  # Catch-all: suppress stray whitespace lines (including those from raw XML chunks)
  if line.strip.empty?
    next nil
  end

  line
})

before_dying do
  UpstreamHook.remove(UPSTREAM_HOOK_ID)
  DownstreamHook.remove(DOWNSTREAM_HOOK_ID)
end

# Main update loop.
loop do
  pcs = GameObj.pcs.reject { |pc| pc.name == Char.name }

  if pcs != @last_pcs || @filter_spells != @last_filter_state
    @last_pcs = pcs
    @last_filter_state = @filter_spells
    push_players_to_window(pcs)
  end

  sleep 0.025
end

echo "Dedicated Player Window is active."
