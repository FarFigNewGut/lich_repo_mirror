=begin
  This script creates a dedicated window to display other players in the room
  and their statuses in real time.
  Features:
  - Continuously updates with current players in the room.
  - Displays statuses (if available) in a standardized format.
  - Automatically removes players that leave.
  - Uses consistent window formatting.
  
author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, target, players, pc
=end

hide_me

# Open the players window using Wrayth's dynamic dialog.
puts("<closeDialog id='PlayerWindow'/><openDialog type='dynamic' id='PlayerWindow' title='Players' target='PlayerWindow' scroll='manual' location='main' justify='3' height='100' resident='true'><dialogData id='PlayerWindow'></dialogData></openDialog>")

@last_players = []

# Standardize status names for players.
# You can adjust these rules to match the statuses that players display.
def status_fix(status)
  case status
  when /sitting/i then "sitting"
  when /kneeling/i then "kneeling"
  when /stunned/i then "stunned"
  when /calmed/i  then "calmed"
  when /frozen/i  then "frozen"
  when /held/i    then "held"
  when /web/i then "webbed"
  when /prone|lying down|knocked to the ground/i then "prone"
  else nil
  end
end

# Build and push the player list to the window.
def push_players_to_window(players)
  output = "<dialogData id='PlayerWindow' clear='t'>"
  output += "<label id='total' value='Players: #{players.size}' />"
  players.each_with_index do |p, index|
    # If a player object has a status property, standardize it; otherwise, show only the name.
    status = (p.respond_to?(:status) && p.status) ? status_fix(p.status) : nil
    label_value = status ? "#{p.name} (#{status})" : p.name
    # Create a clickable link to target that player.
    output += "<link id='player_#{index}' value='#{label_value}' cmd='target ##{p.id}' echo='target ##{p.id}' justify='bottom' left='0' top='#{20 * (index + 1)}' />"
  end
  output += "</dialogData>"
  puts(output)
end

# Main update loop.
loop do
  # Filter players from GameObj.pcs, excluding yourself.
  current_players = GameObj.pcs.reject { |p| p.name == Char.name }
  if current_players != @last_players
    @last_players = current_players
    push_players_to_window(current_players)
  end
  sleep 0.025
end

echo "Dedicated Player Window is active."
