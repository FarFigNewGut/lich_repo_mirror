=begin
  This script creates a dedicated window to display other players in the room
  and their statuses in real time.
  Features:
  - Continuously updates with current players in the room.
  - Displays statuses (if available) in a standardized format.
  - Automatically removes players that leave.
  - Uses consistent window formatting.
  - Allows you to click on another player that is sleeping to POKE them awake.
  - Allows you to click on another player that is prone to PULL them up.
  - Allows you to click on another player that is stunned to cast 108 and UNSTUN them.
  - Allows you to click on a player that is webbed to cast 209 and UNTRAMMEL them.
  
author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, target, players, pc, point, click, unstun, untrammel
=end

hide_me

# Open the players window using Wrayth's dynamic dialog.
puts("<closeDialog id='PlayerWindow'/><openDialog type='dynamic' id='PlayerWindow' title='Players' target='PlayerWindow' scroll='manual' location='main' justify='3' height='100' resident='true'><dialogData id='PlayerWindow'></dialogData></openDialog>")

@last_players = []

# Standardize status names for players.
def status_fix(status)
  case status
  when /dead/i then "dead"
  when /sitting/i then "sitting"
  when /kneeling/i then "kneeling"
  when /stunned/i then "stunned"
  when /calmed/i  then "calmed"
  when /frozen/i  then "frozen"
  when /held/i    then "held"
  when /web/i then "webbed"
  when /prone|lying down|knocked to the ground/i then "prone"
  when /unconscious|slumber|sleeping/i then "sleeping"
  else nil
  end
end
#";e fput('get oak wand'); fput('wave wand at ##{player_id}')"
# Determine action based on player status.
def action_for_status(status, player_id)
  case status
  when "stunned"
    return ";e if Spell[108].affordable? && Spell[108].known?; fput('release') if checkprep != 'None'; fput('prep 108'); fput('cast ##{player_id}'); end"
  when "sitting", "kneeling", "prone"
    return "pull ##{player_id}"
  when "sleeping", "unconscious"
    return "poke ##{player_id}"
  when "webbed"
    return ";e if Spell[209].affordable? && Spell[209].known?; fput('release') if checkprep != 'None'; fput('prep 209'); fput('cast ##{player_id}'); end"
  end
end

# Build and push the player list to the window.
def push_players_to_window(players)
  output = "<dialogData id='PlayerWindow' clear='t'>"
  output += "<label id='total' value='Players: #{players.size}' />"
  players.each_with_index do |p, index|
    status = (p.respond_to?(:status) && p.status) ? status_fix(p.status) : nil
    label_value = status ? "#{p.name} (#{status})" : p.name
    action_cmd = action_for_status(status, p.id)
    
    output += "<link id='player_#{index}' value='#{label_value}' cmd=\"#{action_cmd}\" echo=\"#{action_cmd}\" justify='bottom' left='0' top='#{20 * (index + 1)}' />"
  end
  output += "</dialogData>"
  puts(output)
end

# Main update loop.
loop do
  current_players = GameObj.pcs.reject { |p| p.name == Char.name }
  if current_players != @last_players
    @last_players = current_players
    push_players_to_window(current_players)
  end
  sleep 0.025
end

echo "Dedicated Player Window is active."
