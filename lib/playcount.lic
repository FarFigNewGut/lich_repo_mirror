=begin
Script: 		PlayCount
Author: 		WilliamW1979 (WilliamW1979@netscape.net)
Game:			Gemstone
Date: 			June 27, 2017
Version: 		1.0
Description: 		Instrument playing script that logs information.
Commands: 		;PlayCount help (usage and options)
What script does:	This script will log time spent playing your instrument and completed songs. Must be trusted to work (#{$lich_char}trust #{script.name})!

=end

Styles = ["Joyful","Mournful","Soft","Fast","Slow","Intense","Jaunty","Flamboyant","Aimless","Somber","Inspiring"]
#style_num = 0
Rank = 0

class PlayInstrument

	attr_accessor :settings, :type, :instrument, :log_dir, :log_file, :settings_dir, :settings_file, :count, :rank, :time_count, :kill_time, :finished_song, :keep_playing

	def initialize(variable)
		unless $SAFE == 0
			respond
			respond
			respond "Must be trusted to work!"
			respond "#{$lich_char}trust #{script.name}"
			respond
			respond

		end
		@time_count = 0
		@instrument = GameObj.right_hand.noun
		@rank = 1
		@count = 0
		@time_count = 0
		@finished_song = false
		@keep_playing = true
		$Rank = 1

		unless @instrument
			respond
			respond
			respond "You need to have a valid instrument in your right hand!"
			respond
			respond
			exit
		end

		get_instrument_type

		if @type.nil?
			respond
			respond "That is not a musical instrument!"
			respond
			exit
		end

		read_settings
	end

	def get_instrument_type
		strings = ["harp", "dulcimer", "lyre", "psalter", "zither"]
		percussion = ["cymbals", "tabor", "tamborine", "typani"]
		woodwinds = ["flute", "fife", "picocolo"]
		horns = ["crumhorn", "coronett", "lysard"]
		pipes = ["bagpipes"]
		necked_strings = ["cittern", "lute", "theorbo", "mandolin"]
		if strings.include?(@instrument)
			@type = "Strings"
		elsif percussion.include?(@instrument)
			@type = "Percussion"
		elsif woodwinds.include?(@instrument)
			@type = "Woodwinds"
		elsif horns.include?(@instrument)
			@type = "Horns"
		elsif pipes.include?(@instrument)
			@type = "Pipes"
		elsif necked_strings.include?(@instrument)
			@type = "Necked"
		else
			@type = nil
		end
	end

	def make_dirs
		return @log_dir if @log_dir
		basedir = "#{$lich_dir}logs"
		@log_dir = basedir + "/#{XMLData.game}-PlayCount"
		Dir.mkdir(basedir) unless File.exists?(basedir)
		Dir.mkdir(@log_dir) unless File.exists?(@log_dir)
	end

	def read_settings
		make_dirs
		@settings_file = "#{@log_dir}/#{XMLData.name}-Settings.ini"
		if File.exists?(@settings_file)
			File.open(@settings_file).readlines.each do |line|
				data = line.split(' ')
				if data[0] == @type
					@rank = data[1].to_i
					@count = data[2].to_i
					@time_count = data[3].to_f
					respond
					respond "Loaded: Current Rank = #{@rank}"
					respond "Loaded: Current Song Count = #{@count}"
					respond "Loaded: Playing Time = #{@time_count}"
					respond
				end
			end
		else
			settings = File.new(@settings_file, "w")
			settings.write("Strings 1 0 0\n")
			settings.write("Percussion 1 0 0\n")
			settings.write("Woodwinds 1 0 0\n")
			settings.write("Horns 1 0 0\n")
			settings.write("Pipes 1 0 0\n")
			settings.write("Necked 1 0 0\n")
			settings.close
		end
		$Rank = @rank
	end

	def logger(data)
		unless @log_dir then make_dirs end
		@log_file = "#{@log_dir}/#{XMLData.name}-Logs.txt"
		unless File.exists?(@log_file)
			logfile = File.new(@log_file, "w")
			logfile.write(data + "\n")
			logfile.close
		else
			logfile = File.open(@log_file, "a")
			logfile.write(data + "\n")
			logfile.close
		end
	end

	def update_settings
		temp_data = Array[]
		File.open(@settings_file).readlines.each do |line|
			data = line.split(' ')
			if data[0] == @type
				temp_data.push("#{@type} #{@rank.to_s} #{@count.to_s} #{@time_count.to_s}\n")
			else
				temp_data.push(line)
			end
			data = nil
		end
		change = File.open(@settings_file, "w+")
		for i in 1..temp_data.length
			change.write(temp_data[i-1])
		end
		change.close
		temp_data = nil
	end

	def loop
		while @keep_playing
			@finished_song = false
			style_num = rand(11)
			begin_time = Time.now
			@kill_time = begin_time
			fput "Tune #{@instrument}"
			fput "Play #{@instrument} #{$Styles[style_num]}"
			case @type
			when "Strings"
				waitfor "Finished", "you bring your exuberant song to an end", "in one last chord, the minor resolution ringing", "You bring your quiet performance to a close", "In one last show of speed", "resonate long after the last sonorous chord", "Your final forceful chord progression produces", "you pluck the last rollicking", "With a final flash of fingers", "With as much whimsy as when you began", "The last chord of your solemn", "After one last rousing run through"
			when "Percussion"
				waitfor "you slowly smile and put your hand", "air suddenly stills as you halt your whirling rhythm", "music moves slower and slower until finally, with a last hovering beat"
			when "Woodwinds"
				waitfor "a final, jubilant flourish, you finish", "haunting dirge winds to a gentle", "quiet grace, you allow", "bring your lively song to a close and lower", "your last note fades away like a sigh", "soul-deep sigh you bring your music", "wink and a grin, you trill your final notes", "an elegant display of showmanship, you end your melody", "on a broad note which echoes like a sigh", "somber lament drops off softly, like the dying sun", "a final, rousing crescendo, you bring your melody"
			when "Horns"
				waitfor "blaring final note, you bring your joyous", "mournful melody drifts slowly to completion, leaving a sad", "hold the final note of your melody, allowing", " final clarion call of furious notes echoes all around as you", "notes linger about, fading with gentle echoes as you", "a flurry of sharp, staccato notes, you finish", "notes sound through the area as you finish", "You blow a growing crescendo", "the notes wandering into oblivion as you end", "you play the final notes of your somber song", "magnificent music grows in a crescendo as you end your inspiring song"
			when "Pipes"
				waitfor "a final joyous flourish you expel the last breath", "a final descent of notes, you loosen your grip", "You allow the last chords"
			when "Necked"
				waitfor "You bring the joyful melody strongly to the fore", "chord of final farewell, you allow the musi", "strum one final soft chord then allow your", "a final rapid pattern across the strings of your", "a final slow chord, you allow the notes to hang", "the skill of a master you touch the strings", "a final jaunty chord, you still the strings", "a final showy circle of your arm, you strum one last chord", "a final strum across the strings of your", "a clear seventh chord, you take your hands from the strings", "Striking a final vibrant chord, you allow the song"
			else
				respond "There was an error with the script, please contact WilliamW1979@netscape.net!"
				exit
			end

			@count += 1
			finish_time = Time.now
			diff_time = finish_time - begin_time
			@time_count += diff_time
			respond
			respond "Song took #{diff_time} seconds, played for a total of #{@time_count} seconds now!"
			respond
			if $Rank != @rank
				@rank = $Rank
				respond "You have went up a rank! You are now #{@rank} ranks! it took #{@count} songs and #{@time_count} seconds!"
				logger("#{@count}: #{diff_time} #{time_count}")
				logger("You have went up a rank! You are now #{@rank} ranks! it took #{@count} songs and #{@time_count} seconds!")
			else
				logger("#{@count}: #{diff_time} #{time_count}")
			end
			update_settings
			@finished_song = true
		end
	end

	def killing_script
		unless @finished_song
			case @type
			when "Strings"
				waitfor "Finished", "you bring your exuberant song to an end", "in one last chord, the minor resolution ringing", "You bring your quiet performance to a close", "In one last show of speed", "resonate long after the last sonorous chord", "Your final forceful chord progression produces", "you pluck the last rollicking", "With a final flash of fingers", "With as much whimsy as when you began", "The last chord of your solemn", "After one last rousing run through"
			when "Percussion"
				waitfor "you slowly smile and put your hand", "air suddenly stills as you halt your whirling rhythm", "music moves slower and slower until finally, with a last hovering beat"
			when "Woodwinds"
				waitfor "a final, jubilant flourish, you finish", "haunting dirge winds to a gentle", "quiet grace, you allow", "bring your lively song to a close and lower", "your last note fades away like a sigh", "soul-deep sigh you bring your music", "wink and a grin, you trill your final notes", "an elegant display of showmanship, you end your melody", "on a broad note which echoes like a sigh", "somber lament drops off softly, like the dying sun", "a final, rousing crescendo, you bring your melody"
			when "Horns"
				waitfor "blaring final note, you bring your joyous", "mournful melody drifts slowly to completion, leaving a sad", "hold the final note of your melody, allowing", " final clarion call of furious notes echoes all around as you", "notes linger about, fading with gentle echoes as you", "a flurry of sharp, staccato notes, you finish", "notes sound through the area as you finish", "You blow a growing crescendo", "the notes wandering into oblivion as you end", "you play the final notes of your somber song", "magnificent music grows in a crescendo as you end your inspiring song"
			when "Pipes"
				waitfor "a final joyous flourish you expel the last breath", "a final descent of notes, you loosen your grip", "You allow the last chords"
			when "Necked"
				waitfor "You bring the joyful melody strongly to the fore", "chord of final farewell, you allow the musi", "strum one final soft chord then allow your", "a final rapid pattern across the strings of your", "a final slow chord, you allow the notes to hang", "the skill of a master you touch the strings", "a final jaunty chord, you still the strings", "a final showy circle of your arm, you strum one last chord", "a final strum across the strings of your", "a clear seventh chord, you take your hands from the strings", "Striking a final vibrant chord, you allow the song"
			else
				respond "There was an error with the script, please contact WilliamW1979@netscape.net!"
				exit
			end
			@finished_song = true
		else
			finish_time = Time.now
			diff_time = finish_time - @kill_time
			@time_count += diff_time
			logger("Added #{diff_time} to time for an unfinished song!")
			logger("#{@count}: #{diff_time} #{time_count}")
		end
		respond 
		respond 
		respond "Loaded: Current Rank = #{@rank}"
		respond "Loaded: Current Song Count = #{@count}"
		respond "Loaded: Playing Time = #{@time_count}"
		respond 
		respond 
		update_settings
	end

	def command
		respond
		respond
		respond "Welcome to the help file!"
		respond
		respond "This script has very few commands to make it as simple as possible! Place your instrument in your right hand, then run the script!"
		respond
		respond ";PlayCount                     This starts playing!"
		respond ";kill PlayCount                This safely stops playing after the current song is over! If you don't want to wait, use Stop Playing after killing!"
		respond
		respond "See, simple!"
		respond
		respond
		exit
	end
end

sing = PlayInstrument.new(variable)

playing = proc{
	action = proc { |s|
		if s =~ /You feel a sense of accomplishment/
			$Rank += 1
			s
		else
			s
		end
	}
	DownstreamHook.add("PlayCount_playing", action)
	sing.loop
	DownstreamHook.remove("PlayCount_playing")
}

if variable[1]
	sing.command
end

silence_me
before_dying { DownstreamHook.remove("PlayCount_playing") }
before_dying { sing.killing_script }
playing.call