#ashlaam.lic
#companion script

monsterDeath = /and dies\.|motionless\.|in a heap\.|and finally go out\./
hasSwung = /With a fluid whirl, Gwrawr|(Lothsan|Gwrawr|Rumnil|Brigadeena|Julenne|Arekson|Levocus|Dezter|Keilee) ?(swings|crouches|gestures|fires)|Gwrawr gestures while summoning the spirits of nature|Patches of discolored rot spread|'s hands glow with power|force of Julenne's power warps the air/
hasMulti = /In a breathtaking display.*(Gwrawr|Rumnil)/

Script.start("stand")
Script.start("weaponreact")

def changeStance(stance)
	while checkstance != stance
		fput "stance #{stance}"
	end
end

swing = proc {
	 	#disable script
		#Script.run "sthrow" if GameObj.targets.length() >= 2 and checkstamina >= 20
		#GameObj.targets.each() { |target| Script.run "sstrike", "##{target.id}" unless target.status =~ /lying down|prone|rooted|entangled|sleeping|stunned|immobilized|frozen|sitting|kneeling/ }
		#fput "target ##{GameObj.targets[0].id}" if XMLData.current_target_id.nil?
		if GameObj.targets.any? { |target| not target.status =~ /lying down|prone|rooted|entangled|sleeping|stunned|immobilized|frozen|sitting|kneeling/ }
            Script.run "twinhamm" 
        else
            Script.run "combo"
        end
		waitrt?
        waitcastrt?
}

checkline = proc { |line|
	#case line
		#when monsterDeath
			#Threads << Thread.new { loot.call() }
		#when hasSwung, hasMulti
			#Threads << Thread.new { swing.call() }
			#Threads << Thread.new { swing.call() }
	#end
	Threads.each { |thread| thread.join }
}

##########################################

Threads = []
while true
	line = get

	#if line != nil
	#	checkline.call(line)
	#end

	swing.call() if GameObj.targets.length() > 0

end