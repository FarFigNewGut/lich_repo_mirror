#ruby
=begin
  Customized locksmith pool picking script.  The basic idea is:
    1) You do disarming and (most of) picking
    2) The script takes care of the boring stuff

  ;unpause it after you disarm a box yourself to continue
    Not needed for picking.

  The script assumes you cannot use calipers, and breaks copper lockpicks.
    It buys more copper lockpicks when you run out.

  It also runs a bounty spooling script to ask for gems every 15 minutes
    Only if your name is 'Kaldonis' though ... no one else uses ;rrbountyspool

  A few more features to come in the future.

  author: Kaldonis
  name: deadpool
  tags: lock picking, utility 
  version: 1.0
=end

#TODO: Recognize when a trap is successfully disarmed to continue from traps to locks


if UserVars.lockpicksack.nil? or UserVars.lockpicksack.empty?
  echo 'lockpicksack is not set (;vars set lockpicksack= <container name>)'
  exit 
end  

if !Room.current.tags.include?("locksmith pool")
  Script.run("go2","locksmith pool");
end
# this bit robbed from ;poolparty
npc = GameObj.npcs.find { |npc| npc.noun =~ /(G|g)nome|(W|w)oman|(A|a)ttendant|(M|m)erchant|(W|w)orker|(B|b)oss|(J|j)ahck|(D|d)warf/}
bin = nil
trash_list = ["barrel","bin","wastebasket","trashcan","bucket","wooden crate","iron barrel","canister"]
trash_list.each {|x|
  if Room.current.description.to_s =~ /#{x}/
    bin = x
    break
  end
}
if bin == nil
  bin_obj = GameObj.loot.find{|t| t.name =~ /\bbarrel|\bbin|\bwastebasket|\btrashcan|\bbucket|\bcanister/}
  bin = bin_obj.noun
end

loop{ 
  empty_hands
  if Spell[9003].timeleft < 0.5 && Char.name == 'Kaldonis'
    start_spot = Room.current.id
    Script.run('rrbountyspool')    
    if Room.current.id != start_spot
      pause_script
      Script.run("go2","locksmith pool");
    end
  end
  mybox=""
  if Spell[403].active?
    fput "stop 403"
  end
  if Spell[404].active?
    fput "stop 404"
  end
  fput "ask #{npc} for job"
  cooldown_msg=/done enough boxes for now|You\'ve done enough for a while/
  newbox_msg=/The (case|trunk|chest|box|strongbox|coffer) is set up on the table for you/
  line=""
  #mybox=""
  line = get until line =~ /#{cooldown_msg}|#{newbox_msg}/
  if line =~ /#{cooldown_msg}/
    echo "***Did enough boxes for now***"
    exit
  elsif line =~ /#{newbox_msg}/
    mybox = $1
    traps =/Peering closely into the lock, you spy a (tiny onyx|miniature blood red|miniature sky-blue glaes|miniature sea-green glaes|glimmering opalescent|tiny translucent) scarab wedged into the lock mechanism\.|You notice what appears to be a sharp sliver of metal nestled in a hole next to the lock plate\.|You notice a discolored oval ring around the outside of the #{mybox} which makes you suspicious\.  Your suspicions are confirmed when you look inside the keyhole and notice the spring-loaded jaws pressed flush against the #{mybox} walls\.|You see a tiny sphere imbedded in the lock mechanism\.|You can see a small crystal imbedded in the locking mechanism\.|You see a cord stretched between the lid and case\.|Peering through the [A-Za-z\-\ ]+ #{mybox}, you notice that the lock casing is coated with a rough, grainy substance, and a small bladder is wedged between the tumblers of the lock\.|Looking closely into the keyhole of the lock, you spy a small vial of liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with\.|You notice what appears to be a tiny vial placed just past the tumblers of the lock mechanism\.  It appears that any tampering with the lock mechanism will cause the tumblers to crush the vial\.|Peering through the [A-Za-z\-\ ]+ #{mybox}, you notice that the hinges have some springs incorporated into the design in an unusual fashion\.|Looking closely into the keyhole of the lock, you spy a small vial of fire-red liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with\.|You see a thin tube extending from the lock mechanism down into the #{mybox}\.  The tube appears to be filled with a greenish powder\.|There appears to be a plate over the lock, sealing it and preventing any access to the tumblers\.|Near the lock mechanism, you notice a pair of small metal rods a hair's width from rubbing together\.|The inside chamber is lined with some unidentifiable substance\./
  end
  fput "detect #{Char.name} #{mybox}"
  plated=false
  scales=false
  trapped=true # assume as default
  locked=true
  notrap_msg  = /You discover no traps|The lock appears to be free of all obstructions|A small ball of cotton has been pushed up against the vial/
  plated_msg = /There appears to be a plate over the lock, sealing it and preventing any access to the tumblers/
  scales_msg = /However, you should be able to avoid cutting yourself if you are careful/
  line = get until line =~ /#{notrap_msg}|#{plated_msg}|#{scales_msg}|Roundtime:/
  if line =~ /#{notrap_msg}/
    echo "Not trapped"
    trapped=false
  elsif line =~ /#{plated_msg}/
    echo "Plated"
    plated=true
    trapped=false
  elsif line =~ /#{scales_msg}/
    echo "Scales"
    scales=true
  end
if plated
  Script.run('kpop','pool')    
  locked=false
end
if trapped && !scales
  echo "***#{mybox} is trapped ***"
  pause_script
end
waitrt?
if locked
  echo "***#{mybox} is locked ***"
  if righthand !~ /lockpick/
    fput "get my copper lockpick from #{UserVars.lockpicksack}"
    sleep 0.2 # avoid fput / reget race condition
  end
  if reget 10, "^Get what\?"
    Script.run('go2','bank')
    fput "deposit silver"
    fput "withdraw 1000 silvers"
    Script.run('go2','locksmith')
    multifput "order 10 of 1","buy","open my package","empty package in my #{UserVars.lockpicksack}","drop package"
    Script.run('go2','locksmith pool')
    fput "get my copper lockpick from #{UserVars.lockpicksack}"
  end
  fput "pick #{Char.name} #{mybox} with my copper lockpick"
  sleep 0.2 # avoid fput / reget race condition
  if reget 10, "You broke your lockpick in the attempt"
    waitrt? 
    fput "put my lockpick in #{bin}"
  end
  line = get until line =~ /^You.*Then\.\.\.CLICK!.*$|That\'s some quality work/
  waitrt?
  if righthand =~ /lockpick/
    fput "put my lockpick in my #{UserVars.lockpicksack}"
  end
  if scales
    echo "***#{mybox} has scales -- get your dagger and disarm***"
# automate 
#You gently slide your spike into the space under the lid and slice through the cord.  That oughta do it.
    pause_script
  end
end
fput "ask #{npc} for check"
#Lalena says, "You should finish the strongbox first.  If you want to give up, ASK me to CHECK it again within 30 seconds." 
}
fill_hands
