=begin

	Gemstone has a lot of items in it. Ever find yourself dazed and confused trying to figure out what they all do?
	
	Well then this is the script for YOU!
	
	Keep this script running and it will display notes after an item's name giving a bit of information of what the item does. Stop the script to stop seeing the information.
	
	This is a work in progress, it doesn't yet display information for every item, if it ever will.
	
	Changelog:
	Version 1: Initial release.
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Author: Dreaven
	Version: 1

=end

use_monster_bold = true #Set to true to color information in monster bold, set to nil to not use monster bold.

all_info = {
	#Collectables
	"(sliver of rough moonstone|piece of cloudy glass|shard of cloudy soulstone|golden piece of eight|ruby shard|luminescent sandstone chunk|whisper of divine essence|antique lockpick|fossilized shell|meteorite chipping|small blue clay mortar|marbled blue marble pestle|some grey-colored powder|thin-lipped clear glass bottle|blood-stained bandana|Elanthian Guilds Council token|ethereal chain|ethereal pendant|tiny ethereal orb|miniature (?:warrior|rogue|wizard|cleric|empath|sorcerer|ranger|bard|monk|paladin) figurine|polished stone|(?:oblong|glossy|shiny|slick|rounded|cubic|flat|ovoid|heavy|mottled) smooth stone|handful of (?:silver|gold|icy blue|iron|coral) flakes|(?:blue|yellow|red|black) cotton swathe|threaded (?:pink|grey|white|black|green) pearl|ornate (?:Charl|Cholen|Eonak|Imaera|Jastev|Kai|Koar|Lorminstra|Lumnis|Oleani|Phoen|Ronan|Tonis|Andelas|Eorgina|Fash'lo'nae|Ivas|Luukos|Marlu|Mularos|Sheru|V'tull|Gosaena|Zelia|Huntress|Leya|Onar|Voln|Aeia|Jaston|Khaarne|Kuon|Meyno|Niima|Illoke|Amasalen|Arachne|Laethe|Tilamaire|Voaris|Voln) statuette)"	=> { :added_info => "Collectable" },
	
	#Magic Items
	"(gold-framed clear crystal lens)"	=> { :added_info => "Rub: Casts 1750" },
	
	#Reagents
	"(some (?:powdered|ground|mashed).*|vial of viscous liquid|small troll tooth|large troll tooth|ayanad crystal|s'ayanad crystal|t'ayanad crystal|n'ayanad crystal|glimmering blue essence shard|glowing violet essence shard|some essence of earth|some essence of air|some essence of fire|some glimmering blue essence dust|some glowing violet essence dust|radiant crimson essence shard|perfect myklian belly scale|crystalline globe|pepperthorn root|ayana weed|flask of pure oil|vial of pearlescent oil|essence shard|some essence of water|flask of pure water|flask of clear water|ayana leaf|ayana lichen|ayana root|empty flask|some faintly glowing dust|elemental core|crystal core|pristine nymph's hair|tiny golden seed|vial of farlook vitreous humor|inky necrotic core|some radiant crimson essence dust|glowing violet mote of essence|glimmering blue mote of essence|radiant crimson mote of essence|ayana berry|pristine sprite's hair|pristine siren's hair|dark glimmering crystal|some faintly radiant dust|vial of faintly glowing aelotoi tears|handful of sea salt|some waxy grey caederine|lump of black ambergris|lump of grey ambergris|essence of greater earth|essence of greater air|essence of greater fire|essence of greater water|cluster of ayanad crystals|cluster of s'ayanad crystals|cluster of t'ayanad crystals|cracked soulstone|jagged glossy black shard)"	=> { :added_info => "Reagent" },
	
	#Misc Items
	"(dark blue potion)"					=> { :added_info => "Drink: Fixskills Pot" },
	"(inky black potion)"					=> { :added_info => "Pour: Prepares enhancive/sanctified gear for 735/Prepares ensorcelled gear for 330" },
	"(urven'eth potion)"					=> { :added_info => "Pour: Prepares sanctified/enhancive gear for 925/Prepares enhancive gear for 330" },
	"(pure potion)"							=> { :added_info => "Drink: Casts 215 for clerics/211 everyone else" },
	
	#Wizard enchanting potions
	"(undiluted green ayan'eth potion)"			=> { :added_info => "Pour: Enchant items from +0 to +20" },
	"(undiluted blue ayan'eth potion)"			=> { :added_info => "Pour: Enchant items from +20 to +25" },
	"(undiluted indigo ayan'eth potion)"		=> { :added_info => "Pour: Enchant items from +25 to +30" },
	"(undiluted violet ayan'eth potion)"		=> { :added_info => "Pour: Enchant items from +30 to +35" },
	"(diluted copper ayan'eth potion)"			=> { :added_info => "Pour: Enchant items from +35 to +40" },
	"(diluted silver ayan'eth potion)"			=> { :added_info => "Pour: Enchant items from +40 to +45" },
	"(diluted golden ayan'eth potion)"			=> { :added_info => "Pour: Enchant items from +45 to +50" },
	"(sarmoc potion|sisfu potion|mirtokh potion|dirtokh potion|duqnuru potion|rohnuru potion)"							=> { :added_info => "Was for old 925. No longer used." },
	
	#Wands
	"(oaken wand)"								=> { :added_info => "Wave: Casts 108" },
	"(polished bloodwood wand)"					=> { :added_info => "Wave: Casts 701" },
	"(twisted wand)"							=> { :added_info => "Wave: Casts 702" },
	"(smooth bone wand)"						=> { :added_info => "Wave: Casts 705" },
	"(clear glass wand)"						=> { :added_info => "Wave: Casts 706" },
	"(pale thanot wand)"						=> { :added_info => "Wave: Casts 708" },
	"(iron wand)"								=> { :added_info => "Wave: Casts 901" },
	"(silver wand)"								=> { :added_info => "Wave: Casts 901" },
	"(aquamarine wand)"							=> { :added_info => "Wave: Casts 903" },
	"(golden wand)"								=> { :added_info => "Wave: Casts 906" },
	"(metal wand)"								=> { :added_info => "Wave: Casts 907" },
	"(green coral wand)"						=> { :added_info => "Wave: Casts 1707" },
	"(smooth amber wand)"						=> { :added_info => "Wave: Casts 1708" },
	"(slender blue wand)"						=> { :added_info => "Wave: Casts 1709" },
	"(crystal wand)"							=> { :added_info => "Wave: Casts 1710" },
	"(lustrous beryl wand)"						=> { :added_info => "Wave: Casts 110" },
	"(grooved ebony wand)"						=> { :added_info => "Wave: Casts 111" },
	"(spiraled willow wand)"					=> { :added_info => "Wave: Casts 306" },
	"(grooved witchwood wand)"					=> { :added_info => "Wave: Casts 409" },
	"(wavy grey crystal wand)"					=> { :added_info => "Wave: Casts 412" },
	"(shadowy dark crystal wand)"				=> { :added_info => "Wave: Casts 413" },
	"(clear prismatic wandâ€Ž)"					=> { :added_info => "Wave: Casts 502" },
	"(spiraled sapphire wand)"					=> { :added_info => "Wave: Casts 505" },
	"(faceted topaz wand)"						=> { :added_info => "Wave: Casts 510" },
	"(gnarled yew wand)"						=> { :added_info => "Wave: Casts 703" },
	"(iridescent opal wand)"					=> { :added_info => "Wave: Casts 903" },
	"(smooth crystalline wand)"					=> { :added_info => "Wave: Casts 904" },
	"(slender azure rod)"						=> { :added_info => "Wave: Casts 907" },
	"(slender crimson rod)"						=> { :added_info => "Wave: Casts 908" },
	"(slender mithril wand)"					=> { :added_info => "Wave: Casts 910" },
	"(slender ivory wand)"						=> { :added_info => "Wave: Casts 1106" },
	"(sleek alabaster wand)"					=> { :added_info => "Wave: Casts 1108" },
	"(faceted amethyst wand)"					=> { :added_info => "Wave: Casts 1110" },
	
}

added_info = proc {
	action = proc { |server_string|
		if server_string.strip.length == 0
			nil
			next
		end
		new_info_found = all_info.find{ |key,value| server_string =~ /#{key}/ }
		if new_info_found
			all_names_changed = Array.new
			loop{
				new_info_found = all_info.find{ |key,value| server_string =~ /#{key}/ && !all_names_changed.include?(key) }
				if new_info_found[0]
					words_to_change = server_string.scan(/#{new_info_found[0]}/)
					if server_string !~ /You put|You remove|You grab|You tuck/
						if use_monster_bold
							words_to_change.each{ |words| server_string.gsub! "#{words.join(' ')}", "#{words.join(' ')} #{monsterbold_start}(#{new_info_found[1][:added_info]})#{monsterbold_end}" }
						else
							words_to_change.each{ |words| server_string.gsub! "#{words.join(' ')}", "#{words.join(' ')} (#{new_info_found[1][:added_info]})" }
						end
					end
					all_names_changed.push(new_info_found[0])
				else
					break
				end
			}
			server_string
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}_added_info", action)
}

added_info.call

before_dying { DownstreamHook.remove("#{script.name}_added_info") }

sleep