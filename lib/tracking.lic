=begin
  Tracking.lic is an event tracking script.
  
  IN ALPHA STAGE. IN ALPHA STAGE. IN ALPHA STAGE. IN ALPHA STAGE. IN ALPHA STAGE.
  
  Tracks number of times events happen. Added flare damage tracking.
  
        author: Nisugi
		  game: Gemstone
		  tags: hunting, data collection
	   version: 1.1.0 alpha
	   
  Version Control:
    Major_chage.feature_addition.bugfix
  v1.0.0 alpha
    Initial creation.
	Supports my ranged combat style. Additional attacks to be added.
	Supports flares I have. Additional flares to be added.
=end


module Tracking
  status_tags
  require 'yaml'
  @filename = "#{$data_dir}#{XMLData.game}/#{Char.name}/tracking.yaml"
  @dev = false
  @change = false
  
  
  TARGET_BLOCKED_REGEX = Regexp.union(
    /^<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> flails on the ground but manages to block the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^Amazingly, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> manages to block the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> barely manages to block the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^In the nick of time, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> interposes <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a> between <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> and the (?:attack|missile)!/,
    /^With no room to spare, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^Unable to focus clearly, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> blindly blocks the (?:attack|missile)!/,
    /^<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> stumbles dazedly, but blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^With extreme effort\, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^At the last moment\, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^Unable to focus clearly\, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> blindly blocks the (?:attack|missile)!/,
    /^Nearly insensible\, <pushBold\/>\w+ <a exist="\d+" noun="\ ?w+">[^<]+<\/a><popBold\/> wildly blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^Rolling hurriedly\, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^>]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>!/,
    /^<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> awkwardly scrambles to the right and blocks the missile!/,
    /^<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> easily blocks the missile with <a exist="\d+" noun=" ?\w+">\w+<\/a> <a exist="\d+" noun="[^"]+">[^<]+<\/a>!/,
    /^<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> tumbles to the side and blocks the missile with <pushBold\/><a exist="\d+" noun=" ?\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="[^"]+">[^<]+<\/a>!/,
    /^Using the bone plates surrounding <pushBold\/><a exist="\d+" noun=" ?\w+">\w+<\/a><popBold\/> forearms\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> parries your attack!/,
    /^Lying flat on <pushBold\/><a exist="\d+" noun=" ?\w+">\w+<\/a><popBold\/> back, <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> barely deflects the missile with <pushBold\/><a exist="\d+" noun=" ?\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="[^"]+">[^<]+<\/a>!/,
    /<pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> rolls to one side and deflects the missile with <pushBold\/><a exist="\d+" noun=" ?\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="[^"]+">[^<]+<\/a>!/
  )
  
  TARGET_EVADED_REGEX = Regexp.union(
    /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> evades the (?:attack|missile) by (?:a hair|inches)\!/,
    /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> rolls to one side and evades the (?:attack|missile)\!/,
    /^By amazing chance, <pushBold\/>the <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> evades the (?:attack|missile)\!/,
    /^Lying flat, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> leans to one side and dodges the (?:attack|missile)\!/,
    /<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> barely dodges the (?:attack|missile)\!/,
    /<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> dodges just in the nick of time\!/,
    /^Nearly insensible\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> desperately evades the (?:attack|missile)\!/,
    /^Unable to focus clearly\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blindly evades the (?:attack|missile)\!/
  )
  
  MY_EVADES_REGEX = Regexp.union(
  	/^You evade the (?:attack|missile) by a hair\!/,
    /^You evade the (?:attack|missile) by inches\!/,
    /^You evade the (?:attack|missile) with ease\!/,
    /^By amazing chance, you evade the (?:attack|missile)!/,
    /^You evade the (?:attack|missile) with incredible finesse!/,
    /^You barely dodge the (?:attack:missile)\!/,
    /^With blinding speed, you dodge the (?:attack|missile)\!/,
    /^You dodge just in the nick of time\!/,
    /^You skillfully dodge the (?:attack|missile)\!/,
    /^You manage to dodge <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blow\!/,
    /^You manage to dodge <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> headbutt in the nick of time\!/,
    /^You awkwardly scramble along the ground to avoid the (?:attack|missile)\!/,
    /^You deftly dodge along the ground\, avoiding the onslaught\!/,
    /^You move at the last moment to evade the (?:attack|missile)\!/
	)
 
  NON_DAMAGING_FLARES = {
   /Cords of plasma-veined grey mist seep from your <a exist="\d+" noun="\w+">[^<]+<\/a> and entangle <pushBold\/>the <a exist="(\d+)" noun="\w+">([^<]+)<\/a><popBold\/>, causing <pushBold\/><a exist="\d+" noun="\w+">(?:her|him|it)<\/a><popBold\/> to tremble violently!/ => 'ghezyte_flare',
   /A wave of wicked power surges forth from your <a exist="\d+" noun="\w+">[^<]+<\/a> and fills <pushBold\/>a <a exist="(\d+)" noun="\w+">([^<]+)<\/a><popBold\/> with terror, <pushBold\/><a exist="\d+" noun="\w+">(?:her|him|it)<\/a><popBold\/> form trembling with unmitigated fear!/ => 'terror_flare',
   /Thorny vines and mold\-infested roots emerge from the ground beneath <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>, winding viciously around <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> with destructive results\!/ => 'acuity_flare',
   /Necrotic energy from your <a exist="\d+" noun="\w+">[^<]+<\/a> overflows into you!/ => 'ensorcell',
   /You feel healed!/ => 'ensorcell_heal',
   /You feel empowered!/ => 'ensorcell_mana',
   /You feel rejuvenated!/ => 'ensorcell_stamina',
   /You feel reinvigorated!/ => 'ensorcell_spirit',
   /You feel energized!/ => 'ensorcell_acuity'
 }
 
 
 
 
  def self.msg(type = "info",text)
    if type == "debug"
      if @dev
        if $frontend == 'stormfront' || $frontend == 'profanity'
          _respond "\<preset id=\"speech\"\>#{text}\<\/preset\>"
        else
          echo ">> #{text}"
        end
      end
    elsif $frontend == 'stormfront' || $frontend == 'profanity'
      if type == "error" || type == "yellow" || type == "bold" || type == "monster" || type == "creature"
        _respond "\<pushBold\/\>#{text}\<popBold\/\>"
      elsif type == "warn" || type == "orange" || type == "thought"
        _respond "\<preset id=\"thought\"\>#{text}\<\/preset\>"
      elsif type == "info" || type == "teal" || type == "whisper"
        _respond "\<preset id=\"whisper\"\>#{text}\<\/preset\>"
      elsif type == "green" || type == "speech"
        _respond "\<preset id=\"speech\"\>#{text}\<\/preset\>"
      else
        puts text
      end
    else
      if type == "error" || type == "yellow" || type == "bold" || type == "monster" || type == "creature"
        echo "** #{text}"
      elsif type == "warn" || type == "orange" || type == "thought"
        echo "!! #{text}"
      elsif type == "info" || type == "teal" || type == "whisper"
        echo "-- #{text}"
      elsif type == "green" || type == "speech"
         echo ">> #{text}"
      else
        echo text
      end
    end
  end
 
  def self.load()
    Dir.mkdir("#{$data_dir}#{XMLData.game}") unless File.exist?("#{$data_dir}#{XMLData.game}")
    Dir.mkdir("#{$data_dir}#{XMLData.game}/#{Char.name}") unless File.exist?("#{$data_dir}#{XMLData.game}/#{Char.name}")
    if !File.exist?("#{@filename}")
      @tracking = Hash.new
	  #@tracking_damage = Hash.new { |h,k| h[k] = {} }
      File.write(@filename,@tracking.to_yaml)
	  Tracking.msg("info","Creating tracking file. #{@filename}")
    else
	  @tracking = YAML.load_file(@filename)
	  Tracking.msg("info","Tracking file loaded. #{@filename}")
	end
	@tracking['save_time'] = Time.now.to_f
	before_dying { File.write(@filename,@tracking.to_yaml) }
  end
  
  def self.save()
	File.write(@filename,@tracking.to_yaml)
	Tracking.msg("info","Tracking file saved.")
  end
 
  def self.report(var)
    if var =~ /^save$/
      Tracking.save()
    elsif var =~ /^dump$/
      @tracking.each { |k,v| if k =~ /(?:concussion|flare)_damage|_modifier/;next;else;_respond "#{k}:#{v}";end }
    
    elsif var =~ /^ranged$/
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Shots Fired: #{@tracking['shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Barrage Shots: #{@tracking['barrage_shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Ranged Hits: #{@tracking['hits']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Ranged Misses: #{@tracking['miss']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Attacks Evaded: #{@tracking['evaded_attacks']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Attacks Blocked: #{@tracking['blocked_attacks']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Volley Shots: #{@tracking['volley_shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Volley Hits: #{@tracking['volley_hits']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Volley Misses: #{@tracking['volley_miss']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Pindown Shots: #{@tracking['pindown_shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Pindown Hits: #{@tracking['pindown_hits']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Pindown Misses: #{@tracking['pindown_miss']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Tailwind" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Shots: #{@tracking['tw_shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Barrage: #{@tracking['tw_barrage_shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Volley: #{@tracking['tw_volley_shots']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|% shots: #{(@tracking['tw_shots'] + @tracking['tw_barrage_shots'] + @tracking['tw_volley_shots']) / (@tracking['shots'] + @tracking['barrage_shots'] + @tracking['volley_shots'])}" + "\n<output class=\"\"/>"
      
    elsif var =~ /^flares$/
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Total Attack Hits: #{(@tracking['hits'] + @tracking['volley_hits'])}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Ghezyte Flares: #{@tracking['ghezyte_flare']} #{(@tracking['ghezyte_flare'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Terror Flares: #{@tracking['terror_flare']} #{(@tracking['terror_flare'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Briar Flares: #{@tracking['briar_flare']} #{(@tracking['briar_flare'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Rot Flares: #{@tracking['rot_flare']} #{(@tracking['rot_flare'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Holy Fire Flares: #{@tracking['holy_fire_flare']} #{(@tracking['holy_fire_flare'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Breeze Flares: #{@tracking['breeze_flare']} #{(@tracking['breeze_flare'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Wild Entropy: #{@tracking['wild_entropy']} #{(@tracking['wild_entropy'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Tailwind: #{@tracking['tailwind']} #{(@tracking['tailwind'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Arcane Reflex: #{@tracking['arcane_reflex']} #{(@tracking['arcane_reflex'].to_f / (@tracking['hits'].to_f + @tracking['volley_hits'].to_f) * 100 ).round(2) }%" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Physical Prowess: #{@tracking['physical_prowess']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      
    elsif var =~ /^flare dump$/
      @tracking.each { |k,v| if k =~ /(?:concussion|flare)_damage/;_respond v.length;_respond "#{k}:#{v}";end }
      
    elsif var =~ /^flare damage$/
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Rot Flares" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Rot Flare Hits: #{@tracking['rot_flare_damage'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Avg Damage: #{(@tracking['rot_flare_damage'].sum(0.0) / @tracking['rot_flare_damage'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Min Damage: #{@tracking['rot_flare_damage'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Max Damage: #{@tracking['rot_flare_damage'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Damage=>Count: #{@tracking['rot_flare_damage'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Briar Flare" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Briar Flare Hits: #{@tracking['briar_flare_damage'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Avg Damage: #{(@tracking['briar_flare_damage'].sum(0.0) / @tracking['briar_flare_damage'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Min Damage: #{@tracking['briar_flare_damage'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Max Damage: #{@tracking['briar_flare_damage'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Damage=>Count: #{@tracking['briar_flare_damage'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Holy Fire Flares" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|CCSN Flare Hits: #{@tracking['holy_fire_flare_concussion_damage'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|CCSN Avg Damage: #{(@tracking['holy_fire_flare_concussion_damage'].sum(0.0) / @tracking['holy_fire_flare_concussion_damage'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|CCSN Min Damage: #{@tracking['holy_fire_flare_concussion_damage'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|CCSN Max Damage: #{@tracking['holy_fire_flare_concussion_damage'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Deaths from CCSN: #{@tracking['holy_fire_flare_concussion_damage'].length - @tracking['holy_fire_flare_damage'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Damage=>Count: #{@tracking['holy_fire_flare_concussion_damage'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Fire Flare Hits: #{@tracking['holy_fire_flare_damage'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Fire Avg Damage: #{(@tracking['holy_fire_flare_damage'].sum(0.0) / @tracking['holy_fire_flare_damage'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Fire Min Damage: #{@tracking['holy_fire_flare_damage'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Fire Max Damage: #{@tracking['holy_fire_flare_damage'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Damage=>Count: #{@tracking['holy_fire_flare_damage'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      
    elsif var =~ /^ensorcell$/
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Ensorcell" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Acuity: #{@tracking['ensorcell_acuity']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Health: #{@tracking['ensorcell_health']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Mana: #{@tracking['ensorcell_mana']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Stamina: #{@tracking['ensorcell_stamina']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Spirit: #{@tracking['ensorcell_spirit']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Total: #{@tracking['ensorcell']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Ensorcell from Runestaff" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Acuity: #{@tracking['ensorcell_acuity_runestaff']}" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Health: #{@tracking['ensorcell_mana_runestaff']}" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Mana: #{@tracking['ensorcell_mana_runestaff']}" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Stamina: #{@tracking['ensorcell_stamina_runestaff']}" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Spirit: #{@tracking['ensorcell_spirit_runestaff']}" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|Total: #{@tracking['ensorcell_runestaff']}" + "\n<output class=\"\"/>"
      #_respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      
    elsif var =~ /^aganjira dump$/
      @tracking.each { |k,v| if k =~ /aganjira_/;_respond "#{k}:#{v}";end }
      
    elsif var =~ /^aganjira$/
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| X'Aganjira" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Number of Casts: #{@tracking['aganjira_cs_modifier'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max Resources: #{@tracking['aganjira_max_resource']}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Mana Absorbs: #{@tracking['aganjira_absorb_mana'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Stamina Absorbs: #{@tracking['aganjira_absorb_stamina'].length}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Avg Absorbed Mana: #{(@tracking['aganjira_absorb_mana'].sum(0.0) / @tracking['aganjira_absorb_mana'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Min Absorbed Mana: #{@tracking['aganjira_absorb_mana'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max Absorbed Mana: #{@tracking['aganjira_absorb_mana'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max Absorbed Mana: #{@tracking['aganjira_absorb_mana'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Avg Absorbed Stam: #{(@tracking['aganjira_absorb_stamina'].sum(0.0) / @tracking['aganjira_absorb_stamina'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Min Absorbed Stam: #{@tracking['aganjira_absorb_stamina'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max Absorbed Stam: #{@tracking['aganjira_absorb_stamina'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max Absorbed Stam: #{@tracking['aganjira_absorb_stamina'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Avg CS Modifier: #{(@tracking['aganjira_cs_modifier'].sum(0.0) / @tracking['aganjira_cs_modifier'].length).round(2)}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Min CS Modifier: #{@tracking['aganjira_cs_modifier'].min()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max CS Modifier: #{@tracking['aganjira_cs_modifier'].max()}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "| Max CS Modifier: #{@tracking['aganjira_cs_modifier'].sort.tally}" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      
    elsif var =~ /^ranger trinket$/
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Ranger Trinket Resists" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Electrical: #{@tracking['ranger_trinket_electrical_resist']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_electrical_resist'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Burning: #{@tracking['ranger_trinket_burning_resist']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_burning_resist'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Freezing: #{@tracking['ranger_trinket_freezing_resist']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_freezing_resist'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Natural: #{@tracking['ranger_trinket_natural_resist']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_natural_resist'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Scalding: #{@tracking['ranger_trinket_scalding_resist']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_scalding_resist'].nil?
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Ranger Trinket Negates" + "\n<output class=\"\"/>"
      _respond "<output class=\"mono\"/>\n" + "|Electrical: #{@tracking['ranger_trinket_electrical_negate']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_electrical_negate'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Burning: #{@tracking['ranger_trinket_burning_negate']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_burning_negate'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Freezing: #{@tracking['ranger_trinket_freezing_negate']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_freezing_negate'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Natural: #{@tracking['ranger_trinket_natural_negate']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_natural_negate'].nil?
      _respond "<output class=\"mono\"/>\n" + "|Scalding: #{@tracking['ranger_trinket_scalding_negate']}" + "\n<output class=\"\"/>" unless @tracking['ranger_trinket_scalding_negate'].nil?
      _respond "<output class=\"mono\"/>\n" + "|------------------------|" + "\n<output class=\"\"/>"
    
    
    
    
    
    
    
    
    
    
    elsif var =~ /^volley$/
      Tracking.msg("info","#{@tracking['volley_hits']} hits out of #{@tracking['volley_shots']} volley's taken for a hit rate of #{(@tracking['volley_hits'].to_f / @tracking['volley_shots'].to_f ).round(1)} hits per volley.")
      Tracking.msg("info","Showing an average of #{((@tracking['volley_hits'].to_f / @tracking['volley_shots'].to_f ).round(1) * 0.25 )} targets per volley.")
      Tracking.msg("info","This is highly skewed as volley is being used on 2+ targets, and things die before all 4 cycles.")
    elsif var =~ /^options$/
      Tracking.msg("info","shots, hits, attacks_evaded, attacks_blocked, volley_shots, volley_hits, casts, failed_casts, ghezyte_flare, terror_flare, briar_flare, rot_flare, ensorcell_left, ensorcell_health_left, ensorcell_mana_left, ensorcell_spirit_left, ensorcell_stamina_left, ensorcell_acuity_left, ensorcell_right, ensorcell_health_right, ensorcell_mana_right, ensorcell_spirit_right, ensorcell_stamina_right, ensorcell_acuity_right, acuity_flares, wild_entropy, breeze_flare, tailwind, tw_shots, arcane_reflex, physical_prowess, sigil_double_cast, sigil_set, sigil_dispel, wondrous_weave, spikethorn")
    elsif var =~ /^savetime$/
      Tracking.msg("info","#{@save_time}")
    elsif var != ''
      Tracking.msg("info","#{var}: #{@tracking[var]}")
    else
      Tracking.msg("warn","Error: No variable input.#{var}")
    end
  end
 
  def self.increment(var,amount = 1)
    @tracking[var] += amount
	  @change = true
  end  
 
  def self.process_rot_flare(buffer)
    buffer.to_enum.with_index.reverse_each { |line, i|
      case line
      when /A sickly green aura radiates from a <a exist="\d+" noun="\w+">[^<]+<\/a> .*? and seeps into <pushBold\/>an? <a exist="\d+" noun="\w+">([^<]+)<\/a><popBold\/> wounds!/
        case buffer[i+1]
        when /\.\.\. (\d+) points? of damage\!/
          @tracking['rot_flare_damage'] ||= Array.new
          @tracking['rot_flare_damage'].push($1.to_i)
          @change = true
          return
        end
	    end
    }
  end
 
  def self.process_briar_flare(buffer)
    buffer.to_enum.with_index.reverse_each { |line, i|
	    case line
	    when /Vines of vicious briars whip out from your <a exist="\d+" noun="\w+">[^<]+<\/a>, raking the \w+ with its thorns.  The \w+ looks slightly ill as the glistening emerald coating from each briar works itself under its skin\./
		    case buffer[i+1]
		    when /\.\.\. (\d+) points? of damage\!/
		      @tracking['briar_flare_damage'] ||= Array.new
		      @tracking['briar_flare_damage'].push($1.to_i)
          @change = true
		      return
		    end
	    end
    }
  end
  
  def self.process_holy_fire_flare(buffer)
    buffer.to_enum.with_index.reverse_each { |line, i|
	    case line
	    when /Consumed by the hallowed flames, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is ravaged for (\d+) points? of damage!/
	      @tracking['holy_fire_flare_concussion_damage'] ||= Array.new
		    @tracking['holy_fire_flare_concussion_damage'].push($1.to_i)
		    case buffer[i+1]
		    when /\.\.\. (\d+) points? of damage\!/
		      @tracking['holy_fire_flare_damage'] ||= Array.new
		      @tracking['holy_fire_flare_damage'].push($1.to_i)
          @change = true
		      return
		    end
	    end
    }
  end
 
  def self.process_ranger_trinket(type,element)
    entry = 'ranger_trinket_' + element + '_' + type
    echo entry
    Tracking.increment(entry)
  end
 
  def self.process_blocked_attack(buffer)
    if buffer[-1] =~ /Roundtime: \d+ sec./ && buffer[-2] =~ TARGET_BLOCKED_REGEX
      Tracking.increment('blocked_attacks')
      echo "Now that's some testicular fortitude!"
    end
  end
  
  def self.process_evaded_attack(buffer)
    if buffer[-1] =~ /Roundtime: \d+ sec\./ && buffer[-2] =~ TARGET_EVADED_REGEX
      Tracking.increment('evaded_attacks')
      echo "If you can dodge a wrench..."
    end
  end
  
  def self.xml_watch()
    change = false
    while line = get
    
      # Oh Shit!
      if line =~ /(SEND\[\w+\].*)/
        5.times { Tracking.msg(warn,$1) }
        
      elsif line =~ MY_EVADES_REGEX
        Tracking.increment('my_evades')
      elsif line =~ TARGET_BLOCKED_REGEX
        Tracking.process_blocked_attack(reget(10,/Roundtime: \d+ sec\./,TARGET_BLOCKED_REGEX))
      elsif line =~ TARGET_EVADED_REGEX
        Tracking.process_evaded_attack(reget(10,/Roundtime: \d+ sec\./,TARGET_EVADED_REGEX))
      elsif line =~ /^The thorny barrier surrounding <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> blocks your attack!/
        Tracking.increment('blocked_attacks')
      elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> manages to block with the exact angle needed to deflect the attack right back at you!/
        Tracking.increment('deflected')
      
      
      # Offensive casts
      elsif line =~ /^You gesture at <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>\./
        Tracking.increment('targeted_cast')
        Tracking.increment('targeted_cast_areflex') if Effects::Buffs.active?("Nature's Touch Arcane Ref")
      elsif line =~ /^Emerging from the shadows, you draw upon the environs to empower your spell\!/
        Tracking.increment('empowered_cast')
      elsif line =~ /^Your armor prevents the spell from working correctly\./
        Tracking.increment('spell_hindrance')
        
      # Fire	
      elsif line =~ /^You(?: take aim and) fire an? \w+ (?:arrow|bolt) at <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>\!/
        Tracking.increment('shots')
        Tracking.increment('tw_shots') if Effects::Buffs.active?("Breeze Archery Tailwind")
        Tracking.increment('remained_hidden_after_snipe') if hidden?
      elsif line =~ /^You are no longer hidden\./
        Tracking.increment('hidden_no_more')
      # Barrage
      # elsif line =~ /^Drawing several (?:arrows|bolts) from your <a exist="\d+" noun="\w+">[^<]+<\/a>, you grip them loosely between your fingers in preparation for a rapid barrage\./
      elsif line =~ /^Nocking another arrow to your bowstring, you swiftly draw back and loose again!/
        Tracking.increment('barrage_shots')
      Tracking.increment('tw_barrage_shots') if Effects::Buffs.active?("Breeze Archery Tailwind")
      elsif line =~ /^Upon firing your last (?:arrow|bolt), you release a measured breath and lower your <a exist="\d+" noun="\w+">[^<]+<\/a>\./  
      # Hits
      elsif line =~ /^\s+... and hit for \d+ points? of damage!$/
        Tracking.increment('hits')
      # Misses
      elsif line =~ /^You(?: take aim and) fire your <a exist="\d+" noun="\w+">[^<]+<\/a> at <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> but the shot flies wide of the target\!/
        Tracking.increment('shots')
        Tracking.increment('tw_shots') if Effects::Buffs.active?("Breeze Archery Tailwind")
        Tracking.increment('remained_hidden_after_snipe') if hidden?
        Tracking.increment('miss')
        echo "Get Gud Newb..."
        
      # Volley
      elsif line =~ /^Raising your <a exist="\d+" noun="\w+">[^<]+<\/a> high, you loose (?:arrow|bolt) after (?:arrow|bolt) as fast as you can, filling the sky with a volley of deadly projectiles!/
        Tracking.increment('volley_shots')
        Tracking.increment('tw_volley_shots')
      #elsif line =~ /^An ominous shadow falls over your surroundings as a whistling hail of arrows arcs down from above!/
      # Volley Hits
      elsif line =~ /^An arrow pierces <pushBold\/>a <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>!/
        Tracking.increment('volley_hits')
      elsif line =~ /^An arrow skewers <pushBold\/>a <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>!/
        Tracking.increment('volley_hits')
      elsif line =~ /^An arrow finds its mark!  <pushBold\/>A <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is hit!/
        Tracking.increment('volley_hits')
      elsif line =~ /^<pushBold\/>(?:An?|The) <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is transfixed by an arrow\'s descent!/
        Tracking.increment('volley_hits')
      elsif line =~ /^<pushBold\/>(?:An?|The) <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is struck by a falling arrow!/
        Tracking.increment('volley_hits')
      # Volley Misses
      elsif line =~ /^A falling arrow flashes past <pushBold\/>(?:an?|the) <a exist="\w+" noun="\w+">[^<]+<\/a><popBold\/> and shatters against the ground!/
        Tracking.increment('volley_miss')
      elsif line =~ /^An arrow falls to the ground, narrowly missing <pushBold\/>a <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>!/
        Tracking.increment('volley_miss')
      elsif line =~ /^An incoming arrow just misses <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>\!/
        Tracking.increment('volley_miss')
      elsif line =~ /^The air clears as the deadly volley of arrows abates\./
      
      # Pindown
      elsif line =~ /^Without bothering to aim\, you loose a chaotic hail of (?:arrows|bolts) to pin down your foes\!/
        Tracking.increment('pindown_shots')
      elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is rooted in place\!/
        Tracking.increment('pindown_hits')
      elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> narrowly avoids being skewered\!/
        Tracking.increment('pindown_miss')
      elsif line =~ /^Arrows thud into the ground around <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>\, keeping <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> at bay\!/
        Tracking.increment('pindown_miss')
      elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> ducks away from a stray arrow\!/
        Tracking.increment('pindown_miss')
    
      #Flares
      # Ghezyte
      elsif line =~ /Cords of plasma-veined grey mist seep from your <a exist="\d+" noun="\w+">[^<]+<\/a> and entangle <pushBold\/>the <a exist="(\d+)" noun="\w+">([^<]+)<\/a><popBold\/>, causing <pushBold\/><a exist="\d+" noun="\w+">(?:her|him|it)<\/a><popBold\/> to tremble violently!/
        Tracking.increment('ghezyte_flare')
      # Terror Flares
      elsif line =~ /A wave of wicked power surges forth from your <a exist="\d+" noun="\w+">[^<]+<\/a> and fills <pushBold\/>a <a exist="(\d+)" noun="\w+">([^<]+)<\/a><popBold\/> with terror, <pushBold\/><a exist="\d+" noun="\w+">(?:her|him|it)<\/a><popBold\/> form trembling with unmitigated fear!/
        Tracking.increment('terror_flare')
      # Briar Flares
      elsif line =~ /Vines of vicious briars whip out from your <a exist="\d+" noun="\w+">[^<]+<\/a>, raking the \w+ with its thorns.  The \w+ looks slightly ill as the glistening emerald coating from each briar works itself under its skin\./
        Tracking.increment('briar_flare')
        Tracking.process_briar_flare(reget(20))
      # RotFlares
      elsif line =~ /A sickly green aura radiates from a <a exist="\d+" noun="\w+">[^<]+<\/a> .*? and seeps into <pushBold\/>an? <a exist="(\d+)" noun="\w+">([^<]+)<\/a><popBold\/> wounds!/
        Tracking.increment('rot_flare')
        Tracking.process_rot_flare(reget(20))
      # HolyFire Flares
      elsif line =~ /Your <a exist="\d+" noun="\w+">[^<]+<\/a> bursts alight with leaping tongues of holy fire\!/
        Tracking.increment('holy_fire_flare')
        Tracking.process_holy_fire_flare(reget(20))
      # Acuity Flares
      elsif line =~ /Thorny vines and mold\-infested roots emerge from the ground beneath <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>, winding viciously around <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> with destructive results\!/
        Tracking.increment('acuity_flare')
        
      # Ensorcell
      elsif line =~ /Necrotic energy from your <a exist="\d+" noun="\w+">[^<]+<\/a> overflows into you!/
        Tracking.increment('ensorcell')
      elsif line =~ /You feel healed!/
        Tracking.increment('ensorcell_heal')
      elsif line =~ /You feel empowered!/
        Tracking.increment('ensorcell_mana')
      elsif line =~ /You feel rejuvenated!/
        Tracking.increment('ensorcell_stamina')
      elsif line =~ /You feel reinvigorated!/
        Tracking.increment('ensorcell_spirit')
      elsif line =~ /You feel energized!/
        Tracking.increment('ensorcell_acuity')
        
      # Wild Entropy
      elsif line =~ /^An earthy, sweet aroma wafts from <pushBold\/>a <a exist="(\d+)" noun="\w+">([^<]+)<\/a><popBold\/> in a murky haze\./
        Tracking.increment('wild_entropy')
      elsif line =~ /^The earthy, sweet aroma clinging to <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> grows more pervasive\./
        Tracking.increment('wild_entropy')
      elsif line =~ /^An earthy, sweet aroma clings to <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> in a murky haze, accompanied by soot brown specks of leaf mold\./
        Tracking.increment('wild_entropy')
      elsif line =~ /^Soot brown specks of leaf mold trail in the wake of <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> movements, distorted by a murky haze\./
        Tracking.increment('wild_entropy')
      # Tailwind
      elsif line =~ /^The wind turns in your favor\./
        Tracking.increment('tailwind')
      elsif line =~ /^You shift position, taking advantage of a favorable tailwind\./
        Tracking.increment('tailwind')
      elsif line =~ /^A favorable tailwind springs up behind you\./
        Tracking.increment('tailwind')
      # Arcane Reflex
      elsif line =~ /^Vital energy infuses you, hastening your arcane reflexes!/
        Tracking.increment('arcane_reflex')
      # Physical Prowess
      elsif line =~ /^The vitality of nature bestows you with a burst of strength\!/
        Tracking.increment('physical_prowess')
      # Breeze flare
      elsif line =~ /^<pushBold\/>An? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is buffeted by a sudden gust of wind\!/
        Tracking.increment('breeze_flare')
      elsif line =~ /^<pushBold\/>An? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> is buffeted by a burst of wind and pushed back\!/
        Tracking.increment('breeze_flare')
      elsif line =~ /^A gust of wind shoves <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> back\!/
        Tracking.increment('breeze_flare')
      # Wondrous Weave
      elsif line =~ /^Branching filaments of power snap outward from your <a exist="\d+" noun="\w+">[^<]+<\/a> in [^!]+\!/
        Tracking.increment('wondrous_weave')
        
      elsif line =~ /^Your <a exist="\d+" noun="\w+">[^<]+<\/a> pulses briefly, deflecting some of the (\w+) damage!/
        Tracking.process_ranger_trinket('resist',$1)
      #elsif line =~ /Your <a exist="\d+" noun="\w+">[^<]+<\/a> pulses briefly, deflecting some of the freezing damage!/
      #elsif line =~ /Your <a exist="\d+" noun="\w+">[^<]+<\/a> pulses briefly, deflecting some of the electrical damage!/
      elsif line =~ /^The (\w+) essence is drawn toward your <a exist="\d+" noun="\w+">[^<]+<\/a>, where it is consumed with an abrupt burst of light!/
        Tracking.process_ranger_trinket('negate',$1)
      #elsif line =~ /The freezing essence is drawn toward your <a exist="\d+" noun="\w+">[^<]+<\/a>, where it is consumed with an abrupt burst of light!/
      #elsif line =~ /The electrical essence is drawn toward your <a exist="\d+" noun="\w+">[^<]+<\/a>, where it is consumed with an abrupt burst of light!/
        
      # Sigil Set Root Flare
      elsif line =~ /^A bolt of energy leaps from your <a exist="\d+" noun="\w+">[^<]+<\/a> and sets the sigils along your <a exist="\d+" noun="\w+">[^<]+<\/a> ablaze\.  Tendrils of \w+ energy lash out at <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> and cage <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> within bands of concentric geometry\.\.\./
        Tracking.increment('sigil_set_hit')
      # Sigil Staff Dispel  
      elsif line =~ /^Tendrils of \w+ energy lash out from your <a exist="\d+" noun="\w+">[^<]+<\/a> toward <pushBold\/>an? <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> and cage <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> within bands of concentric geometry that constrict as one, shattering upon impact\!/
        Tracking.increment('sigil_dispel')
      # Sigil Staff Double Cast
      elsif line =~ /^Numerous sigils along your <a exist="\d+" noun="\w+">[^<]+<\/a> abruptly flare to brilliance\!  \w+ energy surges from each, twining into an echo of your last spell\.\.\./
        Tracking.increment('sigil_double_cast')
      # X'aganjira Flares
      elsif line =~ /^Mana cascades across your <a exist="\d+" noun="\w+">[^<]+<\/a>, causing the fabric to shiver against your skin as it draws the scattered power into it and transforms it into mana\.  \[You gain (\d+) mana\!\]/
        @tracking['aganjira_absorb_mana'] ||= Array.new
        @tracking['aganjira_absorb_mana'].push($1.to_i)	    
      elsif line =~ /^Mana cascades across your <a exist="\d+" noun="\w+">[^<]+<\/a>, causing the fabric to shiver against your skin as it draws the scattered power into it and transforms it into stamina\.  \[You gain (\d+) stamina\!\]/
        @tracking['aganjira_absorb_stamina'] ||= Array.new
        @tracking['aganjira_absorb_stamina'].push($1.to_i)
      elsif line =~ /CS: [-+\d]+ \- TD: [-+\d]+ \+ CvA: [-+\d]+ \+ d(\d+): [-+\d+](?: \- [-+\d]+)? \=\= [-+\d+]/
        mod = 100 -$1.to_i
        next if mod < 1
        @tracking['aganjira_cs_modifier'] ||= Array.new
        @tracking['aganjira_cs_modifier'].push(mod)
        Tracking.increment('aganjira_max_resource') if (percentmana > 99) && (percentstamina > 99) 

      # Essence Belt

  
      # Ranger Thangs
      # Wall of Thorns
      elsif line =~ /^The thorny barrier surrounding you blocks the attack from the <pushBold\/><a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/>\!/
        Tracking.increment('wot_block')
      elsif line =~ /^One of the vines surrounding you lashes out at the <pushBold\/><a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/>, scraping a thorn across <pushBold\/><a exist="\d+" noun=" ?\w">\w+<\/a><popBold\/> body!  <pushBold\/>\w+ <a exist="\d+" noun=" ?\w+">[^<]+<\/a><popBold\/> flinches slightly\./
        Tracking.increment('wot_poison')
      # Barkskin
      elsif line =~ /^The layer of bark on you hardens and absorbs the attack\!  The bark crackles, but maintains its form\./
        Tracking.increment('barkskin_physical_maintains')
      elsif line =~ /^The layer of bark on you hardens and absorbs the attack\!  The bark crackles as it crumbles to dust\./
        Tracking.increment('barkskin_physical_crumbles')
      elsif line =~ /^The layer of bark on you hardens and absorbs the magical energy\!  The bark crackles, but maintains its form\./
        Tracking.increment('barkskin_magical_maintains')
      elsif line =~ /^The layer of bark on you hardens and absorbs the magical energy\!  The bark crackles as it crumbles to dust\./
        Tracking.increment('barkskin_magical_crumbles')
        


      
    # Bounty Tracking

      end
    end
	
    if (Time.now.to_f > (Tracking['save_time'].to_f + 60)) && @change
	  File.write(@filename,@tracking.to_yaml)
	  Tracking['save_time'] = Time.now.to_f
	  @change = false
	end
  end
 
end

Tracking.load()
Tracking.xml_watch()

#[logxml: XML Logging started, currently logging to C:/Users/shawn/Documents/SIMU/Lich5/logs/GSIV-Nisugi/2022-09-25-1.xml]x

=begin
    # Saved! My Evades.
      # elsif line =~ /^You evade the (?:attack|missile) by a hair\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You evade the (?:attack|missile) by inches\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You evade the (?:attack|missile) with ease\!/
        # Tracking.increment('evades')
      # elsif line =~ /^By amazing chance, you evade the (?:attack|missile)!/
        # Tracking.increment('evades')
      # elsif line =~ /^You evade the (?:attack|missile) with incredible finesse!/
        # Tracking.increment('evades')
      # elsif line =~ /^You barely dodge the (?:attack:missile)\!/
        # Tracking.increment('evades')
      # elsif line =~ /^With blinding speed, you dodge the (?:attack|missile)\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You dodge just in the nick of time\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You skillfully dodge the (?:attack|missile)\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You manage to dodge <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blow\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You manage to dodge <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> headbutt in the nick of time\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You awkwardly scramble along the ground to avoid the (?:attack|missile)\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You deftly dodge along the ground\, avoiding the onslaught\!/
        # Tracking.increment('evades')
      # elsif line =~ /^You move at the last moment to evade the (?:attack|missile)\!/
        # Tracking.increment('evades')
    # Evasions and Blocks.
    
    # Shots Blocked
      # elsif line =~ /^The thorny barrier surrounding <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blocks your attack\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> flails on the ground but manages to block the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.blocked_attack(reget(10,)
      # elsif line =~ /^Amazingly, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> manages to block the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> barely manages to block the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^In the nick of time, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> interposes <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a> between <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> and the (?:attack|missile)\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^With no room to spare, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^Unable to focus clearly, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blindly blocks the (?:attack|missile)\!/
      # Tracking.increment('attacks_blocked')
      # elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> stumbles dazedly, but blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^With extreme effort\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^At the last moment\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^Unable to focus clearly\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blindly blocks the (?:attack|missile)\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^Nearly insensible\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> wildly blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /^Rolling hurriedly\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^>]+<\/a><popBold\/> blocks the (?:attack|missile) with <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> <a exist="\d+" noun="\w+">[^<]+<\/a>\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> awkwardly scrambles to the right and blocks the missile\!/
        # Tracking.increment('attacks_blocked')
      # elsif line =~ /Using the bone plates surrounding <pushBold\/><a exist="\d+" noun="\w+">\w+<\/a><popBold\/> forearms\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> parries your attack\!/
        # Tracking.increment('attacks_blocked')
      #A heavy barrier of stone momentarily forms around a triton warlock and blocks the attack!

    # Shots Evaded
      # elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> evades the (?:attack|missile) by (?:a hair|inches)\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /^<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> rolls to one side and evades the (?:attack|missile)\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /^By amazing chance, <pushBold\/>the <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> evades the (?:attack|missile)\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /^Lying flat, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> leans to one side and dodges the (?:attack|missile)\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> barely dodges the (?:attack|missile)\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /<pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> dodges just in the nick of time\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /^Nearly insensible\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> desperately evades the (?:attack|missile)\!/
        # Tracking.increment('attacks_evaded')
      # elsif line =~ /^Unable to focus clearly\, <pushBold\/>\w+ <a exist="\d+" noun="\w+">[^<]+<\/a><popBold\/> blindly evades the (?:attack|missile)\!/
        # Tracking.increment('attacks_evaded')
=end