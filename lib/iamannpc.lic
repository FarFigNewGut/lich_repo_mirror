=begin
	Act like an NPC! Do a random action from your specified list of actions and walk around. 

	Author: Licel
=end

CharSettings['boundary']     ||= Array.new
CharSettings['move']     ||= 25

def commandsToString(commandArray)
	commandString = ""
	if commandArray.kind_of?(Array)
		commandArray.each { |c| commandString += '|' + c }
	else
		commandString = "|" + commandArray
	end
	return commandString
end

def commandsToArray(commandString)
	commandArray = commandString.split(/\|/)
	commandArray.shift()
	return commandArray
end 

if(script.vars[1] =~ /^addcommand$/)
	commands = CharSettings['commands']
	if commands.nil?
		commandArray = []
	else
		commandArray = commandsToArray(commands)
	end
	
	commandToAdd = "" 
	i = 0 
	
	while i < script.vars.length
		i += 1 
		if i > 1 and script.vars[i].length > 0 
			commandToAdd += " " + script.vars[i]
		end
	end	
	commandArray.push(commandToAdd)
	CharSettings['commands'] = commandsToString(commandArray)
	echo "Command saved!"
	exit
end

if(script.vars[1] =~ /^delay$/)
	CharSettings['delay'] = script.vars[2]
	echo "Delay saved!"
	exit
end

if(script.vars[1] =~ /^addboundary$/)
	if script.vars[2]
		for var in script.vars[2..-1]
			if var =~ /^[0-9]+$/
				CharSettings['boundary'].push(var)
				echo "room #{var} has been added to the boundary list"
			else
				echo "ignoring #{var}: not a room id"
			end
		end
	elsif room = Room.current
		CharSettings['boundary'].push(room.id.to_s)
		echo "this room (#{room.id}) has been added to the boundary list"
	else
		echo 'error: current room is uknown'
	end
	exit
end 

if(script.vars[1] =~ /^debug$/)
	echo CharSettings['delay']
	echo CharSettings['commands']
	exit
end

if(script.vars[1] =~ /^seecommands$/)
	commands = CharSettings['commands']
	commandArray = commandsToArray(commands)
	i = 0
	for command in commandArray
		i += 1
		echo i.to_s + ") " + command 
	end
	
	exit
end

if(script.vars[1] =~ /^removecommand$/)
	commands = CharSettings['commands']
	commandArray = commandsToArray(commands)
	commandText = commands[script.vars[2].to_i - 1]
	commandArray.delete_at(script.vars[2].to_i - 1) 
	CharSettings['commands'] = commandsToString(commandArray)
	echo "Command removed!"
	exit
end

if(script.vars[1] =~ /^reset$/)
	CharSettings['delay'] = nil 
	CharSettings['commands'] = nil 
	CharSettings['boundaries'] = nil 
	CharSettings['move'] = nil 
	echo "Settings reset!"
	exit
end

if(script.vars[1] =~ /^move$/)
	CharSettings['move'] = script.vars[2].to_i
	echo "Saved move percentage!" 
	exit 
end 

if(script.vars[1] =~ /^help$/)
	echo ";#{script.name} move 15 (for move 15% of the time), addcommand, delay, seecommands, reset, removecommand, addboundary #"
	exit
end
commandArray = commandsToArray(CharSettings['commands'])
if CharSettings['delay'].nil? 
	delay=5
else  
	delay = CharSettings['delay'] 
end
lastcommand = "" 
nextcommand = "" 
loop{
	
	if rand(100) < CharSettings['move']
		room = Room.current
		next_room_options = room.wayto.keys - CharSettings['boundary']
		put(room.wayto[next_room_options.sample])	
	else
		loop do
			nextcommand = commandArray.sample.strip
			if nextcommand != lastcommand 
				break;
			end
		end 
		lastcommand = nextcommand
		put(nextcommand)
	end
	pause delay
}