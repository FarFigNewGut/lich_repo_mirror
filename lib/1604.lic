=begin
Author: Demandred
Contributors: Doug, Falicor, Tysong
Game: Gemstone
Version: 1.4
Tags: Paladin,Consecrate,1604

changelog
	1.4 - Fixed bad forgotten affordable else.
	1.3 - added consecrating normal items on falloff.
	1.2 - Ugh, fixed instance to normal vars.
	1.1 - changed global to instance variables
	1.0 - first public release
	
Let me know on discord or in game if you have any issues.

First script. Should re-consecrate any weapon that consecrate falls off of...including
if you use multiple items for combat(i.e. - UCS) and two fall off simultaneously.
	
=end

if !Spell[1604].known?
    echo "You don't know Consecrate, how do you expect to use this?!?"
    exit
end
scripts_to_pause = ["bigshot", "sbounty", "treim"]
consecrate_array = []
item = nil
cons_cons_match = /[Y|y]our <a exist="-?(\d+)" noun="[^"]+">[^<]+<\/a> returns? to normal\./
cons_norm_match = /Silvery tendrils rise up from your (?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)? ?(.+) and quickly dissipate\.|The translucent shell covering your (?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)?(?:[^ ]+)? ?(.+) shatters in an array of cascading silver light\./
status_tags

while (line = get)
	#echo line
  if line =~ cons_cons_match
		consecrate_array.push($1)
		next
	elsif line =~ /^Roundtime/ && consecrate_array.count > 0
		if Spell[1604].affordable?
			scripts_to_pause.each { |script| Script.pause(script) if Script.running?(script) }
			sleep 0.2
			waitrt?
			waitcastrt?
			sleep 0.2
			while consecrate_array.count > 0 && Spell[1604].affordable?
				fput "prep 1604"
				result = dothistimeout "cast at ##{consecrate_array[0]}", 2, /A violet tongue of flame enfolds .*#{consecrate_array[0]}.* for a moment and then appears to become incorporated into it|Silvery tendrils rise up and wreathe their way around .*#{consecrate_array[0]}.* before sinking into its surface|Silvery tendrils rise up and wreathe their way around .*#{consecrate_array[0]}.* but quickly begin to dissipate|A sullen violet flame burns briefly around .*#{consecrate_array[0]}.* quickly returns to normal/
				if result =~ /A violet tongue of flame enfolds .*#{consecrate_array[0]}.* for a moment and then appears to become incorporated into it/
					consecrate_array.delete(consecrate_array[0])
					sleep 0.2
					waitcastrt?
					sleep 0.2
				elsif result =~ /Silvery tendrils rise up and wreathe their way around .*#{consecrate_array[0]}.* before sinking into its surface/
					echo "*** This item can't hold a consecrate like this, it lost a bless, not a consecrate ***"
					echo "*** EXITING NOW!!! ***"
					exit
				elsif result =~ /Silvery tendrils rise up and wreathe their way around .*#{consecrate_array[0]}.* but quickly begin to dissipate/
					echo "*** This item is not sanctified, so what you lost there was a bless. ***"
					echo "*** EXITING NOW!!! ***"
					exit
				elsif result =~ /A sullen violet flame burns briefly around .*#{consecrate_array[0]}.* quickly returns to normal/
					echo "*** How this item ended up in the array, I have no idea. It is non-consecrateable. ***"
					echo "*** Maybe a magic item you can't consecrate yet? Anyway, EXITING NOW!!! ***"
					exit
				end
			end
		else
			echo "Out of mana, I'm gonna exit!"
			exit
		end
		scripts_to_pause.each { |script| Script.unpause(script) if Script.paused?(script) }
	elsif line =~ cons_norm_match
		item = $1
		if Spell[1604].affordable?
			scripts_to_pause.each { |script| Script.pause(script) if Script.running?(script) }
			sleep 0.2
			waitrt?
			waitcastrt?
			fput "prep 1604"
			fput "cast at my #{item}"
			sleep 0.2
			waitcastrt?
			scripts_to_pause.each { |script| Script.unpause(script) if Script.paused?(script) }
		end
  end
end
