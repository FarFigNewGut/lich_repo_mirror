# news.lic - Fetches daily events from the TownCrier RSS feed with fixed date extraction
# From the makers of Free North News to our friends at the TownCrier

require 'open-uri'
require 'rexml/document'

TOWNCRIER_FEED = 'https://gstowncrier.com/feed/'

def fetch_rss_feed
  begin
    xml_data = URI.open(TOWNCRIER_FEED).read
    return xml_data
  rescue => e
    puts "Error fetching RSS feed: #{e.message}"
    return nil
  end
end

def extract_today_events(xml_data)
  return ["No events found.", "Unknown Date"] unless xml_data

  begin
    doc = REXML::Document.new(xml_data)
    
    # Find the first <item> entry
    first_item = doc.elements['rss/channel/item']
    return ["No events found.", "Unknown Date"] unless first_item
    
    # Extract the event title
    title = first_item.elements['title'].text
  

    # Extract the date by skipping "What's" and capturing between "Happening Today" and "in GemStone IV"
    date_match = title.match(/Happening Today: (.+?) in GemStone IV/)
    display_date = date_match ? date_match[1] : "Unknown Date"

    # Extract the event description
    description = first_item.elements['description'].text

    # Remove HTML tags (<li>, <strong>, <a>, etc.)
    description.gsub!(/<\/?[^>]+>/, '') 

    # Extract lines that start with a time format (e.g., "24/7:", "1pm:")
    events = description.scan(/\b(?:24\/7|\d{1,2}(?:am|pm)): .*/)

    return events.any? ? [events, display_date] : [["No events found."], display_date]
  rescue => e
    return [["Error parsing RSS: #{e.message}"], "Unknown Date"]
  end
end

# Main script execution
puts "Fetching TownCrier events..."
xml_data = fetch_rss_feed
events, display_date = extract_today_events(xml_data)

# Print results in-game
puts "------------------------------------"
puts "Events for: #{display_date}"
puts "------------------------------------"
events.each { |event| puts event.strip }
puts "------------------------------------"
puts "All times are Eastern."
