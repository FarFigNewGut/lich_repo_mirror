# QUIET
=begin
	EnchantCheck
	Created By: Vailan
	Date:       12-04-2020
	
	          author: Vailan (Vailan#0875 on discord)
            game: GS
            tags:enchanting, potions,elemental detection, 405, wizard
        		required: Lich >= 4.6.4
         		version: 2020.12.05.2
	
	This script will cast and parse the results of Elemental Detection on an item in your right hand (assuming you have the skills to get results) and
	parse the results to see what level an item is unlocked to enchant to and if it needs a potion, tell you which one and base cost.

	Example Command
	;enchantcheck
	
	********change log***********
	2020.11.28 - Initial publication
	2020.11.28 - Fixed Cost of enchant portions
	2020.12.04 - Fixed a bug in detecting items that have not been enchanted and removed extra echos
	2020.12.05 - Fixed bug where over reporting for enchants where the unlock goes to something less than the max level for that enchant (e.g using
	             "an undiluted green ayan'eth potion" on an imflass item will unlock it to 17 not 20. and a second one unlocks it to 20) also added a check
	             for RT before casting the spell
	
	***********todo**************
	
	
	*********known issues********
	
=end

VERSION = "2020.12.05.2"

if $frontend != "stormfront"
  respond ""
  respond " Thank you for your interest in EnchantCheck"
  respond " This version is specific to the Stormfront frontend"
 	respond ""
  respond ""
  respond " Closing now"
  respond ""
  exit
end

def reportShadeOffset(enchantShade)
	if enchantShade =~ /faint/
		return -4
	elsif enchantShade =~ /muted/
		return -3
	elsif enchantShade =~ /hazy/
		return -2
	elsif enchantShade =~ /soft/
		return -1
	elsif enchantShade =~ /vibrant/
		return 0
	else
		echo "The shade was not detected so this might be a negative (Cursed) or previously negative enchant brought up to 0"
		return nil
		
	end
end

def getPotionRequiredToContinue(currentEnchant,unlockedTo,enchantCap)
	potionRequired = ""
	if currentEnchant < 20
		potionRequired = "\"an undiluted green ayan'eth potion\" for 10,000 silvers base"
		allowedCasts = 5
	elsif currentEnchant < 25
		potionRequired = "\"an undiluted blue ayan'eth potion\" for 25,000 silvers base"
		allowedCasts = 5
	elsif currentEnchant < 30
		potionRequired = "\"an undiluted indigo ayan'eth potion\" for 50,000 silvers base"
		allowedCasts = 5
	elsif currentEnchant < 35
		potionRequired = "\"an undiluted violet ayan'eth potion\" for 75,000 silvers base"
		allowedCasts = 5
	elsif currentEnchant < 40
		potionRequired = "\"a dilute copper ayan'eth potion\" per added bonus which is only available by special merchant events"
		allowedCasts = 1
	elsif currentEnchant < 45
		potionRequired = "\"a dilute silver ayan'eth potion\" per added bonus which is only available by special merchant events"
		allowedCasts = 1
	elsif currentEnchant < 50
		potionRequired = "\"a dilute golden ayan'eth potion\" per added bonus which is only available by special merchant events"
		allowedCasts = 1
	else
		potionRequired = "and cannot be further enchanted"
	end
	
	if unlockedTo != false and currentEnchant.to_i < unlockedTo.to_i
		#echo "and is currently unlocked to #{unlockedTo} with #{potionRequired}"
		return "and is currently unlocked to #{unlockedTo} with #{potionRequired}"
	elsif unlockedTo.to_i < enchantCap.to_i
		return "and the potion needed is #{potionRequired} to get to #{enchantCap}"
	else
		#echo "and the potion needed is #{potionRequired} to get to #{enchantCap + allowedCasts}
		return "and the potion needed is #{potionRequired} to get to #{enchantCap + allowedCasts}"
	end

end

def reportResults(heldItem,enchantShade,enchantColor,unlockedTo)
	enchantCap = 0
	screenOutputline = ""
	if enchantColor =~ /red/
		enchantCap = 5
		enchantOffset = reportShadeOffset(enchantShade).to_i
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
		
	elsif enchantColor =~ /orange/
		enchantCap = 10
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /yellow/
		enchantCap = 15
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /green/
		enchantCap = 20
		enchantOffset = reportShadeOffset(enchantShade)
		#echo "Offset = #{enchantOffset}"
		#echo "Enchant Cap = #{enchantCap}"
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
			echo "Current Enchant = #{enchantCap + enchantOffset}"
		else
			#echo enchantCap + enchantOffset
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /blue/
		enchantCap = 25
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /indigo/
		enchantCap = 30
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /violet/
		enchantCap = 35
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /copper/
		enchantCap = 40
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /silver/
		enchantCap = 45
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	elsif enchantColor =~ /gold/
		enchantCap = 50
		enchantOffset = reportShadeOffset(enchantShade)
		if enchantOffset == 0
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		else
			screenOutputline = "#{heldItem.name} is currently enchanted to #{enchantCap + enchantOffset} #{getPotionRequiredToContinue(enchantCap + enchantOffset,unlockedTo,enchantCap)}"
		end
	
	else
		screenOutputline = "The color was not detected so this might be a negative (Cursed) or previously negative enchant brought up to 0"
	end
	puts "<output class=\"mono\"/>#{monsterbold_start}#{screenOutputline}#{monsterbold_end}\r\n<output class=\"\"/>"



end

def castElementalDetect(heldItem)
	spell = Spell[405]
	if spell.known?
		wait_until {spell.affordable?}
		waitcastrt?
		waitrt?
		fput "prep 405"
		fput "cast ##{heldItem.id}"
		waitfor "You gesture at"
		enchantShade, enchantColor = matchfind "You recognize the ? ? aura surrounding it as indicating a "
		unlockedTo = matchtimeout 2, "seems to have been prepared for enchanting, and may be enchanted up to a bonus of"
		#echo unlockedTo
		if unlockedTo == false
		 
		else
			splitUnlock = unlockedTo.split(" ")
			#echo splitUnlock
			unlockedTo = splitUnlock[splitUnlock.length-1].gsub(".","")
			#echo unlockedTo
		end
		echo enchantShade
		echo enchantColor
		echo unlockedTo
		
		reportResults(heldItem,enchantShade,enchantColor,unlockedTo)
		
	else
		echo "you dont know this spell and therefore cannot cast it"
	end
end

#make sure we are actually holding something
if checkright != nil
	enchantObject = GameObj.right_hand
	#example cast of Elemental Detection (405)
	#You recognize the vibrant blue aura surrounding it as indicating a strong level of enchantment.
	#You notice no aura indicating enchantment.
	castElementalDetect(enchantObject)
	
else
	echo "the item you want to check must be in your right hand"
end
