=begin
  Handles paladin things, run as an autostart.

  Author: Felang Goredrinker
  Currently handles:
    - Removing Poison (Self)
    - Removing Disease (Self)
    - Casting rejuvenation, based on stamina threshold
    - Casting rejuvenation evoke, based on health threshold
    - Unstunning people in the room, will not unstun if running bigshot, unless set to do so
      * Incorporates unstun.lic by Darkcipher
  Requirements:
    - 1607 - Rejuvenation
    - 108  - Stun Relief
    - 113  - Undisease
    - 114  - Unpoison
  Releases:
    - v1.0 - Initial Release
    - v1.1 - Added player-defined thresholds and reuse timer
    - v1.2 - Incorporated unstun.lic by Darkcipher
    - v1.3 - Added debugging setting
=end

class PaladinHelper
  def initialize
    @last_rejuv_snap = Time.now
    @prev_stance = ''

    # PLayer Settings, CHANGE THESE
    @debug_mode_ph = false
    @scripts_to_pause = ['bigshot', 'sbounty', 'treim', 'useherbs', '1604', 'unstun']
    @rejuv_reuse_timer = 10 # In seconds
    @stamina_threshold = 40
    @health_threshold = 80
    @unstun_during_bigshot = false
    
    run
  end

  def run
    loop do
      check_stamina
      check_health
      check_disease
      check_poison
      check_unstun
      pause 0.5
    end
  end

  def check_unstun
    return if checkstunned || checkdead
    return if Script.running?('bigshot') && !@unstun_during_bigshot
    echo 'check_unstun' if @debug_mode_ph

    if (players = GameObj.pcs)
      players.each do |p|
        waitcastrt?
        if p.status =~ /stun/i
          wait_until{ checkmana >= 8 }
          waitrt?
          waitcastrt?
          fput "prep 108"
          fput "cast " + p.name
          pause 3
        end
      end
    end
  end

  def check_disease
    return unless checkdisease
    echo 'check_disease' if @debug_mode_ph

    pause_scripts
    stance_def
    
    Spell[113].cast
    
    return_stance
    unpause_scripts
  end

  def check_poison
    return unless checkpoison    
    echo 'check_poison' if @debug_mode_ph

    pause_scripts
    stance_def
    
    Spell[114].cast
    
    return_stance
    unpause_scripts
  end

  def check_stamina
    return if Spell[1607].active?
    return unless (Time.now - @last_rejuv_snap) > @rejuv_reuse_timer
    return unless percentstamina < @stamina_threshold
    return unless Spell[1607].affordable?
    echo 'check_stamina' if @debug_mode_ph

    pause_scripts
    stance_def

    fput 'prep 1607'
    fput 'cast'
    
    @last_rejuv_snap = Time.now
    return_stance
    unpause_scripts
  end

  def check_health
    return unless (Time.now - @last_rejuv_snap) > @rejuv_reuse_timer
    return unless percenthealth < @health_threshold
    return unless Spell[1607].affordable?
    echo 'check_health' if @debug_mode_ph

    pause_scripts
    stance_def

    fput 'inc 1607 evoke'
    @last_rejuv_snap = Time.now

    return_stance
    unpause_scripts
  end

  def pause_scripts
    @scripts_to_pause.each { |script| Script.pause(script) if Script.running?(script) }
  end

  def unpause_scripts
    @scripts_to_pause.each { |script| Script.unpause(script) if Script.paused?(script) }
  end

  def stance_def
    @prev_stance = checkstance
    fput 'stance def'
  end

  def return_stance
    fput "stance #{@prev_stance}"
  end
end

PaladinHelper.new