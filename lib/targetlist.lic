=begin
  TargetList is a supplemental script to be used with ProfanityFE.
  Allows for sending target names to specific template xmls.
  See template\eleazzar.xml for sample on how to utilize.

        author: elanthia-online
  contributors: Eleazzar
          game: Gemstone
          tags: profanityfe, targets, hunting
       version: 1.0.0

  Version Control:
  Major_change.feature_addition.bugfix
  v1.0.0 (2024-08-14)
    - initial release
=end
module TargetList
  def self.main
    before_dying {
      _respond %[<clearStream id="combat"/>]
    }

    last_string = ""

    loop do
      target = GameObj.target
      status = ""
      prefix = %[<clearStream id="combat"/><pushStream id="combat"/>]
      suffix = %[<popStream/>]

      targets = Array(GameObj.targets) + Array(GameObj.npcs).select { |n| n.status == "dead" }
      string = if targets.any?
                 # npcs includes non-hostiles and targets doesn't include dead hostiles (combine them)
                 npcs = targets.map do |npc|
                   # sit stu kne sle fly fro
                   status = npc.status ? "[#{npc.status.split.first[0, 3]}] " : ""
                   bold_prefix = npc.status == "dead" ? "" : "<b>"
                   bold_suffix = npc.status == "dead" ? "" : "</b>"
                   target_prefix = target == npc ? "<color ul='true'>" : ""
                   target_suffix = target == npc ? "</color>" : ""
                   %[#{target_prefix}#{bold_prefix}#{status}#{npc}#{bold_suffix}#{target_suffix}]
                 end.join(", ")
                 prefix + npcs + suffix
               else
                 %[<clearStream id="combat"/><pushStream id="combat"/> <popStream/>]
               end
      if string != last_string
        _respond string
        last_string = string
      end
      wait
    end
  end
end

TargetList.main
