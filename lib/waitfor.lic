=begin

Convenience script to wait for either 
    percent mind
    seconds to pass
    mana %
before executing provided script


wait_for seconds 5 go2 town -> wait 5 seconds then call ;go2 town
wait_for mind 50 bigshot -> wait until mind is below 50% then call ;bigshot
wait_for mana 75 waggle -> wait until mana is above 75% then call ;waggle

# Name: WaitFor
# Author: Bramard
# Tags: utility, stormfront
# Categories: Utility, Bounties
# Tags: utility
# Version: 1.2

VersionHistory
v1.2 (2023-02-28)
    - added check_mind function borrowed from bigshot.lic to better check state of mind
=end

$waitForDebug = false

def check_mind
# Shamelessly stolen from Bigshot.lic, thanks. https://github.com/elanthia-online
    lines = Lich::Util.quiet_command_xml("experience",/<output class="mono"\/>/)
    actual_percent = nil
    if lines.any?{ |l| l =~ /Field Exp\:\s*([0-9,]+)\/([0-9,]+)/i}
      in_bucket = $1.delete(",").to_f
      max_bucket = $2.delete(",").to_f
    end
  
    actual_percent = (in_bucket / max_bucket) * 100
    echo "in_bucket: #{in_bucket} max_bucket: #{max_bucket} actual_percent: #{actual_percent}" if $waitForDebug
    if actual_percent.nil?
      @CORRECT_PERCENT_MIND = percentmind()
    else
      @CORRECT_PERCENT_MIND = actual_percent
    end
    return @CORRECT_PERCENT_MIND   
  end

all_args = script.vars
echo all_args

condition = script.vars[1]

case condition
when 'mind'
    str = "Waiting until mind is " + all_args[2] + "% to run #{all_args[3]}"
    Settings[:currentWaitFor] = str
    echo str
    wait_until { check_mind() < all_args[2].to_i } 
    echo "Executing..."
    Settings[:currentWaitFor] = nil    
    start_script(all_args[3], all_args[4,all_args.length-1])
when 'seconds'
    str = "Waiting " + all_args[2] + " seconds to run #{all_args[3]}"
    Settings[:currentWaitFor] = str
    echo str
    sleep all_args[2].to_i
    echo "Executing..."
    Settings[:currentWaitFor] = nil 
    start_script(all_args[3], all_args[4,all_args.length-1])
when 'mana'
    str = "Waiting until mana is above " + all_args[2] + "% to run #{all_args[3]}"
    Settings[:currentWaitFor] = str
    echo str
    wait_until { percentmana() >= all_args[2].to_i } 
    echo "Executing..."
    Settings[:currentWaitFor] = nil 
    start_script(all_args[3], all_args[4,all_args.length-1])
when 'show'
    if Settings[:currentWaitFor] != nil
        echo Settings[:currentWaitFor]
    else
        echo "Not currently waiting for anything..."
    end
else
    echo "I don't understand..."
end