put "analyze puzzlebox"
while line = get
	if line =~ /Side-1 dial\: (.+)$/
		@side_1 = $1
	elsif line =~ /Side-2 dial\: (.+)$/
		@side_2 = $1
	elsif line =~ /Side-3 dial\: (.+)$/
		@side_3 = $1
	elsif line =~ /Side-4 dial\: (.+)$/
		@side_4 = $1
		break
	end
end

dothistimeout "spin puzzlebox", 5, /You place your angular mithril puzzlebox in the palm of your hand and give it a good spin/
sleep 0.5
waitrt?
sleep 1

echo @side_1
echo @side_2
echo @side_3
echo @side_4

@sides_match = Regexp.union(@side_1, @side_2, @side_3, @side_4)
#echo @sides_match

# The angular mithril puzzlebox has a square base with four, equidistant triangular sides that meet at its apex.  Each of the sides has a tiny dial in its center, surrounded by intricately detailed scrollwork and filigree.  The tiny pearl-eyed skull dial is currently retracted and facing you, angled toward the puzzlebox's sharp canine fang dial.  You can TURN the puzzlebox so the sharp canine fang dial faces you, or you can FLIP it toward the pentagonal iron star dial on the puzzlebox's other side.

def side_two_to_one
	if @facing_side == @side_3
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_2} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_1} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_1} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def side_one_to_two
	if @facing_side == @side_4
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_1} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_2} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_2} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def side_three_to_two
	if @facing_side == @side_4
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_3} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_2} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_2} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def side_four_to_one
	if @facing_side == @side_3
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_4} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_1} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_1} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def side_one_to_four
	if @facing_side == @side_2
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_1} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_4} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_4} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def side_four_to_three
	if @facing_side == @side_1
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_4} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_3} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_3} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def side_three_to_four
	if @facing_side == @side_2
		dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_3} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_4} dial./
	end
	dothistimeout "turn puzzlebox", 5, /You turn your angular mithril puzzlebox, its #{@side_4} dial now facing you and angled toward the puzzlebox's #{@sides_match} dial./
end

def get_facing_side
	line = dothistimeout "look puzzlebox", 5, /The (#{@sides_match}) dial is currently (?:extended|retracted) and facing you, angled toward the puzzlebox's (#{@sides_match}) dial./
	if line =~ /The (#{@sides_match}) dial is currently (?:extended|retracted) and facing you, angled toward the puzzlebox's (#{@sides_match}) dial./
		@current_side = $1
		@facing_side = $2
	end
end

echo "face"
get_facing_side

if @current_side == @side_2
	echo "side2"
	side_two_to_one
elsif @current_side == @side_3
	echo "side3"
	side_three_to_two
	get_facing_side
	side_two_to_one
elsif @current_side == @side_4
	echo "side4"
	side_four_to_one
end

echo echo "face2"
get_facing_side
echo @facing_side
if @facing_side == @side_4
	dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_1} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_2} dial\./
end
dothistimeout "pull puzzlebox", 5, /You pull on your puzzlebox's #{@side_1} dial and it makes a soft click\./
echo "face3"
get_facing_side
side_one_to_two
echo "face4"
get_facing_side
if @facing_side == @side_3
	dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_2} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_1} dial\./
end
dothistimeout "pull puzzlebox", 5, /You pull on your puzzlebox's #{@side_2} dial and it makes a soft click\./
echo "face5"
get_facing_side
side_two_to_one
echo "face6"
get_facing_side
side_one_to_four
echo "face7"
get_facing_side
if @facing_side == @side_1
	dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_4} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_3} dial\./
end
dothistimeout "pull puzzlebox", 5, /You pull on your puzzlebox's #{@side_4} dial and it makes a soft click\./
echo "face8"
get_facing_side
side_four_to_three
echo "face9"
get_facing_side
if @facing_side == @side_2
	dothistimeout "flip puzzlebox", 5, /You swivel the #{@side_3} dial on the front side of your angular mithril puzzlebox, angling it toward the puzzlebox's #{@side_4} dial\./
end
dothistimeout "pull puzzlebox", 5, /You pull on your puzzlebox's #{@side_3} dial and it makes a soft click\./
echo "face10"
get_facing_side
side_three_to_four
get_facing_side
side_four_to_one
dothistimeout "push puzzlebox", 5, /Your angular mithril puzzlebox pulses as its dials retract swivel with a multitude of soft clicks\./
sleep 0.5
waitrt?
sleep 0.5
dothistimeout "twist puzzlebox", 5, /The dials on your angular mithril puzzlebox each pivot and receed into the sides of the puzzlebox as its top twists open to reveal a scintillating multihued compartment within\./
