#alastirlib.lic
=begin

Alastirs Library of Goodness!

Variables used:
- UserVars.flee_sanctuary
- UserVars.flee_silence

=end

=begin
--- Lich: auto_group has exited.
--- Lich: uberbarv_d has exited.
--- Lich: spellcaster has exited.
--- Lich: character has exited.
--- Lich: auto_sort has exited.
--- Lich: auto_containers has exited.
--- Lich: keepalive_new has exited.
=end

module AlastirLib
  VERSION = '1.0.0'
  def self.version
    Gem::Version.new(VERSION)
  end

	#This module will execute specific commands.
	module Commands
	  def self.accept_actions
		if GameObj.right_hand.noun == 'booklet'
			multifput 'look my booklet'
			self.eventsack(booklet)
		elsif GameObj.right_hand.noun == 'bloodscrip'
			multifput 'look my bloodscrip','redeem my bloodscrip'
		else
			echo 'I do not currently have actions set for this item.'
		end
	  end
	
	  def self.auto_accept
		if UserVars.autoaccept == true
			if checkleft || checkright
				empty_hands
				fput 'accept'
				self.accept_actions
			else
				fput 'accept'
				self.accept_actions
			end
		else
			echo 'You can auto accept by setting UserVars.autoaccept to true.'
		end
	  end
	  
	  def self.cast(spell)
		Spell[spell].cast if Spell[spell].affordable?
	  end
	
	  def self.dismount
		fput 'dismount'
	  end
	
	  def self.eventsack(noun)
	    fput "put my #{noun} in my #{Vars.eventsack}"
	  end
	
	  def self.join_groupleader
	  	if checkgrouped == false
			if GameObj.pcs.count > 0
				if Char.name == Vars.groupleader
				else
					fput "join #{Vars.groupleader}"
				end
			end
		end
	  end
	  
	  def self.keepsack(noun)
	    fput "put my #{noun} in my #{Vars.keepsack}"
	  end
	
	  def self.kill_script(script_to_kill)
#		echo "#{script_to_kill}"
	    if Script.running?(script_to_kill)
		  Script.kill(script_to_kill)
	    end
	  end

	  def self.cast_magearmor(element)
		if UserVars.magearmor == true
			if Room.current.id == 12805			#[Lyeonia Hall, Clerk's Office - 12805] (u15002006)
				echo 'This is an anti-magic room.'
			else			
				if Char.prof == 'Wizard'
					waitrt?
					waitcastrt?
					if element == lightning
						if !Effects::Spells.active?("Mage Armor - Lightning")
							fput 'incant 520 lightning' if checkmana(20)
						else
							echo 'Lightning is already active!'
						end
					elsif element == water
						if !Effects::Spells.active?("Mage Armor - Water")
							fput 'incant 520 water' if checkmana(20)
						else
							echo 'Water is already active!'
						end
					end
				else
					echo 'You are not a wizard!'
				end
			end
		else
		  echo 'You can auto cast Mage Armor by setting UserVars.magearmor to true.'
		end
	  end
	  
	  def self.set_variable(varname, name)
		var = varname
		name = name
		UserVars.send("#{var}=", name)
#		echo "Vars.weapon set to #{Vars.weapon}"
	  end
	end

	#This module will output messaging.
	module Messaging
	  def self.output(output)
		  if $frontend =~ /stormfront|wrayth/i
		    window_begin = "<pushStream id=\"StringMon\" ifClosedStyle=\"watching\"/>"
			window_end   = "<popStream/>\r\n"
          else
            window_begin = "\034GSe\r\n"
            window_end   = "\034GSf\r\n"
          end
          
		  if $frontend =~ /stormfront|wrayth/i
            puts("#{window_begin}#{output}\r\n#{window_end}")
          end
	  end
	end

	#This module will react to a variety of situations accordingly.
	module Reactions
	
		def self.auto_hold(person)
			if UserVars.autogroup == true
				my_crew = [ 'Alastir', 'Erykk', 'Rylohk', 'Sivalis' ]
				if my_crew.include?(person)
					fput "hold #{person}"
				else
					echo "#{person} is trying to join me but is not in my approved list."
				end
			else
				echo 'You can auto join a predefined set of characters by setting UserVars.autogroup to true.'
			end
		end
	
		def self.auto_join(person)
			if UserVars.autogroup == true
				my_crew = [ 'Alastir', 'Erykk', 'Rylohk', 'Sivalis' ]
				#echo person
				if my_crew.include?(person)
					fput "join #{person}"
				else
					echo "#{person} is trying to lead me but is not in my approved list."
				end
			else
				echo 'You can auto join a predefined set of characters by setting UserVars.autogroup to true.'
			end
		end
			
		def self.clench(creature)
			pause_script ('bigshot')
			self.kill_script('go2')
			loop do
				if GameObj.targets.any?
					walk
				else
					result = dothistimeout "clench #{creature}", 5, /You reach up and grab (.*) by the neck, twisting violently until you hear something snap!|I could not find what you were referring to./
					if result =~ /You reach up and grab (.*) by the neck, twisting violently until you hear something snap!/
						break
					elsif result =~ /I could not find what you were referring to./
						break
					end
				end
			end
			unpause_script ('bigshot')
		end
		
		def self.determination
			if Spell[9716].known? and !Spell[9716].active? and checkstamina(30)
				fput 'sigil of determination'
			end
		end
		
		def self.flee_sanctuary
			if UserVars.flee_sanctuary =~ /true/
				if Script.running?('ebounty') && Script.running?('bigshot')
					walk
				end
			else
				echo 'You can flee in a sanctuary by setting UserVars.flee_sanctuary to true.'
			end
		end
		
		def self.flee_silence
			if UserVars.flee_silence == true
				loop do
					if GameObj.targets.any?
						walk
					else
						break
					end
				end
			else
				echo 'You can flee from enemies while silenced by setting UserVars.flee_silence to true.'
			end
		end
		
		def self.gird
			pause_script('ebounty') if Script.running?('ebounty')
			pause_script('bigshot') if Script.running?('bigshot')
			pause_script('bountyhunter') if Script.running?('bountyhunter')
			pause_script('explorer') if Script.running?('explorer')
			empty_hands
			fput 'gird'
			unpause_script('ebounty') if Script.running?('ebounty')
			unpause_script('bigshot') if Script.running?('bigshot')
			unpause_script('bountyhunter') if Script.running?('bountyhunter')
			unpause_script('explorer') if Script.running?('explorer')
		end
		
		def self.mana_bread
			if UserVars.autoaccept == true			
				if checkleft || checkright
					empty_hands 
					multifput 'accept','gobble my bread','gobble my bread'
					fill_hands
				else
					multifput 'accept','gobble my bread','gobble my bread'
				end
			else
				echo 'You can auto accept mana bread by setting UserVars.autoaccept to true.'
			end
		end
		
		def self.recall
			if Spell[9810].known?		#Symbol of Recall
				fput 'symbol of recall'
			end
		end
		
		def self.respell
			pause_script ('bigshot')
			loop do
				if GameObj.targets.any?
					walk
				else
					self.spellcheck
					break
				end
			end
			unpause_script ('bigshot')
		end
	
		def self.spellcheck
			if Char.prof == 'Bard'
				spells = [ 401, 406, 414, 425, 430, 1003, 1007, 1010, 1019 ]	
			elsif Char.prof == 'Cleric'
				spells = [ 101, 102, 103, 107, 120, 202, 211, 215, 219, 303, 307, 310, 313, 319 ]
			elsif Char.prof == 'Empath'
				spells = [ 101, 102, 103, 107, 120, 202, 211, 215, 219, 1109, 1119, 1130 ]
			elsif Char.prof == 'Wizard'
				spells = [ 401, 406, 414, 425, 430, 503, 507, 508, 509, 513, 520, 905, 911, 913 ]
			end
			
			spells.each{ |i|
				Spell[i].cast if !Spell[i].active? && Spell[i].affordable?
			}
		end
		
		def self.spellup
			fput 'infuse 1'
			if Room.current.id == 26833									#[Journey's End, Study]
				if Char.prof == 'Bard' or 'Cleric' or 'Wizard'
					start_script ('waggle')
				end
			elsif Room.current.id == 29623								#[Estate, Greatroom - 29623]
				if Char.prof == 'Bard' or 'Cleric' or 'Wizard'
					if Char.prof == 'Bard'
						fput 'incant 401'
					elsif Char.prof == 'Cleric'
						fput 'incant 101'
					elsif Char.prof == 'Wizard'
						fput 'incant 401'
					end
					start_script ('waggle')
				end
			elsif Room.current.id == 33355								#[Safe Harbor, Rooftop Sanctuary - 33355] (u730331)
				if Char.prof == 'Bard' or 'Cleric' or 'Wizard'
					start_script ('waggle')
				end
			end
		end

		def self.transcend(rounds)
			if rounds >= 2
				if Spell[9812].known?		#Symbol of Transcendence
					fput 'symbol of transcendence'
				end
			end
		end

		def self.vat
			pause_script ('ecleanse')
			pause_script ('ebounty')
			pause_script ('bigshot')
				self.kill_script('go2')
				sleep 0.5
				Script.run('go2','25250')
				fput 'clean vat'
			unpause_script ('bigshot')
			unpause_script ('ebounty')
			unpause_script ('ecleanse')
		end

	end

	#This module will output which spell has been dispelled or has worn off.
	module Spellwatch
		SPELL_INFO = {
				 101 => { "name" => "Spirit Warding I",		"number" => "101" },
				 102 => { "name" => "Spirit Barrier",		"number" => "102" },
				 103 => { "name" => "Spirit Defense", 		"number" => "103" },
				 104 => { "name" => "Disease Resistance",	"number" => "104" },
				 105 => { "name" => "Poison Resistance",	"number" => "105" },
				 107 => { "name" => "Spirit Warding II",	"number" => "107" },
				 112 => { "name" => "Water Walking",		"number" => "112" },
				 120 => { "name" => "Lesser Shroud",		"number" => "120" },
				 140 => { "name" => "Wall of Force",		"number" => "140" },
				 202 => { "name" => "Spirit Shield",		"number" => "202" },
				 204 => { "name" => "Unpresence",			"number" => "204" },
				 207 => { "name" => "Purify Air",			"number" => "207" },
				 211 => { "name" => "Bravery",				"number" => "211" },
				 215 => { "name" => "Heroism",				"number" => "215" },
				 219 => { "name" => "Spell Shield",			"number" => "219" },
				 240 => { "name" => "Spirit Slayer",		"number" => "240" },
				 303 => { "name" => "Prayer of Protection",	"number" => "303" },
				 307 => { "name" => "Benediction",			"number" => "307" },
				 310 => { "name" => "Warding Sphere",		"number" => "310" },
				 313 => { "name" => "Prayer",				"number" => "313" },
				 314 => { "name" => "Relieve Burden",		"number" => "314" },
				 319 => { "name" => "Soul Ward",			"number" => "319" },
				 401 => { "name" => "Elemental Defense I",	"number" => "401" },
				 406 => { "name" => "Elemental Defense II",	"number" => "406" },
				 412 => { "name" => "Weapon Deflect",		"number" => "412" },
				 414 => { "name" => "Elemental Defense III","number" => "414" },
				 425 => { "name" => "Elemental Targetting",	"number" => "425" },
				 430 => { "name" => "Elemental Barrier",	"number" => "430" },
				 503 => { "name" => "Thurfel's Ward",		"number" => "503" },
				 506 => { "name" => "Celerity",				"number" => "506" },
				 507 => { "name" => "Elemental Deflection", "number" => "507" },
				 508 => { "name" => "Elemental Bias",		"number" => "508" },
				 509 => { "name" => "Strength",				"number" => "509" },
				 513 => { "name" => "Elemental Focus",		"number" => "513" },
				 515 => { "name" => "Rapid Fire",			"number" => "515" },
				 520 => { "name" => "Magic Armor",			"number" => "520" },
				 535 => { "name" => "Haste",				"number" => "535" },
				 540 => { "name" => "Temporal Reversion",	"number" => "540" },
				 601 => { "name" => "Natural Colors",		"number" => "601" },
				 602 => { "name" => "Resist Elements",		"number" => "602" },
				 606 => { "name" => "Phoen's Strength",		"number" => "606" },
				 613 => { "name" => "Self Control",			"number" => "613" },
				 617 => { "name" => "Sneaking",				"number" => "617" },
				 618 => { "name" => "Mobility",				"number" => "618" },
				 625 => { "name" => "Nature's Touch",		"number" => "625" },
				 640 => { "name" => "Wall of Thorns",		"number" => "640" },
				 704 => { "name" => "Phase",				"number" => "704" },
				 712 => { "name" => "Cloak of Shadows",		"number" => "712" },
				 716 => { "name" => "Pestilence",			"number" => "716" },
				 902 => { "name" => "Minor Elemental Edge", "number" => "902" },
				 905 => { "name" => "Prismatic Guard",		"number" => "905" },
				 909 => { "name" => "Tremors",				"number" => "909" },
				 911 => { "name" => "Mass Blur",			"number" => "911" },
				 913 => { "name" => "Melgorehn's Aura",		"number" => "913" },
				 917 => { "name" => "Elemental Fury",		"number" => "917" },
				 919 => { "name" => "Wizard's Shield",		"number" => "919" },
				1003 => { "name" => "Fortitude Song",		"number" => "1003" },
				1007 => { "name" => "Kai's Song",			"number" => "1007" },
				1010 => { "name" => "Song of Valor",		"number" => "1010" }, 
				1019 => { "name" => "Song of Mirrors",		"number" => "1019" },
				1109 => { "name" => "Empathic Focus",		"number" => "1109" },
				1119 => { "name" => "Strength of Will",		"number" => "1119" },
				1125 => { "name" => "Troll's Blood",		"number" => "1125" },
				1130 => { "name" => "Intensity",			"number" => "1130" },
				1204 => { "name" => "Foresight",			"number" => "1204" },
				1601 => { "name" => "Mantle of Faith",		"number" => "1601" },
				1603 => { "name" => "Faith's Clarity",		"number" => "1603" },
				1605 => { "name" => "Arm of the Arkati",	"number" => "1605" },
				1606 => { "name" => "Dauntless",			"number" => "1606" },
				1609 => { "name" => "Divine Shield",		"number" => "1609" },
				1610 => { "name" => "Higher Vision",		"number" => "1610" },
				1611 => { "name" => "Patron's Blessing",	"number" => "1611" },
				1612 => { "name" => "Champion's Might",		"number" => "1612" },
				1613 => { "name" => "Guard the Meek",		"number" => "1613" },
				1617 => { "name" => "Zealot",				"number" => "1617" },
				1619 => { "name" => "Faith Shield",			"number" => "1619" },
				1708 => { "name" => "Mystic Impedance",		"number" => "1708" },
				1712 => { "name" => "Spirit Guard",			"number" => "1712" },
			}
	
	  def self.active(name, number)
		  if $frontend =~ /stormfront|wrayth/i
		    window_begin = "<pushStream id=\"StringMon\" ifClosedStyle=\"watching\"/>"
			window_end   = "<popStream/>\r\n"
          else
            window_begin = "\034GSe\r\n"
            window_end   = "\034GSf\r\n"
          end
          
		  if $frontend =~ /stormfront|wrayth/i
            puts("#{window_begin}(#{number}) #{name} - is active!\r\n#{window_end}")
          end
	  end
	  def self.active_spell_lookup(spell)
	    #echo "spell #{spell}"
		name = SPELL_INFO.fetch(spell)["name"]
		#echo "name #{name}"
		number = SPELL_INFO.fetch(spell)["number"]
		#echo "number #{number}"
		self.active(name, number)
	  end

	  def self.deactive(name, number)
		  if $frontend =~ /stormfront|wrayth/i
		    window_begin = "<pushStream id=\"StringMon\" ifClosedStyle=\"watching\"/>"
			window_end   = "<popStream/>\r\n"
          else
            window_begin = "\034GSe\r\n"
            window_end   = "\034GSf\r\n"
          end
          
		  if $frontend =~ /stormfront|wrayth/i
            puts("#{window_begin}(#{number}) #{name} - is gone!\r\n#{window_end}")
          end
	  end
	  def self.deactive_spell_lookup(spell)
	    #echo "spell #{spell}"
		name = SPELL_INFO.fetch(spell)["name"]
		#echo "name #{name}"
		number = SPELL_INFO.fetch(spell)["number"]
		#echo "number #{number}"
		self.deactive(name, number)
	  end
    
    def self.initialize
      _respond("<closeDialog id='StringMon'/><streamWindow id='StringMon' title='Status Monitor' location='left' resident='true'></streamWindow>")
    end

    self.initialize
  end
end

#A triton warden is revealed from hiding.
#The pale driftwood arrow cracks and splinters, scattering a few strands of lichen about the area.

#A streaked pale driftwood arrow flies out of the shadows toward you!
#  AS: +431 vs DS: +655 with AvD: +29 + d100 roll: +94 = -101
#   A clean miss.
#The pale driftwood arrow cracks and splinters, scattering a few strands of lichen about the area.