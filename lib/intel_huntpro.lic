=begin
|0-100 Hunting Script - Please do not AFK Script in Prime.|

Please adhere to POLICY 18.

Usage: ;huntpro stylenumber areastring

Huntpro Help: http://tinyurl.com/huntprohelp
	
Huntpro Feedback: https://discord.gg/NEX6B5DFCX

YouTube: http://tinyurl.com/gsivjara

Email: Jara@play.net
|---------------------------------------------------------|
=end

#Hide Command Inputs
silence_me


#OOP

module Intel_huntpro_toolkit

	def intel_huntpro_feedback
		
		respond
		respond "Hello #{Char.name}, I'm Intel Huntpro."
		respond
		
	end
	
	def top_menu
		respond "|0-100 Hunting Script - Please do not AFK Script in Prime.|"
		respond
	end
	
	def bottom_menu
		respond
		respond "|---------------------------------------------------------|"
	end
	
end

include Intel_huntpro_toolkit

#########################################
#########################################

#Start of Script

#########################################
#########################################


#New User & Update - DO NOT REMOVE

if script.vars[1].downcase =~ /update_all/

	Script.run('repository', 'download huntpro.lic')
	Script.run('repository', 'download intel_huntpro.lic')
	if Script.exists? "sloot"
		nil
	else
		Script.run('repository', 'download sloot.lic')
		Script.run('repository', 'download sloot.ui')
	end
	Intel_huntpro_toolkit.top_menu
	respond "Hi #{Char.name}, ;huntpro has been updated, please restart the script. Thanks!"
	Intel_huntpro_toolkit.bottom_menu
	Script.kill "huntpro"
	Script.kill "intel_huntpro"
	exit
end



loop {

	if Script.running? "huntpro"
		nil
	else
		exit
	end
	
	line = get
	
		if line =~ /obvious signs of someone hiding/
			#respond "Debug Output - Someone is here Obviously."
			$huntpro_action = 98
		end
		
		if line =~ /there is no need to fight/
			#respond "Debug Output - Sancted."
			$huntpro_action = 98
		end			
		
		if line =~ /no need for spells of war/
			#respond "Debug Output - Sancted."
			$huntpro_action = 98
		end
		
		if line =~ /disruption of the noise in the area causes the spell to fizzle/
			#respond "Debug Output - Song of Noise"
			$huntpro_action = 98
		end
		
		
	
		if line =~ /You will have to stand up first/
			until checkstanding
				fput "stand"
				sleep 0.5
			end
		end
		
		if line =~ /You rub your chin/
			$huntpro_consider_setup = "1"
		end
		
		if line =~ /the RECOVER ITEM command/
			$huntpro_lost_item = Room.current.id
			$huntpro_action = 99
			$huntpro_return_why = "You lost an item in room #{$huntpro_lost_item}. Return there, kneel and use RECOVER ITEM."
		end
		
		
		
		if $huntpro_group_ai == "0"
			nil
		else
			#Things do capture in a group.
			
			if line =~ /\: \"(.*) EMPATH\"/
				$huntpro_group_empath = $1
			end
			
		
			if checkdead
				do_client ";chat to #{$huntpro_captain} Dead"
				Script.kill "huntpro"
				exit
			end
			
			if line =~ /appears less confident/
				$huntpro_group_upkeep211 = "0"
			end
			
			if line =~ /brilliant aura fades away/
				$huntpro_group_upkeep215 = "0"
			end
			
			if line =~ /"(.*) please heal us\.\"/
			
				if $huntpro_group_support == "0"
					nil
				else
					if $huntpro_group_empath == "#{Char.name}"
						#respond "I am the healer and I'm healing you now."
							if Script.exists? "heal"
									nil
							else
								Script.run('repository', 'download heal.lic')													
							end
							
							if Script.exists? "selfhealall"
									nil
							else
								Script.run('repository', 'download selfhealall.lic')													
							end
								Spell[213].cast() if Spell[213].known? && Char.level >= 13 && Spell[213].affordable?
								waitcastrt?
								sleep 1
								#Thanks to Darkcipher for making ;unstun.  This routine is a slightly modified version of it.
								if(!checkstunned && !checkdead && players = GameObj.pcs)
									players.each do |p|
									waitcastrt?
									
									#Heal People
									
									result = dothistimeout "trans " + p.noun + " any", 3, /could not find any|feel some of your|Roundtime/
										if result =~ /could not find any/
											nil
										elsif result =~ /feel some of your|Roundtime/
											$huntpro_current_patient = "0"
											$huntpro_current_patient = "#{p.noun}"
											waitrt?
											sleep 0.1
											fput "trans " + p.noun
											fput "cure"
											waitcastrt?
											waitrt?
											do_client ";heal #{$huntpro_current_patient}"
											sleep 5
											if Script.running? "heal"
												Script.kill "heal"
											end

										end
									
										
									end
									pause 0.5
								end
								pause 1
						
						Script.run('selfhealall')
						fput "stop 213"
						do_client ";chat to #{$huntpro_captain} RESUME"
					end
				end
			end
		end
		
		
		
		if line =~ /"#{$huntpro_group_empath} help\, (.*) diseased\.\"/
			#respond "Debug Output - Detected someone is poisoned."
			if $huntpro_group_support == "0"
				nil
			else
				$huntpro_group_diseased = $1
				if Spell[113].known? && Spell[113].affordable? && Char.level >= 13
					fput "release"
					fput "prep 113"
					fput "cast #{$huntpro_group_diseased}"
					waitcastrt?
					sleep 3
				end
				do_client ";chat to #{$huntpro_captain} RESUME"
			end
			
		end
		
		
		if line =~ /"#{$huntpro_group_empath} help\, (.*) poisoned\.\"/
			#respond "Debug Output - Detected someone is poisoned."
			if $huntpro_group_support == "0"
						nil
			else
				$huntpro_group_poisoned = $1
				if Spell[114].known? && Spell[114].affordable? && Char.level >= 14
					fput "release"
					fput "prep 114"
					fput "cast #{$huntpro_group_poisoned}"
					waitcastrt?
					sleep 3
				end
				do_client ";chat to #{$huntpro_captain} RESUME"
			end
			
		end
		
		
		if line =~ /"(.*) MANA\.\"/
			$huntpro_group_mana_target = $1
			SLICE = (checkmana * 0.25)
			waitcastrt?
			waitrt?
			fput "send #{SLICE.round(0)} #{$huntpro_group_mana_target}"	
			
			
		end
		
		
		
		#Traps for the group leader.  You can delegate new features here.
		if $huntpro_group_ai == "1"
			if line =~ /\: \"Dead\"/
				$huntpro_recent_death = "1"
				$huntpro_action = 99
				$huntpro_return_why = "A member of your group has died."
			elsif line =~ /\: \"RESUME\"/
				Script.unpause('huntpro')
			end
			
			if line =~ /\: \"I\'m injured\"/
				if $huntpro_group_empath == "0"
					nil
				else
					Script.pause('huntpro')
					fput "whisper group #{$huntpro_group_empath} please heal us."
				end
				
			elsif line =~ /\: \"Low Health"/
			
				if $huntpro_group_empath == "0"
					nil
				else
					Script.pause('huntpro')
					fput "whisper group #{$huntpro_group_empath} please heal us."
				end
				
			elsif line =~ /\: \"(.*) is diseased\"/
				$huntpro_group_diseased = $1
				if $huntpro_group_empath == "0"
					nil
				else
					Script.pause('huntpro')
					fput "whisper group #{$huntpro_group_empath} help, #{$huntpro_group_diseased} diseased"
					sleep 0.5
				end
			elsif line =~ /\: \"(.*) is poisoned\"/
				$huntpro_group_poisoned = $1
				if $huntpro_group_empath == "0"
					nil
				else
					Script.pause('huntpro')
					fput "whisper group #{$huntpro_group_empath} help, #{$huntpro_group_poisoned} poisoned"
					sleep 0.5
				end
			elsif line =~ /\: \"(.*) needs MANA\"/
				$huntpro_group_mana_target = $1
				waitrt?
				waitcastrt?
				SLICE = (checkmana * 0.25)
				waitcastrt?
				waitrt?
				fput "send #{SLICE.round(0)} #{$huntpro_group_mana_target}"	
				fput "whisper group #{$huntpro_group_mana_target} MANA"
				sleep 0.5

			
			end			
		end
		
		#Things the group followers will look for.
		if $huntpro_group_ai == "2"
			if line =~ /#{$huntpro_captain}\'s player whispers to the group\, \"End\.\"/
			
				Script.kill "#{$huntpro_script_one}" if Script.running? "#{$huntpro_script_one}"
				Script.kill "#{$huntpro_script_two}" if Script.running? "#{$huntpro_script_two}"
				Script.kill "#{$huntpro_script_three}" if Script.running? "#{$huntpro_script_three}"
				
				Script.kill "isigns" if Script.running? "isigns"
				Script.kill "isigils" if Script.running? "isigils"
				Script.kill "symbolz" if Script.running? "symbolz"
				Script.kill "song-manager" if Script.running? "song-manager"
				Script.kill "reactive" if Script.running? "reactive"
				
				Script.kill "huntpro"
					if Script.exists? "waggle"
						do_client ";waggle"
					else
						Script.run('repository', 'download waggle.lic')
						do_client ";waggle"
					end
				
				exit
			
			end
			
			if line =~ /#{$huntpro_captain}\'s player whispers to the group\, \"We are hunting in a level (.*) Zone\.\"/
				$huntpro_my_area_level = $1
			end
			
			if line =~ /#{$huntpro_captain}\'s player whispers to the group\, \"Prepare for (.*) creatures\.\"/
				$huntpro_my_area_type = $1
			end
			
		end
	
	
		if line =~ /but it has no effect|your attack has no effect/
			$huntpro_action = 99
			$huntpro_return_why = "You aren't wearing correct equipment to fight this creature. You may need enchanted weapons, armor or ammo."
		end
		
		
		#Caedera Trap
		if line =~ /ground shakes violently as a caedera explodes from the ground/
			nil

		#Boil Trap
		elsif line =~ /burst from the ground|explodes from the ground|earth cracks|icy mist rises from the ground/
			#respond "Debug Output - Intel Boil Trap"
			$huntpro_action = 98
		end	
		
		if line =~ /Accept your fate/
				Script.pause('huntpro')
		end
		
		if line =~ /tossed about like a rag/
				Script.unpause('huntpro')
		end
		
		
		if checkright == "caederine"
			fput "stow right"
		end
		
		if checkleft == "caederine"
			fput "stow left"
		end
		
		#Rifted Check
		
		if line =~ /Suddenly you feel sick and queasy\, and your world seems blurry and indistinct/
			Script.pause('huntpro')
			if $huntpro_my_area =~ /rift1/
				Script.run('go2', '2579')
				pause 1
			elsif $huntpro_my_area =~ /rift2/
				Script.run('go2', '12142')
				pause 1
			elsif $huntpro_my_area =~ /rift3/
				Script.run('go2', '12184')
				pause 1
			elsif $huntpro_my_area =~ /rift4/
				Script.run('go2', '12138')
				pause 1
			elsif $huntpro_my_area =~ /rift5/
				Script.run('go2', '12159')
				pause 1
			elsif $huntpro_my_area =~ /northscatter/
				Script.run('go2', '12219')
				pause 1
			elsif $huntpro_my_area =~ /southscatter/
				Script.run('go2', '12245')
				pause 1
			end
			Script.unpause('huntpro')
		end
		
		#AIM Missing Trap
		
		if line =~ /is already missing that|cannot aim that high/
			Script.pause('huntpro')
			$huntpro_aim_fail = $huntpro_aim_fail + 1
			waitrt?
			sleep 0.5			
			if $huntpro_aim_fail == 1
				fput "aim left leg"
			elsif $huntpro_aim_fail == 2
				fput "aim right leg"
			elsif $huntpro_aim_fail == 3
				fput "aim clear"			
			end			
			Script.unpause('huntpro')
		end
		
	sleep 0.01
	

}