=begin

	FLAGS! FLAGS EVERYWHERE!
	
	Who doesn't love an ever growing list of flags?
	
	Not us here at Dreaven Inc!
	
	In ;flag_simulator you can simulate all sorts of flags! Well okay 3 flags for now, but more to come!
	
	Don't want to be stolen from? Set that flag!
	Don't want to worry about death ever again? Set that flag!
	Getting tired of silvers? SET. THAT. FLAG!
	
	Changelog:
	Version 1: Initial release!
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################

	Author: Dreaven
	Version: 1

=end

toggle_upstream

@flag_simulator_text_to_display = Array.new

CharSettings['flag_simulator_setting_nosteal'] = nil unless CharSettings['flag_simulator_setting_nosteal']
CharSettings['flag_simulator_setting_nodeath'] = nil unless CharSettings['flag_simulator_setting_nodeath']
CharSettings['flag_simulator_setting_nosilverneed'] = nil unless CharSettings['flag_simulator_setting_nosilverneed']

def flag_simulator_all_variables_nil
	@flag_simulator_show_help_menu = nil
	@flag_simulator_command = nil
	@flag_simulator_call_nosteal = nil
	@flag_simulator_call_nodeath = nil
	@flag_simulator_call_nosilverneed = nil
end

def flag_simulator_display_message
	_respond
	longest_string = 0
	@flag_simulator_text_to_display.each{ |i| longest_string = (i.length + 12) if (i.length + 12) > longest_string }
	header_and_border = nil
	longest_string.times{ header_and_border += "#" }
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	@flag_simulator_text_to_display.each{ |i| 
		spaces_needed_length = longest_string - (i.length + 7)
		spaces_needed_text = nil
		spaces_needed_length.times { spaces_needed_text += " " }
		_respond "#{monsterbold_start}#     #{i}#{monsterbold_end}#{spaces_needed_text}#{monsterbold_start}##{monsterbold_end}\n"
	}
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	_respond
	@flag_simulator_text_to_display = Array.new
end

def flag_simulator_help_menu
	@flag_simulator_text_to_display.push("flag simulator commands:")
	@flag_simulator_text_to_display.push(";flag help - Help menu")
	@flag_simulator_text_to_display.push(";flag nosteal ON|OFF")
	@flag_simulator_text_to_display.push(";flag nodeath ON|OFF")
	@flag_simulator_text_to_display.push(";flag nosilverneed ON|OFF")
	flag_simulator_display_message
end

def flag_simulator_nosteal_flag
	@flag_simulator_silvers_on_hand = 0
	result = Lich::Util.quiet_command_xml("wealth quiet", /You have .* coins with you.|You have but one coin with you./)
	result.each{ |info|
		info = strip_xml(info)
		if info =~ /You have (.*) coins? with you./
			@flag_simulator_silvers_on_hand = $1
		elsif info =~ /You have but one coin with you./
			@flag_simulator_silvers_on_hand = 1
		end
	}
	if @flag_simulator_command =~ /on/i
		CharSettings['flag_simulator_setting_nosteal'] = true
		@flag_simulator_text_to_display.push("Flag NOSTEAL on!")
		@flag_simulator_text_to_display.push("You are now immune from being stolen from! Your #{@flag_simulator_silvers_on_hand} silvers are now safe!")
		@flag_simulator_text_to_display.push("Take THAT, Rogues!")
	elsif @flag_simulator_command =~ /off/i
		CharSettings['flag_simulator_setting_nosteal'] = nil
		@flag_simulator_text_to_display.push("Flag NOSTEAL off!")
		@flag_simulator_text_to_display.push("You are now willingly choosing to be stolen from!")
		@flag_simulator_text_to_display.push("Why?!")
	else
		if CharSettings['flag_simulator_setting_nosteal']
			@flag_simulator_text_to_display.push("Your NOSTEAL flag is currently ON!")
			@flag_simulator_text_to_display.push("Think of the RP opportunities of catching someone stealing nothing from you!")
		else
			@flag_simulator_text_to_display.push("Your NOSTEAL flag is currently OFF!")
			@flag_simulator_text_to_display.push("You're no carebear! You're metal AF!")
		end
	end
	flag_simulator_display_message
end

def flag_simulator_nodeath_flag
	if @flag_simulator_command =~ /on/i
		CharSettings['flag_simulator_setting_nodeath'] = true
		@flag_simulator_text_to_display.push("Flag NODEATH on!")
		@flag_simulator_text_to_display.push("You can no longer be killed! Ditch that heavy armor and other equipment!")
		@flag_simulator_text_to_display.push("YOU WIN GS!")
	elsif @flag_simulator_command =~ /off/i
		CharSettings['flag_simulator_setting_nodeath'] = nil
		@flag_simulator_text_to_display.push("Flag NODEATH off!")
		@flag_simulator_text_to_display.push("You can now be killed! Don't forget to get spells at your local Dreavening!")
	else
		if CharSettings['flag_simulator_setting_nodeath']
			@flag_simulator_text_to_display.push("Your NODEATH flag is currently ON!")
			@flag_simulator_text_to_display.push("You already won GS!")
		else
			@flag_simulator_text_to_display.push("Your NODEATH flag is currently OFF!")
			@flag_simulator_text_to_display.push("Don't forget your super duper 10 billion silver armor before hunting!")
		end
	end
	flag_simulator_display_message
end

def flag_simulator_nosilverneed_flag
	if @flag_simulator_command =~ /on/i
		CharSettings['flag_simulator_setting_nosilverneed'] = true
		@flag_simulator_text_to_display.push("Flag NOSILVERNEED on!")
		@flag_simulator_text_to_display.push("You no longer need silver! Everything is essentially FREE!")
		@flag_simulator_text_to_display.push("Hail to the king, baby!")
	elsif @flag_simulator_command =~ /off/i
		CharSettings['flag_simulator_setting_nosilverneed'] = nil
		@flag_simulator_text_to_display.push("Flag NOSILVERNEED off!")
		@flag_simulator_text_to_display.push("You now have to pay for your stuff like a commoner.")
		@flag_simulator_text_to_display.push("Be sure to set NOSTEAL flag on!")
	else
		if CharSettings['flag_simulator_setting_nosilverneed']
			@flag_simulator_text_to_display.push("Your NOSILVERNEED flag is currently ON!")
			@flag_simulator_text_to_display.push("You're king! Enjoy it!")
		else
			@flag_simulator_text_to_display.push("Your NOSILVERNEED flag is currently OFF!")
			@flag_simulator_text_to_display.push("Show me the silvers! And go farm some silvers!")
		end
	end
	flag_simulator_display_message
end

watch_for_the_command = proc { |string|
	@flag_simulator_command = string
	if string =~ /;flag help/i
		@flag_simulator_show_help_menu = true
		nil
	elsif string =~ /;flag nosteal/i
		@flag_simulator_call_nosteal = true
		nil
	elsif string =~ /;flag nodeath/i
		@flag_simulator_call_nodeath = true
		nil
	elsif string =~ /;flag nosilverneed/i
		@flag_simulator_call_nosilverneed = true
		nil
	elsif string =~ /;flag/
		@flag_simulator_show_help_menu = true
		nil
	else
		string
	end
}

UpstreamHook.add('flag_simulator', watch_for_the_command)

before_dying { UpstreamHook.remove('flag_simulator') }

flag_simulator_all_variables_nil

flag_simulator_help_menu

loop{
	wait_until{ @flag_simulator_show_help_menu || @flag_simulator_call_nosteal || @flag_simulator_call_nodeath || @flag_simulator_call_nosilverneed }
	if @flag_simulator_show_help_menu
		flag_simulator_help_menu
	elsif @flag_simulator_call_nosteal
		flag_simulator_nosteal_flag
	elsif @flag_simulator_call_nodeath
		flag_simulator_nodeath_flag
	elsif @flag_simulator_call_nosilverneed
		flag_simulator_nosilverneed_flag
	end
	flag_simulator_all_variables_nil
}