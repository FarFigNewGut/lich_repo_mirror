# Version 1.11.0 Taleph.
# Removed the bucket test. Just redeems your seashells.
# This version uses your lootsack variable. You set it before you run this program,
# and you only need to do it once:
#
# ;vars set lootsack=longcoat (for example, to set it to longcoat).
#
# Also, this uses the stow verb a lot. Set it to the same container (might not need to be the same
# but I didn't test it for a different container. You set your stow via
#
# STOW SET LONGCOAT (for example)
#
# I kill staystanding from at the start if you have it running since you wil be spammed when diving otherwise
# (that has nothing to do with DSD!). I also kill "ConcSigilOnly". You don't have that script since it's one
# I wrote for my own purposes and haven't uploaded. Doesn't work underwater so I kill it.
#
# Everything should come out of the found container. If something DOESN'T come out of a container,
# I PAUSE the script. Take it out by hand and let me know what happened. Due to popular request,
# I pause the script on a T5 or Jackpot. I haven't seen a jackpot so I've left code in that, in past years
# was required to open a jackput lid.
#
# NEW ADDITION: There have been a high number of policy 18 violations (running scripts unattended). That's a bad thing for everyone.
#      To help with this, I've put in a timer that will ask you for input every ~7 minutes or so to let the script know you're
#      paying attention. This is to help you-and to pause the script if your attention wanders. If a script check is initiated
#      before the script auto-pauses you will NOT escape penalties for unattended scripting. This does, however, help if you
#      get distracted and forget to pause the game by stopping the continual running.
#
#      You can opt OUT of this by starting EGDig with "off" in the command line: "DSD off".
#
#      Also note, though the script pauses or exits on a T5 or a Jackpot, that does NOT protect you from a script check...
#      and that's not the intent of the pause. The pause is so you can admire your prize! That's all.
#
#      HINT: You might want to highlight the following strings:

#--------------------- Master, it's been a few minutes...are you still wake?" ----------------------
#--------------------- ding ding--------------------------------------------------------------------
#--------------------- which begins to glow --------------------------------------------------------
#--------------------- locking the hinges in place--------------------------------------------------



def OpenIt(item_found)
	loc = -1
	fput "open my #{item_found}"
	test8 = matchtimeout 5, "locking the hinges", "You open the lid", "You lift the lid", "which begins to glow"
	loc = test8 =~ /locking the hinges in place/
	if loc >= 0
		echo "ding ding ding ding ding ding ding!"
		echo "ding ding ding ding ding ding ding!"
		echo "ding ding ding ding ding ding ding!"
		echo "ding ding ding ding ding ding ding!"
		echo "a T5 or better! Script is paused. Unpause by typing ;u"
		pause_script "DSD"
	end

	loc = test8 =~ /which begins to glow/
	if loc >= 0
		echo "ding ding ding ding ding ding ding!"
		echo "ding ding ding ding ding ding ding!"
		echo "ding ding ding ding ding ding ding!"
		echo "ding ding ding ding ding ding ding!"
		echo "a T5 or better! Script is paused. Unpause by typing ;u"
		pause_script "DSD"
	end
	
		
	fput "get coins from my #{item_found}"
	test = matchtimeout 5, "Get what", "You gather"
	waitrt?
	fput "redeem seashell"
	fput "stow left"
	fput "look in my #{item_found}"
	fput "get seash from my #{item_found}"
	test = matchwait "You grab", "Get what", "You remove"
	waitrt?
	fput "redeem seashell"

	fput "empty my #{item_found} in my #{Vars.lootsack}"
	test3 = matchwait "You try"

		if "#{GameObj.right_hand}" == "#{item_found}"
			fput "look in my #{item_found}"
			test4 = matchwait "nothing", "#{item_found}"
			waitrt?
			words4 = test4.split(' ')
			if words4[2] == "nothing"
				loop {
					room = (Room.current.nil? ? '(unknown)' : Room.current.id.to_s)
					if room == "26501"
						fput "put my #{item_found} in barrel"
						break
					else
						fput "dro my #{item_found}"
						test7 = matchtimeout 3, "With a flick", "You drop", "I could not find", "If you REALLY"
						words7 = test7.split(' ')
					
						if words7[2] == "flick"
							break
					
						elsif words7[1] == "drop"
							break
					
						elsif words7[2] == "not"
							break
						end
					end
				}

			else
				waitrt?
				fput "redeem seashell"
				GameObj.right_hand.contents.each{|i| multifput "get ##{i.id}", "stow left"}
				fput "look in my #{item_found}"
				test4 = matchwait "nothing", "#{item_found}"
				waitrt?
				words4 = test4.split(' ')
				if words4[2] == "nothing"
					fput "drop my #{item_found}"
					fput "drop my #{item_found}"
				else
					echo "something's not coming out. Come look!"
					pause_script "DSD"

				end
				
			end
		end


end

def searching
	fput "search"
	test2 = matchwait "You explore"
	words2 = test2.split(' ')
	item_found = "#{GameObj.right_hand}"
	if (words2[6] == "a" or words2[6] == "an")
		if item_found == "box" or item_found == "trunk" or item_found == "chest" or item_found == "coffer" or item_found == "strongbox" or item_found == "crate"
			waitrt?		
			OpenIt(item_found)
		elsif item_found == "coffin" or item_found == "casket" or item_found == "sarcophagus"
			loop	{					#just making sure the lid comes off
				fput "pry my #{item_found}"
				test = matchtimeout 5, "With the lid loosened, you", "You begin"
				waitrt?
				words = test.split(' ')
				if words[2] == "lid"
					break
				end
				}
			echo "ding ding ding ding dingding ding ding ding dingding ding ding ding ding!"
			echo "ding ding ding ding dingding ding ding ding dingding ding ding ding ding!"
			echo "ding ding ding ding dingding ding ding ding dingding ding ding ding ding!"
			echo "likely jackpot...exiting script"
			exit
		else
			waitrt?
			fput "stow all"
		end
	else
			waitrt?
	fput "redeem seashell"

			fput "stow all"
	end
end

if running?("staystanding")
	kill_script "staystanding"
end

if running?("ConcSigilOnly")
	kill_script "ConcSigilOnly"
end

#---------timer setup-------------
doNotTime = " #{script.vars[1]}"   #if this is "off" then we won't set a timer.

if doNotTime =~ /off/
	echo "The activity timer will be set to off"
	timer = 100
else
	echo "every 6 to 8 minutes you'll be asked to type in 'yes'. No quotes are needed. You don't need to say it (as in:  'yes)"
	echo "also, you might want to set a highlight up for: Master, it's been a few minutes...are you still wake"
	echo "if you don't want to run the script with the timer reminder, start it like this: ;egdig off. (no period). That will"
	echo "turn off the timer"
	timer = 0
end
#---------------------------------



toggle_upstream
loop	{

#---------timer tracking and use-------------

	timer =timer + 1
	if timer == 10
		echo "Master, it's been a few minutes...are you still wake? Answer yes if you are"
		echo "Master, it's been a few minutes...are you still wake? Answer yes if you are"
		echo "Master, it's been a few minutes...are you still wake? Answer yes if you are"
		echo "Master, it's been a few minutes...are you still wake? Answer yes if you are"
		likes = upstream_waitfor "yes"
		echo "okay, we're good to go then!"
		timer = 0
	end
#--------------------------------------------

	fput "stow all"
	matchtimeout 3, "You are not holding", "You remove"
	fput "get seashell"
	matchtimeout 3, "Get what",  "You remove"
	fput "redeem seashell"
	test = matchtimeout 3, "You are not", "You redeem"
	fput "get diver's license"
	test = matchwait "You remove", "You already", "Get what", "Hey, that", "You grab"
	words = test.split(' ')
	if words[0] != "You"
		exit
	end
	

	start_script "go2", [26504]
	loop {
	pause 1
	if !(running? "go2")
		break
	end
	}

	fput "exam license"

	fput "go cliff"
	waitfor "The Abandoned Waters"
	fput "stow all"
	fput "swim d"
	waitfor "You swim"
	fput "swim d"
	waitfor "You swim"

	start_script "go2", [26703]
	loop {
	pause 1
	if !(running? "go2")
		break
	end
	}

	searching
	fput "swim se"
	waitfor "Main Deck"

	searching
	fput "swim ne"
	waitfor "Starboard Promenade"

	searching
	fput "swim n"
	waitfor "Starboard Promenade"

	searching
	r = rand(4) + 1
	if r == 1
		fput "swim n"
		waitfor "Starboard Promenade"
	elsif r == 2
		fput "swim n"
		fput "swim nw"
		waitfor "Main Deck"	
	elsif r == 3
		fput "swim n"
		fput "swim nw"
		fput "swim s"	
		waitfor "Mid-ship Passage"
	elsif r == 4
		fput "swim n"
		fput "swim nw"
		fput "swim s"
		fput "swim d"
		waitfor "Mid-Ship Passage"
	
	end

	searching

}




