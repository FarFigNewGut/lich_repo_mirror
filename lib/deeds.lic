=begin

deeds.lic
usage   ;deeds
        ;deeds 3

        near the landing (others added soon)

        prompts to buy rubies if cheaper than silvers
        does not use your own gems

    author: Gwrawr (stayrange)
        name: deeds
        tags: deeds, deed, silvers, coins, rubies, ruby
        version: 1.2
        #TODO Maps (incl bank, temple, gem shop), silver formulas

        #Icemule gems, wands tripled
        #River's rest beryl, bloodjewel, coral, diamond, sapphire, shell tripled
        #Solhaven go to landing
        #Illistim triple?
        #Vaalor wands tripled (no gems)
        #Teras - secret
=end

gem=""
silvers=true
city = ""
cities = { "landing" => [400, 4044, 9269] }
put "location"
lines = []
loop do
    line = get
    lines << line
    case line
    when /Landing|Dragonsclaw|Trollfang|Vornavis|Wehntoph|Solhaven/
        city="landing"
        break
    when lines.length() >= 7
        echo "Don't know where you are, please run from [The Landing]"
        exit
    end
end

if variable[1]
    times = variable[1].to_i
	if times > 10
        echo "Not so fast moneybags (10 at a time)"
        exit
    elsif times < 1
        echo "..."
        exit
    end
else
    times = 1
end

getFavor = proc { |city, costs, i|
    case city
        when /landing/
            fput "go tapestry"
            fput "ring chime with mallet"
            fput "ring chime with mallet"
            fput "kneel"
            fput "drop #{costs[i-1]} silvers" if silvers
            multifput "get my #{gem}", "drop my #{gem}" if !silvers
            fput "ring chime with mallet"
            fput "out"
    end
}

deeds = 0
fput "exp"
loop do
    line = get
    if line =~ /Deeds: (?<deeds>\d*)/
        deeds = $~[:deeds].to_i
        break
    end
end

cost = 0
costs = []
total = 0
i = 0
while i < times
    cost = 111 + ((Stats.level * 111) + ((deeds+i) * (Math.sqrt((deeds+i)*(5.0/10)) * 100))).to_i
    costs << cost
    total = total + cost
    i = i + 1
end

echo
echo "You currently have #{deeds} deeds."
echo
echo "Total Cost For One Deed in Coin: #{cost}"
echo "Total Cost For All Deeds in Coin: #{total}"
echo "Total Breakdown of Costs: #{costs}" 
echo

case city
    when /landing/
        gem = "ruby"
        if Char.race == "Dark Elf"
            price = 5000
        elsif Char.race == "Half-Krolvin"
            price = 7500
        else
            price = 4500
        end
end

if total/times > price

    gemtotal = times*price
    
    echo
    echo "You're better off with a #{gem}."
    echo
    echo "Silvers cost is #{total} while rubies cost is #{gemtotal}"
    echo "Buy rubies for #{times} deeds? ((Yes/Y/y/1) or No/N/n/0)"
    echo

    toggle_upstream
    loop do
        line = upstream_get
        case line
            when /Y|y|1/
                silvers=false
                #Thanks to 10deeds author Oweodry
                start_script "go2", [cities[city][0]]
                wait_while{running? "go2"}
                fput "open my #{Lich.lootsack}"
                if checkleft 
                    lefthand = GameObj.left_hand
                    fput "put ##{lefthand.id} in my #{Lich.lootsack}"
                end
                if checkright
                    righthand = GameObj.right_hand
                    fput "put ##{righthand.id} in my #{Lich.lootsack}"
                end
                fput "withdraw #{gemtotal}"
                start_script "go2", [cities[city][2]]
                wait_while{running? "go2"}
                times.times{
                    multifput "order 14", "buy", "put ruby in my #{Lich.lootsack}"
                }
                start_script "go2", [cities[city][1]]
                wait_while{running? "go2"}
                if Room.current.id == cities[city][1]
                    i = 0
                    while i < times
                        getFavor.call(city, costs, i)
                        i = i + 1
                    end
                end

                
                fput "stow all" if checkleft or checkright
            
		        fput "get ##{righthand.id}" if !righthand.nil?
                fput "get ##{lefthand.id}" if !lefthand.nil?
                echo
                echo "You should have #{times} more deeds now"
                echo
                exit
            when /N|n|0/
                break
        end
    end         
    toggle_upstream
end

echo "Proceed using silvers? ((Yes/Y/y/1) or No/N/n/0)"
echo
toggle_upstream
loop do
    line = upstream_get
    case line
        when /Y|y|1/
            toggle_upstream
            break
        when /N|n|0/
            toggle_upstream
            exit
    end
end

start_script 'go2', [ "bank" ]
wait_while{running?('go2')}
if Room.current.id == cities[city][0]
    fput "withdraw #{total} coin"
end
pause
start_script 'go2', [ "4044" ]
wait_while{running?('go2')}

if Room.current.id == cities[city][1]
    i = 0
    while i < times
        getFavor.call(city, costs, i)
        i = i + 1
    end
end
