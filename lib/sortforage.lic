=begin

    sortforage - Sort output of 'forage sense'

    Usage: ;sortforage [name|noun]

    name - Sorts the list by the first character of the full name
        ex. Acanatha leaf sorts before Brostheras grass
    noun - Sorts the list by the noun of the item
        ex. brostheras Grass sorts before acanatha Leaf

    Defaults to noun if neither is specified.

    author: Jymamon (gs4-jymamon@hotmail.com)
    version: 2018.04.02.02

    history:
    - 2018.04.02.02 Fallback to full name when noun is identical
    - 2018.04.02.01 Initial version
=end

status_tags
no_kill_all
no_pause_all

sort_by = :noun

if ( script.vars.include?("name") )
    sort_by = :name
end

make_sentence = proc{|array|
    sentence = array[0..-2].join(", ") + ", and " + array[-1].to_s if array.size > 1
    sentence ||= array.to_s
}

begin
    players = nil
    capturing = false

    action = proc { |server_string|

        if server_string =~ /Glancing about, you notice the immediate area should support specimens of/i
            herbs = server_string.scan(/<d cmd='forage (.*)'>\1<\/d>/).flatten.sort{
                # Even after reading the ruby docs, I'm not sure why name is an array in this context,
                # but it is.
                |a, b| (sort_by == :noun) ? (a.split.last.downcase == b.split.last.downcase) ? a.downcase <=> b.downcase  : a.split.last.downcase <=> b.split.last.downcase  : a.downcase <=> b.downcase
            }.map{
                |herb| "<d cmd='forage #{herb}'>#{herb}</d>"
            }

            "Glancing about, you notice the immediate area should support specimens of #{make_sentence.call(herbs)}.\n"
        else
            server_string
        end
    }

    DownstreamHook.add('forage-sort', action)
    wait_until { false }

ensure
    DownstreamHook.remove('forage-sort')
end
