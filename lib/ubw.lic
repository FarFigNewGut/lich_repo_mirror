=begin

Undergrowth of Bittermere Woods Script

Uses uids in order to work in any instance.

This script is for completing the various tasks administered by the old witch.
https://gswiki.play.net/Undergrowth_of_Bittermere_Woods

It will automate 1 task and looting at the completion of the task must be done manually.

Prize handling code courtesy of Queatus.

tags: witch hunt, lightweaver ocarina, undergrowth of bittermore woods, witch hut

=end

# Define UID lists for specific items and tasks
torch_uids = [
  8086512, 8086530, 8086532, 8086534, 8086536, 8086538,
  8086514, 8086540, 8086542, 8086544, 8086546, 8086548,
  8086516, 8086518, 8086520, 8086559
]

mushroom_uids = [
  8086531, 8086534, 8086536, 8086539, 8086514,
  8086544, 8086546, 8086549, 8086551,
  8086554, 8086556, 8086517, 8086561, 8086564, 8086566, 8086569,
  8086571, 8086574, 8086576, 8086579, 8086520
]

gourd_uids = [
  8086570, 8086575, 8086577, 8086578, 8086560,
  8086565, 8086567, 8086568, 8086530, 8086535, 8086537, 8086538
]

wisp_uids = [
  8086511, 8086512, 8086513, 8086521, 8086520
]
fiddlehead_fern_uids = [
  8086532, 8086534, 8086536, 8086538, 8086513,
  8086542, 8086544, 8086546, 8086548, 8086518
]

# Initialize a counter for tracking which UID to start in for each task
@task_area_counter = 0

# Method to go to the next UID in the list for a given task
def go_to_next_uid(uid_list)
  current_uid = uid_list[@task_area_counter % uid_list.size]
  Script.run("go2", "u#{current_uid} typeahead=0")
  echo "Moving to task location UID #{current_uid}."

  # Confirm arrival at the specified UID
  until Room.current.uid.first == current_uid
    waitrt?
    pause 1
  end
  echo "Arrived at UID #{current_uid}."
  
  # Increment counter for the next iteration
  @task_area_counter += 1
end

prizes_match = "token|orb|ocarina"

Prize_Handler = proc{
	while line = get
		if line =~ /Nodding in your general direction, an old witch says, "Yourrr expelled enerrrgies are apprrreciated.  Take this as thanks\."  She tosses a (.*) (into|at) your (.*)\.  She also stuffs 30 soul shards in your pocket\./
			#echo line
			#item, location = line.match(/Nodding in your general direction, an old witch says, "Yourrr expelled enerrrgies are apprrreciated\.  Take this as thanks\."  She tosses a (.*) '(into|at)' your (.*)\.  She also stuffs 30 soul shards in your pocket\./)
			item = $1
			location = $3
			echo item
			echo location
			break
		end
	end
	if location =~ /feet/
		if thing = item.match(/#{prizes_match}/)
			fput "get #{thing}"
		else
			breakable_thing = item.split.last
			fput "get #{breakable_thing}"
		end
		if thing != nil
			fput "stow #{thing}"
		elsif breakable_thing != nil
			check = dothistimeout "break my #{breakable_thing}", 5, /As you|You toss/
			fput "get coins" if check =~ /some silver coins/
			fput "stow all"
		end
	elsif item !~ /#{prizes_match}/
		breakable_thing = item.split.last
		check = dothistimeout "break my #{breakable_thing}", 5, /As you|toss/
		fput "get coins" if check =~ /some silver coins/
		fput "stow all"
	else
		fput "stow all"
	end
	kill_script 'ubw' if running?('ubw')
}

#* Decorating the Gourd task
def gourd
  fput "go mousehole" if Room.current.uid.first == 8086509
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1
  
  5.times do

    Script.run("go2","u8086582 typeahead=0")
	waitrt?
	pause 1

    if GameObj.right_hand.noun !~ /(?:brush)/
      fput "get brush from small basket"
    end

    fput "dip my brush into paint on palette"
    fput "dip my brush into paint on palette"
    waitrt?
    pause 1

    if GameObj.left_hand.noun !~ /(?:gourd)/
      fput "get gourd"
    end
    
    fput "paint my gourd"
    waitrt?
    pause 1
    move 'west'
    waitrt?
    pause 1
    move 'north'
    waitrt?
    pause 1
    fput "put my gourd in collection box"
  end

Prize_Handler.call

end

#* Wards of the Old Ones task
def torch(torch_uids)
  fput "go mousehole" if Room.current.uid.first == 8086509
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1
  
  5.times do

	until GameObj.right_hand.noun =~ /(?:candle)/
      Script.run("go2","u8086512 typeahead=0")
	  waitrt?
	  pause 1
	  fput "get candle from white crate"
	  pause 1
	end

    until GameObj.right_hand.noun !~ /(?:candle)/
      go_to_next_uid(torch_uids)
	  waitrt?
	  pause 1
	  fput "light extinguished torch with my candle"
	  waitrt?
	  pause 1
    end
	
  end

Prize_Handler.call

end

#* Tallows Tails task
def candle
  fput "go mousehole" if Room.current.uid.first == 8086509
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1
  
  5.times do
	
    Script.run("go2","u8086581 typeahead=0")
	waitrt?
	pause 1

    until GameObj.right_hand.noun =~ /(?:cube)/
      fput "get wax cube from metal bucket"
      waitrt?
      pause 1
    end

    until GameObj.left_hand.noun =~ /(?:vial)/
      fput "get vial from display rack"
      waitrt?
      pause 1
    end
    
    until GameObj.right_hand.noun !~ /(?:cube)/
	  fput "put my wax cube into double pot"
      waitrt?
      pause 1
	end
	
	until GameObj.left_hand.noun !~ /(?:vial)/
      fput "pour my vial into double pot"
      fput "pour my vial into double pot"
      waitrt?
      pause 1
	end
	
    until GameObj.right_hand.noun =~ /(?:candle)/
	  fput "push double pot"
      waitrt?
      pause 1
	end
    
	until GameObj.right_hand.noun !~ /(?:candle)/
      Script.run("go2","u8086512 typeahead=0")
	  waitrt?
	  pause 1
      fput "put my candle in white crate"
      waitrt?
      pause 1
    end
	
  end

Prize_Handler.call

end

# Gourd Guard Task
def guard(gourd_uids)
  fput "go mousehole" if Room.current.uid.first == 8086509
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1
  
  5.times do

    until GameObj.right_hand.noun =~ /(?:gourd)/
      Script.run("go2", "u8086580 typeahead=0")
	  waitrt?
	  pause 1
      fput "get gourd from collection box"
	  pause 1
	end	

    until GameObj.right_hand.noun !~ /(?:gourd)/
      go_to_next_uid(gourd_uids)
      waitrt?
	  pause 1
      fput "get rotten gourd"
      waitrt?
      pause 1
    end
	
  end

Prize_Handler.call

end

#* Eyes of the Unliving task
def eye(wisp_uids)
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1
  
    until GameObj.right_hand.noun !~ /(?:lantern)/
	  fput "get my wooden spyglass" if GameObj.right_hand.noun =~ /(?:lantern)/
	  go_to_next_uid(wisp_uids)
      waitrt?
      pause 1
      fput "peer my wooden spyglass"
      waitrt?
      pause 1

      # Loop to capture lines to detect wisp presence
      detected_wisp = false
      attempts = 0
      until detected_wisp || attempts >= 5
        line = get
        attempts += 1

        # Check if wisp is detected
        if line =~ /spot a glowing light that appears to be|You already spotted/i
          echo "Wisp detected! Attempting to capture with lantern."
		  waitrt?
          pause 1
          fput "wave my lantern"
          detected_wisp = true
        elsif line =~ /Unfortunately|You recently checked here for/i
          echo "No wisp detected this time. Continuing to walk."
          break
        end
      end

      # If a wisp was captured, return to the witch and continue to next iteration
      if detected_wisp
        Script.run("go2","u8086509 typeahead=0")
		waitrt?
		pause 1
		fput "stow my wooden spyglass" if GameObj.left_hand.noun =~ /(?:spyglass)/
        fput "give witch"
		fput "go mousehole" if GameObj.right_hand.noun =~ /(?:lantern)/
      end
	  
    end

Prize_Handler.call

end

# Harvesting the Fiddleheads Task
def fiddlehead(fiddlehead_fern_uids)
  fput "go mousehole" if Room.current.uid.first == 8086509
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1

  5.times do	
  
    loop do	
	  go_to_next_uid(fiddlehead_fern_uids)
	  waitrt?
      pause 1
      fput "sense"
	  waitrt?
      pause 1

      # Loop to capture lines for frond detection or absence messages
      found_frond = false
      attempts = 0
      until found_frond || attempts >= 5
        line = get
        attempts += 1

        # Check if a mature frond is detected
        if line =~ /You sense the existence of a mature frond on the fiddlehead fern|You already located a fern that was ready for harvesting/i
          waitrt?
          pause 1
          fput "climb fern"
          pause 0.25
          fput "get fern" if checkroom("Top of the Fiddlehead Fern")
          pause 0.25
          fput "climb fern" if checkroom("Top of the Fiddlehead Fern")
          pause 0.25
          found_frond = true
        elsif line =~ /You are not able to locate any fiddlehead ferns|you don't sense that it's ready for harvesting|Try another location/i
          echo "No mature frond detected. Moving to a new area to search."
          waitrt?
          pause 1
          break
        end
      end

      # If a frond was collected, break the loop to move to the next area
      if found_frond
	    Script.run("go2", "u8086514 typeahead=0")
		waitrt?
		pause 1
        fput "give nymph" if Room.current.uid.first == 8086514
        break
      end
	  
    end
  end

Prize_Handler.call  
  
end

#* Mulching the Mushrooms task
def mushroom(mushroom_uids)
  fput "go mousehole" if Room.current.uid.first == 8086509
  fput "stow stone cube" if GameObj.right_hand.noun =~ /(?:cube)/
  pause 1
  
  until GameObj.right_hand.noun =~ /(?:bag)/
    Script.run("go2","u8086583 typeahead=0")
    waitrt?
    pause 1
    fput "get large bag"
  end

  until GameObj.right_hand.noun !~ /(?:bag)/
	go_to_next_uid(mushroom_uids)
	waitrt?
	pause 1
    fput "tap shriveled mushroom"
    line = get
    if line =~ /You tap a shriveled mushroom/
      fput "observe"
      waitrt?
      pause 1
      fput "sprinkle my large bag"
      waitrt?
      pause 1
    else
      echo "No shriveled mushroom detected. Continuing to walk."
    end
  end

Prize_Handler.call
  
end

def get_current_task
  fput "help"
  previous_line = nil

  until (line = get).include?("***This is your current task***")
    previous_line = line.match(/^[\*\s]+(.*?):/) ? line : previous_line
  end

  # Capture the task name from the line preceding the current task marker
  task_name = previous_line.match(/^[\*\s]+(.*?):/)[1].strip if previous_line
  task_name
end

# Check if the player is in the witch's room to begin task setup
if Room.current.uid.first == 8086509
  echo "Room UID matches 8086509, proceeding with task setup."
  fput "stow all" if righthand?
  fput "stow all" if lefthand?
  fput "get my stone cube" 
  pause 0.25
  fput "ask witch about pay"
  fput "ask witch about pay"
  pause 0.25
  fput "stow stone cube"
end

pause 1

task = get_current_task

# Execute the correct task based on the identified current task
case task
when "Eyes of the Unliving"
  fput "get glass lantern" unless GameObj.right_hand.noun =~ /(?:lantern)/
  pause 0.25
  fput "go mousehole" if Room.current.uid.first == 8086509
  pause 0.25  
  fput "get spyglass from basket" unless GameObj.left_hand.noun =~ /(?:spyglass)/
  pause 0.25
  eye(wisp_uids)
when "Wards of the Old Ones"
  torch(torch_uids)
when "Tallows Tails"
  candle
when "Decorating the Gourd"
  gourd
when "Gourd Guard"
  guard(gourd_uids)
when "Harvesting the Fiddleheads"
  fiddlehead(fiddlehead_fern_uids)
when "Mulching the Mushrooms"
  mushroom(mushroom_uids)
else
  echo "Task not recognized. Please check the task name."
end