=begin
	This script will let you automatically resize the area associated to a map within the mapdb.
	Only your local copy will be changed and then once tested can be comitted to the mapdb.
	
	;mapresize mapname.jpg oldX oldY newX newY
	
	Author: Selfane
	Version: 0.8
	
	Notes:
	
	0.8b    - Initial Script Upload.
=end

if (script.vars[0] != nil && script.vars.length() < 6)
	echo "Too few arguments received."
end

if (script.vars[0] != nil && script.vars.length() > 6)
	echo "Too many arguments received."
end

if (script.vars[0] == nil || script.vars.length() != 6)
	echo "USAGE: mapresize mapname.jpg oldX oldY newX newY"
	exit
end

imageToFind = script.vars[1]
oldX = script.vars[2].to_f
oldY = script.vars[3].to_f
newX = script.vars[4].to_f
newY = script.vars[5].to_f

baseXpercent = newX / oldX
baseYpercent = newY / oldY

roomsToFix = Room.list.select {|room|imageToFind == room.image}

if (roomsToFix.length() == 0)
	echo "Map #{imageToFind} could not be found with any rooms."
	exit
end

largestX = roomsToFix.map { |room| [ room.image_coords[0], room.image_coords[2] ].max()}.max()
largestY = roomsToFix.map { |room| [ room.image_coords[1], room.image_coords[3] ].max()}.max()

if (oldX < largestX)
	echo "Your original X (#{largestX}) is smaller than the currently mapped rooms in this area."
	exit
end

if (oldY < largestY)
	echo "Your original Y (#{largestY}) is smaller than the currently mapped rooms in this area."
	exit
end

roomsToFix.each { |room|
	newFirstX = (room.image_coords[0] * baseXpercent).round()
	newFirstY = (room.image_coords[1] * baseYpercent).round()
	newSecondX = (room.image_coords[2] * baseXpercent).round()
	newSecondY = (room.image_coords[3] * baseYpercent).round()

	room.image_coords[0] = newFirstX
	room.image_coords[1] = newFirstY
	room.image_coords[2] = newSecondX
	room.image_coords[3] = newSecondY
}

echo "#{roomsToFix.length()} rooms adjusted successfully."