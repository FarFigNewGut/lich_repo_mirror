=begin

Levels up rogue gambits through the rogue guild.

You need to have a dagger for certain tasks.  If your dagger isn't a "dagger", you'll have to edit the script.

This script will TRADE IN any tasks that involve a partner, therefore
I suggest you have enough Elanthian Guild Vouchers redeemed.

Using this script I mastered Rogue Gambits quite quickly.

author: Daedeus

=end

DaggerNoun = "dagger"

echo "We will TRADE AWAY tasks that involve a partner.  If you do not wish to do this; kill this script now and use another.  Recommend you have plenty of Elanthian guild vouchers redeemed."

echo "Starting in 5.."
sleep 5

class RogueGambits
    class << self
        def gettrick(rank)
            rank = rank.to_i
            return "TUMBLE" if rank <= 1
            return "TUMBLE LEFT" if rank <= 3
            return "TUMBLE MULTIPLE" if rank <= 5
            return "CARTWHEEL" if rank <= 7
            return "CARTWHEEL LEFT" if rank <= 9
            return "CARTWHEEL MULTIPLE" if rank <= 11
            return "FLIP" if rank <= 13
            return "FLIP LEFT" if rank <= 15
            return "FLIP MULTIPLE" if rank <= 17
            return "DAGGER BALANCE" if rank <= 19
            return "DAGGER TOSS" if rank <= 21
            return "DAGGER GAME" if rank <= 23
            return "DISPLAY HANDS" if rank <= 25
            return "DISPLAY EAR" if rank <= 27
            return "DISPLAY POCKET" if rank <= 29
            return "DISPLAY PERSON" if rank <= 31
            return "GET HANDS" if rank <= 33
            return "GET MOUTH" if rank <= 35
            return "GET AIR" if rank <= 37
            return "GET SILENT" if rank <= 39
            return "VANISH HANDS" if rank <= 41
            return "VANISH MOUTH" if rank <= 43
            return "VANISH AIR" if rank <= 45
            return "VANISH SILENT" if rank <= 48
            return "STEALTH SIT" if rank <= 51
            return "STEALTH KNEEL" if rank <= 54
            return "STEALTH STAND" if rank <= 58
            return "STEALTH GET" if rank <= 62
            return "STEALTH PUT" if rank <= 63
        end 

        def gettask()
            myrank = -1
            mytask = "footpad"
            myreps = -1
        
            put "gld"
            ranks = waitfor "Rogue Gambits skill"
            ranks =~ /You have (\d+) ranks? in the Rogue Gambits skill/
            myrank = $1
        
            task = waitfor "The Training Administrator told you", "have not been assigned a current task", "earned enough training points", "have not yet been assigned"
            if task =~ /not been assigned|not yet been assigned/
                mytask = "none"
            elsif task =~ /get a partner/
                mytask = "teachme"
            elsif task =~ /teach a fellow/
                mytask = "teach"
            elsif task =~ /practice your latest trick in front of an audience/
                mytask = "audience"
            elsif task =~ /see how many times you can/
                mytask = "speed"
            elsif task =~ /earned enough training points/
                mytask = "rankup"
            elsif task =~ /visit the master footpads/
                mytask = "footpad"
            end
            if mytask != "none" && mytask != "rankup"
                rep = waitfor "repetition"
                rep =~ /You have (\d+) repetition/
                myreps = $1.to_i
            end
        
            return myrank, mytask, myreps
        end
    
        def dotrick(trick)
            put "stand" if !standing?
            if trick =~ /DAGGER|DISPLAY|VANISH/
                fput "get my #{DaggerNoun}" if checkright !~ /#{DaggerNoun}/ && checkleft !~ /#{DaggerNoun}/
            end

            if trick =~ /GET/ && trick !~ /STEALTH/
                fput "stow #{DaggerNoun}" if checkright =~ /#{DaggerNoun}/ || checkleft =~ /#{DaggerNoun}/
            end

            if trick =~ /DISPLAY|GET/ && trick !~ /STEALTH/
                if trick =~ /DISPLAY PERSON/
                    target = GameObj.npcs.find { |npc| npc.name =~ /Footpad/ }
                    target = GameObj.pcs.sample if target.nil?
                    fput "rgambit DISPLAY #{target.noun} #{DaggerNoun}"
                else
                    fput "rgambit #{trick} #{DaggerNoun}" 
                end
            elsif trick =~ /VANISH/
                fput "rgambit #{trick} #{DaggerNoun} in #{UserVars.lootsack}"
            elsif trick =~ /STEALTH/
                if trick =~ /STAND/
                    fput "kneel" if standing? && !hidden?
                    fput "rgambit stealth kneel" if standing? && hidden?
                    sleep 0.5
                    waitrt?
                else
                    fput "stand" unless standing?
                    sleep 0.5
                end
                

                if trick =~ /STEALTH GET/
                    unless GameObj.loot.any? { |l| l.noun =~ /#{DaggerNoun}/ }
                        fput "get my #{DaggerNoun}"
                        fput "drop my #{DaggerNoun}"
                    end
                elsif trick =~ /STEALTH PUT/
                    unless checkright =~ /#{DaggerNoun}/ || checkleft =~ /#{DaggerNoun}/
                        fput "rgambit stealth get #{DaggerNoun}" if hidden?
                        sleep 0.5
                        waitrt?
                        fput "get #{DaggerNoun}" if !hidden?
                    end
                end

                if !hidden? 
                    fput "hide" if !hidden?
                    waitrt?
                end
                    
                if trick =~ /GET|PUT/
                    fput "rgambit #{trick} #{DaggerNoun}"
                else
                    fput "rgambit #{trick}"
                end
            else
                fput "rgambit #{trick}"
            end
        end
        def go2_administrator()
            return if Room.current.tags.include? 'rogue guild administrator'
            fput "stand" if !standing?
            waitrt?
            fput "out" if Room.current.wayto.include? 'out'
            start_script 'go2', ['rogue guild administrator']
            wait_while { running? 'go2' }
        end
        
        def talk_administrator() 
            go2_administrator()
            fput "ask administrator to train gambit"
        end
        
        def trade_in()
            go2_administrator()
            fput "ask administrator to trade gambit"
        end
        
        def practice_audience(rank)
            trick = gettrick(rank)

            if trick =~ /DAGGER GAME/
                echo "You need to be at a table or bar with enough people to play dagger game."
                echo "Script will wait until these arrangements are met"
                wait_while { GameObj.pcs.count < 4 || Room.current.title[0] !~ /table|tavern|bar/i }
            else
                start_script "go2", ["node"]
                wait_while { running? "go2" }
            end
        
            loop do
                echo "Waiting for at least 4 people.  If there are Rogues or Rogue Masters here, they count as more."
                echo "You can move to a better room if there are not enough people here."
                wait_while { GameObj.pcs.count < 4 }
            
                dotrick(trick)
            
                lines = reget 5
                if lines.any? { |l| l =~ /You have completed/ }
                    echo "Done with audience task."
                    return
                end
                if lines.any? { |l| l =~ /but realize that doing so would compromise|wait (\d+) second/ }
                    echo "Failed to stealth get."
                    waitrt?
                else
                    waitrt?
                    echo "Waiting 29 seconds."
                    sleep 30
                end
            end
        end
    
        def speedrun(rank)
            trick = gettrick(rank)
            loop do
                dotrick(trick)
                sleep 0.5
                lines = reget 5
                if lines.any? { |l| l =~ /You have completed/ }
                    echo "speed task done"
                    return
                end
                waitrt?
            end
        end
    
        def footpad(rank)
            trick = gettrick(rank)
        
            start_script "go2", ["rogue guild trainer"]
            wait_while { running? "go2" }
            
            fput "ask footpad to train gambit"
            echo "Waiting for footpad to speak..."
            waitfor "nods to you and says", "Good way to learn its balance point", "You should be able to toss one", "RGAMBIT"
        
            loop do
                dotrick(trick)
                sleep 2
                lines = reget 5
                if lines.any? { |l| l =~ /You have completed/ }
                    echo "task done"
                    waitrt?
                    fput "out"
                    return
                end
                waitrt?
            end
        end
    
        def rankup()
            start_script "go2", ["rogue guild master"]
            wait_while { running? "go2" }
            fput "ask master to next gambit"
        end

        def run()
            loop do
    
                rank,task,reps = gettask()
                echo "You are Rank #{rank}.  Current Task is [#{task}], Repetitions [#{reps}]"
                sleep 2
                if task == "none"
                    talk_administrator()
                elsif task == "teachme" || task == "teach"
                    trade_in()
                elsif task == "audience" && reps > 0
                    practice_audience(rank)
                elsif task == "speed" && reps > 0
                    speedrun(rank)
                elsif task == "rankup"
                    rankup()
                elsif task == "footpad" && reps > 0
                    footpad(rank)
                end
            
                talk_administrator()
            end
        end
    end
end

RogueGambits.run()