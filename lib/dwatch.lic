=begin
|-2020 Dwatch Script - Please do not AFK Script in Prime.-|

Script will stay active and listen for a Dreavening.

Once Dreaven starts inviting people, this script will take you to the table.  

Script will kill your running scripts to do so. (Not ;dreavening script)

You can initiate log off after a Dreavening via ;dwatch setup or run as ;dwatch logoff

Dwatch Feedback: https://discord.gg/Cdyrjje - (Project improves with user suggestions.)

|----------------------------------------------------------------|
=end

no_kill_all    

log_off_mode = 0
	
	Settings.load
	Settings[Char.name] ||= Hash.new
	setting_logoff		= Settings[Char.name]['setting_logoff']


dwatch = proc {

		if setting_logoff.active?
			log_off_mode = 1
		end

		while line = get
		
			if line =~ /\[Dreavening\]\-GSIV\:Dreaven\: \"I am now inviting people/
					sleep 2
					do_client ";ka"
					Script.kill('ego2') if Script.running? "ego2"
					Script.kill('huntpro') if Script.running? "huntpro"
					Script.kill('intel_huntpro') if Script.running? "intel_huntpro"
					do_client ";dreavening" if !Script.running? "dreavening"
					Script.run('go2', '3619')
					sleep 2
					fput "go Iteno table"
					sleep 1
					fput "go Iteno table"
			end
			
			if line =~ /\[Dreavening\] Dreaven\: \"I am now inviting people/
					sleep 2
					do_client ";ka"
					Script.kill('ego2') if Script.running? "ego2"
					Script.kill('huntpro') if Script.running? "huntpro"
					Script.kill('intel_huntpro') if Script.running? "intel_huntpro"
					do_client ";dreavening" if !Script.running? "dreavening"
					Script.run('go2', '3619')
					sleep 2
					fput "go Iteno table"
					sleep 1
					fput "go Iteno table"
			end
			
			if line =~ /Dreaven exclaims\, \"That\'s everything\!\"/
					if log_off_mode == 1
						fput "exit"
					else
						nil
					end
			end		
				
		end
}
			
if script.vars[1] == nil
	dwatch.call
	
elsif script.vars[1].downcase =~ /setup/
	window = window_action = nil
	window_width  = 300
    window_height = 100
	Gtk.queue {
						
		setting_logoffCheck = Gtk::CheckButton.new("Log off after Dreavening")
		setting_logoffCheck.active = setting_logoff
				
		saveButton = Gtk::Button.new("Click to Save Settings")
	
		main_box = Gtk::VBox.new(false, 0)	
			
		main_box.add(Gtk::Label.new("Options:"))
		main_box.add(Gtk::HSeparator.new)
		main_box.add(Gtk::Label.new(""))
		main_box.add(setting_logoffCheck)
		main_box.add(Gtk::Label.new(""))
		main_box.add(saveButton)
		
		window = Gtk::Window.new
		window.title = 'Dwatch Setup'
		window.border_width = 5	
		window.add(main_box)
		window.resize(window_width, window_height)

		saveButton.signal_connect('clicked') {
					Gtk.queue {
					setting_logoff	= setting_logoffCheck.active?

						window_action = :save
					}
			}	
			
		window.signal_connect('delete_event') {window_action = :cancel}
		window.show_all
	}

	before_dying { Gtk.queue { window.destroy } }
	wait_while { window_action.nil? }
	undo_before_dying
	Gtk.queue { window.destroy }

	Settings[Char.name]['setting_logoff']	= setting_logoff
	Settings.save	

elsif script.vars[1].downcase == "logoff"
	log_off_mode = 1
	respond
	respond "#{Char.name}, I will log off after a Dreavening."
	respond
	dwatch.call
end

