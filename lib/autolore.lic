=begin
Script: 		autolore
Author: 		WilliamW1979 (WilliamW1979@netscape.net)
Game:			Gemstone
Date: 			August 21, 2017
Version: 		1.2
Description: 		loops ;lore for mass longsinging
Commands: 		;autolore
What script does:	It waits for someone to give you something, then it will accept the object, loresing to it, whisper results, then hand it back!

Version History

1.2
Fixed an error with the script trying to return item before roundtime was up locking it up!

1.1
Added detection of lore version to make sure lore is up to date for using this script!

=end

lore_current_version = 2.2


class AUTOLORE

	attr_accessor :name

	def loop
		while true
			@name = nil
			wait_while{!accept_item}
			start_script 'lore', ["all"]
			wait_while{running?("lore")}
			start_script 'lore', ["whisper #{@name}"]
			wait_while{running?("lore")}
			waitrt?
			wait_while{!return_item}
		end
	end

	def return_item
		fput "Give #{@name}"
		line = waitfor "has accepted your offer", "has expired"
		if line =~ /has accepted your offer/ then return true end
		return false
	end

	def accept_item
		line = waitfor "offers you"
		name = line.split(' ')
		@name = name[0]
		if GameObj.right_hand.name == "Empty"
			fput "Accept"
			line = waitfor "You Accept", "offer to you has expired"
			if line =~ /You accept/
				return true
			end
			return false
		end
		return false
	end
end

unless $SAFE == 0
	respond
	respond
	respond "This script requires trust settings, please type:"
	respond
	respond ";trust autolore"
	respond
	respond
	exit
end

if File.file?("#{$script_dir}/lore.lic")
	myfile = File.open("#{$script_dir}/lore.lic")
	while (line = myfile.gets)
		if line =~ /Version:/
			temp = line.gsub("Version:", "")
			temp.delete!("\n")
			temp.chomp(' ')
			version = temp.to_f
			if version < lore_current_version
				respond
				respond
				respond "Lore Version is #{version} and is too old to work, downloading new version (;k autolore to stop in next 10 seconds)"
				respond
				respond
				pause 10
				start_script 'repo', ["download lore.lic"]
				wait_while{running?("repo")}
			end
			break
		elsif line =~ /=end/
			respond
			respond
			respond "Version not found, redownload lore.lic! (;k autolore to stop)"
			respond
			respond
			pause 10
			start_script 'repo', ["download lore.lic"]
			wait_while{running?("repo")}
		end
	end
	myfile.close
else
	respond
	respond
	respond "Lore,lic required, downloading(;k autolore to stop in next 10 seconds)"
	respond
	respond
	pause 10
	start_script 'repo', ["download lore.lic"]
	wait_while{running?("repo")}
end

unless File.exists?("#{$lich_dir}scripts/lore.lic")
	respond
	respond
	respond "This script requires the lore script to run! Downloading automatically unless you type ;k autopick in next 15 seconds!"
	respond
	respond
	pause 15
	do_client ";repo download lore.lic"
end

ap = AUTOLORE.new
ap.loop