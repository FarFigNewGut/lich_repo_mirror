#silence_me

=begin
	Automates planar shift (740).
	
	Usage: 
	
	;shift # (where # is the rune number from your leather book)

author: Ryjex
=end


Script.run('repository', "set-updatable shift.lic")

if script.vars[1] == "help"
	Script.start("repo","info shift.lic");
	exit
end

def num(str)
	return str.delete(',').to_i
end

def silvers
	Vars.function.push(__method__.to_s)
	clear
	DownstreamHook.add('check_silvers', proc { |server_string|
		if server_string =~ /^\s*Name\:|^\s*Gender\:|^\s*Normal \(Bonus\)|^\s*Strength \(STR\)\:|^\s*Constitution \(CON\)\:|^\s*Dexterity \(DEX\)\:|^\s*Agility \(AGI\)\:|^\s*Discipline \(DIS\)\:|^\s*Aura \(AUR\)\:|^\s*Logic \(LOG\)\:|^\s*Intuition \(INT\)\:|^\s*Wisdom \(WIS\)\:|^\s*Influence \(INF\)\:|^\s*$/
			nil
		elsif server_string =~ /^\s*Mana\:\s+\-?[0-9]+\s+Silver\:/
			DownstreamHook.remove('check_silvers')
			nil
		else
			server_string
		end
	})
	number = 0
	search = /^Mana\:\s+\-?[0-9]+\s+Silver\:\s+([\d,]+)/
	result = dothistimeout "info", 6, search
	number = num($1) if result =~ search
	number
end

def checkpremium
	hook_proc = proc { |server_string|
		if server_string =~ /\www\.play\.net|-------------------------------------------------------------/
			DownstreamHook.remove('check_premium')
			nil
		elsif server_string =~ /^\s*------------|  /i
			nil
		else
			server_string
		end
	}
	clear
	DownstreamHook.add('check_premium', hook_proc)
	put "premium start"
	prem = false
	while (line = get)
		if line =~ /PREMIUM INFORMATION/
			prem=true
			break
		elsif line =~ /You are not currently a Premium subscriber/
			prem=false
			break
		end
	end
	prem
end

starting_room = Room.current.id

dest = script.vars[1].to_i
if dest.nil? || dest == 0
	echo "Specify destination rune #, eg. ;shift 1"
	exit
end
if !Spell[740].known?
	echo "You don't seem to know 740, you need to know Planar Shift to do this..."
	exit
end

fput "stow right" if !checkright.nil?
fput "stow left" if !checkleft.nil?

fput "get my leather book"
pause 1
if GameObj.right_hand.name !~ /leather book/
	echo "We seem to be missing our leather book..."
	exit
end

fput "get my crystalline chalk"

# if Skills.sldemonology < 75
	# fput "get crystalline chalk"
# else
	# fput "get chalk"
# end

if checkleft.nil?
	echo "Buying some chalk..."
	#chalkcost = 2000
	chalkcost = 40000 #if Skills.sldemonology < 75
	startsilvers = silvers
	if startsilvers < chalkcost
		Script.run("go2","bank",:quiet => true)
		fput "withdraw #{chalkcost-startsilvers} sil"
	end
	if silvers < chalkcost
		if checkpremium
			echo "Not enough money in local bank, let's go check FWI bank."
			startroom = Room.current.id
			Script.run("go2","3672",:quiet => true)
			if Room.current.id != 3672
				echo "You should fix your go2 settings to be able to go2 to and from FWI."
				exit
			end
			fput "withdraw #{chalkcost-startsilvers} sil"
			Script.run("go2","#{startroom}",:quiet => true)
			if silvers < chalkcost
				echo "My apologies, #{Char.name}, but poor people can't buy chalk to shift!"
				exit
			end
		else
			echo "My apologies, #{Char.name}, but poor people can't buy chalk to shift!"
			exit
		end
	end
	Script.run("go2","alchemist",:quiet => true)
	#search = /(\d+)\. some waxy translucent chalk/
	search = /(\d+)\. some fine crystalline chalk/ #if Skills.sldemonology < 75
	result = dothistimeout "order", 5, search
	order_num = $1.to_i if result =~ search
	if order_num.nil?
		echo "Had trouble buying chalk for some reason... this should never happen."
		exit
	end
	fput "order #{order_num}"
	fput "buy"
end

Script.run("go2","#{starting_room}",:quiet => true)

echo "Waiting on mana..." if mana < 40
wait_while { mana < 40 }

fput "draw summoning circle"
pause 1
waitrt?
fput "draw pattern #{dest}"
pause 1
waitrt?
if !!Vars.inv
	fput "put my chalk in ##{inv.id}" 
	fput "put my leather book in ##{inv.id}" 
else
	fput "stow right" if !checkright.nil?
	fput "stow left" if !checkleft.nil?
end
fput "prep 740"
fput "cast circle"

# let's go through portal

#Script.run("go2","chronomage",:quiet => true)
