### writemail v1.0
# created by Wolenthor
#
### Instructions
# Each line/string in the array will be a block/paragraph.
#
### Features
### v1.0
# - The script will work to determine where it should add breaks so that you do not end up with multiple spaces between your blocks.
# - Auto-conversion of apostrophes from google docs, MWord, etc.
# - Auto-indents paragraphs where needed

$letter_array = [
    "Lorem ipsum dolor sit amet, consectetur ad’ipiscing elit. Morbi ac laoreet purus. Curabitur non mattis enim, sit amet accumsan ante. Nulla facilisi.",
    "Integer at urna viverra, fa’ucibus purus et, commodo purus. P’hasellus at leo velit. Sed blandit, arcu porttitor vestibulum bibendum, est ipsum mollis ex, et rhoncus eros quam eu massa. Donec vel quam metus. Vivamus ac consequat nisl. Nam erat augue, ultricies vitae ligula non, maximus lacinia felis. Pellentesque vitae lorem dapibus, laoreet justo vel, ornare ipsum. Phasellus et ipsum enim.",
    "Prae’sent dui est, efficit’ur et quam et, finibus viverra metus. Fusce et metus ut diam suscipit feugiat. Nam mattis, metus sed pretium lobortis, tellus mi faucibus nisi, eu vulputate enim quam nec arcu. Mauris porta odio a mi bibendum lobortis. Vestibulum sagittis quam non nunc tempor, vel scelerisque urna luctus. Morbi convallis a ligula nec pharetra. Proin euismod, enim porta consectetur fringilla, ligula erat malesuada nunc, at malesuada lorem nulla ac quam. Praesent posuere diam urna. Ut ut convallis ex. In congue dictum dui et porta. Suspendisse rutrum varius leo ut iaculis. Suspendisse laoreet turpis quis vulputate vulputate. Suspendisse potenti.",
    "Aenean laoreet molestie ’dolor.",
    "Curabitur pretium orci in consequat condimentum. Sed cons’equat consectetur mauris, at auctor justo condimentum in. Aliquam ac nunc non orci semper imperdiet. Suspendisse tristique accumsan nisl, sed rutrum orci porttitor eget. Proin vel nulla ut sapien molestie ullamcorper nec sit amet ipsum. Vestibulum commodo eget leo sit amet condimentum. Nullam eget quam vehicula sapien pulvinar commodo accumsan at ante. Integer tincidunt elit justo, eu sagittis magna fermentum sed. Nulla lorem metus, iaculis vel urna vel, cursus efficitur mauris.",
    "Vestibulum eges'tas sem vitae mauris interdum, sit amet venenatis ante cursus. Praesent vel mi et lorem condimentum scelerisque. Integer lobortis placerat massa, et rutrum leo lobortis nec. Donec placerat, odio at finibus condimentum, libero arcu hendrerit risus, id eleifend orci metus et nisi. Nunc nec varius quam. Praesent in tempus est. Pellentesque semper vel mauris et maximus. Curabitur mattis imperdiet ligula non pharetra. Mauris suscipit convallis imperdiet. Fusce elementum eros eleifend massa ultricies, at blandit nibh semper.",
    "Aenean laoreet molestie ’dolor.",
    "Curabitur pretium orci in consequat condimentum. Sed cons’equat consectetur mauris, at auctor justo condimentum in. Aliquam ac nunc non orci semper imperdiet. Suspendisse tristique accumsan nisl, sed rutrum orci porttitor eget. Proin vel nulla ut sapien molestie ullamcorper nec sit amet ipsum. Vestibulum commodo eget leo sit amet condimentum. Nullam eget quam vehicula sapien pulvinar commodo accumsan at ante. Integer tincidunt elit justo, eu sagittis magna fermentum sed. Nulla lorem metus, iaculis vel urna vel, cursus efficitur mauris.",
    "Vestibulum eges'tas sem vitae mauris interdum, sit amet venenatis ante cursus. Praesent vel mi et lorem condimentum scelerisque. Integer lobortis placerat massa, et rutrum leo lobortis nec. Donec placerat, odio at finibus condimentum, libero arcu hendrerit risus, id eleifend orci metus et nisi. Nunc nec varius quam. Praesent in tempus est. Pellentesque semper vel mauris et maximus. Curabitur mattis imperdiet ligula non pharetra. Mauris suscipit convallis imperdiet. Fusce elementum eros eleifend massa ultricies, at blandit nibh semper.",
    "Integer at urna viverra, fa’ucibus purus et, commodo purus. P’hasellus at leo velit. Sed blandit, arcu porttitor vestibulum bibendum, est ipsum mollis ex, et rhoncus eros quam eu massa. Donec vel quam metus. Vivamus ac consequat nisl. Nam erat augue, ultricies vitae ligula non, maximus lacinia felis. Pellentesque vitae lorem dapibus, laoreet justo vel, ornare ipsum. Phasellus et ipsum enim.",
    "Prae’sent dui est, efficit’ur et quam et, finibus viverra metus. Fusce et metus ut diam suscipit feugiat. Nam mattis, metus sed pretium lobortis, tellus mi faucibus nisi, eu vulputate enim quam nec arcu. Mauris porta odio a mi bibendum lobortis. Vestibulum sagittis quam non nunc tempor, vel scelerisque urna luctus. Morbi convallis a ligula nec pharetra. Proin euismod, enim porta consectetur fringilla, ligula erat malesuada nunc, at malesuada lorem nulla ac quam. Praesent posuere diam urna. Ut ut convallis ex. In congue dictum dui et porta. Suspendisse rutrum varius leo ut iaculis. Suspendisse laoreet turpis quis vulputate vulputate. Suspendisse potenti.",
]

def return_block_info(block_max, autobreaks, index, multiplier)
    echo "total block size surpassed: #{block_max} and #{autobreaks} system autobreaks"
    echo "system autobreak will be added between blocks #{index} and #{index + multiplier}, skipping manual break"
end

def set_breaks
    chars = 0
    autobreaks = 0
    block_max = 900
    
    $letter_array.each_with_index {|val, index|
        _respond "#{monsterbold_start}-------------------------------------#{monsterbold_end}\n"
        _respond "#{monsterbold_start}BLOCK #{index+1}#{monsterbold_end}\n"
        echo "adding new block: #{val.size} chars"
        # echo "#{$letter_array[index]}"
        chars += val.size
        echo "new char total: #{chars}"
        # echo "autobreak total: #{autobreaks}"

        if index === 0 && chars < block_max
        else
            # if (index === 0 && chars > block_max)
            if (chars >= block_max and autobreaks === 0)
                
                autobreaks += 1
            elsif (chars >= (block_max * 2) && autobreaks === 1) # 1800
                return_block_info(block_max, autobreaks, index, 2)
                autobreaks += 1
            elsif (chars >= (block_max * 3) && autobreaks === 2) # 2700
                return_block_info(block_max, autobreaks, index, 3)
                autobreaks += 1
            elsif (chars >= (block_max * 4) && autobreaks === 3) # 3600
                return_block_info(block_max, autobreaks, index, 4)
                autobreaks += 1
            elsif (chars >= (block_max * 5) && autobreaks === 4) # 4500
                return_block_info(block_max, autobreaks, index, 5)
                autobreaks += 1
            elsif (chars >= (block_max * 6) && autobreaks === 5) # 6300
                return_block_info(block_max, autobreaks, index, 6)
                autobreaks += 1
            else
                echo "manually breaking after block #{index}" # first block is block 0
                chars += 3 
                $letter_array[index-1] = " " + $letter_array[index-1] + '||'
            end
            # echo "new autobreak total: #{autobreaks}"
        end
    }
    _respond "#{monsterbold_start}--------------Finished---------------#{monsterbold_end}\n"
end

def replace_apostrophes
    for block in $letter_array
        # replace special-character apostrophes from popular editors
        block.gsub!("’", "'")
        # replace double quotes with single quotes if using them for
        # quoting a phrase in the array. The outer quotes of each 
        # block in the letter_array must remain double quotes.
        block.gsub!('"', "'")
    end
end

def start_writing
    ready = false
    letter = GameObj.right_hand
    stylus = GameObj.left_hand
    
    # run functions
    set_breaks
    replace_apostrophes
    
    # echo "Character array: #{$block_character_counts}"

    _respond "#{monsterbold_start}Hello #{Char.name}! Let's put some fancy words on your #{letter}.#{monsterbold_end}\n"
    sleep 0.5

    echo letter.name
    echo stylus.name
    if letter.name === 'Empty' || stylus.name === 'Empty'
        _respond "#{monsterbold_start}Make sure you have something to write on in your right hand and something to write with in your left hand.#{monsterbold_end}\n"
        _respond "#{monsterbold_start}Exiting.#{monsterbold_end}\n"
        exit
    else 
        for block in $letter_array
            _respond "#{monsterbold_start}Writing block: #{monsterbold_end}\n"
            fput "write my #{letter};#{block}"
            sleep 0.5
        end

        _respond "#{monsterbold_start}Finished writing. Displaying letter below. #{monsterbold_end}\n"
        fput "read #{letter}"
    end
end

start_writing
