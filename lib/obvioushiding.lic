=begin
A very basic script for turning the obvious hiding flag on when you enter a hunting ground and back off when you leave. It is designed that the default state is obvious hiding is off and when the script exists you will be left in that state.

Location detection is based off the location in the map DB. By including the word 'debug' the script will echo out your location when ever it changes (script efectively pasues while go2 or wander is running).

Bugs? Feature requests? Find me on Discord: Dalzashel(@stormtov)

  maintainer: Dalz
  author: Dalz
  game: Gemstone
  tags: hiding, utility
  required: Lich > 5.0.1
  version: 0.0.2

  changelog:
    v0.0.2(2023-09-27)
      Bugfix
    v0.0.1(2023-09-27)
      Initial release
=end

prev_location = nil
flag_on = nil

hunting_grounds = Settings["hunting_grounds"] || Set.new

def print_help()
  respond ""
  respond " ;#{Script.current.name} help   - shows this help text"
  respond " ;#{Script.current.name} add    - adds the location of the current room as a room to enable visible hiding in"
  respond " ;#{Script.current.name} remove - removes the location of the current room as a room to enable visible hiding in"
  respond ""
end

def print_hunting_grounds(hunting_grounds)
  respond ""
  hunting_grounds.each { |location| respond " - #{location}" }
  respond ""
end

if Script.current.vars[1] == "add"
  respond " You are about to add the location '#{Room.current.location}' as a room to enable obvious hiding."
  respond " ;u - unpause the script and confirm"
  respond " ;k - kill the script to cancel"
  pause_script
  hunting_grounds.add(Room.current.location)
  Settings["hunting_grounds"] = hunting_grounds
  respond "Location saved."
  exit
elsif Script.current.vars[1] =~ /^remo?v?e?/
  unless hunting_grounds.include?(Room.current.location)
    respond ""
    respond " You are trying to remove '#{Room.current.location}' but currently not saved, doing nothing."
    respond ""
    exit
  end
  respond " You are about to remove the location '#{Room.current.location}' as a room to enable obvious hiding."
  respond " ;u - unpause the script and confirm"
  respond " ;k - kill the script to cancel"
  pause_script
  hunting_grounds.delete(Room.current.location)
  Settings["hunting_grounds"] = hunting_grounds
  respond "Location removed."
  respond ""
  exit
elsif Script.current.vars[1] == "list"
  unless hunting_grounds.length > 0
    respond ""
    respond " You do not have any saved locations, please check help for details on how to add."
    respond ""
    exit
  end
  print_hunting_grounds(hunting_grounds)
  exit
elsif Script.current.vars[1] == "help"
  print_help
  exit
end

debug = Script.current.vars.include?("debug")
echo "Debug mode enabled" if debug
unless hunting_grounds.length > 0
  respond ""
  respond " You do not have any saved hunting grounds, please save some before running the script."
  print_help
  exit
end

before_dying { fput "flag ObviousHiding off" }
respond "Script starting you will auto hide at:"
print_hunting_grounds(hunting_grounds)

loop {
  if hunting_grounds.include?(Room.current.location) and !flag_on
    fput "flag ObviousHiding on"
    flag_on = true
  elsif (!hunting_grounds.include?(Room.current.location) && flag_on) || flag_on.nil? # Default to off
    fput "flag ObviousHiding off"
    flag_on = false
  end
  prev_location = Room.current.location

  wait_while { prev_location == Room.current.location || Script.running?("go2") || Script.running?("wander") }
  echo "Your location has changed to: #{Room.current.location}" if debug
}
