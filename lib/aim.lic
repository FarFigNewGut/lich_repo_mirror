=begin
	Script for auto-targetting body parts when using ranged weapons

	The priority is left eye, right eye, head, neck, abdomen
	If any body part is missing, it moves onto the next.

	Author: Drafix
	Version: 0.3

	Note:
	The script looks at target everytime you fire an arrow/bolt at it.
	I imagine if you lacked typeaheads... it couuuld fail to look at the target...

	Changelog:
		0.1 - fixed incorrect tracking of head wounds
		0.2 - use mutex
		0.3 - maybe fixed the flippy floppy aiming due to worn gear on critter
		
	-Drafix
=end
target_id = nil
dead = false
seen = false
action = proc { |server_string|
	if server_string =~ /^You fire .+ (?:arrow|bolt) at <pushBold\/>an? <a exist="(.+)" noun=(.+)!/
		target_id = $1
		noun = $2
		if noun !~ /elemental|glacei|guardian/
			$_SERVER_.puts "look ##{target_id}"
		else
			target_id = nil
		end
		server_string
	elsif server_string =~ /^You see a fairly typical <pushBold\/><a exist="(.+)" noun=".+".*\./
		if $1 == target_id
			seen = true
			nil
		else
			server_string
		end
	elsif server_string =~ /^<pushBold\/><a exist="(.+)" noun=".+">.+<\/a><popBold\/>(?: appears to be dead\.| is dead)/
		dead = true
		$1 == target_id ? nil : server_string
	elsif server_string =~ /^<pushBold\/><a exist="(.+)" noun=".+">.+<\/a><popBold\/>(?: appears to be in good shape\.| has .+ \(worn\)| has nothing at this time\.| is .+)/
		$1 == target_id ? nil : server_string
	elsif server_string =~ /^<pushBold\/><a exist="(.+)" noun=".+">.+<\/a><popBold\/> has (.+)\./
		target = $1
		wounds = strip_xml($2)
		if target == target_id 
			location = 'l eye'
			if !dead
				leye = wounds.slice!('blinded left eye')
				reye = wounds.slice!('blinded right eye')
				head = wounds.slice!(/severe head trauma and bleeding from .+ ears/)
				neck = wounds.slice!(/snapped bones and serious bleeding from .+ neck/)

				# $_CLIENT_.puts "******" if leye || reye || head || neck
				# $_CLIENT_.puts "leye => #{leye}" if leye
				# $_CLIENT_.puts "reye => #{reye}" if reye
				# $_CLIENT_.puts "head => #{head}" if head
				# $_CLIENT_.puts "neck => #{neck}" if neck
				# $_CLIENT_.puts "******" if leye || reye || head || neck
				# $_CLIENT_.puts wounds
				
				if leye && reye && head && neck
					location = 'abdomen'
				elsif leye && reye && head
					location = 'neck'
				elsif leye && reye
					location = 'head'
				elsif reye
					location = 'l eye'
				elsif leye
					location = 'r eye'
				end
			else
				dead = false
			end
			unless $current_location == location
				$current_location = location
				$_SERVER_.puts("aim #{$current_location}")
			end
			nil
		else
			server_string
		end
	elsif server_string =~ /^<prompt .+>/ && seen
			target_id = nil
			seen = false
			server_string
	else
		server_string
	end
}

before_dying{DownstreamHook.remove("#{script.name}_autoaim")}
DownstreamHook.add("#{script.name}_autoaim", action)

mutex = Mutex.new
resource = ConditionVariable.new

mutex.synchronize {
    resource.wait(mutex)
}