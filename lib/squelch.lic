=begin

	Someone annoying you? SQUELCH THEM!
	
	Add people to your squelch list and you'll never see their speech, verbs, or other shenanigans again!
	
	Note: This also means that if someone else is interacting with the person (talking directly TO them, using a verb on them, etc) that those lines will also be squelched.
	Also game lines when you LOOK in a room and when someone mentions the person's name won't be squelched, but instead the person's name will simply show up as Squelched.
	
	To see the help menu do: ;send squelch help
	
	Start squelching people TODAY!
	
	Run this script in the background to make use of it's squelching powers. Kill the script at any time if you wish to stop squelching people.
	
	Script will still show if a squelched person joins your group.
	
	Changelog:
	Version 1: Initial release!
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################

	Author: Dreaven
	Version: 1

=end

@squelch_text_to_display = Array.new

def squelch_display_message
	_respond
	longest_string = 0
	@squelch_text_to_display.each{ |i| longest_string = (i.length + 12) if (i.length + 12) > longest_string }
	header_and_border = nil
	longest_string.times{ header_and_border += "#" }
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	@squelch_text_to_display.each{ |i| 
		spaces_needed_length = longest_string - (i.length + 7)
		spaces_needed_text = nil
		spaces_needed_length.times { spaces_needed_text += " " }
		_respond "#{monsterbold_start}#     #{i}#{monsterbold_end}#{spaces_needed_text}#{monsterbold_start}##{monsterbold_end}\n"
	}
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	_respond
	@squelch_text_to_display = Array.new
end

def squelch_help_menu
	@squelch_text_to_display.push("squelch commands:")
	@squelch_text_to_display.push("To squelch someone: ;send squelch add name")
	@squelch_text_to_display.push("To remove someone from your squelch list: ;send squelch remove name")
	@squelch_text_to_display.push("To see the list of people you are squelching: ;send squelch list")
	@squelch_text_to_display.push("To see this help menu: ;send squelch help")
	squelch_display_message
end

CharSettings['squelch_list'] = Array.new unless CharSettings['squelch_list']
@squelch_squelch_list = CharSettings['squelch_list']

squelch = proc {
	action = proc { |server_string|
		if server_string =~ /id\=\"\"\/\>Also here\:|^Also here\:/
			people_here = server_string.split(/Also here\: |\, /)
			people_here.each{ |full_info|
				if full_info =~ /noun="([a-zA-Z]+)"/
					name = $1
					10.times{ server_string.sub! "#{name}", "Squelched" } if @squelch_squelch_list.include?(name)
				end
			}
			server_string
		elsif server_string =~ /noun="(disk|coffin)"/
			all_people_scan = server_string.scan(/[a-zA-Z]+/)
			all_people_scan.each{ |name| 10.times{ server_string.sub! "#{name}", "Squelched" } if @squelch_squelch_list.include?(name) }
			server_string
		elsif server_string =~ /noun="([a-zA-Z]+)"/
			if server_string =~ /^\<a exist.* joins your group.|<a exist.* followed\./
				server_string
			else
				show_the_line = true
				all_people_scan = server_string.scan(/noun="([a-zA-Z]+)"/)
				all_people_scan.each{ |name|
					name = name.first
					if @squelch_squelch_list.include?(name)
						show_the_line = nil
						break
					end
				}
				server_string if show_the_line
			end
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}_squelch", action)
}

before_dying{
	DownstreamHook.remove("#{script.name}_squelch")
}

squelch.call

squelch_help_menu

@squelch_text_to_display.push("This script will now run in the background, squelching everyone on your list.")
@squelch_text_to_display.push("If you want to stop squelching people then do ;k squelch.")
squelch_display_message

while line = get
	if line =~ /^squelch add ([a-zA-Z]+)/i
		person = $1.capitalize
		CharSettings['squelch_list'].push(person) unless CharSettings['squelch_list'].include?(person)
		@squelch_squelch_list = CharSettings['squelch_list']
		@squelch_text_to_display.push("#{person} has been added to your squelch list.")
		squelch_display_message
	elsif line =~ /^squelch remove ([a-zA-Z]+)/i
		person = $1.capitalize
		CharSettings['squelch_list'].delete(person)
		@squelch_squelch_list = CharSettings['squelch_list']
		@squelch_text_to_display.push("#{person} has been removed from your squelch list.")
		squelch_display_message
	elsif line =~ /^squelch list/i
		@squelch_text_to_display.push("Everyone on your squelch list:")
		CharSettings['squelch_list'].each{ |person| @squelch_text_to_display.push("#{person}") }
		squelch_display_message
	elsif line =~ /^squelch help/i
		squelch_help_menu
	end
end