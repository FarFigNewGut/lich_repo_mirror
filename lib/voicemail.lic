=begin
	Voicemail Version: 1.2.0 (August 27th, 2024)
	
	   Usage: 
	
	   ;voicemail help                        Brings up this message
	   ;voicemail                             Starts recording recieved messages
	   
	   After started:
	   
	   ;voicemail check                       Checks for new messages
	   ;voicemail delete new <message #>      Deletes a new message
	   ;voicemail delete new all              Deletes all new messages
	   ;voicemail delete <message #>          Deletes a saved message
	   ;voicemail delete all                  Deletes all saved messages
	   
	
	   This is a simple script for quick review of messages recieved via ThoughtNet and LNet while afk. 
	   Enjoy 
	
	   ~Peggyanne 
	 PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
	 
	 Changelog:
               August 27th: Added Saved Message Section and Auto Save Function
=end

def help_display
respond "
	Voicemail Version: 1.2.0 (August 27th, 2024)
	
	   Usage: 
	
	   ;voicemail help                        Brings up this message
	   ;voicemail                             Starts recording recieved messages
	   
	   After started:
	   
	   ;voicemail check                       Checks for new messages
	   ;voicemail delete new <message #>      Deletes a new message
	   ;voicemail delete new all              Deletes all new messages
	   ;voicemail delete <message #>          Deletes a saved message
	   ;voicemail delete all                  Deletes all saved messages
	   
	
	   This is a simple script for quick review of messages recieved via ThoughtNet and LNet while afk. 
	   Enjoy 
	
	   ~Peggyanne 
	 PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
	 
	 Changelog:
	           August 27th: Added Saved Message Section and Auto Save Function
	 "
end

def display_read_messages
	if UserVars.voicemail["read_messages"].empty?
		respond ""
		respond "You Have No Saved Messages"
		respond ""
	else
		respond ""
		respond "You Have The Following Saved Messages:"
		respond ""
		UserVars.voicemail["read_messages"].each do |message|
			puts "#{(UserVars.voicemail["read_messages"].index (message))+1}\. #{message}"
		end
		respond ""
		if !UserVars.voicemail["unread_messages"].empty?
			respond "-----* Doing ;voicemail check Again Within 10 Seconds Will Automatically Save Your New Messages, Otherwise They Will Remain In New Messages Until Deleted. *-----"
		end
		respond ""
	end
end

def display_unread_messages
	if UserVars.voicemail["unread_messages"].empty?
		respond ""
		respond "You Have No Unread Messages"
		respond ""
	else
		respond ""
		respond "You Have The Following New Messages:"
		respond ""
		UserVars.voicemail["unread_messages"].each do |message|
			puts "#{(UserVars.voicemail["unread_messages"].index (message))+1}\. #{message}"
		end
		respond ""
		respond ""
	end
end

def check_messages
	$checking = Time.now
	UserVars.voicemail["unread_messages"].each do |message|
		if (($checking) - (UserVars.voicemail["last_checked"])) <= 10
			UserVars.voicemail["read_messages"].push (message)
			UserVars.voicemail["unread_messages"].delete (message)
		else
			nil
		end
	end
	UserVars.voicemail["messages"].each do |message|
		UserVars.voicemail["unread_messages"].push (message)
	end
	UserVars.voicemail["messages"].clear
	UserVars.voicemail["last_checked"] = Time.now
end

def delete_read_message
	respond ""
	respond "Deleting Message Number #{$message_to_delete}..."
	UserVars.voicemail["read_messages"].delete(UserVars.voicemail["read_messages"][($message_to_delete.to_i - 1)])
	pause 0.3
	respond "Saved Message Number #{$message_to_delete} Deleted!"
	respond ""
	respond ""
end

def delete_all_read_messages
	respond ""
	respond "Deleting All Saved Messages..."
	UserVars.voicemail["read_messages"].clear
	pause 0.3
	respond "All Saved Messages Deleted!"
	respond ""
	respond ""
end

def delete_unread_message
	respond ""
	respond "Deleting New Message Number #{$message_to_delete}..."
	UserVars.voicemail["unread_messages"].delete(UserVars.voicemail["unread_messages"][($message_to_delete.to_i - 1)])
	pause 0.3
	respond "New Message Number #{$message_to_delete} Deleted!"
	respond ""
	respond ""
end

def delete_all_unread_messages
	respond ""
	respond "Deleting All New Messages..."
	UserVars.voicemail["messages"].clear
	pause 0.3
	respond "All Messages Deleted!"
	respond ""
	respond ""
end

if UserVars.voicemail.nil?
	UserVars.voicemail ||= Hash.new
	UserVars.save
end
toggle_upstream
Thread.new{
	loop{
		command = upstream_get
			if command =~/^\<c\>;voicemail check/i
				check_messages
				display_unread_messages
				display_read_messages
			elsif command =~ /^\<c\>;voicemail help/i
				help_display
			elsif command =~ /^\<c\>;voicemail delete new all/i
				delete_all_unread_messages
				check_messages
				display_unread_messages
				display_read_messages
			elsif command =~ /^\<c\>;voicemail delete new (.*)/i
				$message_to_delete = $1
				delete_unread_message
				check_messages
				display_unread_messages
				display_read_messages
			elsif command =~ /^\<c\>;voicemail delete all/i
				delete_all_read_messages
				check_messages
				display_unread_messages
				display_read_messages
			elsif command =~ /^\<c\>;voicemail delete (.*)/i
				$message_to_delete = $1
				delete_read_message
				check_messages
				display_unread_messages
				display_read_messages
			end
	}
}

if variable[1] == "help"
	help_display
	exit
end
if variable[1] == "?"
	help_display
	exit
end
if UserVars.voicemail["messages"].nil?
	UserVars.voicemail["messages"] = Array.new
end
if UserVars.voicemail["unread_messages"].nil?
	UserVars.voicemail["unread_messages"] = Array.new
end
if UserVars.voicemail["read_messages"].nil?
	UserVars.voicemail["read_messages"] = Array.new
end
if UserVars.voicemail["last_checked"].nil?
	UserVars.voicemail["last_checked"] = Time.now
end
while line = get
case line
	when /^\[Focused\] (.*) (.*), "(.*)"/
			$person = $1
			$message = $3
			$time = Time.now
			UserVars.voicemail["messages"].push ("#{$time}\: #{$person} thought, \"#{$message}\"")
			UserVars.voicemail["messages"] = (UserVars.voicemail["messages"].uniq)
	when /^\[Private\]-GSIV:(.*)\: "(.*)"/
			$person = $1
			$message = $2
			if $message.include? ("Task Complete")
				next
			end
			if $message.include? ("Reporting For Duty Captain!")
				next
			end
			$time = Time.now
			UserVars.voicemail["messages"].push ("#{$time}\: #{$person} chat, \"#{$message}\"")
			UserVars.voicemail["messages"] = (UserVars.voicemail["messages"].uniq)
	end
end