=begin
	Voicemail Version: 1.1.2 (September 1, 2025)
	
	   Usage: 
	
	   ;voicemail help                        Brings up this message
	   ;voicemail                             Starts recording recieved messages
	   
	   After started:
	   
	   ;voicemail check                       Checks your saved messages
	   ;voicemail delete <message #>          Deletes a saved message
	   ;voicemail delete all                  Deletes all saved messages
	   
	
	   This is a simple script for quick review of messages recieved via ThoughtNet and LNet while afk. 
	   Enjoy 
	
	   ~Peggyanne 
	 PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
=end

def help_display
respond "
	Voicemail Version: 1.1.2 (September 1, 2025)
	
	   Usage: 
	
	   ;voicemail help                        Brings up this message
	   ;voicemail                             Starts recording recieved messages
	   
	   After started:
	   
	   ;voicemail check                       Checks your saved messages
	   ;voicemail delete <message #>          Deletes a saved message
	   ;voicemail delete all                  Deletes all saved messages
	   
	
	   This is a simple script for quick review of messages recieved via ThoughtNet and LNet while afk. 
	   Enjoy 
	
	   ~Peggyanne 
	 PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
	 "
end

def check_messages
	if UserVars.voicemail["messages"].empty?
		respond ""
		respond "You Have No New Messages"
		respond ""
	else
		respond ""
		respond "You Have The Following New Messages:"
		respond ""
		UserVars.voicemail["messages"].each do |message|
			puts "#{(UserVars.voicemail["messages"].index (message))+1}\. #{message}"
		end
		respond ""
		respond ""
	end
end

def delete_message
	respond ""
	respond "Deleting Message Number #{$message_to_delete}..."
	UserVars.voicemail["messages"].delete(UserVars.voicemail["messages"][($message_to_delete.to_i - 1)])
	pause 0.3
	respond "Message Number #{$message_to_delete} Deleted!"
	respond ""
	respond ""
	check_messages
end

def delete_all_messages
	respond ""
	respond "Deleting All Saved Messages..."
	UserVars.voicemail["messages"].clear
	pause 0.3
	respond "All Messages Deleted!"
	respond ""
	respond ""
	check_messages
end

if UserVars.voicemail.nil?
	UserVars.voicemail ||= Hash.new
	UserVars.save
end
toggle_upstream
Thread.new{
	loop{
		command = upstream_get
			if command =~/^\<c\>;voicemail check/i
				check_messages
			elsif command =~ /^\<c\>;voicemail help/i
				help_display
			elsif command =~ /^\<c\>;voicemail delete all/i
				delete_all_messages
			elsif command =~ /^\<c\>;voicemail delete (.*)/i
				$message_to_delete = $1
				delete_message
			end
	}
}

if variable[1] == "help"
	help_display
	exit
end
if variable[1] == "?"
	help_display
	exit
end

if UserVars.voicemail["messages"].nil?
	UserVars.voicemail["messages"] = Array.new
end
while line = get
case line
	when /^\[Focused\] (.*) (.*), "(.*)"/
			$person = $1
			$message = $3
			$time = Time.now
			UserVars.voicemail["messages"].push ("#{$time}\: #{$person} thought, \"#{$message}\"")
			UserVars.voicemail["messages"] = (UserVars.voicemail["messages"].uniq)
	when /^\[Private\]-GSIV:(.*)\: "Health: (.*) \| Mana: (.*) \| Stamina: (.*) \| Spirit: (.*)"/
			next
	when /^\[Private\]-GSIV:(.*)\: "Weekly (.*): (.*)/
			next
	when /^\[Private\]-GSIV:(.*)\: "Ready For Combat Captain!"/
			next
	when /^\[Private\]-GSIV:(.*)\: "(.*)"/
			$person = $1
			$message = $2
			if $message.include? ("Task Complete")
				next
			end
			if $message.include? ("Reporting For Duty Captain!")
				next
			end
			$time = Time.now
			UserVars.voicemail["messages"].push ("#{$time}\: #{$person} chat, \"#{$message}\"")
			UserVars.voicemail["messages"] = (UserVars.voicemail["messages"].uniq)
	end
end

