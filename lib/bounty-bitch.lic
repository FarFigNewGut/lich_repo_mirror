=begin
See everyone's bounties so the bounty bitch can get them.

author: nishima
tags: bounty
version: 0.1

TODO: filter out all the bounty verbiage to something like "5 kobold skins"

Changelog
  0.1 - initial release
=end

file_path = "#{DATA_DIR}/bounty-bitch.txt"
prefix = "#{checkname}:"

def write_or_replace_line(file_path, prefix, new_line)
  File.write(file_path, "") unless File.exist?(file_path)
  lines = File.readlines(file_path).map(&:chomp) # Read all lines
  updated = false
  updated_lines = lines.map do |line|
    if line.start_with?(prefix)
      updated = true
      new_line
    else
      line
    end
  end
  updated_lines << new_line unless updated
  File.open(file_path, "w") do |file|
    file.puts(updated_lines)
  end
end

#TODO: suppress output
put "bounty"

line = matchtimeout 1, "You have been tasked "
if line
  new_line = "#{prefix} #{line}"    # The new line to write

  else

  respond "No active bounty, clearing.\n"
  new_line = "#{prefix}"
end

#update file
write_or_replace_line(file_path, prefix, new_line)


#display all
  bounty_list =  File.read(file_path)
  
  #bold names
  bounty_list = bounty_list.gsub(/^/, "\n<pushBold/>")
  bounty_list = bounty_list.gsub(":", ":<popBold/>")

  #bold skins
  bounty_list = bounty_list.gsub("tasked to retrieve ", "tasked to retrieve <pushBold/>")
  bounty_list = bounty_list.gsub(" of at least", "<popBold/> of at least")

  #bold gems
  bounty_list = bounty_list.gsub("customers requesting ", "customers requesting <pushBold/>")
  bounty_list = bounty_list.gsub(".  You have been tasked", "<popBold/>.  You have been tasked")
  bounty_list = bounty_list.gsub(" of them.", " of them<popBold/>.")


  puts "~"
  puts "<output class=\"mono\"/>" + bounty_list + "<output class=\"\"/>"
  puts "~"

