# Vim ruby syntax highlighting, plz
=begin
             Gangnam Style
https://www.youtube.com/watch?v=9bZkp7q19f0

This script rather blindly abuses popping spells like Unlock (407) -- yet it can do more!

'Popping' is defined as magically opening boxes, gates, and other similar things.  i

   If you want details for boxes, see: https://gswiki.play.net/Popping_boxes

One choice is to blindly pop a box with Unlock (407) including Lock Pick Enhancement (403)

  USAGE: ;kpop <noun>
    
    <noun> should be any box or item you are holding you wish to Unlock
    
    (If you are holding a standard box noun, the script doesn't need to be told.)

  Lore is automatically used starting on the third cast.

     if <noun> is 'gy' or 'graveyard' it will instead run to the WL Graveyard and pop the gate, using 304, 407, 1207 or 1604.
        You will be returned to the room you called ;kpop from

     if <noun> is 'imt' or 'rolaren' it will run to the IMT Rolaren gate and pop it, using 407 or 1207.
        You will be returned to the room you called ;kpop from

hey, sexy lady.


Try ;kpop help

    author: Kaldonis
    name: kpop
    tags: lock picking, utility, gates 
    version: 1.6
=end

=begin
Revision History
   1.0  First public release
   1.1: Added GY gate popping
   1.2: Return to initial room after GY pop
   1.3: Use lore starting on the 3rd attempt
   1.4: Adds 309, 1604, and 1207 to graveyard feature
   1.5: Removes 309 and uses 304 now, with recent updates
   1.6: Adds Icemule Trace rolaren gate popping   
=end

#If_0 goto help

# TODO 3239 in IMT for another gate pop

#help:
#echo
show_help = proc {
	output = "\n"
	output.concat "* Welcome to Kaldonis's Popping Script.  There is no tact, but it works!\n\n"
	output.concat "*  \n"
	output.concat "*  Enjoy fun games with Unlock (407) and related spells!\n"
	output.concat "*  \n"
	output.concat "*  Usage: #{$lich_char}#{script.name} [<noun>] [gy] [imt]\n"
	output.concat "*  \n"
	output.concat "*   options:\n"
	output.concat "*  \n"
	output.concat "*     noun:  Box noun you are holding, e.g. 'chest', 'coffer', 'box', 'strongbox', 'trunk'\n"
	output.concat "*       (Noun is determined automatically, but can be provided.)\n"
	output.concat "*       403 Lore will be used starting on the third cast\n"
	output.concat "*  \n"
	output.concat "*     gy:    Run to WL Graveyard, pops the gate, and returns (using 304, 407, 1207, or 1604)\n" 
        output.concat "*  \n"
        output.concat "*     imt:   Run to IMT Rolaren Gate, pops the gate, and returns (using 407 or 1207)\n"

	output.concat "*  \n"
	output.concat "*  \n"
	respond output
}

if script.vars.empty?
  box = righthand?('coffer','trunk','chest','strongbox','box')
  unless box then box = lefthand?('coffer','trunk','chest','strongbox','box') end
#else
#  script.vars.shift
#  box = script.vars.shift
#  #fput "get #{box}"
#  #TODO: debug this part
elsif script.vars[0].strip =~ /^help$/i
	show_help.call
	exit
elsif script.vars[1] =~ /gy|graveyard|gate/i 
#[help]-GSIV:Brutish: "you would check profession=warrior, guild skill batter >=1, then subroutine match= "with a shocking lack of resistance" waitrt?  Bash gate"
  if !Spell[407].known? && !Spell[304].known? && !Spell[1604].known? && !Spell[1207].known?
    echo "Learn some spells to use this script."
    exit
  end
  if Spell[407].known? 
    SpellNum=407
  end
  if Spell[304].known? 
    SpellNum=304
  end
  if Spell[1207].known? 
    SpellNum=1207
  end
  if Spell[1604].known? 
    SpellNum=1604
  end
  start_spot = Room.current.id
  start_script 'go2', ["4140"]
  wait_while { running?('go2') }

# swiped from go2
#spell_list = [407, 1604, 309, 1207]; until dothistimeout('go gate', 5, /^The bronze gate appears to be closed\\.$|^Obvious (?:paths|exits)\\: northeast, northwest$/) =~ /^Obvious/; if spell_num = spell_list.find { |num| Spell[num].known? }; spell = Spell[spell_num]; loop { unless spell.affordable?; echo 'waiting for mana...'; wait_until { spell.affordable? }; end; break unless spell.cast('gate') =~ /^\[Spell Hindrance/ }; elsif (Char.prof == 'Warrior') and (Stats.level >= 15); empty_hands; fput 'batter gate'; sleep 0.5; waitrt?; fill_hands; else; echo 'waiting for gate to open...'; nil until get =~ /^(?:With a shocking lack of resistance, t|T)he (?:huge )?(?:bronze )?gate .* open|^The ancient hinges of the gate creak loudly as they give way|^Summoning the power .*? gate opens|the gate slowly opens wide enough to allow passage|The bronze gate pops open/; end; end
#fput "go gate"
  wait_until {Spell["#{SpellNum}"].affordable?}; waitcastrt?; multifput "prep #{SpellNum}","cast at gate"
  start_script("go2", [ start_spot ] )
  wait_while { running?("go2")}
  exit

#here for IMT
elsif script.vars[1] =~ /imt|rolaren|rolaeren/i 
#[help]-GSIV:Brutish: "you would check profession=warrior, guild skill batter >=1, then subroutine match= "with a shocking lack of resistance" waitrt?  Bash gate"
  if !Spell[407].known? && !Spell[1207].known?
    echo "Learn some spells to use this script."
    exit
  end 
  if Spell[407].known? 
    SpellNum=407
  end 
  if Spell[1207].known? 
    SpellNum=1207
  end 
  start_spot = Room.current.id
  start_script 'go2', ["3239"]
  wait_while { running?('go2') }
  loop { 
    wait_until {Spell["#{SpellNum}"].affordable?}; waitcastrt?; multifput "prep #{SpellNum}","cast at gate"
    line = get until line =~ /already open|swings open|flies open|but nothing else happens/
      result = line
      if result =~ /but nothing else happens/
        #har har skipz
      elsif result =~ /already open|swings open|flies open/
        start_script("go2", [ start_spot ] )
        wait_while { running?("go2")}
        exit
      end
  }


end

if !Spell[407].known?
  echo "Learn 407 to use this script better or to open the WL Graveyard gate with 304, 1207 or 1604 use ;kpop gy."
  exit
end

if ["box","trunk","chest","coffer","strongbox"].include? script.vars[1]
  box = script.vars[1]
end

counter=0
popfromthetop:
if (Spell[403].affordable? && counter>2)
	if (!Spell[403].active?) 
	  fput "incant 403"
	end
end
if (Spell[407].affordable?)
	waitcastrt?
	match "snooze", "vibrates slightly but nothing else happens"
	match "finish", "You hear a soft click from the"
	multifput "prep 407","cast at my #{box}"
	matchwait
	sleep 3.0
end
snooze:
sleep 3.0
counter+=1
goto "popfromthetop"
finish:
exit
