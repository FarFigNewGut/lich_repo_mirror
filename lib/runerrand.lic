=begin

  Waits for an experience pulse, then runs the script specified.

  Usage:

  ;runerrand sloot sell
  ;runerrand poolparty

  Author: Nesmeor
  Credits: Heavily adapted from Gnomad's errand script
  Name: runerrand
  Tags: utility
  Version: 1.0

  1.0: Initial release.

=end

legacy_behavior = false
script_command = ""



for var in script.vars[2..-1]
	case var
	when /^--fast_quit/
		legacy_behavior = true
	else
		script_command.concat "#{var} "
	end
end

script = script.vars[1]

script_command.rstrip!

=begin
if script_command =~ /help/ || script_command == ""
	help_msg = "\n"
	help_msg.concat "  #{$lich_char}#{script.name} is a simple script that helps you maximize your experience pulses.\n\n"
	help_msg.concat "  It is made to be run on a (super)node. #{$lich_char}#{script.name} waits until it senses an experience pulse,\n"
	help_msg.concat "  then uses #{$lich_char}go2 to run there. You can then do whatever you need to do in a 2(ish)-minute\n"
	help_msg.concat "  window before the next experience pulse.\n\n"
	# help_msg.concat "Or, if you're like me, you can zone out and take your next pulse at the bank anyway, negating the whole point of this script.\n"
    help_msg.concat "  #{$lich_char}#{script.name} does not exit until #{$lich_char}go2 has finished, making it easier to use as part of\n"
    help_msg.concat "  a script that runs a suite of tasks.\n\n"
    help_msg.concat "   Usage:\n\n"
    help_msg.concat "  #{$lich_char}#{script.name} <room>                You can use any commands #{$lich_char}go2 supports.\n\n"
    help_msg.concat "  #{$lich_char}#{script.name} <room> --fast_quit    #{$lich_char}#{script.name} quits when go2 starts (legacy behavior)\n"
    help_msg.concat "  #{$lich_char}#{script.name} help                  This message.\n\n"
	respond help_msg
	exit
end
=end

exper = XMLData.next_level_text

if $frontend == 'stormfront'
  puts '<preset id="whisper">Waiting for pulse.</preset>'
else
  echo 'Waiting for pulse.'
end 

wait_while { XMLData.next_level_text == exper }

if legacy_behavior
	Script.start(script, script_command)
else
	Script.run(script, script_command)
end
