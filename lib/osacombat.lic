$osacombat_auto_stow = nil
$osacombat_my_mstrike_focus = nil        #These are variables for Mstrike.  Not needed in GUI as they are autoset in mstrike def below.  Can remove or try to autoset this in osacrew.vars so settings are saved.  But this will check settings on open each time.
$osacombat_my_mstrike_open = nil
$osacombat_uac_current_attack = 0
$osacombat_retaliate = 0



####### Miscelleanous Combat Actions

def looter ()
    echo "loot" if $osacrew_debug
    if checkroom("Duskruin Arena, Dueling Sands").nil?
      dead_npcs = GameObj.npcs.find_all { |i| i.status == 'dead' && i.type !~ /escort/i }
        if dead_npcs.each { |i| 
              start_script "eloot"
			  wait_while { running?("eloot") }
              stance_defensive
			  break	
          }
		end
	end
end

def health_where_am_i
	if checkroom.include?	("Bow")
		move "west"
		health_where_am_i
	elsif checkroom.include?	("Forward Deck")
		move "west"
		health_where_am_i
	elsif checkroom.include?	("Crow's Nest")
		move "down"
		health_where_am_i
	elsif checkroom.include?	("Enemy Ship, Quarters")
		move "out"
		pause 0.5
		move "east"
		pause 0.5
		move "go gangplank"
	elsif checkroom.include?	("Enemy Ship, Helm")
		move "east"
		pause 0.5
		move "go gangplank"
	elsif checkroom.include?	("Enemy Ship, Main Deck")
		move "go gangplank"
	elsif checkroom.include?	("Enemy Ship, Mid Deck")
		move "west"
		pause 0.5
		move "go gangplank"
	elsif checkroom.include?	("Enemy Ship, Cargo Hold")
		move "up"
		pause 0.5
		move "go gangplank"
	elsif checkroom.include?("Main Deck")
		return
	elsif checkroom.include?("Cargo Hold")
		move "up"
	elsif checkroom.include?("Helm")
		move "east"
	elsif checkroom.include?("Captain's Quarters")
		move "out"
		pause 0.5
		move "east"
	elsif checkroom.include?("Mess Hall")
		move "west"
		pause 0.5
		move "up"
	elsif checkroom.include?("Crew Quarters")
		move "east"
		pause 0.5
		move "up"
	elsif checkroom.include?("Mid Deck")
		move "west"
	elsif checkroom.include?("Social Room")
		move "west"
		pause 0.5
		move "west"
		pause 0.5
		move "up"
	end
end

def cast_at_bad_thing
	if (Spell[612].known? and Spell[612].affordable?) && (@badtype == "cloud") 
		waitrt?
		waitcastrt?
		Spell[612].cast
		return
	end
	if (Spell[417].known? and Spell[417].affordable?) && ((@badtype == "cloud") or (@badtype == "swarm") or (@badtype == "vine") or (@badtype == "tempest") or (@badtype == "web") or (@badtype == "void"))
		waitrt?
		waitcastrt?
		Spell[417].cast "#{@badtype}"
		return
	end
	if (Spell[505].known? and Spell[505].affordable?) && (@badtype == "cloud")
		waitrt?
		waitcastrt?
		Spell[505].cast "#{@badtype}"
		return
	end
	if (Spell[119].known? and Spell[119].affordable?) && ((@badtype == "cloud") or (@badtype == "swarm") or (@badtype == "vine") or (@badtype == "tempest") or (@badtype == "web") or (@badtype == "void"))
		waitrt?
		waitcastrt?
		Spell[119].cast "#{@badtype}"
		return
	end
	if (Spell[1218].known? and Spell[1218].affordable?) && (@badtype =="cloud")
        waitrt?
        waitcastrt?
        Spell[1218].cast "#{badtype}"
        return
    end
end

def creature_type
	if GameObj.npcs.count { |npc| npc.type =~ /undead/ } >= 1
		@creature_type = "undead"
	else
		@creature_type = "living"
	end
	if @creature_type == "living"
		@spell_type = "#{UserVars.osacrew["spelltype"]}"
		@spell_open = "#{UserVars.osacrew["spellopen"]}"
		@attack_type = "#{UserVars.osacrew["attacktype"]}"
		@osaattackopen = UserVars.osacrew["attackopen"].to_i
		@osaattackopen2 = UserVars.osacrew["attackopen2"].to_i
		@osaaoe = UserVars.osacrew["aoe"].to_i
		@osaspecial = UserVars.osacrew["specialattack"].to_i
		if UserVars.osacrew["spellevoke"] == true && UserVars.osacrew["spellchan"] == false
			@cast_type = "evoke"
		elsif UserVars.osacrew["spellchan"] == true && UserVars.osacrew["spellevoke"] == false
			@cast_type = "channel"
		elsif UserVars.osacrew["spellchan"] == true && UserVars.osacrew["spellevoke"] == true
			@cast_type = "evoke channel"
		else
			@cast_type = ""
		end
	elsif @creature_type == "undead"
		@spell_type = "#{UserVars.osacrew["undeadspelltype"]}"
		@spell_open = "#{UserVars.osacrew["undeadspellopen"]}"
		@attack_type = "#{UserVars.osacrew["undeadattacktype"]}"
		@osaattackopen = UserVars.osacrew["undeadattackopen"].to_i
		@osaattackopen2 = UserVars.osacrew["undeadattackopen2"].to_i
		@osaaoe = UserVars.osacrew["undeadaoe"].to_i
		@osaspecial = UserVars.osacrew["undeadspecialattack"].to_i
		if UserVars.osacrew["undeadspellevoke"] == true && UserVars.osacrew["undeadspellchan"] == false
			@cast_type = "evoke"
		elsif UserVars.osacrew["undeadspellchan"] == true && UserVars.osacrew["undeadspellevoke"] == false
			@cast_type = "channel"
		elsif UserVars.osacrew["undeadspellchan"] == true && UserVars.osacrew["undeadspellevoke"] == true
			@cast_type = "evoke channel"
		else
			@cast_type = ""
		end
	end
end

def prep_reset
	if checkprep == "None"
		return
	else
		fput "release"
	end
	
end

def stance_offensive
	wait_rt
	while checkstance != "offensive"
	fput "stance offensive"
	pause 0.5
	end
end

def stance_defensive
	wait_rt
	while checkstance != "defensive"
	fput "stance defensive"
	pause 0.5
	end
end
	
def stance_guarded
	while checkstance != "guarded"
	fput "stance guarded"
	pause 0.5
	end
end
	
def stand_check
	if !checkstanding
		wait_rt
		fput "stand"
		pause 0.25
		waitrt?
	end
end
	
def kneel_check
	if !checkkneeling
		fput "kneel"
		pause 0.25
		waitrt?
	end
end

def hide_time
	if GameObj.targets.count >= 1
		if checkhidden
			return
		else
			result = dothistimeout "hide", 2, /fail to slip|that no one has noticed|but can't see anywhere/
			if result =~ /fail to slip/
				waitrt?
				fput "hide"
			elsif result =~ /that no one has noticed/
				return
			elsif result =~ /but can't see anywhere/
				return
			end
		end
	else
		return
	end
end

	
def wait_rt
	waitrt?
	waitcastrt?
end	
	
###### Basic Attack Function
			
def chicken_attack
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0
		stance_offensive
		fput "attack"
		stance_defensive
	end
end
	
def chicken_ambush
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0
		stance_offensive
		fput "ambush"
		stance_defensive
	end
end

def chicken_fire
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0
		stance_offensive
		fput "fire"
		stance_defensive
	end
end

def uac_round
	#respond "Debug Output - Starting UAC Round"
	if GameObj.targets.count >= 1
		if $osacombat_uac_current_attack == 0
			$osacombat_uac_current_attack = "jab"
		elsif $osacombat_uac_current_attack == nil
			$osacombat_uac_current_attack = "jab"
		end
		stance_offensive
		result = dothistimeout "#{$osacombat_uac_current_attack}", 2, /excellent positioning|followup jab|followup punch|followup grapple|followup kick|Roundtime/
		if result =~ /excellent positioning/
			$osacombat_uac_current_attack = "kick"						
		elsif result =~ /followup jab/
			$osacombat_uac_current_attack = "jab"
		elsif result =~ /followup punch/
			$osacombat_uac_current_attack = "punch"
		elsif result =~ /followup grapple/
			$osacombat_uac_current_attack = "grapple"
		elsif result =~ /followup kick/
			$osacombat_uac_current_attack = "kick"	
		elsif result =~ /Roundtime/
			$osacombat_uac_current_attack = "jab"
		end
	else
		return
	end
end

####### Mstrike Setup

def mstrike_setup
	#Mstrike Detection
	if UserVars.osacrew["attacktype"] == "1"
		fput "mstrike set recovery off"
		fput "mstrike set default jab"
	elsif UserVars.osacrew["attacktype"] == "2"
		fput "mstrike set recovery off"	
		fput "mstrike set default grapple"
	elsif UserVars.osacrew["attacktype"] == "3"
		fput "mstrike set recovery off"
		fput "mstrike set default attack"
	elsif UserVars.osacrew["attacktype"] == "4"
		fput "mstrike set recovery off"
		fput "mstrike set default attack"
	elsif UserVars.osacrew["attacktype"] == "5"
		fput "mstrike set recovery off"
		fput "mstrike set default fire"
	elsif UserVars.osacrew["attacktype"] == "6"
		fput "mstrike set recovery off"
		fput "mstrike set default fire"
	elsif UserVars.osacrew["attacktype"] == "7"
		fput "mstrike set recovery off"
		fput "mstrike set default fire"
	elsif UserVars.osacrew["attacktype"] == "8"
		fput "mstrike set recovery off"
		fput "mstrike set default fire"
	elsif UserVars.osacrew["attacktype"] == "11"
		fput "mstrike set recovery off"
		fput "mstrike set default fire"
	elsif UserVars.osacrew["attacktype"] == "12"
		fput "mstrike set recovery off"
		fput "mstrike set default attack"
	# elsif UserVars.osacrew["attacktype"] == 9
		# nil
	else
		nil
	end
	if Skills.multiopponentcombat >= 190
		$osacombat_my_mstrike_focus = 6
		$osacombat_my_mstrike_open = 7
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 155
		$osacombat_my_mstrike_focus = 5
		$osacombat_my_mstrike_open = 7
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 135
		$osacombat_my_mstrike_focus = 5
		$osacombat_my_mstrike_open = 6
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 100
		$osacombat_my_mstrike_focus = 4
		$osacombat_my_mstrike_open = 6
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 90
		$osacombat_my_mstrike_focus = 4
		$osacombat_my_mstrike_open = 5
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 60
		$osacombat_my_mstrike_focus = 3
		$osacombat_my_mstrike_open = 5
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 55
		$osacombat_my_mstrike_focus = 3
		$osacombat_my_mstrike_open = 4	
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 35
		$osacombat_my_mstrike_focus = 2
		$osacombat_my_mstrike_open = 4	
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 30
		$osacombat_my_mstrike_focus = 2
		$osacombat_my_mstrike_open = 3	
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 15
		$osacombat_my_mstrike_focus = 0
		$osacombat_my_mstrike_open = 3	
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"
	elsif Skills.multiopponentcombat >= 5
		$osacombat_my_mstrike_focus = 0
		$osacombat_my_mstrike_open = 2
		fput "mstrike set focus #{$osacombat_my_mstrike_focus}"
		fput "mstrike set open  #{$osacombat_my_mstrike_open}"			
	end	
end

################ Spell Checks to Cast

def prep_reset
	if checkprep == "None"
		return
	else
		fput "release"
	end
end

def infuse_weapon
	if !UserVars.osacrew["infusespell"].empty?
		if Spell[UserVars.osacrew["infusespell"]].affordable?
			fput "prep #{UserVars.osacrew["infusespell"]}"
			fput "infuse my #{checkright}"
			pause 5
		else
			echo "------==== Out Of Mana ==== ------"
		end
	else
		echo "------==== No Insufion Spell Designated ==== ------"
	end
end

def can_cast
	if !@spell_type.empty?
		if !Spell[@spell_type].known?
			echo "------==== You Do Not Know That Spell. Select A Valid Attack Spell And Restart OSACombat2 ==== ------"
			exit
		end
		if Spell[@spell_type].affordable?
			waitrt?
			waitcastrt?
			fput "incant #{@spell_type} #{@cast_type}"
		else
			stance_defensive
			wait_until {Spell[@spell_open].affordable?}
			fput "incant #{@spell_type} #{@cast_type}"
		end
	else
		echo "------==== No Spell Designated. Select An Attack Spell And Restart OSACombat2 ==== ------"
		exit
	end
end

def can_cast_opener
	if !@spell_open.empty?
		if !Spell[@spell_open].known?
			return
		end
		if GameObj.loot.find { |loot| loot.name =~ /vine|grapevine|creepers| arm|arms|pincer|pincers|tentacle/ }
			return
		end
		if Spell[@spell_open].affordable?
			stance_offensive
			fput "incant #{@spell_open}"
			stance_guarded
		else
			return
		end
	else
		return
	end
end

############# Bard Spell Caster

def bard_1030
	if checkmana >= 110
		if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 2
			fput "incant 1030 open"
			stance_guarded
			wait_rt
		end
	end
end

def bard_1008
	if checkmana >= 75
		fput "incant 1008 target"
		stance_guarded
		wait_rt	
	end
end

def bard_1035
	if Spell.active? "1035"
		return
	else
		if checkmana >= 110
			fput "incant 1035"
			stance_guarded
			wait_rt	
		end
	end
end
	
	
def bard_1002
	if checkmana >= 75
		fput "incant 1002 target"
		stance_guarded
		wait_rt	
	end
end	

############# Attack Openers for Single Target
		
def charge
	if checkstamina > 13
		fput "weapon charge"
		wait_rt
	else
		return
	end
end
		
def cripples
	if checkstamina > 7
		fput "weapon cripple"
		wait_rt
	else
		echo "no cripples!"
		return
	end
end

def crowd_press
	if checkstamina > 8
		fput "cman cpress"
		wait_rt
	else
		return
	end
end

def dirt_kick
	if checkstamina > 6
		fput "cman dirtkick"
		wait_rt
	else
		return
	end
end

def disarm_manuever
	if checkstamina > 6
		fput "cman disarm"
		wait_rt
	else
		return
	end
end

def dislodge
	if checkstamina > 8
		fput "cman dislodge"
		wait_rt
	else
		return
	end
end

def dizzying_swing
	if checkstamina > 6
		fput "weapon dizzyingswing"
		wait_rt
	else
		return
	end
end

def feint_manuever
	if checkstamina > 8
		fput "cman feint"
		wait_rt
	else
		return
	end
end

def groin_kick
	if checkstamina > 6
		fput "cman gkick"
		wait_rt
	else
		return
	end
end

def hamstring
	if checkstamina > 8
		fput "cman hamstring"
		wait_rt
	else
		return
	end
end

def haymaker
	if checkstamina > 8
		fput "cman haymaker"
		wait_rt
	else
		return
	end
end

def headbutt
	if checkstamina > 8
		fput "cman headbutt"
		wait_rt
	else
		return
	end
end

def shield_bash
	if checkstamina > 8
		fput "shield bash"
		wait_rt
	else
		return
	end
end

def shield_charge
	if checkstamina > 13
		fput "shield charge"
		wait_rt
	else
		return
	end
end

def shield_push
	if checkstamina > 6
		fput "shield push"
		wait_rt
	else
		return
	end
end

def spell_cleave
	if checkstamina > 8
		fput "cman scleave"
		wait_rt
	else
		return
	end
end

def sunder_shield
	if checkstamina > 6
		fput "cman sunder"
		wait_rt
	else
		return
	end
end

def tackle_manuever
	if checkstamina > 6
		fput "cman tackle"
		wait_rt
	else
		return
	end
end

def trip
	if checkstamina > 6
		fput "cman trip"
		wait_rt
	else
		return
	end
end

def twin_hammerfists
	if checkstamina > 6
		fput "weapon twinhammer"
		wait_rt
	else
		return
	end
end

def vault_kick
	if checkstamina > 8
		fput "cman vaultkick"
		wait_rt
	else
		return
	end
end

def voln_sleep
	if GameObj.targets.count >= 2
		fput "Symbol of Sleep"
		wait_rt
	end
end

def att_openers2
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0
		stance_offensive
		if @osaattackopen2 == 0
			echo "no selected opener!"
			return
		elsif @osaattackopen2 == 1
			charge
		elsif @osaattackopen2 == 2
			cripples
		elsif @osaattackopen2 == 3
			crowd_press
		elsif @osaattackopen2 == 4
			dirt_kick
		elsif @osaattackopen2 == 5
			disarm_manuever
		elsif @osaattackopen2 == 6
			dislodge
		elsif @osaattackopen2 == 7
			dizzying_swing
		elsif @osaattackopen2 == 8
			feint_manuever
		elsif @osaattackopen2 == 9
			groin_kick
		elsif @osaattackopen2 == 10
			hamstring
		elsif @osaattackopen2 == 11
			haymaker
		elsif @osaattackopen2 == 12
			headbutt
		elsif @osaattackopen2 == 13
			shield_bash
		elsif @osaattackopen2 == 14
			shield_charge
		elsif @osaattackopen2 == 15
			shield_push
		elsif @osaattackopen2 == 16
			spell_cleave
		elsif @osaattackopen2 == 17
			sunder_shield
		elsif @osaattackopen2 == 18
			tackle_manuever
		elsif @osaattackopen2 == 19
			trip
		elsif @osaattackopen2 == 20
			twin_hammerfists
		elsif @osaattackopen2 == 21
			vault_kick
		elsif @osaattackopen2 == 22
			voln_sleep
		end
		stance_defensive
	end	
end
	
def att_openers
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0
		stance_offensive
		if @osaattackopen == 0
			return
		elsif @osaattackopen == 1
			charge
		elsif @osaattackopen == 2
			cripples
		elsif @osaattackopen == 3
			crowd_press
		elsif @osaattackopen == 4
			dirt_kick
		elsif @osaattackopen == 5
			disarm_manuever
		elsif @osaattackopen == 6
			dislodge
		elsif @osaattackopen == 7
			dizzying_swing
		elsif @osaattackopen == 8
			feint_manuever
		elsif @osaattackopen == 9
			groin_kick
		elsif @osaattackopen == 10
			hamstring
		elsif @osaattackopen == 11
			haymaker
		elsif @osaattackopen == 12
			headbutt
		elsif @osaattackopen == 13
			shield_bash
		elsif @osaattackopen == 14
			shield_charge
		elsif @osaattackopen == 15
			shield_push
		elsif @osaattackopen == 16
			spell_cleave
		elsif @osaattackopen == 17
			sunder_shield
		elsif @osaattackopen == 18
			tackle_manuever
		elsif @osaattackopen == 19
			trip
		elsif @osaattackopen == 20
			twin_hammerfists
		elsif @osaattackopen == 21
			vault_kick
		elsif @osaattackopen == 22
			voln_sleep
		end
		stance_defensive
		att_openers2
	end
end

################### Special Attacks

def exsanguinate
	if Effects::Cooldowns.active? "Exsanguinate"
		return
	else
		if checkstamina > 14
			fput "cman exsanguinate"
		end
	end
end

def leap_attack
	if checkstamina > 14
		fput "cman leapattack"
	end
end

def mighty_blow
	if checkstamina > 14
		fput "cman mblow"
	end
end

def shield_strike
	if checkstamina > 14
		fput "shield strike"
	end
end

def spin_attack
	if checkstamina > 14
		fput "cman sattack"
	end
end

def staggering_blow
	if checkstamina > 14
		fput "cman sblow"
	end
end
	
def true_strike
	if checkstamina > 14
		fput "cman truestrike"
	end
end
	
def special_att
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0
		stance_offensive
		if @osaspecial == 0
			return
		elsif @osaspecial == 1
			exsanguinate
		elsif @osaspecial == 2
			leap_attack
		elsif @osaspecial == 3
			mighty_blow
		elsif @osaspecial == 4
			shield_strike
		elsif @osaspecial == 5
			spin_attack
		elsif @osaspecial == 6
			staggering_blow
		elsif @osaspecial == 7
			true_strike
		end
		stance_defensive
	end
end
		
################### AOE WEAPON Attacks	

def barrage
	if Effects::Cooldowns.active? "Barrage"
		return
	else
		if @osaattackopen == "25" && checkstamina > 14
			voln_sleep
			put "weapon barrage"
		else
			if checkstamina > 14
				fput "weapon barrage"
			end
		end
	end
end

def bull_rush
	if Effects::Cooldowns.active? "Bull Rush"
		return
	else
		if @osaattackopen == "25" && checkstamina > 13
			voln_sleep
			put "cman bullrush"
		else
			if checkstamina > 13
				fput "cman bullrush"
			end
		end
	end
end

def clash
	if Effects::Cooldowns.active? "Clash"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "weapon clash"
		else
			if checkstamina > 19
				fput "weapon clash"
			end
		end
	end
end

def cyclone
	if Effects::Cooldowns.active? "Cyclone"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "weapon cyclone"
		else
			if checkstamina > 19
				fput "weapon cyclone"
			end
		end
	end
end

def flurry
	if Effects::Cooldowns.active? "Flurry"
		return
	else
		if @osaattackopen == "25" && checkstamina > 14
			voln_sleep
			put "weapon flurry"
		else
			if checkstamina > 14
				fput "weapon flurry"
			end
		end
	end
end

def fury
	if Effects::Cooldowns.active? "Fury"
		return
	else
		if @osaattackopen == "25" && checkstamina > 14
			voln_sleep
			put "weapon fury"
		else
			if checkstamina > 14
				fput "weapon fury"
			end
		end
	end
end

def guardant_thrusts
	if Effects::Cooldowns.active? "Guardant Thrusts"
		return
	else
		if @osaattackopen == "25" && checkstamina > 14
			voln_sleep
			put "weapon gthrusts"
		else
			if checkstamina > 14
				fput "weapon gthrusts"
			end
		end
	end
end

def pin_down
	if Effects::Cooldowns.active? "Pin Down"
		return
	else
		if @osaattackopen == "25" && checkstamina > 13
			voln_sleep
			put "weapon pindown"
		else
			if checkstamina > 13
				fput "weapon pindown"
			end
		end
	end
end

def pummel
	if Effects::Cooldowns.active? "Pummel"
		return
	else
		if @osaattackopen == "25" && checkstamina > 14
			voln_sleep
			put "weapon pummel"
		else
			if checkstamina > 14
				fput "weapon pummel"
			end
		end
	end
end

def pulverize
	if Effects::Cooldowns.active? "Pulverize"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "weapon pulverize"
		else
			if checkstamina > 19
				fput "weapon pulverize"
			end
		end
	end
end

def shield_throw
	if Effects::Cooldowns.active? "Shield Throw"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "shield throw"
		else
			if checkstamina > 19
				fput "shield throw"
			end
		end
	end
end

def thrash
	if Effects::Cooldowns.active? "Thrash"
		return
	else
		if @osaattackopen == "25" && checkstamina > 14
			voln_sleep
			put "weapon thrash"
		else
			if checkstamina > 14
				fput "weapon thrash"
			end
		end
	end
end

def whirling_blade
	if Effects::Cooldowns.active? "Whirling Blade"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "weapon wblade"
		else
			if checkstamina > 19
				fput "weapon wblade"
			end
		end
	end
end

def whirlwind
	if Effects::Cooldowns.active? "Whirlwind"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "weapon whirlwind"
		else
			if checkstamina > 19
				fput "weapon whirlwind"
			end
		end
	end
end

def volley
	if Effects::Cooldowns.active? "Volley"
		return
	else
		if @osaattackopen == "25" && checkstamina > 19
			voln_sleep
			put "weapon volley"
		else
			if checkstamina > 19
				fput "weapon volley"
			end
		end
	end
end

def aoe_att
	if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 1
		stance_offensive
		if @osaaoe == 0
			return
		elsif @osaaoe == 1
			barrage
		elsif @osaaoe == 2
			bull_rush
		elsif @osaaoe == 3
			clash
		elsif @osaaoe == 4
			cyclone
		elsif @osaaoe == 5
			flurry
		elsif @osaaoe == 6
			fury
		elsif @osaaoe == 7
			guardant_thrusts
		elsif @osaaoe == 8
			pin_down
		elsif @osaaoe == 9
			pummel
		elsif @osaaoe == 10
			pulverize
		elsif @osaaoe == 11
			shield_throw
		elsif @osaaoe == 12
			thrash
		elsif @osaaoe == 13
			whirling_blade
		elsif @osaaoe == 14
			whirlwind
		elsif @osaaoe == 15
			volley
		end
		stance_defensive
	end
end

################# Mstrike Routine	
def mstrike_routine
	if Skills.multiopponentcombat >= 5
		if Effects::Cooldowns.active? "Multi-Strike"
			return
		else
			if GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } >= 2 && $osacombat_my_mstrike_focus == 0 && $osacombat_my_mstrike_open >= 1
				if percentstamina >= 50
					stance_offensive
					fput "mstrike" 
					stance_defensive
				end
			elsif GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } == 1 && $osacombat_my_mstrike_focus >= 1 && $osacombat_my_mstrike_open >= 1
				if percentstamina >= 50
					stance_offensive
					fput "mstrike target" 
					stance_defensive
				end
			elsif GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } >= 2 && $osacombat_my_mstrike_focus >= 1 && $osacombat_my_mstrike_open >= 1
				if percentstamina >= 50
					stance_offensive
					fput "mstrike" 
					stance_defensive
				end
			end
		end
	else
		return
	end
	waitrt?
end

################# Combat Styles	

def combat	
	stand_check
	if @attack_type.to_i == 0
		# No Attack Type
		return
	elsif @attack_type.to_i == 1
		# UAC Brawling
		aoe_att
		mstrike_routine
		att_openers
		special_att
		uac_round
		looter
	elsif @attack_type.to_i == 2
		#UAC Brawling - Stealth
		att_openers
		special_att
		hide_time
		uac_round
		looter
	elsif @attack_type.to_i == 3
		#Melee 1H 2H
		aoe_att
		mstrike_routine
		att_openers
		special_att
		chicken_attack
		looter
	elsif @attack_type.to_i == 4
		#Melee 1H 2H - Stealth
		att_openers
		special_att
		hide_time
		chicken_ambush
		wait_rt
		looter
	elsif @attack_type.to_i == 5
	    #Bow
		aoe_att
		mstrike_routine
		att_openers
		special_att
		chicken_fire
		looter
	elsif @attack_type.to_i == 6
		#Bow - Stealth
		att_openers
		special_att
		hide_time
		chicken_fire
		looter
	elsif @attack_type.to_i == 7		
		#Crossbow
		aoe_att
		mstrike_routine
		special_att
		kneel_check
		chicken_fire
		looter
	elsif @attack_type.to_i == 8	
		#Crossbow - Stealth
		special_att
		kneel_check
		hide_time
		chicken_fire
		looter
	elsif @attack_type.to_i == 9
		#Bolt Spell Caster
		prep_reset
		stance_offensive
		can_cast_opener
		stance_offensive
		can_cast
		stance_guarded
		looter
	elsif @attack_type.to_i == 10
		#Warding Caster
		prep_reset
		can_cast_opener
		stance_defensive
		can_cast
		stance_guarded
		looter
	elsif @attack_type.to_i == 11
		#Archer W/ Spell Opener
		prep_reset
		can_cast_opener
		aoe_att
		mstrike_routine
		att_openers
		special_att
		chicken_fire
		wait_rt
		looter
	elsif @attack_type.to_i == 12
		#Melee W/ Spell Opener
		prep_reset
		can_cast_opener
		aoe_att
		mstrike_routine
		att_openers
		special_att
		chicken_attack	
		looter
	elsif @attack_type.to_i == 13
		#Bard Support (1035 - 1002)
		prep_reset
		bard_1035
		bard_1002
		wait_rt
		looter
	elsif @attack_type.to_i == 14
		#Bard Pure (1030 - 1008)
		prep_reset
		bard_1030
		wait_rt
		bard_1008
		wait_rt
		looter			
	end			
end

############Combat Checking Start
def reactive
	weaponskill = matchfind "You could use this opportunity to ?!"
	stance_offensive
	fput "weapon #{weaponskill.gsub(/\s+/, "").downcase}"
end

def combat_spellup
	waitcastrt?
	waitrt?
	result = dothistimeout "incant #{@combat_spell}", 30, /Wait|...wait|Spell Hindrance|Cast Roundtime/
		if result =~ /Wait|...wait/
			combat_spellup
		elsif result =~ /Spell Hindrance/
			waitcastrt?
			combat_spellup
		elsif result =~ /Cast Roundtime/
			return
		else
			combat_spellup
		end
end

def mana_focus
	if UserVars.osacrew["groupmana"]
		wait_until {Room.current.title.to_s.downcase.include? "enemy"}
		if !Spell[1018].active?
			if Spell[418].known?
				@combat_spell = "418"
				combat_spellup
			end
		else
			return
		end
	end
end

def bravery
	if UserVars.osacrew["groupbravery"]
		if running? "cure"
			wait_until { !running?('cure') }
		end
		if !checkprep.include? "None"
			fput "release"
		end
		if checkmana < 50
			do_client ";chat on #{UserVars.osacrew["crew"]} I Need Mana!"
			pause 1
		end
		waitrt?
		waitcastrt?
		@combat_spell = "211"
		combat_spellup	if Spell[211].affordable?
		waitcastrt
	end
end

def heroism
	if UserVars.osacrew["groupheroism"]
		if running? "cure"
			wait_until { !running?('cure') }
		end
		if !checkprep.include? "None"
			fput "release"
		end
		if checkmana < 50
			do_client ";chat on #{UserVars.osacrew["crew"]} I Need Mana!"
			pause 1
		end
		waitrt?
		waitcastrt?
		@combat_spell = "215"
		combat_spellup if Spell[215].affordable?
		waitcastrt
	end
end
	
def beaconofcourage
	if UserVars.osacrew["beaconofcourage"]
		if !checkprep.include? "None"
			fput "release"
		end
		if checkmana < 30
			do_client ";chat on #{UserVars.osacrew["crew"]} I Need Mana!"
		end
		waitrt?
		waitcastrt?
		@combat_spell = "1608"
		combat_spellup if Spell[1608].affordable?
		waitcastrt
	end
end

def songoftonis
	if UserVars.osacrew["songoftonis"]
		if !checkprep.include? "None"
			fput "release"
		end
		if checkmana < 50
			do_client ";chat on #{UserVars.osacrew["crew"]} I Need Mana!"
		end
		waitrt?
		waitcastrt?
		@combat_spell = "1035"
		combat_spellup if Spell[1035].affordable?
		waitcastrt
	end
end

def warcryshout
    if UserVars.osacrew["warcryshout"]
        if checkstamina > 20 && !Effects::Buffs.active?("Empowered (+20)")
			waitrt?
			result = dothistimeout "warcry shout", 10, /let loose an echoing shout/
			if result =~ /let loose an echoing shout/
				return
			end
        end
    end
end

def health_monitor
	wait_until {checkdead == true or XMLData.injuries.any?{|key,value| value["wound"] > 0} or get =~ /You feel poison coursing through your veins/ or get =~ /You could use this opportunity to (.*)!/ or GameObj.pcs.any? {|s| s.status =~ /stunned/} or Spell[9699].active? or GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone/ && s.status != /dead/} or !standing? or (!checkstunned && !checkdead && players = GameObj.pcs) or GameObj.loot.find {|s| s.name =~ /tempest|web|cloud|void|swarm/}}
			if checkdead == true
				respond "
					You Have Died My Friend, Please Wait Until You Are Resurrected!
						"
				do_client ";chat on #{UserVars.osacrew["crew"]} Call The Bugleman, Crewman #{checkname} Has Died!"
				if Spell[9823].known?
					Spell[9823].cast
				end
				if running? "osacombat"
					stop_script "osacombat"
				end
				exit
			end
			if Spell[9699].active?
				if Spell[1607].known? && Spell[1607].affordable?
					Spell[1607].cast
				end
				if !UserVars.osacrew["medicalofficer"].include? "#{checkname}" and checkpcs.include? UserVars.osacrew["medicalofficer"]
					do_client ";chat to #{UserVars.osacrew["medicalofficer"]} surge"
					wait_until {!Spell[9699].active?}
				end
				if !UserVars.osacrew["medicalofficer"].include? "#{checkname}" and !checkpcs.include? UserVars.osacrew["medicalofficer"]
					pause_script "pb"
					waitrt?
					pause_script "osacrew"
					pause_script "osacombat"
					wait_until {!checkstunned}
					wait_until {!checkwebbed}
					wait_until {!checkbound}
					health_where_am_i
					multimove "west", "go door"
					pause 1.5
					if !checkpcs.include? UserVars.osacrew["medicalofficer"]
						respond "
						There Is No Herb Yet That Cures Muscle Fatigue. Continuing With Sore Muscles!
						"
						waitrt?
						health_where_am_i
						move "go gangplank"
						fput "join #{UserVars.osacrew["commander"]}"
						unpause_script "osacrew"
						unpause_script "osacombat"
						unpause_script "pb"
					else
						do_client ";chat to #{UserVars.osacrew["medicalofficer"]} surge"
						wait_until {!Spell[9699].active?}
						waitrt?
						health_where_am_i
						move "go gangplank"
						fput "join #{UserVars.osacrew["commander"]}"
						unpause_script "osacrew"
						unpause_script "osacombat"
						unpause_script "pb"
					end
				else
					if Spell[1107].known? && Spell[1107].affordable?
						Spell[1107].cast
					end
				end
			end
			if get =~ /You feel poison coursing through your veins/
				if Spell[114].known? && Spell[114].affordable?
					waitrt?
					waitcastrt?
					Spell[114].cast
				else
					do_client ";chat on #{UserVars.osacrew["crew"]} I Am Poisoned!"
				end
			end
			if get =~ /You could use this opportunity to (.*)!/
				stance_offensive
				fput "weapon #{$1.gsub(/\s+/, "").downcase}"
			end
			if XMLData.injuries.any?{|key,value| value["wound"] > 0}
				if !UserVars.osacrew["medicalofficer"].include? "#{checkname}" and checkpcs.include? UserVars.osacrew["medicalofficer"]
					do_client ";chat on #{UserVars.osacrew["crew"]} I Am Injured!"
					wait_until {!XMLData.injuries.any?{|key,value,| value["wound"] > 0}}
					return
				end
				if !UserVars.osacrew["medicalofficer"].include? "#{checkname}" and !checkpcs.include? UserVars.osacrew["medicalofficer"] and UserVars.osacrew["osaherbs"]
					pause_script "pb"
					waitrt?
					pause_script "osacrew"
					pause_script "osacombat"
					wait_until {!checkstunned}
					wait_until {!checkwebbed}
					wait_until {!checkbound}
					health_where_am_i
					multimove "west", "go door"
					pause 1.5
					if !checkpcs.include? UserVars.osacrew["medicalofficer"]
						do_client ";useherbs --mending=on --buy=off"
						wait_while { running?("useherbs") }
						if XMLData.injuries.any?{|key,value| value["wound"] > 1}
							respond "
							You Still Have Greivous Wounds, It Might Be Safer To Stay In Here!
							"
							unpause_script "osacrew"
							exit
						end
					else
						do_client ";chat on #{UserVars.osacrew["crew"]} I Am Injured!"
						wait_until {!XMLData.injuries.any?{|key,value,| value["wound"] > 0}}
					end
					waitrt?
					health_where_am_i
					move "go gangplank"
					fput "join #{UserVars.osacrew["commander"]}"
					unpause_script "osacrew"
					unpause_script "osacombat"
					unpause_script "pb"
				else
					if !checkname.include? UserVars.osacrew["medicalofficer"]
						respond ""
						respond " -------                                      WARNING                                                   --------"
						respond " ------- You Appear To Be Injured And Have No Medical Officer Present And Do Not Have Use Herbs Enabled --------"
						respond " -------               OSAHealthMonitor Will Resume Duties When You Are Healed                          --------"
						respond " -------                                      WARNING                                                   --------"
						respond ""
					end
					wait_until {!XMLData.injuries.any?{|key,value,| value["wound"] > 0}}
				end
				if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
					wait_while { running?("cure") }
					if XMLData.injuries.any?{|key,value| value["wound"] > 0}
						pause_script "osacombat"
						waitrt?
						waitcastrt?
						pause 0.5
						if checkstunned
							wait_until {!checkstunned}
						end
						start_script "cure"
						wait_while { running?("cure") }
						unpause_script "osacombat"
					end
				end
			end
			if GameObj.pcs.any? {|s| s.status =~ /stunned/}
				if Spell[1608].known? && Spell[1608].affordable?
					waitrt?
					waitcastrt?
					Spell[1608].cast
				end
			end
			if GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone/ && s.status != /dead/}
				GameObj.pcs.each do |s|
				if s.status =~ /sitting|^lying|prone/
					if standing?
						fput "pull #{s.noun}"
					end
				end
				end
			end
			if !standing?
				if checkkneeling
					return
				end
				waitrt?
				waitcastrt?
				if checkstunned
					wait_until {!checkstunned}
				end
				fput "stand"
			end
			if(!checkstunned && !checkdead && players = GameObj.pcs)
				if Spell[108].known?
					players.each do |p|
					waitcastrt?
					if p.status =~ /stun/i
						wait_until{ checkmana >= 8 }
						waitrt?
						waitcastrt?
						fput "prep 108"
						fput "cast " + p.name
						pause 3
					end
				end
			end	
			if GameObj.loot.find {|s| s.name =~ /tempest|web|cloud|void|swarm|vine/}
				GameObj.loot.each do |s|
					if s.name =~ /tempest|web|cloud|void|swarm|vine/
						waitrt?
						waitcastrt?
						@badtype = s.noun
						cast_at_bad_thing
					end
				end
			end
	end
end


before_dying {
if Spell[1635].known?
	stop_script "beseech"
end
if (Spell[1625].known?) and (Stats.level >= 29)
	infuse_weapon
end
if Spell[630].known?
	fput "tell comp behave defensive"
end
fput "store both"
if !UserVars.osacrew["societyscript"].empty?
	if running? "#{UserVars.osacrew["societyscript"]}"
		stop_script "#{UserVars.osacrew["societyscript"]}"
	end
end
}

if UserVars.osacrew["mob"] == true
	Spell[1213].cast if (Spell[1213].known?) && (Spell[1213].affordable?)
end

if UserVars.osacrew["focus"] == true
	Spell[1216].cast if (Spell[1216].known?) && (Spell[1216].affordable?)
end
		
do_client "gird"
mstrike_setup
if Spell[1635].known?
	start_script "beseech"
end
#if (Skills.polearmweapons.to_i >= 75) or (Skills.edgedweapons.to_i >= 25) or (Skills.twohandedweapons.to_i >= 10) or (Skills.bluntweapons.to_i >= 25) or (Skills.brawling.to_i >= 75) or (Skills.rangedweapons.to_i >= 10)
#	start_script "reactive"
#end
if !UserVars.osacrew["societyscript"].empty?
	start_script "#{UserVars.osacrew["societyscript"]}"
else
	echo "------==== No Society Script Designated ==== ------"
end
if (Spell[1625].known?) and (Stats.level >= 29)
	pause 1
	fput "beseech #{checkright} conserve"
end
if Spell[630].known?
	fput "tell comp behave offensive"
end
if UserVars.osacrew["spellopen"].empty? == true
	echo "
	------==== No Opener Spell Designated ==== ------
	"
end
if UserVars.osacrew["undeadspellopen"].empty? == true
	echo "
	------==== No Undead Opener Spell Designated ==== ------
	"
end

Thread.new{
	loop{health_monitor}
	}

Thread.new{
	mana_focus
	Thread.kill
	}

Thread.new{
	bravery
	heroism
	beaconofcourage
	songoftonis
	warcryshout
	loop {
	pause 45
	bravery
	heroism
	beaconofcourage
	songoftonis
	warcryshout
	}
	}
	
loop {wait_until {GameObj.targets.count {|npc| npc.status !~ /dead|gone/ && npc.name !~ /animated| arm|arms|pincer|pincers|tentacle/ } > 0}
	creature_type
	combat
	sleep 0.1
}