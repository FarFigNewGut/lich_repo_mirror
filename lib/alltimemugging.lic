=begin

author: Demandred
version: 0.1

0.1 - fixed hash setup

=end

#hide_me
def message(text)
	string = ''
	if $fake_stormfront then string.concat("\034GSL\r\n ") else string.concat("<pushBold\/>")	end
	if (text.index('\n')) then text.split('\n').each { |line| string.concat("#{line}") } else string.concat(text) end
	if $fake_stormfront then string.concat("\034GSM\r\n ") else string.concat("<popBold\/>") end
	_respond string
end

UserVars.mugged = {} if UserVars.mugged.nil?
UserVars.mugged[:silvers] = ["silvers", 0] if UserVars.mugged[:silvers].nil?
UserVars.mugged[:boxes] = [] if UserVars.mugged[:boxes].nil?
UserVars.mugged[:gems] = [] if UserVars.mugged[:gems].nil?
UserVars.mugged[:items] = [] if UserVars.mugged[:items].nil?
UserVars.mugged[:heirlooms] = [] if UserVars.mugged[:heirlooms].nil?
UserVars.mugged[:attempts] = 0 if UserVars.mugged[:attempts].nil?
UserVars.mugged[:success] = 0 if UserVars.mugged[:success].nil?
left_just = 5

if (UserVars.mugged[:silvers][1].to_s.length + 1) > left_just
	left_just = (UserVars.mugged[:silvers][1].to_s.length + 1)
end
if !UserVars.mugged[:boxes].empty?
	UserVars.mugged[:boxes].each do |i|
		if (i[1].to_s.length.to_i + 1) > left_just
			left_just = i[1].to_s.length.to_i + 1
		end
	end
end
if !UserVars.mugged[:gems].empty?
	UserVars.mugged[:gems].each do |i|
		if (i[1].to_s.length.to_i + 1) > left_just
			left_just = i[1].to_s.length.to_i + 1
		end
	end
end
if !UserVars.mugged[:items].empty?
	UserVars.mugged[:items].each do |i|
		if (i[1].to_s.length.to_i + 1) > left_just
			left_just = i[1].to_s.length.to_i + 1
		end
	end
end
if !UserVars.mugged[:heirlooms].empty?
	UserVars.mugged[:heirlooms].each do |i|
		if (i[1].to_s.length.to_i + 1) > left_just
			left_just = i[1].to_s.length.to_i + 1
		end
	end
end
message(sprintf(" All Time Mug Report"))
message(sprintf(" Attempt: #{UserVars.mugged[:attempts]} Success: #{UserVars.mugged[:success]}"))
if !UserVars.mugged[:boxes].empty?
	message(sprintf(" Boxes".rjust(10)))
	UserVars.mugged[:boxes].each do |thing|
		respond("#{thing[1].to_s.rjust(left_just)}  -  #{thing[0].to_s}")
	end
end
if !UserVars.mugged[:gems].empty?
	message(sprintf(" Gems".rjust(10)))
	UserVars.mugged[:gems].each do |thing|
		respond("#{thing[1].to_s.rjust(left_just)}  -  #{thing[0].to_s}")
	end
end
if !UserVars.mugged[:items].empty?
	message(sprintf(" Items".rjust(10)))
	UserVars.mugged[:items].each do |thing|
		respond("#{thing[1].to_s.rjust(left_just)}  -  #{thing[0].to_s}")
	end
end
if !UserVars.mugged[:heirlooms].empty?
	message(sprintf(" Heirlooms".rjust(10)))
	UserVars.mugged[:heirlooms].each do |thing|
		respond("#{thing[1].to_s.rjust(left_just)}  -  #{thing[0].to_s}")
	end
end
message(sprintf(" Silvers".rjust(10)))
respond("#{UserVars.mugged[:silvers][1].to_s.rjust(left_just)}  -  #{UserVars.mugged[:silvers][0].to_s}")
