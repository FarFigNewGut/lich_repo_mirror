
=begin
	# Author: Selema
	# Categories: lich, utility, bounties
	# Tags: bounties, utility
	# Version: 3.0
Still not tested in all towns for all bounties.

This script will run to the nearest adventurer's guild, remove you from your current bounty(if you have one),
get a new bounty, run to the corresponding NPC if needed, and return to where you were.

Props to those who have helped me code and debug this, and props to Velarina for the original script.

-Selema
=end

debug = true
if Vars.swapbountyexpedite = 'true'
	expedite = true
else
	expedite = false
end





unless Room.current.id != 4 || Room.current.id != nil
	echo "This room is not mapped in go2.  Go somewhere that is."
	exit
end
starting_room_id = Room.current.id

go_home = proc{
	start_script("go2", [ starting_room_id, '_disable_confirm_' ])
	wait_while { running?("go2")}
}

guardbounty = proc {
	echo "3" if debug
	if Room.current.uid.first == '10915'
		fput "ask purser about bounty"
	elsif GameObj.npcs.any? { |npc| npc.noun =~ /Bumbleberry|Rex|Nessy|Sleetwood|Smiley|guard|sergeant/} 
		guardname = GameObj.npcs.find{|npc| npc.noun =~ /Bumbleberry|Rex|Nessy|Sleetwood|Smiley|guard|sergeant/}
		fput "ask #{guardname} for bounty"
	else 
		Script.run("go2", "advguard2")
		GameObj.npcs.any? { |npc| npc.noun =~ /Bumbleberry|Rex|Nessy|Sleetwood|Smiley|guard|sergeant/} 
		fput "ask #{GameObj.npcs.find{|npc| npc.noun =~ /Bumbleberry|Rex|Nessy|Sleetwood|Smiley|guard|sergeant/}} for bounty"
	end	
}
herbbounty = proc {
bounty_string = bounty?
	if bounty_string =~ /concoction that requires (?:a |an )?(.*) found (?:on |in )?(.*?)(?: (?:near|between|under) .*?)?\.\s+These samples must be in pristine condition\.\s+You have been tasked to retrieve (\d+) (?:more )?sample/
		herb = $1
		qty = $3.to_i
	end
	unless foragesack = (GameObj.inv.find { |obj| obj.noun == UserVars.foragesack } || GameObj.inv.find { |obj| obj.name == UserVars.foragesack} || GameObj.inv.find { |obj| obj.name =~ /\b#{Regexp.escape(UserVars.foragesack)}$/i } || GameObj.inv.find { |obj| obj.name =~ /\b#{UserVars.foragesack.split(' ').collect { |n| Regexp.escape(n) }.join(".*\\b")}/i })
		echo "error: unable to find container \"#{UserVars.foragesack}\" in your inventory."
		exit
	end
	count = 0

		if foragesack.contents.nil?
			fput "look in my #{Vars.foragesack}"
		end
		echo foragesack.contents.count { |obj| obj.name =~ /#{herb}/ }
		foragesack.contents.count { |obj| obj.name =~ /#{herb}/ }
		herbs = foragesack.contents.find_all{ |obj| obj.name =~ /#{herb}/ }
		if !herbs.nil?
			Script.run("go2","herbalist")
			empty_hand
			herbs.each { |f| 
			count = count + 1
			if count > qty
				break
			end
			
			fput "get ##{f.id}"
			if Room.current.id == 3824
				fput "give ##{f.id} to akrash"
			elsif Room.current.id  == 5722
				fput "give ##{f.id} to kelph"
			elsif Room.current.id == 640
				fput "give ##{f.id} to jhiseth"
			elsif Room.current.id == 2406
				fput "give ##{f.id} to mirtag"
			elsif Room.current.id == 11002
				fput "give ##{f.id} to lomara"
			elsif Room.current.id == 1851
				fput "give ##{f.id} to kris"
			end
			pause 0.2
			}
			fill_hand
		end
}




asktasky = proc{
Script.run("go2","advguild")
if bounty? =~ /You are not currently assigned/ && expedite == true && Effects::Cooldowns.active?("Next Bounty")
	fput "ask taskmaster to expedite" 
elsif expedite == true && Effects::Cooldowns.active?("Next Bounty") && script.vars[1] =~ /skip/
	multifput "ask taskmaster about removal", "ask taskmaster about removal"
	fput "ask taskmaster to expedite" 
elsif bounty? =~ /You are not currently assigned/ 
	fput "ask taskmaster for bounty"
elsif bounty? =~ /It is your duty to oppose the/
	fput "ask taskmaster about bounty" 
elsif bounty? =~ /You succeeded/
	echo "You need to turn in your bounty at the appropriate npc before running this script."
	exit
elsif bounty? =~  /You have succeeded/ 
	multifput "ask taskmaster about bounty", "ask taskmaster about bounty"

else 
	multifput "ask taskmaster about removal", "ask taskmaster about removal", "ask taskmaster about bounty"
end
}
turnin = proc {
#stole some of this from Nidal/Dantax
if checkbounty =~ /You succeeded in your task and should report back|located (.*) and should bring it back/
	# go to the advguard and report success
	echo "1" if debug
	fput "unhide" if invisible?
	Script.run("go2","advguard")
	
	if !($1.to_s.empty?)
        heirloom = $1.split(" ")[-1]
        echo "2" if debug
        empty_hand
		fput "get my #{heirloom} from my #{UserVars.lootsack}"
		guardbounty.call
		
	else
		echo "47"
		guardbounty.call
    end
elsif checkbounty =~ /concoction/
	fput "unhide" if invisible?
	herbbounty.call
elsif checkbounty =~ /gem/
	echo "This script can't turn in gem bounties yet - swapping bounty in 10 seconds"
	pause "10s"
elsif checkbounty =~ /SKIN them/
	echo "This script can't turn in skin bounties yet - swapping bounty in 10 seconds"
	pause "10s"
end
}





starting_room_id = Room.current.id

turnin.call
if expedite == false && Effects::Cooldowns.active?("Next Bounty") && bounty? !~ /You have succeeded/
	echo "Can't get a bounty yet"
	echo "#{Effects::Cooldowns.time_left("Next Bounty").to_i} minutes remaining"
	exit
end
fput "unhide" if invisible?
asktasky.call







pause 2


if bounty? =~ /furrier/
	start_script("go2", [ "furrier", '_disable_confirm_' ])
	wait_while { running?("go2")}
	GameObj.npcs.each{|npc|      
	fput "ask #{npc} about bounty" }
	go_home.call
	fput "bounty"
	exit
elsif bounty? =~ /herbalist/
	start_script("go2", [ "herbalist", '_disable_confirm_' ])
	wait_while { running?("go2")}
	GameObj.npcs.each{|npc|      
	fput "ask #{npc} about bounty" }
	go_home.call
	fput "bounty"
	exit
elsif bounty? =~ /creature|bandit|heirloom/
	start_script('go2', [ 'advguard', '_disable_confirm_' ])
	wait_while { running?('go2')}
	guardbounty.call
	go_home.call
	fput "bounty"
	exit
elsif bounty? =~ /gem/
	start_script "go2", [ "gemshop", '_disable_confirm_' ]
	wait_while { running?("go2")}
	GameObj.npcs.each{|npc|      
	fput "ask #{npc} about bounty" }
	go_home.call
	fput "bounty"
	exit
elsif bounty? =~ /healer/
	#Am I in the landing?
	if Room.current.id == 3785
		#Yes!
		start_script("go2", [ "3824", '_disable_confirm_' ])
		wait_while { running?("go2")}
		GameObj.npcs.each{|npc|      
		fput "ask #{npc} about bounty" }
		go_home.call
		fput "bounty"
		exit
	elsif Room.current.id == 3778
		#No, I'm in Icemule...
		start_script("go2", [ "2406", '_disable_confirm_' ])
		wait_while { running?("go2")}
		GameObj.npcs.each{|npc|      
		fput "ask #{npc} about bounty" }
		go_home.call
		fput "bounty"
		exit
	elsif Room.current.id == 12511
		#No, I'm in Kharam-Dzu...
		start_script("go2", [ "1851", '_disable_confirm_' ])
		wait_while { running?("go2")}
		GameObj.npcs.each{|npc|      
		fput "ask #{npc} about bounty" }
		go_home.call
		fput "bounty"
		exit
	end
	exit
elsif bounty? =~ /alchemist/
	start_script("go2", [ "alchemist", '_disable_confirm_' ])
	wait_while { running?("go2")}
	GameObj.npcs.each{|npc|      
	fput "ask #{npc} about bounty" }
	go_home.call
	fput "bounty"
	exit
elsif bounty? =~ /not currently assigned/
	go_home.call
	pause "1s"
	echo "Too soon to get a bounty!"
	exit
elsif bounty? =~ /escort/
	go_home.call
	pause "1s"
	echo "You got an escort! Dress nice you stud.."
	fput "bounty"
	exit
else 
	go_home.call
	echo "This isn't supposed to happen"
end
	






