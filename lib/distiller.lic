#distiller.lic
=begin
Author: Alastir

Variables used: Vars.herbsack

This script was created by ChatGPT, using a prompt provided by Brute.

It can be used to distill solid herbs into tinctures.

=end

no_pause_all
no_kill_all

def distill
     string = dothistimeout "look in my #{Vars.herbsack}", 3, /contains DOSEs of the following/
     if string =~ /contains DOSEs of the following/

        # Extract the solid and liquid herb information
        solid_herbs = string.scan(/DOSEs of the following solid herbs:(.*?)\./m).flatten.first.strip.split(", ")
        liquid_herbs = string.scan(/TINCTUREs of the following liquid herbs:(.*?)\./m).flatten.first.strip.split(", ")

        # Create hash tables to store the counts of each herb
        solid_counts = {}
        liquid_counts = {}

        # Parse the solid herb information and store the counts in the hash table
        solid_herbs.each do |herb_info|
          herb_name, count = herb_info.match(/^(.*?) \((\d+)\)$/).captures
          solid_counts[herb_name] = count.to_i
        end

        # Parse the liquid herb information and store the counts in the hash table
        liquid_herbs.each do |herb_info|
          herb_name, count = herb_info.match(/^(.*?) \((\d+)\)$/).captures
          liquid_counts[herb_name] = count.to_i
        end

        # Check if there is a solid herb that does not have a matching liquid herb
        missing_solid_herbs = solid_counts.keys - liquid_counts.keys
        if missing_solid_herbs.any?
          # Select the first missing solid herb
          missing_solid_herb = missing_solid_herbs.first
          puts "The missing herb is a solid herb: #{missing_solid_herb}"
          fput "point my #{Vars.herbsack} at dose #{missing_solid_herb}"
        else
          # Find the liquid herb with the lowest count that matches a solid herb
          matching_liquid_herb = liquid_counts.select { |herb, count| solid_counts.key?(herb) }.min_by { |herb, count| count }.first
          puts "The selected herb is a liquid herb: #{matching_liquid_herb}"
          fput "point my #{Vars.herbsack} at dose #{matching_liquid_herb}"
        end
    end
end

def automation	
	loop do
		line = get
		if line =~ /With a final metallic hum, the whir of gears from within your (.*) stutters to a halt./
			#Mechanical
			distill
		elsif line =~ /With a final, muted sigh, the churn of water from within your (.*) gentles into quiescence./
			#Natural
			distill
		elsif line =~ /With a final chime, the soft, melodic crackle from within your leopard pelt tote falls silent./
			#Magical
			distill
		else
			sleep 0.3
		end
	end
end

if script.vars[1] =~ /distill/
	distill
	automation
else
	echo 'Please start the distill process using ;distiller distill'
end