#Author:Selema
#Outputs a friendlier version of wounds when you appraise someone	

def boldif(cond, text)
  # Make text 'bold' if cond is true.
  #
  # Note: This is a super-naive implementation and is not suitable for text that might look like XML
  # Note: Stole this from herbs2. -Sele
  if cond
    puts "#{monsterbold_start}#{text}#{monsterbold_end}"
  else
    puts text
  end
end	
	
	
wounds = Array.new

	

translate_wound = proc { |wound|
	wound = wound.split.join(' ')
	if wound =~ /(l|r)(?:eft|ight) (arm|hand|leg|eye)/
		Wounds.send("#{$1}#{$2}")
	elsif wound =~ /abdom/
		Wounds.send("abs")
	elsif wound =~ /nerve/
		Wounds.send('nerves')
	elsif wound =~ /(head|neck)/
		Wounds.send($1)
	elsif wound =~ /(chest|back)/
		Wounds.send($1)
	end
}

script.vars.shift
until script.vars.empty?
# This puts the name the user entered into a variable named 'target' (script.vars is the array of words the user gave us, and [1] means word 1; 'script.vars[2]' would ask for the second word the user gave the script, and so on).
target = script.vars.shift
fput "appraise #{target}"

wound_line = waitfor("Appraise what", "You take a quick appraisal of ")

if wound_line =~ /Appraise what/
	respond("Couldn't find the target! Are you sure '#{target}' is here...?")
	
	exit
elsif wound_line =~ /no apparent/
	respond("dum dum dum, not injured, exiting")
	
	exit
end

if wound_line =~ /You take a quick appraisal of (\w+)/
	target = $1.dup
end

if wound_line.include?(',')
	wound_array = wound_line.split(/You take a quick appraisal of|,/)
else
	wound_array = wound_line.scan(/a (?:blinded|swollen|bruised) (?:left|right) eye|deep lacerations across (?:his|her) \w+|deep gashes and serious bleeding (?:on|from|across) (?:his|her) \w+|minor cuts and bruises on (?:his|her) (?:left|right) (?:hand|arm|leg)|a (?:fractured and bleeding|completely severed) (?:left|right) (?:hand|arm|leg)|moderate bleeding from (?:his|her) neck|snapped bones and serious bleeding from the neck|minor bruises on (?:his|her) neck|minor (?:bruises|lacerations) about the head|minor cuts and bruises on (?:his|her) (?:chest|back|abdominal area)|severe head trauma and bleeding from the ears|strange case of muscle twitching|case of (?:sporadic|uncontrollable) convulsions/)
end

wound_array.each { |wound|	
	if wound =~ /(a blinded|a swollen|a bruised|deep lacerations across his|deep lacerations across her|cuts and bruises on his|cuts and bruises on her|fractured and bleeding|completely severed|deep gashes and serious bleeding on his|deep gashes and serious bleeding on her|deep gashes and serious bleeding from his|deep gashes and serious bleeding from her) (\w+)( \w+)?/
		bodypart = "#{$2.dup} #{$3.dup}"
	elsif wound =~ /moderate bleeding from (his|her) neck|snapped bones and serious bleeding from the neck|minor bruises on (his|her) neck/
		bodypart = "neck"
	elsif wound =~ /minor bruises about the head|minor lacerations about the head|severe head trauma and bleeding from the ears/
		bodypart = "head"
	elsif wound =~ /strange case of muscle twitching|case of sporadic convulsions|case of uncontrollable convulsions/
		bodypart = "nerves"
	else
		next
	end

	wounds.push(bodypart)
}

#to_heal = Array.new

wounds.each { |wound|
	wound = wound.split.join(' ')
	if wound =~ /(l|r)(?:eft|ight) (arm|hand|leg|eye)/
		#to_heal.push(wound)
		respond wound
		#if Wounds.send("#{$1}#{$2}") == 3
		#	healdown.call(wound)
		#end
		#fput "transfer #{target} #{wound}"
		
	elsif wound =~ /abdom/
		respond wound
	elsif wound =~ /nerve/
		respond wound
	elsif wound =~ /(head|neck)/
		respond wound
		
	elsif wound =~ /(chest|back)/
		respond wound
		
	end
}
	
#--- Lich: error: undefined local variable or method `wound_array' for #<Scripting:0x10238eb0>	

end