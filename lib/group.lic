=begin
	Group Count & Misc. Script
	
    SYNTAX - ;group <OPTION>

    Options Include:
       COUNT - count how many people total in group and not
        HOLD - attempt to group EVERYONE not currently in the group
      RANDOM - outputs group list randomized
      THRONE - outputs group list beginning with max of 2 sorcerers and 1 empath,
               randomizing remaining group members, and tails with the group leader
       SPLIT - shows current total of silvers and how it would be split based on group count
               can have two additional options shown below:
               ;group split <#WAYS> <WITHHOLD_AMMOUNT>
			   
       todo: none
     author: Tysong (horibu on PC)
       name: group
       tags: group, reim, random, silvers, share
    version: 3.1

    changelog:
        3.1 (2018-06-06)
            Sorted COUNT option lists
        3.0 (2017-09-24)
            Added HOLD option to group EVERYONE not in group currently
        2.0 (2017-09-21)
            Added SPLIT option and added a few more sorcerers/empaths to list
        1.0 (2017-07-19)
            Initial Release
=end

silence_me

Known_Sorcerers = Array["Dyreknor","Shaelethe", "Daedeus", "Idiah", "Aendir", "Oceaniania", "Linsha", "Maetriks", "Shinanigans", "Rolfard", "Cobbeo", "Hammibal", "Fromer", "Morgahan", "Kaeynne", "Dergoatean", "Tarakan", "Zaoloo", "Sadrae", "Siphere", "Syberus", "Mistros", "Suntzhu", "Virilneus", "Morphias", "Shimmerain", "Allereli", "Darwar", "Jurporia", "Meyhymm", "Azimar", "Lourraine", "Yactaevia", "Deckits", "Kronius", "Teiana", "Attoll", "Safphire", "Gedron", "Gadshill", "Xeniphite", "Rhellium", "Rheisia", "Leloo", "Zurrainn", "Roiken", "Merdrith", "Krystanne", "Draithe", "Evarin", "Kelestra", "Gespry", "Krovax", "Nektarius", "Jenovadeath", "Mattheiw", "Desorceri", "Beaumian", "Polveiss", "Ardque", "Troggz", "Teclys", "Magdolean", "Rontuu", "Talismann", "Soneiken", "Xred", "Mange", "Nubunga", "Seracia", "Prospera", "Semtexx", "Zlukhaine", "Drauz", "Lavistan", "Zhelas", "Kaliopia", "Zailon", "Amioweil", "Eoghain", "Omens", "Daegal", "Mystra", "Vivina", "Adredrin", "Zeminar", "Mersteel", "Saervy", "Lilabell", "Sereg", "Sorchia", "Hrvac", "Cleodelia", "Demanec", "Missoni", "Smokette", "Suzan", "Querthose", "Faent", "Rozy", "Chalon", "Ozzan", "Nattor", "Mithumbras", "Berkana", "Demietria", "Herel", "Saraswati", "Xandalf", "Morgause", "Zulis", "Mehrlicht", "Uhlume", "Brillat", "Gossard", "Ruineye", "Kastrel", "Delarock", "Kaldonis", "Blaazed","Gromsph","Sorsil","Roft", "Rasko", "Arcon", "Starcrye"]
Known_Empaths = Array["Siierra", "Myasarie", "Kragdruk", "Gweniveer","Naina","Maylan","Tercolla","Orpius"]

silence = proc {
	action = proc { |server_string|
		if server_string.strip.length == 0
			nil
			next
		end
		if server_string =~ /You are not currently in a group|Your group status is currently|for a list of other options|is following you|is also a member of your group|is the leader of your group|Name: (?:.*) Race: (?:.*) Profession: (?:.*)|Gender: (?:.*) Age: (?:.*) Expr: (?:.*) Level: (?:.*)|Normal \(Bonus\)  ...  Enhanced \(Bonus\)|Strength \(STR\):|Constitution \(CON\):|Dexterity \(DEX\):|Agility \(AGI\):|Discipline \(DIS\):|Aura \(AUR\):|Logic \(LOG\):|Intuition \(INT\):|Wisdom \(WIS\):|Influence \(INF\):|Mana: (?:.*) Silver: (?:.*)/
			nil
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}_silence", action)
}

before_dying { 
	DownstreamHook.remove("#{script.name}_silence")
}

def groupcheck()
	group_count = 1
	group_members = Array[]
	group_leader = nil
	group_members.push("#{Char.name}")
	fput "GROUP"
	line = get
	until line =~ /for a list of other options./
		if line =~ /^(.*) is the leader of your group./
			group_leader = $1.split.first
			group_members.push($1)
			group_count += 1
		elsif line =~ /^(.*) is following you./
			group_leader = Char.name
			group_members.push($1)
			group_count += 1
		elsif line =~ /^(.*) is also a member of your group./
			group_members.push($1)
			group_count += 1
		elsif line =~ /You are not currently in a group./
			group_leader = Char.name
		end
		line = get
	end
	return group_members, group_leader, group_count
end

	
if variable[1].downcase == "count"
	non_group_members = Array[]
	silence.call
	group_members, group_leader, group_count = groupcheck()
	DownstreamHook.remove("#{script.name}_silence")
	echo "Number of group members: #{group_count} of #{GameObj.pcs.count+1} PCs in room."
	echo "Missing #{GameObj.pcs.count.to_i + 1 - group_count.to_i} from group" if GameObj.pcs.count.to_i + 1 != group_count.to_i
	GameObj.pcs.each { |pc|
		non_group_members.push(pc.noun) if !(group_members.include? pc.noun)
	}
	echo "Ungrouped members: #{non_group_members.sort.join(", ")}" if GameObj.pcs.count.to_i + 1 != group_count.to_i
	echo "Grouped Members: #{group_members.sort.join(", ")}" if GameObj.pcs.count.to_i + 1 != group_count.to_i
	exit
	
elsif variable[1].downcase == "hold"
	non_group_members = Array[]
	silence.call
	group_members, group_leader, group_count = groupcheck()
	DownstreamHook.remove("#{script.name}_silence")
	echo "Number of group members: #{group_count} of #{GameObj.pcs.count+1} PCs in room."
	echo "Missing #{GameObj.pcs.count.to_i + 1 - group_count.to_i} from group" if GameObj.pcs.count.to_i + 1 != group_count.to_i
	GameObj.pcs.each { |pc|
		non_group_members.push(pc.noun) if !(group_members.include? pc.noun)
	}
	echo "Ungrouped members: #{non_group_members.sort.join(", ")}" if GameObj.pcs.count.to_i + 1 != group_count.to_i
	non_group_members.each { |member|
		fput "group #{member.noun}"
	}
	exit
	
elsif variable[1].downcase == "random"
	silence.call
	group_members, group_leader, group_count = groupcheck()
	DownstreamHook.remove("#{script.name}_silence")
	echo "Randomized: #{group_members.shuffle!.join(', ')}"
	exit

elsif variable[1].downcase == "split"
	silence.call
	group_members, group_leader, group_count = groupcheck()
	line = nil
	fput "info"
	while line !~ /^Mana: (?:.*) Silver: (.*)$/ do
		line = get
	end
	total_silvers = $1.to_i
	DownstreamHook.remove("#{script.name}_silence")
	echo "Total Silvers: #{total_silvers}"
	if variable[2]
		splits = variable[2].to_i
		
		if variable[3]
			withhold_silvers = variable[3].to_i
			total_silvers = total_silvers - withhold_silvers
		end

		split_silvers = ((total_silvers) / splits)
		remainder_silvers = ((total_silvers) % splits)
		echo "Withholding #{withhold_silvers}, Leaving #{total_silvers} Silvers To Share" if variable[3]		

		if splits != group_count
			echo "Missing #{splits - group_count} People"
			echo "Silvers Split #{splits}-Ways: #{split_silvers}"
			echo "#{total_silvers - (split_silvers * (splits - group_count)) - remainder_silvers} Silvers to Share for the #{group_count} out of #{splits} people here"
		else
			echo "Silvers Split #{splits}-Ways: #{split_silvers}"
		end
		
		echo "With #{remainder_silvers} Silvers Left Over" if remainder_silvers > 0
	else
		remainder_silvers = (total_silvers % group_count)
		echo "Silvers Split #{group_count}-Ways: #{total_silvers / group_count}"
		echo "With #{remainder_silvers} Silvers Left Over" if remainder_silvers > 0
	end
	exit
	
elsif variable[1].downcase =~ /throne|reim/
	silence.call
	group_members, group_leader, group_count = groupcheck()
	DownstreamHook.remove("#{script.name}_silence")
	group_members.shuffle!
	present_sorcerers = group_members & Known_Sorcerers
	present_empaths = group_members & Known_Empaths
	throne_list = Array[]
	
#	until present_sorcerers.empty? || throne_list.count == 2
	until present_sorcerers.empty?
		present_sorcerers.shuffle!
		current_name = present_sorcerers.shift
		throne_list.push(current_name)
		group_members.delete("#{current_name}")
	end
	if !present_empaths.empty?
		present_empaths.shuffle!
		current_name = present_empaths.shift
		throne_list.push(current_name)
		group_members.delete("#{current_name}")
	end
	until group_members.empty?
		current_name = group_members.shift
		throne_list.push(current_name) if group_leader != current_name
	end
	throne_list.push(group_leader)
	echo "Order for attacking tonight is #{throne_list.join(', ')}"
	exit
else
	respond "    SYNTAX - ;group <OPTION>

    Options Include:
       COUNT - count how many people total in group
        HOLD - attempt to group EVERYONE not currently in the group
      RANDOM - outputs group list randomized
      THRONE - outputs group list beginning with max of 2 sorcerers and 1 empath,
               randomizing remaining group members, and tails with the group leader
       SPLIT - shows current total of silvers and how it would be split based on group count
               can have two additional options shown below:
               ;group split <#WAYS> <WITHHOLD_AMMOUNT>"
	exit
end	