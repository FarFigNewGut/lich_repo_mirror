=begin

	Tired of seeing the same game lines over and over and OVER AND OVER AND OVER AND OOVVVEEERRRR again?! Well this is the script for you! Simply start the script and specify how many times you want to see the same game line, and once you've seen the same game line that many times then you'll NEVER see those game lines again! Well until you stop the script, then you'll start to see all game lines again.
	
	Example of how to start the script:
	
	;blinding-lights 3
	;blind 3
	
	Would make it so once you've seen the same game line 3 times then you'll stop seeing that same game line until you stop the script. Stopping the script resets all line counts to 0.
	
	After all, how many times do you need to see the same person selling the same gem to the gemshop? Or the same person casting the same spell? Not too often, that's for sure!
	
	So download ;blinding-lights today and stop being blinded by the lights!
	
	To see help menu start script just as:
	
	;blind
	
	Or while script is running do:
	
	;blind help
	
	Changelog:
	Version 1: Initial release!
	Version 2: Added SEND to the list of game lines to always show.
	Version 3: There is now an option to ignore all numbers in lines. For example if this setting is set to on then "Dreaven holds up 2 fingers" will be the same as "Dreaven holds up 3 fingers." This is useful if you want to ignore game lines where it's just stating how much damage an attack did or the AS/DS/etc in a calculation, because these lines are the same except for the numbers.
	Version 3: There is now an option to add game lines to a list of lines to ALWAYS show, no matter how many times the line has been seen. Easiest way to do this is to highlight the line and copy it.
	Version 3: Check the help menu (just ;blind or ;blind help while script is running) for instructions on how to use these new features.
	Version 4: Fixed bug with script breaking a lot of things. Should be working fine now.
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################

	Author: Dreaven
	Version: 4
=end

@blinding_lights_text_to_display = Array.new
@blinding_lights_all_game_lines_seen = Hash.new

CharSettings['ignore_all_numbers'] = nil unless CharSettings['ignore_all_numbers']
@blinding_lights_ignore_all_the_numbers = CharSettings['ignore_all_numbers']

CharSettings['all_lines_to_show'] = Array.new unless CharSettings['all_lines_to_show']
@blinding_lights_lines_to_always_show = CharSettings['all_lines_to_show']

def blinding_lights_display_message
	_respond
	longest_string = 0
	@blinding_lights_text_to_display.each{ |i| longest_string = (i.length + 12) if (i.length + 12) > longest_string }
	header_and_border = nil
	longest_string.times{ header_and_border += "#" }
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	@blinding_lights_text_to_display.each{ |i| 
		spaces_needed_length = longest_string - (i.length + 7)
		spaces_needed_text = nil
		spaces_needed_length.times { spaces_needed_text += " " }
		_respond "#{monsterbold_start}#     #{i}#{monsterbold_end}#{spaces_needed_text}#{monsterbold_start}##{monsterbold_end}\n"
	}
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	_respond
	@blinding_lights_text_to_display = Array.new
end

blinding_lights_squelch = proc {
	action = proc { |server_string|
		stripped_line = strip_xml(server_string)
		if @blinding_lights_ignore_all_the_numbers
			stripped_line_no_numbers_or_spaces = stripped_line.gsub(/[0-9\s]+/, '')
		else
			stripped_line_no_numbers_or_spaces = stripped_line.gsub(/[\s]+/, '')
		end
		if server_string =~ /^</
			server_string
		elsif stripped_line =~ /You notice|Also here\:|joins your group|offers you|which you quickly pocket|says\,|exclaims\,|asks\,|whispers\,|Obvious exits\:|Obvious paths\:|SEND/
			server_string
		elsif @blinding_lights_lines_to_always_show.include?(stripped_line_no_numbers_or_spaces)
			server_string
		else
			@blinding_lights_all_game_lines_seen[stripped_line_no_numbers_or_spaces] += 1
			if @blinding_lights_all_game_lines_seen[stripped_line_no_numbers_or_spaces] > @blinding_lights_game_line_number
				nil
			else
				server_string
			end
		end
	}
	DownstreamHook.add("#{script.name}_blinding_lights_squelch", action)
}

before_dying{
	DownstreamHook.remove("#{script.name}_blinding_lights_squelch")
}

def blinding_lights_help_menu
	@blinding_lights_text_to_display.push("Help menu: ;send blind help")
	@blinding_lights_text_to_display.push("To add line to always show list: ;send blind add ENTIRE_LINE_HERE")
	@blinding_lights_text_to_display.push("To remove line from always show list: ;send blind remove ENTIRE_LINE_HERE")
	@blinding_lights_text_to_display.push("To ignore all numbers in lines: ;send blind ignore numbers on")
	@blinding_lights_text_to_display.push("To not ignore numbers in lines: ;send blind ignore numbers off")
	blinding_lights_display_message
end

if script.vars[1].nil? || script.vars[1] !~ /\d+/
	@blinding_lights_text_to_display.push("You must specify how many times you want to see the same line before it is ignored.")
	@blinding_lights_text_to_display.push("Example: ;blinding-lights 3")
	@blinding_lights_text_to_display.push("After you see the same line 3 times you will no longer see that same line, until you stop the script.")
	@blinding_lights_text_to_display.push("Each time you start the script the counter is reset to zero.")
	@blinding_lights_text_to_display.push("Some important lines will always show, such as: Also here, Obvious paths, people SAYing, ASKing, etc.")
	blinding_lights_display_message
	blinding_lights_help_menu
else
	@blinding_lights_game_line_number = script.vars[1].to_i
	blinding_lights_squelch.call
	@blinding_lights_text_to_display.push("You will no longer see lines after you have seen the same line more than #{@blinding_lights_game_line_number} times.")
	@blinding_lights_text_to_display.push("Stop the script to see all lines again.")
	@blinding_lights_text_to_display.push("Some important lines will always show, such as: Also here, Obvious paths, people SAYing, ASKing, etc.")
	blinding_lights_display_message
	blinding_lights_help_menu
	while line = get
		if line =~ /^blind add (.*)/
			line_to_add = $1
			line_to_add_no_numbers_or_spaces = $1.gsub(/[0-9\s]+/, '')
			CharSettings['all_lines_to_show'].push(line_to_add_no_numbers_or_spaces) unless CharSettings['all_lines_to_show'].include?(line_to_add_no_numbers_or_spaces)
			@blinding_lights_lines_to_always_show = CharSettings['all_lines_to_show']
			@blinding_lights_text_to_display.push("")
			blinding_lights_display_message
			respond "The following line has been added to your always show list:"
			respond "#{line_to_add}"
			@blinding_lights_text_to_display.push("")
			blinding_lights_display_message
		elsif line =~ /^blind remove (.*)/
			line_to_add = $1
			line_to_add_no_numbers_or_spaces = $1.gsub(/[0-9\s]+/, '')
			CharSettings['all_lines_to_show'].delete(line_to_add_no_numbers_or_spaces)
			@blinding_lights_lines_to_always_show = CharSettings['all_lines_to_show']
			@blinding_lights_text_to_display.push("")
			blinding_lights_display_message
			respond "The following line has been removed from your always show list:"
			respond "#{line_to_add}"
			@blinding_lights_text_to_display.push("")
			blinding_lights_display_message
		elsif line =~ /^blind ignore numbers on/
			CharSettings['ignore_all_numbers'] = true
			@blinding_lights_ignore_all_the_numbers = CharSettings['ignore_all_numbers']
			@blinding_lights_text_to_display.push("Script will now ignore all numbers in lines.")
			blinding_lights_display_message
		elsif line =~ /^blind ignore numbers off/
			CharSettings['ignore_all_numbers'] = nil
			@blinding_lights_ignore_all_the_numbers = CharSettings['ignore_all_numbers']
			@blinding_lights_text_to_display.push("Script will not ignore numbers in lines.")
			blinding_lights_display_message
		elsif line =~ /^blind help/
			blinding_lights_help_menu
		end
	end
end