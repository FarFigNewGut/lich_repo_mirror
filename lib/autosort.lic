# Autosort.lic by Azanoth: Intended to mimic psinet functionality
before_dying { DownstreamHook.remove('autosort_hook'); }
no_kill_all
no_pause_all
i_stand_alone
hide_me

################ Load loot database
$autosort_lists = Hash.new

#[ "alchemy", "ammo", "box", "container", "gem", "herb", "instrument", "jewelry", "note", "scroll", "skin", "storage", "tickets", "wand" ].each { |category| $autosort_lists[category] = Array.new }

$autosort_lists["[Containers]"] 		= [ "satchel", "case", "basket" ]
$autosort_lists["[Clothing - Back]"] 	= [ "backpack", "carryall" ]
$autosort_lists["[Clothing - Cloak]"] 	= [ "cloak", "coat", "jacket" ]
$autosort_lists["[Clothing - Chest]"] 	= [ "shirt", "undershirt" ]
$autosort_lists["[Clothing - Waist]"] 	= [ "belt" ]
$autosort_lists["[Clothing - Belt]"] 	= [ "bag", "kit", "pouch", "sack" ]
$autosort_lists["[Clothing - Legs]"] 	= [ "breeches", "pants", "trousers" ]
$autosort_lists["[Clothing - Feet]"] 	= [ "boots", "sandals", "shoes" ]
$autosort_lists["[Jewelry - Head]"] 	= [ "circlet", "crown", "headband", "tiara" ]
$autosort_lists["[Jewelry - Ear]"] 		= [ "earring", "earcuff" ]
$autosort_lists["[Jewelry - Neck]"] 	= [ "talisman", "medallion", "neckchain", "necklace", "pendant", "torc" ]
$autosort_lists["[Jewelry - Wrist]"] 	= [ "armband", "bracelet", "bracer", "wristlet" ]
$autosort_lists["[Jewelry - Finger]"] 	= [ "ring", "band" ]
$autosort_lists["[Jewelry - Ankle]"] 	= [ "anklet" ]
$autosort_lists["[Jewelry - Pin]"] 		= [ "brooch", "barrette", "clasp", "pin", "stickpin", "buckle" ]
$autosort_lists["[Storage]"] 			= [ "sarcophagus", "armoire" ]
$autosort_lists["[Ticket(s)]"] 			= [ "tickets" ]
$autosort_lists["[Note(s)]"] 			= [ "chit", "note" ]
$autosort_lists["Gem(s)"]				= [ "agate", "amber", "amethyst", "beryl", "blazestar", "bloodstone", "carbuncle", "chalcedony", "coral", "cordierite", "crystal", "despanal", "diamond", "diopside", "emerald", "faenor-bloom", "feystone", "garnet", "gem", "glimaerstone", "haon", "heliodor", "hyacinth", "jacinth", "jade", "jasper", "lapis lazuli", "maoral", "marble", "moonstone", "obsidian", "onyx", "opal", "pearl", "quartz", "rosespar", "ruby", "sapphire", "sard", "shard", "spinel", "stone", "thanot", "topaz", "tourmaline", "turquoise", "zircon", "scarab" ]
#$autosort_lists["[Agate]"] 				= [ "agate" ]								
#$autosort_lists["[Amber]"] 				= [ "amber" ]
#$autosort_lists["[Amethyst]"] 			= [ "amethyst" ]
#$autosort_lists["[Beryl]"] 				= [ "beryl" ]
#$autosort_lists["[Blazestar]"] 			= [ "blazestar" ]
#$autosort_lists["[Bloodstone]"] 		= [ "bloodstone" ]
#$autosort_lists["[Carbuncle]"] 			= [ "carbuncle" ]
#$autosort_lists["[Chalcedony]"] 		= [ "chalcedony" ]
#$autosort_lists["[Coral]"] 				= [ "coral" ]
#$autosort_lists["[Cordierite]"] 		= [ "cordierite" ]
#$autosort_lists["[Crystal]"] 			= [ "crystal" ]
#$autosort_lists["[Despanal]"] 			= [ "despanal" ]
#$autosort_lists["[Diamond]"] 			= [ "diamond" ]
#$autosort_lists["[Diopside]"] 			= [ "diopside" ]
#$autosort_lists["[Emerald]"] 			= [ "emerald" ]
#$autosort_lists["[Faenor-bloom]"] 		= [ "faenor-bloom" ]
#$autosort_lists["[Feystone]"] 			= [ "feystone" ]
#$autosort_lists["[Garnet]"]				= [ "garnet" ]
#$autosort_lists["[Gem]"] 				= [ "gem" ]
#$autosort_lists["[Glimaerstone]"] 		= [ "glimaerstone" ]
#$autosort_lists["[Haon]"] 				= [ "haon" ]
#$autosort_lists["[Heliodor]"] 			= [ "heliodor" ]
#$autosort_lists["[Hyacinth]"] 			= [ "hyacinth" ]
#$autosort_lists["[Jacinth]"] 			= [ "jacinth" ]
#$autosort_lists["[Jade]"] 				= [ "jade" ]
#$autosort_lists["[Jasper]"] 			= [ "jasper" ]
#$autosort_lists["[Lapis]"] 				= [ "lapis lazuli" ]
#$autosort_lists["[Maoral]"] 			= [ "maoral" ]
#$autosort_lists["[Marble]"] 			= [ "marble" ]
#$autosort_lists["[Moonstone]"] 			= [ "moonstone" ]
#$autosort_lists["[Obsidian]"] 			= [ "obsidian" ]
#$autosort_lists["[Onyx]"] 				= [ "onyx" ]
#$autosort_lists["[Opal]"] 				= [ "opal" ]
#$autosort_lists["[Pearl]"] 				= [ "pearl" ]
#$autosort_lists["[Quartz]"] 			= [ "quartz" ]
#$autosort_lists["[Rosespar]"] 			= [ "rosespar" ]
#$autosort_lists["[Ruby]"] 				= [ "ruby" ]
#$autosort_lists["[Sapphire]"] 			= [ "sapphire" ]
#$autosort_lists["[Sard]"] 				= [ "sard" ]
#$autosort_lists["[Shard]"] 				= [ "shard" ]
#$autosort_lists["[Spinel]"] 			= [ "spinel" ]
#$autosort_lists["[Stone]"] 				= [ "stone" ]
#$autosort_lists["[Thanot]"] 			= [ "thanot" ]
#$autosort_lists["[Topaz]"] 				= [ "topaz" ]
#$autosort_lists["[Tourmaline]"] 		= [ "tourmaline" ]
#$autosort_lists["[Turquoise]"] 			= [ "turquoise" ]
#$autosort_lists["[Zircon]"] 			= [ "zircon" ]
#$autosort_lists["[Scarab(s)]"] 			= [ "scarab" ]
$autosort_lists["[Alchemy]"] 			= [ "core", "seed", "air", "earth", "fire", "water", "cauldron", "water", "mortar", "berry", "ayana", "vial", "jar", "bottle", "humor", "hair"]
$autosort_lists["[Dust]"] 				= [ "dust" ]
$autosort_lists["[Essence]"] 			= [ "essence" ]
$autosort_lists["[Rank 1 Herb(s)]"] 	= [ "ambrominas", "cactacae", "spine", "wolifrew", "lichen", "torban", "rose-marrow", "rose-marrow potion", "haphip", "root", "basal", "talneo", "yabathilium", "acantha", "leaf", "moss" ]
$autosort_lists["[Rank 2 Herb(s)]"] 	= [ "ephlox", "calamia", "sovyn", "bolmara", "woth", "aloeas", "brostheras", "pothinir", "wingstem", "bur-clover", "stem", "fruit", "flower", "grass", "clove" ]
$autosort_lists["[Scroll(s)]"] 			= [ "paper", "vellum", "scroll", "tome", "parchment", "palimpsest", "papyrus" ]
$autosort_lists["[Magical]"] 			= [ "amulet", "charm", "cube", "flask", "lens", "orb", "rod", "statue", "square", "triangle", "wand" ]
$autosort_lists["[Box(es)]"] 			= [ "strongbox", "box", "coffer", "trunk" ]
$autosort_lists["[Chest(s)]"] 			= [ "chest" ]
$autosort_lists["[Crate(s)]"] 			= [ "crate" ]
$autosort_lists["[Ammo]"] 				= [ "arrow", "arrows", "bolt", "bolts", "fletchings", "glue", "shafts" ]
$autosort_lists["[Junk]"] 				= [ "branch", "muck", "barnacles", "sand", "sandstone", "carapace", "debris", "rose", "slime", "excrement", "dirt", "flesh", "charcoal", "rock", "spring", "bark" ]
$autosort_lists["[Duskruin]"]			= [ "falcon","portrait", "vase", "mandolin", "pipe", "ferroniere", "manuscript", "painting", "slippers", "egg" ]


################ Add downstream hook
action = proc { |server_string|
    if server_string =~ /^(?:<container.*inv>|<exposeContainer.*inv>)?([IO]n the .*? you see )(.*?)\./
	$autosort_container = $1.strip
	$autosort_display_pending = $2.strip
	nil
    else
	server_string
    end
}
$autosort_display_pending = nil
DownstreamHook.add('autosort_hook', action)

################ Create list function
# if category is nil, then display $autosort_container
def create_list(items, category = nil)
    string = ""
    list_size = 0
    
    ## create heading
    if(category == nil)
        string.concat($autosort_container)
    else
        string.concat("#{category[0, 1].upcase}#{category[1..-1]}:")
    end
    
    ## add items
    items.each { |item|
        count = $item_count[$item_name[item]]
	if(items.index(item) == 0)
	    string.concat(" #{item.sub('and', '')}")
	elsif(items.index(item) == items.size - 1 && !category.nil?)
	    string.concat(" and #{item}")
	elsif(items.index(item) == items.size - 1 && category.nil?)
            if($item_name[item] == "some silver coins")
                string.concat(", #{item}")
            else
                string.concat(", #{item.sub('and', '')}")
            end
	else
	    string.concat(", #{item}")
	end
	string.concat(" (#{count})") if count > 1
	list_size += count
    }

    string.concat(".") unless category.nil? && $autosort_categorized_flag
    return "\n#{list_size} #{string}" if !category.nil?
    return "#{string}" if category.nil?
end

################ Loop

## Make shallow copy of @lists hash, add 'uncategorized' category
hash_copy = Hash.new
$autosort_lists.keys.each { |key| hash_copy[key] = Array.new }
hash_copy["uncategorized"] = Array.new

$item_name = Hash.new
$item_count = Hash.new
loop {
    sleep(0.01.to_f) unless $autosort_display_pending
    if($autosort_display_pending)
        output = ""
        
        ## Get contents, number and categorize items
        contents = $autosort_display_pending.scan(/(?:a|an|some|and)? ?<a.*?<\/a>/)
        
        contents.each { |string|
            # get name, check count
            noun, name = /^(?:.*)<a.* noun="(.+)">(.*?)<\/a>/.match(string).captures
            $item_name[string] = name
            $item_count[name] += 1
            next if $item_count[name] > 1 # skip if count is above 1
            
            # find category
            item_category = "uncategorized"
            $autosort_lists.keys.each { |category|
                if($autosort_lists[category].index(noun))
                    item_category = category
                    $autosort_categorized_flag = true
                end
            }
            
            ## add to hash_copy
            hash_copy[item_category].push(string)
        }
        
        ## create lists
        output.concat(create_list(hash_copy["uncategorized"]))
        if($autosort_categorized_flag && hash_copy["uncategorized"].size > 0)
			output.concat(" and the following:")
        elsif($autosort_categorized_flag)
			output.concat(" the following:")
        end
        
        hash_copy.keys.each { |category|
            next if category == "uncategorized"
            category_size = hash_copy[category].size
            output.concat(create_list(hash_copy[category], category)) if category_size > 0
        }
        
        ## Display
        if(contents.size > 8)
	    output.concat("\n(#{contents.size} Total)\n>")
        else
	    output.concat("\n>")
        end
        
        if($fake_stormfront)
	    #output = output.gsub(/<\w.*?>/, "\034GSL\r\n")
	    #output = output.gsub(/<\/.*?>/, "\034GSM\r\n")
            puts output.gsub(/<.*?>/, '')
        else
            puts output
        end
        
        ## clear variables
        hash_copy.keys.each { |key| hash_copy[key].clear }
        $item_count.clear
        $item_name.clear
        $autosort_categorized_flag = false
        $autosort_display_pending = nil
    end
}
