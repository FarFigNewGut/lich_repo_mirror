=begin

Utility for sorcerer AoE spells!

author: Bramard

Will attempt to cast specified spell(s) if it does not detect that spell in the room already.

Run with ;ImplodeTheRoom [709|710|720]

Example

;ImplodeTheRoom 709 710 

Will scan the room for disembodied arms. If none are found will cast Grasp of the Grave.
WIll scan the room for tempests. If none are found will incant Energy Maelstrom

;ImplodeTheRoom 720

Will scan the room for black voids. If none are found, will incant 720.

Note: This cannot distinguise between your black voids and someone elses, or a monsters. 
No warranties. Use at your own risk. 

Version 1.0 - 2023-05-24 - Initial Release

=end

foundMaelstrom = false
foundVoid = false
foundArms = false

castImplosion = Script.current.vars.include? "720"
castMaelstrom = Script.current.vars.include? "710"
castGrasp = Script.current.vars.include? "709"

Lich::Messaging.msg("info", "Implode The room! Implode: #{castImplosion} Maelstrom: #{castMaelstrom} Grasp #{castGrasp}") if $IMPLODE_THE_ROOM_DEBUG

if castImplosion || castMaelstrom
    GameObj.loot.each { |i| 
        if i.name =~ /tempest/
            foundMaelstrom = true
            Lich::Messaging.msg("info", "Found a maelstrom [#{i.name}]") if $IMPLODE_THE_ROOM_DEBUG
        end

        if i.name =~ /black void/
            foundVoid = true
            Lich::Messaging.msg("info", "Found a void [#{i.name}]") if $IMPLODE_THE_ROOM_DEBUG
        end
    }
end

if castGrasp
    GameObj.npcs.each{ |i| 
        if i.name=~/arm/
            foundArms = true
            Lich::Messaging.msg("info", "Found some arms [#{i.name}]") if $IMPLODE_THE_ROOM_DEBUG
        end
    }
end

#Spell Checks
if castImplosion && Spell[720].available? && Spell[720].affordable?
    if foundVoid
        Lich::Messaging.msg("info", "Not casting Implosion because the room's already been imploded") if $IMPLODE_THE_ROOM_DEBUG
    else
        waitrt?
        waitcastrt?
        Lich::Messaging.msg("info", "Imploding the room!") if $IMPLODE_THE_ROOM_DEBUG
        Spell[720].force_incant()
    end
end

if castMaelstrom && Spell[710].available? && Spell[710].affordable?
    if foundMaelstrom
        Lich::Messaging.msg("info", "Not casting Energy Maelstrom because there's already a tempest in the room") if $IMPLODE_THE_ROOM_DEBUG
    else
        waitrt?
        waitcastrt?
        Lich::Messaging.msg("info", "Casting Energy Maelstrom") if $IMPLODE_THE_ROOM_DEBUG
        Spell[710].force_incant()
    end
end

if castGrasp && Spell[709].available? && Spell[709].affordable?
    if foundArms
        Lich::Messaging.msg("info", "Not casting Grasp of the Grave because there's already creepy arms in the room") if $IMPLODE_THE_ROOM_DEBUG
    else
        waitrt?
        waitcastrt?
        Lich::Messaging.msg("info", "Casting Grasp of the Grave") if $IMPLODE_THE_ROOM_DEBUG
        Spell[709].force_incant()
    end
end