=begin

	Calculates the cost of a service you want performed.
	
	Currently supports Enchant (925), Ensorcell (735), Sanctify (330), Resist Nature (620)
	
	Simply start the script and input the information the script asks for and it will calculate how much skill bonus is required to perform the cast, how much suffuse the caster will need to use, the total cost, and more!
	
	Information required: the cast you want done, the item difficulty (Resist Nature/620 doesn't require difficulty), the skill bonus of the caster performing the service, and how much the character is charging.
	
	Changelog:
	Version 1: Initial release and stuff and stuff

	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Author: Dreaven
	Version 1

=end

ranger_tier_difficulty = [ 0, 100, 200, 300, 400, 500, 250, 350, 450, 550, 650, 400, 500, 600, 700, 800, 550, 650, 750, 850, 950, 700, 800, 900, 1000, 1100 ]

wizard_essence_needed = [ 0, 0, 312, 625, 937, 1250, 1562, 1875, 2187, 2500, 2812, 3125, 3437, 3750, 4062, 4375, 4687, 5000, 5312, 5625, 5937, 6250, 6562, 6875, 7187, 7500, 15000, 22500, 30000, 37500, 45000, 52500, 60000, 67500, 75000, 82500, 90000, 97500, 105000, 112500, 120000, 127500, 135000, 142500, 150000, 157500, 165000, 172500, 180000, 187500, 195000 ]

@cost_text_to_display = Array.new

def cost_display_text
	longest_string = 0
	@cost_text_to_display.each{ |i| longest_string = (i.length + 12) if (i.length + 12) > longest_string }
	header_and_border = nil
	longest_string.times{ header_and_border += "#" }
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	@cost_text_to_display.each{ |i| 
		spaces_needed_length = longest_string - (i.length + 7)
		spaces_needed_text = nil
		spaces_needed_length.times { spaces_needed_text += " " }
		_respond "#{monsterbold_start}#     #{i}#{monsterbold_end}#{spaces_needed_text}#{monsterbold_start}##{monsterbold_end}\n"
	}
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	@cost_text_to_display = Array.new
end

@cost_text_to_display.push("Enter the service you want performed by using the following commands:")
@cost_text_to_display.push(";send wizard OR ;send 925")
@cost_text_to_display.push(";send sorc   OR ;send 735")
@cost_text_to_display.push(";send cleric OR ;send 330")
@cost_text_to_display.push(";send ranger OR ;send 620")
cost_display_text

while line = get
	if line =~ /^(wizard|925)/
		service_being_performed = 925
		points_needed_per_point_of_suffusion = 400
		name_of_resource = "Essence"
		break
	elsif line =~ /^(sorc|735)/
		service_being_performed = 735
		points_needed_per_point_of_suffusion = 2000
		name_of_resource = "Necrotic Energy"
		break
	elsif line =~ /^(cleric|330)/
		service_being_performed = 330
		points_needed_per_point_of_suffusion = 2000
		name_of_resource = "Devotion"
		break
	elsif line =~ /^(ranger|620)/
		service_being_performed = 620
		points_needed_per_point_of_suffusion = 1000
		name_of_resource = "Nature's Grace"
		break
	end
end

if service_being_performed != 620
	@cost_text_to_display.push("Enter item difficulty.")
	@cost_text_to_display.push("For example: ;send 334.")
	cost_display_text

	while line = get
		if line =~ /^(\d+)/
			item_difficulty = $1.to_i
			if service_being_performed == 925
				minium_skill_needed = item_difficulty + 120
			elsif service_being_performed == 330
				minium_skill_needed = item_difficulty + 120
			elsif service_being_performed == 735
				minium_skill_needed = item_difficulty + 150
			end
			break
		end
	end
end

if service_being_performed == 925
	@cost_text_to_display.push("Enter Enchant bonus you want done.")
	@cost_text_to_display.push("For example: ;send 35")
elsif service_being_performed == 735
	@cost_text_to_display.push("Enter Ensorcell tier you want done.")
	@cost_text_to_display.push("For example: ;send 4")
elsif service_being_performed == 330
	@cost_text_to_display.push("Enter Sanctify tier you want done.")
	@cost_text_to_display.push("For example: ;send 3")
elsif service_being_performed == 620
	@cost_text_to_display.push("Enter Resist Nature tier you want done.")
	@cost_text_to_display.push("Example if you want a T2 performed on your 1st resistance do: ;send r1t2")
	@cost_text_to_display.push("Example if you want a T5 performed on your 2nd resistance do: ;send r2t5")
end
cost_display_text

while line = get
	if line =~ /^(\d+)/
		if service_being_performed == 925 && $1.to_i > 50
			@cost_text_to_display.push("Highest bonus for Enchanting is 50. Try again.")
			cost_display_text
		elsif service_being_performed == 735 && $1.to_i > 5
			@cost_text_to_display.push("Highest tier for Ensorcell is 5. Try again.")
			cost_display_text
		elsif service_being_performed == 330 && $1.to_i > 6
			@cost_text_to_display.push("Highest tier for Sanctify is 6. Try again.")
			cost_display_text
		else
			service_bonus_wanted = $1.to_i
			service_requested = line
			break
		end
	elsif line =~ /r(\d+)t(\d+)/i
		if $1.to_i > 5 || $2.to_i > 5
			@cost_text_to_display.push("Highest Resistance is 5 and highest Tier is 5. Try again.")
			cost_display_text
		else
			if $1.to_i == 1
				ranger_tier_wanted = 0
			elsif $1.to_i == 2
				ranger_tier_wanted = 5
			elsif $1.to_i == 3
				ranger_tier_wanted = 10
			elsif $1.to_i == 4
				ranger_tier_wanted = 15
			elsif $1.to_i == 5
				ranger_tier_wanted = 20
			end
			ranger_tier_wanted += $2.to_i
			service_bonus_wanted = $2.to_i
			item_difficulty = ranger_tier_difficulty[ranger_tier_wanted]
			minium_skill_needed = item_difficulty + 100
			service_requested = line
			break
		end
	end
end

@cost_text_to_display.push("Enter skill bonus of character performing service.")
@cost_text_to_display.push("For example: ;send 679")
cost_display_text

while line = get
	if line =~ /^(\d+)/
		skill_bonus_of_character = $1.to_i
		break
	end
end

if service_being_performed == 925
	@cost_text_to_display.push("Enter how much the character is charging per point of essence.")
	@cost_text_to_display.push("For example: ;send 70")
else
	@cost_text_to_display.push("Enter how much the character is charging per week.")
	@cost_text_to_display.push("For example: ;send 2000000")
end
cost_display_text

while line = get
	if line =~ /^(\d+)/
		cost_for_service = $1.to_i
		cost_for_service /= 50000 if service_being_performed != 925
		break
	end
end

if service_being_performed == 925
	points_needed_for_cast = wizard_essence_needed[service_bonus_wanted]
else
	if service_bonus_wanted == 1
		points_needed_for_cast = 50000
	elsif service_bonus_wanted == 2
		points_needed_for_cast = 75000
	elsif service_bonus_wanted == 3
		points_needed_for_cast = 100000
	elsif service_bonus_wanted == 4
		points_needed_for_cast = 125000
	elsif service_bonus_wanted == 5
		points_needed_for_cast = 150000
	elsif service_bonus_wanted == 6
		points_needed_for_cast = 200000
	end
end

cost_for_cast_of_service = points_needed_for_cast * cost_for_service

suffuse_points_needed = skill_bonus_of_character - minium_skill_needed

if suffuse_points_needed < 0
	suffuse_points_needed = suffuse_points_needed.abs
else
	suffuse_points_needed = 0
end

cost_for_suffuse_points = (suffuse_points_needed * points_needed_per_point_of_suffusion) * cost_for_service

if service_being_performed == 925
	@cost_text_to_display.push("Information for a +#{service_requested.upcase} cast:")
elsif service_being_performed == 735
	@cost_text_to_display.push("Information for a T#{service_requested.upcase} cast:")
elsif service_being_performed == 330
	@cost_text_to_display.push("Information for an S#{service_requested.upcase} cast:")
elsif service_being_performed == 620
	@cost_text_to_display.push("Information for a #{service_requested.upcase} cast:")
end
@cost_text_to_display.push("Caster's skill: #{skill_bonus_of_character.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
@cost_text_to_display.push("Item difficulty: #{item_difficulty.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
@cost_text_to_display.push("Minimum bonus needed for 100% success (except fumbles): #{minium_skill_needed.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
@cost_text_to_display.push("Suffuse needed: #{suffuse_points_needed.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse} (requires #{(suffuse_points_needed * points_needed_per_point_of_suffusion).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse} points/#{((suffuse_points_needed * points_needed_per_point_of_suffusion) / 50000.to_f).round(2)} weeks of #{name_of_resource})")
@cost_text_to_display.push("Suffuse added cost: #{cost_for_suffuse_points.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse} silvers")
@cost_text_to_display.push("Cost for just the cast: #{cost_for_cast_of_service.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse} silvers")
@cost_text_to_display.push("Total cost (cast + any suffuse cost): #{(cost_for_suffuse_points + cost_for_cast_of_service).to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse} silvers")
cost_display_text