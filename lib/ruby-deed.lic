=begin

	buys deeds with dwarf-cut rubies
	assumes one ruby per deed, which works until around 40 deeds at level 100

	;ruby-deed <number of deeds>

	 author: Tillmen
	   game: Gemstone
	version: 0.1

=end

if (script.vars[1] =~ /^[0-9]+$/)
	count = script.vars[1].to_i
	exit if count < 1
else
	count = 10
end

unless lootsack = GameObj.inv.find { |obj| obj.name =~ /\b#{Regexp.escape(UserVars.lootsack.strip)}$/i } || GameObj.inv.find { |obj| obj.name =~ /\b#{Regexp.escape(UserVars.lootsack.sub(' ', ' .*'))}$/i } || GameObj.inv.find { |obj| obj.name =~ /\b#{Regexp.escape(UserVars.lootsack.sub(' ', ' .*'))}/i }
	echo 'error: failed to find your lootsack'
end
if lootsack.contents.nil?
	dothistimeout "open ##{lootsack.id}", 10, /^You open|already open/
	close_lootsack = true
else
	close_lootsack = false
end

start_room = Room.current

start_script 'go2', [ '400' ] # [First Elanith Bank, Teller]
wait_while { running?('go2') }

empty_hands

dothistimeout "withdraw #{4500 * count}", 20, /^The teller.*hands.*you/

start_script 'go2', [ '9269' ] # [Stonebiter's Gemporium]
wait_while { running?('go2') }

gem_id_list = Array.new

count.times {
	r = dothistimeout 'order 14', 20, /^You ask about the price of a dwarf-cut ruby/
	break if r.nil?
	r = dothistimeout 'buy', 20, /^He hands you a dwarf-cut ruby/
	break if r.nil?
	if GameObj.right_hand.noun == 'ruby'
		gem_id_list.push(GameObj.right_hand.id)
		r = dothistimeout "_drag ##{GameObj.right_hand.id} ##{lootsack.id}", 20, /^You put/
		break if r.nil?
	end
	if GameObj.left_hand.noun == 'ruby'
		gem_id_list.push(GameObj.left_hand.id)
		r = dothistimeout "_drag ##{GameObj.left_hand.id} ##{lootsack.id}", 20, /^You put/
		break if r.nil?
	end
}

if (GameObj.right_hand.noun == 'note') or (GameObj.left_hand.noun == 'note')
	start_script 'go2', [ '400' ] # [First Elanith Bank, Teller]
	wait_while { running?('go2') }
	if GameObj.right_hand.noun == 'note'
		dothistimeout 'deposit note', 20, /^You deposit/
	end
	if GameObj.left_hand.noun == 'note'
		dothistimeout 'swap', 20, /^You swap/
		dothistimeout 'deposit note', 20, /^You deposit/
	end
end

start_script 'go2', [ '4044' ] # [Temple, Tapestry Room]
wait_while { running?('go2') }

for gem_id in gem_id_list
	move 'go tapestry'
	dothistimeout 'ring chime with mallet', 20, /^You strike/
	dothistimeout 'ring chime with mallet', 20, /^You strike/
	dothistimeout 'kneel', 20, /^You kneel/
	dothistimeout "_drag ##{gem_id} drop", 20, /^You drop/
	r = dothistimeout 'ring chime with mallet', 20, /thy deed has been recorded/
	move 'out'
	break if r.nil?
end

dothistimeout("close ##{lootsack.id}", 10, /^You close|already closed/) if close_lootsack

start_script 'go2', [ start_room.id.to_s ]
wait_while { running?('go2') }
