=begin
  Lich has a few methods for logging in to the game, but no easy way of changing which method it uses.  If one method
  should fail, it is normally necessary to keep retrying with different methods until finding one that works again.

  This script allows you to change the login method Lich uses for future logins.

  YMMV when using it on non-Windows platforms.  YMMV in general, actually.

  For usage, see ;lich-set-login help

  author: LostRanger (thisgenericname@gmail.com)
  game: GemStone
  version: 0.1 (2019-05-16)

  changelog:
    0.1 (2019-05-16)
      Initial release
=end


unless $SAFE == 0
    echo "This script must be trusted to query and modify Lich settings."
    echo "You can trust it with the following command: #{$lich_char}trust #{script.name}"
    exit
end

login_methods = {
    0 => 'Direct Launch',
    1 => 'ShellExecute open',
    2 => 'ShellExecute run as',
    3 => 'AdminShellExecute open',
    4 => 'AdminShellExecute run as',
    5 => 'ShellExecute open w/o parameters',
}


command = script.vars[0].strip

if command == '' or not command then
    val = Lich.db.get_first_value("SELECT value FROM lich_settings WHERE name='win32_launch_method'")
    msg = []
    if val
        if val =~ /^(\d+):/
            num = $1.to_i
            msg << "Current launch method is #{val} [#{login_methods[num] or 'unknown method'}]"
        else
            msg << "Current launch method is #{val} [unknown method]"
        end
    end
    msg << "For details, see #{$lich_char}#{script.name} help"
    respond msg
    exit
end

if command.downcase == 'help'
    msg = []
    msg << "Usage: #{$lich_char}#{script.name}        - Shows current login method."
    msg << "       #{$lich_char}#{script.name} help   - Shows this help and known login methods."
    msg << "       #{$lich_char}#{script.name} METHOD - Sets the last login attempt to have used this method."
    msg << ""
    msg << "METHOD is a number, optionally followed by ':success' or ':fail'.  Known login methods are below:"
    msg << ""
    login_methods.each{|k, v| msg << "  #{k}: #{v}"}
    respond msg
    exit
end

if command.downcase =~ /^(\d+)(?::(fail|success))?$/
    num = $1.to_i

    if $2
        val = "#{num}:#{$2}"
    else
        val = "#{num}:success"
    end

    Lich.db.execute("INSERT OR REPLACE INTO lich_settings(name,value) values('win32_launch_method',?);", val.encode('UTF-8'))
    respond "Launch method changed to #{val} [#{login_methods[num] or 'unknown method'}]"
    exit
end

respond "Invalid login method specified.  See #{$lich_command}#{script.name} help"
