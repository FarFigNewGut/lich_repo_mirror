=begin
lazy move

author: nishima
tags: movement
version: 0.9

A configurable list of non-cardinal paths to "go" or "climb".
Recommended to bind this as a key macro.

Changelog
  0.9 - initial testing release
=end

# debug #
#Settings['lazyclimb'] = nil
#Settings['lazymove'] = nil
# debug #



lagtime = 0.5 # time in seconds to check for failures.  Increase this if you have poor latency



# defaults
if Settings['lazymove'].nil?
  Settings['lazymove'] = ["opening","path","incline","trail","gorge","tunnel","bridge","steps","cliff","river","bank","branch","tree","rockslide","rocks","stairway","butte","chasm","crack"]
  respond "- setting default paths -"
end
if Settings['lazyclimb'].nil?
  Settings['lazyclimb'] = []
end

lazyclimb = Settings['lazyclimb']
lazymove = Settings['lazymove']

if Script.current.vars.empty?
this_way = GameObj.room_desc.detect { |path| lazymove.include? path.noun }
  if this_way.nil?
    this_way = GameObj.loot.detect { |path| lazymove.include? path.noun }
  end
  if this_way.nil?
    respond "- no paths found -"
  else
    if lazyclimb.include? Room.current.id.to_s
      if dothistimeout "climb #{this_way}",lagtime,/You can't climb that./
        respond "- removing room #{Room.current.id.to_s} from climb list"
        lazyclimb.delete(Room.current.id.to_s)
        fput "go #{this_way}"
      end
    else # manual overrides
      if Room.current.id == 2510
        this_way = "bank"
      elsif Room.current.id == 2921
        this_way = "gorge"
      end
      if dothistimeout "go #{this_way}",lagtime,/You're going to have to climb that./
        respond "- adding room #{Room.current.id.to_s} to climb list -"
        lazyclimb.push(Room.current.id.to_s) unless (lazyclimb.include? Room.current.id.to_s)
        fput "climb #{this_way}"
      end
    end
  end
else
  command = Script.current.vars[1]
  path_string = Script.current.vars.drop(2).join(" ")
  if command =~ /^add$/i
    lazymove.push("#{path_string}") unless (path_string.nil? or lazymove.include? path_string)
    respond "- added \"#{path_string}\" as a path -" unless path_string.empty?
  elsif command =~ /^remove|delete$/i
    lazymove.delete("#{path_string}") unless path_string.nil?
    respond "- removed \"#{path_string}\" from paths -" unless path_string.empty?
  elsif command =~ /^list|show$/i
    respond "- moveable paths -"
    lazymove.sort.each {|path| respond path}
    # debug #
    respond "- climbing rooms -"
    lazyclimb.sort.each {|path| respond path}
    # debug #
  else
    respond ""
    respond "    --- lazy move 0.9 ---"
    respond "    add a path: ;#{script.name} add <path>"
    respond " remove a path: ;#{script.name} remove <path>"
    respond "    list paths: ;#{script.name} list"
    respond ""
    respond "          note: Add the entire noun.  \"stair\" will not match \"staircase\""
    respond "   limitations: Currently does not find paths inside other objects."
    respond "                Only finds first matching path."
    respond ""
  end
end
