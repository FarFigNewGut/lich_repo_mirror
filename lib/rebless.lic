=begin

Author: Demandred
Contributors: Doug, Falicor, Tysong
Game: Gemstone
Version: 0.2
Tags: Bless,304,Undead

What it does - tries to throw Bless(304) on items it falls off. Like my vbless
script, it should bless anything that falls off in the same round. Should.

What it doesn't? - Keep running if you run out of mana. It would be more than
it's worth to try to work a wait mana thing in. Better to stop what you're doing
if you ran out and refresh blesses and mana manually.

Note stuff I wrote down, pardon me if I'm a bit casual about this all.

0.2 - Fixed some small issues still in place after some testing has gone on.
0.1 - I decided to modify my vbless script(0.6 at current version) to try to
			do 304 for clerics. This has been tested exactly zero(0) except for the
			basic bless logic. If you use it and run into issues...let me know.

--- original vbless notes at time of modification into rebless
(versions are the old vbless version)
0.6 - Added a bit of roundtime check buffering to attempt to prevent failure.
0.5 - Changed globals to instance variables - not sure why I was using globals?
0.4 - Added a little check to be sure the bless doesn't fail due to roundtime.
0.3 - Added ability to rebless multiple items losing bless in same swing.
			i.e. - multistrike jab, that throws a kick, should be able to bless
			all three possible items that could lose a bless in that(gloves, boots,
			brawling weapon)
0.2 - Fix for arrow bundles
0.1 - Initial write

=end

if !Spell[304].known?
	echo "You don't know Bless, what do you expect to do with this?!?!"
	exit
end
scripts_to_pause = ["bigshot", "sbounty", "treim"]
@rebless_bless = []
status_tags

while line = get
	if line =~ /[Y|y]our <a exist="(\d+)" noun="[^"]+">[^"]+<\/a> returns? to normal\./
		@rebless_bless.push($1)
		next
	elsif line =~ /^Roundtime/
		if @rebless_bless.count > 0
		 if checkmana >= (@rebless_bless.count * 4)
				scripts_to_pause.each { |script| Script.pause(script) if Script.running?(script) }
				pause 0.1
				waitrt?
				waitcastrt?
				pause 0.1
				while @rebless_bless.count > 0
					waitrt?
					waitcastrt?
					pause 0.1
					fput "prep 304"
					result = dothistimeout "cast 304 at ##{@rebless_bless[@rebless_bless.count - 1]}", 5, /searing white light enfolds [a-z]+ <a exist="#{@rebless_bless[@rebless_bless.count - 1]}" noun|\.\.\.wait \d\d? seconds?\.|^Wait |brilliant shower of sparks bursts from [a-z]+ <a exist="#{@rebless_bless[@rebless_bless.count - 1]}" noun/
					if result =~ /searing white light enfolds [a-z]+ <a exist="#{@rebless_bless[@rebless_bless.count - 1]}" noun/
						@rebless_bless.delete(@rebless_bless[@rebless_bless.count - 1])
					end
				end	
				scripts_to_pause.each { |script| Script.unpause(script) if Script.paused?(script) }
			else
				echo "**************************************************"
				echo "**                                              **"
				echo "** Insufficient mana for blesses at the moment. **"
				echo "**           EXITING EXITING EXITING            **"
				echo "**           EXITING EXITING EXITING            **"
				echo "**                OUT OF MANA                   **"
				echo "**    Restart the script after you re-bless     **"
				echo "**     manually and get some mana, please.      **"
				echo "**                                              **"
				echo "**************************************************"
				exit
			end
		end
	end
end
