=begin
This will detect your ship/or your captain's ship type and then begin damage control (repairing the vessel) automatically.
It can be run from any location on the ship.
I recommend using it in port or just before razing an enemy ship.
This script is not intended to be used AFK in anyway.
Enjoy

~Peggyanne
PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
2/13/2021 Initial Release, Should support all ship types, however Man O' War is untested.
2/15/2021 Minor Update: Unused planks are now returned to the pile instead of thrown on ground when done.
3/03/2021 Minor fix in moving.
4/10/2021 Updated to remove the need for LOOKing to detirming location.
7/02/2021 Now works for ALL ships.
=end
	next_cq = proc{
	waitrt?
	if checkleft
	then
	@done = TRUE
	(eval @towood).call
	fput "put plank in wood"
	fput "put plank in wood"
	echo "The Hull is Repaired Captain!"
	exit
	elsif checkright
	then
	@done = TRUE
	(eval @towood).call
	fput "put plank in wood"
	echo "The Hull is Repaired Captain!"
	exit
	else 
	echo "The Hull is Repaired Captain!"
	exit
end
}
	fix_ship = proc{
	@fix = TRUE
	waitrt?
	fput "fix"
	while line = get
	if line =~ /...wait (.*) seconds./
	fix_ship.call
	elsif line =~ /(.*)You manage to repair some(.*)/
	fix_ship.call
	elsif line =~ /(.*)You manage to repair all(.*)/
	(eval @next).call
	elsif line =~ /This area does not look like it has suffered any damage./
	(eval @next).call
	elsif line =~ /You need to be holding a piece of wood from the cargo hold to fix the ship!/
	(eval @towood).call
end
end
}

	out_wood = proc{
	if checkright
	then
	(eval @fromwood).call
	else
	echo "We Are Out of Wood Captain!"
	exit
end
}

	get_wood = proc{
	waitrt?
	fput "get wood"
	while line = get
	if line =~ /You will need a free hand to search for supplies!/
	(eval @fromwood).call
	elsif line =~ /You search through the salvaged wood and find a wooden plank.  The wooden plank can be used for repairs on the ship./
	get_wood.call
	elsif line =~ /You search through the salvaged wood only(.*)/
	out_wood.call
	elsif line =~ /...wait (.*) seconds./
	get_wood.call
	end
end
}
	assess_damage = proc{
	fput "assess"
	while line = get
	if line =~ /(.*)It appears to be (.*) damaged./
		then
		fix_ship.call
	elsif line =~ /(.*)You cannot seem to find any damage./
		while line = get
			if line =~ /\[Health of your ship: (.*)\/(.*)\]/
				if $1 == $2
				then next_cq.call
				else
				(eval @next).call
			end
end
end
end
end
}

main_cargo = proc{
	move "down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	cargo_cargo = proc{
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	crow_cargo = proc{
	multimove "down","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	helm_cargo = proc{
	multimove "east","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	cq_cargo = proc{
	multimove "out","east","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	mforward_cargo = proc{
	multimove "west","west","down"

	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	mcrow_cargo = proc{
	multimove "down","west","west","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	forward_cargo = proc{
	multimove "west","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}

	bow_cargo = proc{
	multimove "west","west","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	mbow_cargo = proc{
	multimove "west","west","west","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	mess_cargo = proc{
	move "west"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end	
}
	
	crew_cargo = proc{
	move "east"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}
	
	mid_cargo = proc{
	multimove "west","down"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end
}

	social_cargo = proc{
	multimove "west","west"
	if @done == TRUE
	next
	elsif @fix == FALSE
	assess_damage.call
	elsif @fix == TRUE
	get_wood.call
end	
}

start_repair = proc{
fput "stow all"
@done = FALSE
@next = "next_cargo"
@fix = FALSE
	@next = "next_cargo"
	@towood = "cargo_cargo"
	@fromwood = "cargo_wood"
		if checkroom.include?("Main Deck")
		main_cargo.call
		elsif checkroom.include?("Cargo Hold")
		cargo_cargo.call
		elsif checkroom.include?("Crow's Nest")
		move "down"
		start_repair.call
		elsif checkroom.include?("Helm")
		helm_cargo.call
		elsif checkroom.include?("Captain's Quarters")
		cq_cargo.call
		elsif checkroom.include?("Man O' War, Forward Deck")
		mforward_cargo.call
		elsif checkroom.include?("Forward Deck")
		forward_cargo.call
		elsif checkroom.include?("Man O' War, Bow")
		mbow_cargo.call
		elsif checkroom.include?("Bow")
		bow_cargo.call
		elsif checkroom.include?("Mess Hall")
		mess_cargo.call
		elsif checkroom.include?("Crew Quarters")
		crew_cargo.call
		elsif checkroom.include?("Mid Deck")
		mid_cargo.call
		elsif checkroom.include?("Social Room")
		social_cargo.call
end
}

	main_wood = proc{
	move "up"
	pause
	fix_ship.call
}
	
	cargo_wood = proc{
	fix_ship.call
}
	
	crow_wood = proc{
	multimove "up","up"
	fix_ship.call
}
	
	mcrow_wood = proc{
	multimove "up","east","east","up"
	fix_ship.call
}
	
	helm_wood = proc{
	multimove "up","west"
	fix_ship.call
}
	
	cq_wood = proc{
	multimove "up","west","go door"
	fix_ship.call
}
	
	forward_wood = proc{
	multimove "up","east"
	fix_ship.call
}
	
	mforward_wood = proc{
	multimove "up","east","east"
	fix_ship.call
}
	
	bow_wood = proc{
	multimove "up","east","east"
	fix_ship.call
}
	
	mbow_wood = proc{
	multimove "up","east","east","east"
	fix_ship.call
}
	
	mess_wood = proc{
	move "east"
	fix_ship.call
}
	
	crew_wood = proc{
	move "west"
	fix_ship.call
}
	
	mid_wood = proc{
	multimove "up","east"
	fix_ship.call
}
	
	social_wood = proc{
	multimove "east","east"
	fix_ship.call
}
	
	
	next_next = proc{
	@fix = "True"
	@next = "next_cargo"
	@towood = "cargo_cargo"
	@fromwood = "cargo_wood"
	assess_damage.call
}
	
	next_cargo = proc{
	if @shiptype == "sloop"
	then
	@next = "next_main"
	@towood = "main_cargo"
	@fromwood = "main_wood"
	waitrt?
	move "up"
	assess_damage.call
	else @next = "next_mess"
	@towood = "mess_cargo"
	@fromwood = "mess_wood"
	waitrt?
	move "east"
	assess_damage.call
	end
}
	
	next_mess = proc{
	if @shiptype == "galleon"
	then 
	@next = "next_social"
	@towood = "social_cargo"
	@fromwood = "social_wood"
	waitrt?
	move "east"
	assess_damage.call
	elsif @shiptype == "frigate"
	then 
	@next = "next_social"
	@towood = "social_cargo"
	@fromwood = "social_wood"
	waitrt?
	move "east"
	assess_damage.call
	elsif @shiptype == "manowar"
	then 
	@next = "next_social"
	@towood = "social_cargo"
	@fromwood = "social_wood"
	waitrt?
	move "east"
	assess_damage.call
	else @next = "next_crew"
	@towood = "crew_cargo"
	@fromwood = "crew_wood"
	waitrt?
	multimove "west","west"
	assess_damage.call
end
}
	
	next_social = proc{
	@next = "next_crew"
	@towood = "crew_cargo"
	@fromwood = "crew_wood"
	waitrt?
	multimove "west","west","west"
	assess_damage.call
}
	
	next_crew = proc{
	@next = "next_main"
	@towood = "main_cargo"
	@fromwood = "main_wood"
	waitrt?
	multimove "east","up"
	assess_damage.call
}
	
	next_main = proc{
	if @shiptype == "sloop"
	then
	@next = "next_crow"
	@towood = "crow_cargo"
	@fromwood = "crow_wood"
	waitrt?
	move "up"
	assess_damage.call
	elsif @shiptype == "manowar"
	then
	@next = "next_mbow"
	@towood = "mbow_cargo"
	@fromwood = "mbow_wood"
	waitrt?
	multimove "east","east","east"
	assess_damage.call
	elsif @shiptype == "brigantine"
	@next = "next_forward"
	@towood = "forward_cargo"
	@fromwood = "forward_wood"
	waitrt?
	move "east"
	assess_damage.call
	else @next = "next_bow"
	@towood = "bow_cargo"
	@fromwood = "bow_wood"
	waitrt?
	multimove "east","east"
	assess_damage.call
	end
}
	
	next_bow = proc{
	@next = "next_forward"
	@towood = "forward_cargo"
	@fromwood = "forward_wood"
	waitrt?
	move "west"
	assess_damage.call
}
	
	next_forward = proc{
	@next = "next_crow"
	@towood = "crow_cargo"
	@fromwood = "crow_wood"
	waitrt?
	multimove "west","up"
	assess_damage.call
}
	
	next_mbow = proc{	
	@next = "next_mforward"
	@towood = "mforward_cargo"
	@fromwood = "mforward_wood"
	waitrt?
	move "west"
	assess_damage.call
}
	
	next_mforward = proc{
	@next = "next_mcrow"
	@towood = "mcrow_cargo"
	@fromwood = "mcrow_wood" 
	waitrt?
	move "up"
	assess_damage.call
}
	
	next_mcrow = proc{
	@next = "next_mid"
	@towood = "mid_cargo"
	@fromwood = "mid_wood"
	waitrt?
	multimove "down","west"
	assess_damage.call
}
	
	next_mid = proc{
	@next = "next_crow"
	@towood = "crow_cargo"
	@fromwood = "crow_wood"
	waitrt?
	multimove "west","up"
	assess_damage.call
}
	
	next_crow = proc{
	@next = "next_helm"
	@towood = "helm_cargo"
	@fromwood = "helm_wood"
	waitrt?
	multimove "down","west"
	assess_damage.call
}
	
	next_helm = proc{
	@next = "next_cq"
	@towood = "cq_cargo"
	@fromwood = "cq_wood"
	waitrt?
	move "go door"
	pause
	assess_damage.call
}
	
	next_cq = proc{
	waitrt?
	if checkleft
	then
	@done = TRUE
	(eval @towood).call
	fput "put left in wood"
	fput "put right in wood"
	echo "The Hull is Repaired Captain!"
	exit
	elsif checkright
	then
	@done = TRUE
	(eval @towood).call
	fput "put right in wood"
	echo "The Hull is Repaired Captain!"
	exit
	else 
	echo "The Hull is Repaired Captain!"
	exit
end
}


ship_type = proc{
			if checkroom.include?("Sloop")
			@shiptype = "sloop"
			start_repair.call
			elsif checkroom.include?("Brigantine")
			@shiptype = "brigantine"
			start_repair.call
			elsif checkroom.include?("Carrack")
			@shiptype = "carrack"
			start_repair.call
			elsif checkroom.include?("Galleon")
			@shiptype = "galleon"
			start_repair.call
			elsif checkroom.include?("Frigate")
			@shiptype = "frigate"
			start_repair.call
			elsif checkroom.include?("Man O' War")
			@shiptype = "manowar"
			start_repair.call
			else
			echo "Please Restart Script From Your Ship!"
			exit
			end
}
if variable[1].downcase =~ /help/
	echo "
	
	This will detect your ship/or your captain's ship type and then begin damage control (repairing the vessel) automatically.
It can be run from any location on the ship.
I recommend using it in port or just before razing an enemy ship.
This script is not intended to be used AFK in anyway.
Enjoy

~Peggyanne
PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
2/13/2021 Initial Release, Should support all ship types, however Man O' War is untested.
2/15/2021 Minor Update: Unused planks are now returned to the pile instead of thrown on ground when done.
3/03/2021 Minor fix in moving.
4/10/2021 Updated to remove the need for LOOKing to detirming location.
7/02/2021 Now works for ALL ships."
exit
end
respond "      ====================================================================================================================================
            *****User beware, this script is not meant for AFK use. The sea is a fickle beast and there can be unforseen events***** 
								                                                 Save The Ship Captain!
		      ==================================================================================================================================== 			"
ship_type.call