#bountyhunter-bandits.lic
=begin

Author: Alastir

=end

Script.run('repository', 'set-updatable bountyhunter-bandits.lic')

#silence_me

if $frontend == 'stormfront'
	fam_window_begin = "<pushStream id=\"speech\" ifClosedStyle=\"watching\"/>"
	fam_window_end   = "<popStream/>\r\n"
else
	fam_window_begin = "\034GSe\r\n"
	fam_window_end   = "\034GSf\r\n"
end

def manacheck
	if checkmana < 150
		Spell[516].cast if !Spell[1708].active? and (Spell[9516].timeleft < 15) and (Spell[516].affordable?)
	end
end

def spellcheck
	if Char.prof == 'Bard'
		spells = [ 401, 406, 414, 425, 430, 1003, 1006, 1007, 1010, 1019 ]	
	elsif Char.prof == 'Cleric'
		spells = [ 101, 102, 103, 107, 120, 202, 211, 215, 219, 303, 307, 310, 313, 319 ]
	elsif Char.prof == 'Wizard'
		spells = [ 401, 406, 414, 425, 430, 503, 507, 508, 509, 513, 520, 905, 911, 913 ]
	end
	
	spells.each{ |i|
	Spell[i].cast if !Spell[i].active? && Spell[i].affordable?
	}
end

def stand
	waitrt?
	if not standing?
		while not checkstance 'offensive'
			fput 'stance offensive'
			sleep 0.10
		end
		fput "stand" until standing?
	end
	waitrt?
	fput 'stance defensive'
end

fput 'target random'

if Char.prof == 'Cleric'
	$attack_spells = [ '302', '306', '309', '312', '317', '111', '118' ]
end

while GameObj.targets.any? {|npc| npc.status !~ /dead|gone/ and npc.type =~ /bandit/}
	GameObj.targets
	.reject {|foe| foe.status =~ /dead|gone/ and foe.type !~ /bandit/}
	.sample
	.tap { |npc|
		if not standing?
			stand
		end

		if Char.prof == 'Bard'
			if GameObj.targets.count >= 2
				waitrt?
				waitcastrt?
				Spell[1030].cast if Spell[1030].affordable?
			else
				if $attack_bandits_disabled == false
					Spell[1002].cast if Spell[1002].affordable?
					waitcastrt?
					$attack_bandits_disabled = true
				else
					Spell[1030].cast if Spell[1030].affordable?
				end
			end
		elsif Char.prof == 'Cleric'
			if $attack_bandits_disabled == false
				Spell[335].cast if Spell[335].affordable?
				waitcastrt?
				$attack_bandits_disabled = true
			end

			if not Effects::Cooldowns.to_h.include?('Ethereal Censer')
				Spell[320].cast if Spell[320].affordable?
			end

			#while !$attack_spells.empty? && GameObj.targets.any? {|npc| npc.status !~ /dead|gone/ and npc.type =~ /bandit/}
			while GameObj.targets.any? {|npc| npc.status !~ /dead|gone/ and npc.type =~ /bandit/}
				spell = $attack_spells.sample
				Spell[spell].cast() if Spell[spell].affordable?
				#$attack_spells.delete(spell)
			end
		elsif Char.prof == 'Wizard'
			if !Spell[515].active?
				Spell[515].cast if Spell[515].affordable?
			end
			if !Spell[506].active?
				Spell[506].cast if Spell[506].affordable?
			end
			if $attack_bandits_disabled == false
				Spell[410].cast if Spell[410].affordable?
				waitcastrt?
				$attack_bandits_disabled = true
			end	
			if percentencumbrance <= 10
				while not checkstance 'offensive'
					fput 'stance offensive'
					sleep 0.1
				end
				result = dothistimeout 'attack', 2, /You (?:fire|swing|thrust)|You currently have no valid target./
				if result =~ /You (?:fire|swing|thrust)/
					waitrt?
				elsif result =~ /You currently have no valid target./
				end
			else
				Spell[518].cast if Spell[518].affordable?
			end
		end
	
	}
end

waitrt?
Script.run('sloot')
$attack_bandits_disabled = false
spellcheck
exit

=begin
		if !Spell[240].affordable? && !Spell[240].active? && checkspirit >= 10 && Society.status == "Council of Light"
			Spell[9918].cast
		elsif Spell[240].affordable? && !Spell[240].active?
			Spell[240].cast			
		elsif !Spell[302].affordable? && checkspirit >= 10 && Society.status == "Council of Light"
			Spell[9918].cast
		elsif Spell[302].affordable?
			Spell[302].cast
		elsif !Spell[317].affordable? && checkspirit >= 10 && Society.status == "Council of Light"
			Spell[9918].cast
		elsif Spell[317].affordable?
			Spell[317].cast
		end
=end