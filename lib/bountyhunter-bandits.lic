#bountyhunter-bandits.lic
=begin

Author: Alastir

=end

def manacheck
	if checkmana < 150
		Spell[516].cast if !Spell[1708].active? and (Spell[9516].timeleft < 15) and (Spell[516].affordable?)
	end
end
	
def recover
	loop {
		waitrt?
		res = dothistimeout "recover hurl", 1, /You know (.*) is around here somewhere, but you don't see it.|You spy a (.*) and recover it|A (.*) rises out of the shadows and flies back to your waiting hand!|In order to recover your hurled weapon, you'll need to have a free hand./
		if res =~ /You know (.*) is around here somewhere, but you don't see it./
			$weapon_lost = true
			echo 'weapon not recovered'
		elsif res =~ /You spy a (.*) and recover it|A (.*) rises out of the shadows and flies back to your waiting hand!/
			$weapon_lost = false
			echo 'weapon recovered'
			break
		elsif res =~ /In order to recover your hurled weapon, you'll need to have a free hand./
			$weapon_lost = false
			echo 'weapon recovered'
			break
		end
	}
end
	
def spellcheck
	if Char.prof == 'Bard'
		spells = [ 401, 406, 414, 425, 430, 1003, 1006, 1007, 1010, 1019 ]	
	elsif Char.prof == 'Cleric'
		spells = [ 101, 102, 103, 107, 120, 202, 211, 215, 219, 303, 307, 310, 313, 319 ]
	elsif Char.prof == 'Wizard'
		spells = [ 401, 406, 414, 425, 430, 503, 507, 508, 509, 513, 520, 905, 911, 913 ]
	end
	
	spells.each{ |i|
	Spell[i].cast if !Spell[i].active? && Spell[i].affordable?
	}
end

def stand
	waitrt?
	if not standing?
		while not checkstance 'offensive'
			fput 'stance offensive'
			sleep 0.10
		end
		fput "stand" until standing?
	end
	waitrt?
	fput 'stance defensive'
end

fput 'target random'

if Char.prof == 'Cleric'
	$attack_spells = [ '302', '306', '309', '312', '317', '111', '118' ]
end

while GameObj.targets.any? {|npc| npc.status !~ /dead|gone/ and npc.type =~ /bandit/}
	GameObj.targets
	.reject {|foe| foe.status =~ /dead|gone/ and foe.type !~ /bandit/}
	.sample
	.tap { |npc|
		if not standing?
			stand
		end

		if Char.prof == 'Bard'
			if GameObj.targets.count >= 2
				waitrt?
				waitcastrt?
				fput 'sign of wracking' if (checkmana < 30 && checkspirit >= 6 && !Spell[9012].active? )
				Spell[1030].cast if Spell[1030].affordable?
			else
				if $attack_bandits_disabled == false
					Spell[1002].cast if Spell[1002].affordable?
					waitcastrt?
					$attack_bandits_disabled = true
				else
					fput 'sign of wracking' if (checkmana < 30 && checkspirit >= 6 && !Spell[9012].active? )
					Spell[1030].cast if Spell[1030].affordable?
				end
			end
		elsif Char.prof == 'Cleric'
			if $attack_bandits_disabled == false
				if GameObj.targets.count >= 2
					Spell[335].cast if Spell[335].affordable?
					waitcastrt?
					$attack_bandits_disabled = true
				end
			end

			if not Effects::Cooldowns.to_h.include?('Ethereal Censer')
				Spell[320].cast if Spell[320].affordable?
			end

			#while !$attack_spells.empty? && GameObj.targets.any? {|npc| npc.status !~ /dead|gone/ and npc.type =~ /bandit/}
			while GameObj.targets.any? {|npc| npc.status !~ /dead|gone/ and npc.type =~ /bandit/}
				spell = $attack_spells.sample
				Spell[spell].cast() if Spell[spell].affordable?
				#$attack_spells.delete(spell)
			end
		elsif Char.prof == 'Warrior'
			while not checkstance 'offensive'
				fput 'cman stance 0'
				sleep 0.3
			end
			if $attack_bandits_disabled == false
				waitrt?
				if Effects::Buffs.to_h.include?('Recent Block') and not Effects::Cooldowns.to_h.include?("Radial Sweep")
					Spell[9433].cast if Spell[9433].affordable?					#Radial Sweep
				end
				if not Effects::Cooldowns.to_h.include?('Cyclone')
					Spell[9431].cast if Spell[9431].affordable?					#Cyclone
				end
				if not Effects::Cooldowns.to_h.include?('Shield Throw')
					Spell[9407].cast if Spell[9407].affordable?					#Shield Throw
				end
				if not Effects::Cooldowns.to_h.include?('Guardant Thrusts')
					Spell[9432].cast if Spell[9432].affordable?					#Guardant Thrusts
					start = Time.now.to_i
					while true
						if Time.now.to_i - start > 10
							break
						end

						line = get
						if line =~ /You complete your assault, your weight on your rear foot as you snap your (.*) back to a defensive angle.|maneuvers closer to you.|Guardant Thrusts what?/
							break
						end

						sleep 0.25
					end
				end
				$attack_bandits_disabled = true
			else
				res = dothistimeout 'hurl', 1, /^You throw|^Roundtime|^What were you referring to\?$|That's not going to do much.  Try using a weapon|You find nothing recoverable/
				if res =~ /You throw/
					$weapon_lost = true
					$weapon_hurled_room = Room.current.id
					echo "weapon hurled at #{$weapon_hurled_room}"
					waitrt?
					recover
				elsif res =~ /^Roundtime/
				elsif res =~ /^What were you referring to\?$/
				elsif res =~ /That's not going to do much.  Try using a weapon|You find nothing recoverable/
					start_script ("go2"), [$weapon_hurled_room]
					wait_while { running?('go2') }
					recover
				end
				fput 'hurl'
			end
			waitrt?
		elsif Char.prof == 'Wizard'
			if !Spell[515].active?
				Spell[515].cast if Spell[515].affordable?
			end
			if !Spell[506].active?
				Spell[506].cast if Spell[506].affordable?
			end
			if $attack_bandits_disabled == false
				Spell[410].cast if Spell[410].affordable?
				waitcastrt?
				$attack_bandits_disabled = true
			end	
			if percentencumbrance <= 10
				while not checkstance 'offensive'
					fput 'stance offensive'
					sleep 0.1
				end
				result = dothistimeout 'attack', 2, /You (?:fire|swing|thrust)|You currently have no valid target./
				if result =~ /You (?:fire|swing|thrust)/
					waitrt?
				elsif result =~ /You currently have no valid target./
				end
			else
				Spell[518].cast if Spell[518].affordable?
			end
		end
	
	}
end

waitrt?
Script.run('sloot')
$attack_bandits_disabled = false
spellcheck
exit

=begin
		if !Spell[240].affordable? && !Spell[240].active? && checkspirit >= 10 && Society.status == "Council of Light"
			Spell[9918].cast
		elsif Spell[240].affordable? && !Spell[240].active?
			Spell[240].cast			
		elsif !Spell[302].affordable? && checkspirit >= 10 && Society.status == "Council of Light"
			Spell[9918].cast
		elsif Spell[302].affordable?
			Spell[302].cast
		elsif !Spell[317].affordable? && checkspirit >= 10 && Society.status == "Council of Light"
			Spell[9918].cast
		elsif Spell[317].affordable?
			Spell[317].cast
		end
=end