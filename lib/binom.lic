# Author: Zennsunni
# This script outputs the cumulative probability of a series of Bernoulli trials by using
# the probability mass function of the binomial distribution. In other words, it tells you
# how likely some series of bullshit rolls in Gemstone were by giving the cumulative probability
# of that set of rolls happening, i.e., the probability of the given success happening k OR MORE times, 
# up to n, the number of attempts. This script has no error handling, so yeah.

if script.vars[1] == 'help'
	echo "The input format is: ;binom <n> <k> <p>" , "Where n = number of trials, k = number of successes, and p = chances of success."
	exit
end

# Factorial function.
def fac (n)
	(1..n).inject(1,:*)
end

# Number of trials
n = script.vars[1].to_f

# Number of successes
k = script.vars[2].to_f

# Probability of success
p = script.vars[3].to_f

# Prob of failure.
q = 1 - p

# Holder
m = k

def pmf(n, k, p, q)

	# Bernoulli Coefficient
	coef = fac(n) / ( fac(k) * fac(n-k))

	# Output of probability mass funciton.
	pmf = coef * (p**k) * ((1 -p) ** (n-k))
end

sum = 0

# Sums through to find the cumulative probability.
while m <= n

	sum += pmf(n, m, p, q)
	m += 1

end


# % for readability.
perc = (sum*100).round(2)

# Output result.
echo "The probabilty of #{k} successes in #{n} trials with probablity #{p} is: #{perc}%."


