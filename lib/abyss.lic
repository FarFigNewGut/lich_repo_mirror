#Arena of the Abyss

=begin
author: Alastir
date: 10/7/2022
updated: 10/22/2023

This script will complete the Arena of the Abyss.

 Step 1:  ;go2 28549
 Step 2:  Make sure your variables are configured.
 - ;vars set lootsack=container (The container where your goodies will be stored - backpack, cloak, etc)
 - ;vars set questsack=container (The container where your voucher booklets are stored - backpack, cloak, etc)

    Uses ;BIGSHOT QUICK for hunting logic. So make sure your bigshot is setup correctly.
        Hunting Tab:
        valid targets = (?:.*)
        quickhunt targets = (?:.*)
        active hunting scripts = signore, isigns, etc.
        society abilities/spells/cmans = etc.
        This script DOES use the loot script field, input something like = eloot/sloot
        
        Commands Tab:
        Fill these boxes with how you want it to attack
        hunting commands(a): = 917 target(m17), attack target(x20), etc.
        ** quick hunting commands: 917 target(m17), attack target(x20), etc.
        Set everything else up with how you want it.
        
        Start the script with your combat gear in your hands, or with empty hands and it will use GIRD.

 Step 3:  ;abyss
 Step 4:  profit

=end

#Script.run('repository', "set-updatable abyss.lic")
#Script.run('autostart', "add --global repository download-updates")

respond 'This script provided by Alastir'
respond 'Feedback about scripts can be left here -- http://forum.gsplayers.com/showthread.php?116895-My-Scripts-Feedback-Suggestions-Bug-Reports --'
respond ''
respond 'Variables used:'
respond 'Vars.questsack = Where keys are stored (Best to use a non-scripted container)'
respond "Vars.questsack is set to #{Vars.questsack}"
respond 'You can change this by typing -- ;vars set questsack=container'
respond ''
respond 'Vars.lootsack = Where treasure drops are stored'
respond "Vars.lootsack is set to #{Vars.lootsack}"
respond 'You can change this by typing -- ;vars set lootsack=container'
respond ''
#respond 'Vars.keepsack = Where token/invitation finds are stored'
#respond "Vars.keepsack is set to #{Vars.keepsack}"
#respond 'You can change this by typing -- ;vars set keepsack=container'
respond ''
respond 'This is a smart script, and will give you data in the Stormfront Loot window if opened'
respond 'The script should be started in room #28549'
respond ''
respond ';unpause abyss if you are satisfied with this setup.'
pause_script


module Aota
  $abyss_spell_counter = 0
  $abyss_pause = true

  def self.wizard_spells
    waitrt?
    waitcastrt?
    if Spell[515].known? and Spell[515].affordable?
      Spell[515].cast
    end
    waitcastrt?
    if Spell[506].known? and Spell[506].affordable?
      Spell[506].cast
    end
    if Spell[1035].known? and Spell[1035].affordable? and !Spell[1035].active?
      Spell[1035].cast
    end
  end

  def self.immolate
    waitrt?
    waitcastrt?
    Spell[519].cast if Spell[519].affordable?
    waitcastrt?
  end

  def self.stand
    waitrt?
    if not standing?
      fput 'stance offensive'
      fput "stand" until standing?
    end
  end

  def self.haste
    waitrt?
    waitcastrt?
    if Spell[506].known? and Spell[506].affordable?
      Spell[506].cast
    end
    if Spell[1035].known? and Spell[1035].affordable? and !Spell[1035].active?
      Spell[1035].cast
    end
  end

  def self.stomp
    waitrt?
    if Spell[909].active?
      if checkmana(5)
        fput 'stomp' if Spell[909].active?
      end
    else
      if checkmana(9)
        fput 'incant 909'
        waitcastrt?
        fput 'stomp'
      end
    end
  end

  def self.attack(target)
    attack_stance = "offensive"
    defense_stance = "defensive"
    waitrt?
    waitcastrt?
    stand
    haste
    fput "stance #{attack_stance}" if checkstance != attack_stance
    result = dothistimeout('attack', 2, /You thrust|You do not currently have a target.|You currently have no valid target.|Be at peace my child, there is no need to fight here.|...wait 1 seconds.|Wait 1 second./)
    if result =~ /You thrust/
      sleep 0.1
      waitrt?
      waitcastrt?
      attack(target)
    elsif result =~ /You do not currently have a target.|You currently have no valid target.|You do not currently have a target.|Be at peace my child, there is no need to fight here./
      waitrt?
    elsif result =~ /...wait 1 seconds.|Wait 1 second./
      waitrt?
      attack(target)
    elsif result =~ /Please rephrase that command./
    end
  end

  def self.start_attack_sequence
    while GameObj.targets.any? {|target| target.status !~ /dead|gone/ }
      GameObj.targets
      .reject {|target| target.status =~ /dead|gone/}
      .sample
      .tap { |target|
          waitrt?
          if Char.name == 'Alastir'
            if not standing?
              stand
            end
            if target.name =~ /ethereal battlemaster|shadowy phantasmal combatant|spectral dwarven miner|wispy phantasma/
              #stomp
              fput 'stance offensive'
              fput 'smite'
            end
            #immolate
            haste
            attack(target)
          else
            Script.run "bigshot", "quick"
            wait_while { running? 'bigshot' }		
            if Char.prof == 'Sorcerer'
              fput 'stop 709'
            end
          end
        }
    end
  end

  def self.arena_spells
    if Spell[999].active?
    else
      if Char.prof == 'Wizard'
        $abyss_spell_counter += 1
        if $abyss_spell_counter == 1
          waitrt?
          waitcastrt?
          fput "incant 950 401 406 414 425 430 503"
        elsif $abyss_spell_counter == 2
          waitrt?
          waitcastrt?
          fput "incant 950 507 508 509 513 520 535"
        elsif $abyss_spell_counter == 3
          waitrt?
          waitcastrt?
          fput "incant 950 540 905 911 913"
          $abyss_spell_counter = 0
        end
      end
    end
  end

  def self.arena_controller
    loop do
    
      if $frontend == 'stormfront'
        fam_window_begin = "<pushStream id=\"loot\" ifClosedStyle=\"watching\"/>"
        fam_window_end   = "<popStream/>\r\n"
      else
        fam_window_begin = "\034GSe\r\n"
        fam_window_end   = "\034GSf\r\n"
      end
    
      line = get
      if line =~ /We have another living one, #{Char.name}, hailing from beyond this valence!|We have another living one, Brave Soul #{Char.name}, hailing from beyond this valence!|#{Char.name}, you must vanquish all five cursed fiends for a reward./
        fput 'beg'
      elsif line =~ /A crimson bolt of lightning strikes the arena and (.*) appears!/
        $abyss_fight_counter += 1
        start_attack_sequence
      elsif line =~ /#{Char.name} is triumphant, vanquishing all those that opposed (?:her|him)./
        $abyss_fight_counter = 0
        $abyss_total_time = Time.now - $abyss_start_time
        puts("#{fam_window_begin}Total Time: #{Time.at($abyss_total_time).strftime("%M:%S")}!\r\n#{fam_window_end}")
        fput 'store all'
        arena_spells
        
      elsif line =~ /A massive tenebrous oculoth floats in and regurgitates (.*) into your right hand./
        if GameObj.right_hand.noun == 'heart'
          fput 'drop my heart'
          break
        else
          result = dothistimeout("put right in my #{Vars.lootsack}", 5, /You put/)
          if result =~ /You put/
            break
          end
        end
      end
    end
  end

  def self.enter

    if $frontend == 'stormfront'
      fam_window_begin = "<pushStream id=\"loot\" ifClosedStyle=\"watching\"/>"
      fam_window_end   = "<popStream/>\r\n"
    else
      fam_window_begin = "\034GSe\r\n"
      fam_window_end   = "\034GSf\r\n"
    end

    #Check for entry key
    result = dothistimeout("get my stone cube from my #{Vars.questsack}", 5, /You remove|You reach|You discreetly remove|Get what?/)
    if result =~ /You remove|You reach|You discreetly remove/
      fput 'pay'
      $abyss_entrance_counter += 1
      puts("#{fam_window_begin}Entry: #{$abyss_entrance_counter}!\r\n#{fam_window_end}")
      $abyss_start_time = Time.now
      fput "put my stone cube in my #{Vars.questsack}"
      fput 'gird'
    elsif result =~ /Get what?/
      echo 'Out of entries!'
      exit
    end
  end

  loop do
    if Room.current.id == 28556
      if $abyss_pause == true
        echo 'I am pausing now, if you unpause me, I will start over without stopping until you pause me again.'
        Script.pause('abyss')
        $abyss_pause = false
      else
        Script.run('go2',"28549")
      end
    elsif Room.current.id != 28549
      echo 'You should start this script at room 28549'
      Script.pause('abyss')
    else
      Aota::wizard_spells
      Aota::enter
      Aota::arena_controller
    end
  end
end #End of Module