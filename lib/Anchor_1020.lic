=begin
	Script to anchor Traveler's Song, by Gibreficul
	Script should pull enough information from the room to work anywhere 1020 can be anchored.
	Because I hate not being automated
=end
silence_me
quiet_exit
if Char.prof != 'Bard'
	respond "This script is only for Bards"
	exit
elsif !Spell[1020].known?
	respond "You appear to pass the BARD check, but you don't seem to know Traveler's Song, exiting"
	exit
end
class Location
	def location
		strings = []
		done = false
		location = proc{|server_string|
			case server_string
			when /You carefully survey your surroundings and guess that your current location is (.*?) or somewhere close to it./
				var = $1
				strings.push(var)
				done = true
				nil
			else
				server_string
			end
		}
		waitrt?
		DownstreamHook.add('towncheck', location)
		$_SERVER_.puts "<c>location\n"
		wait_until{done}
		DownstreamHook.remove('towncheck')
		return(nil) if strings.empty?
		return(strings[0])
	end
end
loc = Location.new
location = loc.location
song = ["I sing to thee this Traveler's Song", "To guide me to safety from well beyond", "Into #{checkroom.gsub("]","").gsub("[","")} I plan to land", "Safely anchored with a beer in hand", "Then from that bar I'll stumble on", "To hunt again to realms beyond", "This peaceful place we call #{location}", "My being here my friends will rely", "So anchor me Traveler's Song or I'll cry"]
fput "speak bard"
fput "prep 1020"
x = false
fput "sing #{song.join(';')}"
x = matchtimeout(3, "notice a great circle of visible mana")
fput "speak common"
if x =~ /It enfolds around you gently like a giant/
	respond "***** Congratulations, you have anchored! *****"
elsif x
	respond "***** Script failed to anchor you.  HA HA!! *****"
else
	respond "***** Script detected no success or fail message. *****"
end

