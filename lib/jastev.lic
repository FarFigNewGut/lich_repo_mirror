=begin

	This script is required for playing the game Jastev at Dreavenings. Simply download the script, head on over to Dreaven's table, then start the script up and click "Roll Dice" to get started.

	Version 1: Initial release!

	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Version 1: Initial release!
	Version 2: There is now a tab which keeps track of everyone's score during multiplayer mode.
	Version 3: Fixed bug with Small Straight awarding points even if the current dice didn't have a Small Straight showing.
	Version 4: Fixed font for scores.
	
	Author: Dreaven
	Version: 4

=end

require 'gtk3'

class JastevMain
	@@game_master = "Dreaven"
	@@rolls_per_turn = 3
	@@solo_mode = nil
	@main_loop = GLib::MainLoop.new
	
	confirm_info = "\n\nTo choose this category for this turn, click on this box (the border of the box will turn green), then click the \"Confirm Category\" button below. Once you have done this then you will start your next turn."
	@tooltips = {
		"Ones" => "Scoring: Total of Ones only.\n\nExample: If you have the following dice: 1, 1, 2, 4, 6, you would score 2 points here.\n\nIf you have no Ones then you score a 0 here.#{confirm_info}",
		"Twos" => "Scoring: Total of Twos only.\n\nExample: If you have the following dice: 2, 2, 2, 4, 6, you would score 6 points here.\n\nIf you have no Twos then you score a 0 here.#{confirm_info}",
		"Threes" => "Scoring: Total of Threes only.\n\nExample: If you have the following dice: 1, 1, 3, 4, 6, you would score 3 points here.\n\nIf you have no Threes then you score a 0 here.#{confirm_info}",
		"Fours" => "Scoring: Total of Fours only.\n\nExample: If you have the following dice: 1, 1, 4, 4, 6, you would score 8 points here.\n\nIf you have no Fours then you score a 0 here.#{confirm_info}",
		"Fives" => "Scoring: Total of Fives only.\n\nExample: If you have the following dice: 5, 5, 5, 5, 6, you would score 20 points here.\n\nIf you have no Fives then you score a 0 here.#{confirm_info}",
		"Sixes" => "Scoring: Total of Sixes only.\n\nExample: If you have the following dice: 1, 1, 2, 6, 6, you would score 12 points here.\n\nIf you have no Sixes then you score a 0 here.#{confirm_info}",
		"3 of a Kind" => "Scoring: Total of all 5 dice.\n\nExample: If you have the following dice: 1, 1, 1, 5, 5, you would score 13 points here.\n\nRequirement: At least 3 dice with the same value.\n\nIf you don't have a 3 of a Kind then you score a 0 here.#{confirm_info}",
		"4 of a Kind" => "Scoring: Total of all 5 dice.\n\nExample: If you have the following dice: 5, 5, 5, 5, 6, you would score 26 points here.\n\nRequirement: At least 4 dice of the same value.\n\nIf you don't have a 4 of a Kind then you score a 0 here.#{confirm_info}",
		"Full House" => "Scoring: 25 points.\n\nExample: If you have the following dice: 1, 1, 1, 2, 2, you would score 25 points here.\n\nRequirement: 3 of one number and 2 of another number.\n\nIf you have no Full House then you score a 0 here.#{confirm_info}",
		"Small Straight" => "Scoring: 30 points.\n\nExample: If you have the following dice: 1, 2, 3, 4, 6, you would score 30 points here.\n\nRequirement: 4 dice in numerical order.\n\nIf you have no Small Straight then you score a 0 here.#{confirm_info}",
		"Large Straight" => "Scoring: 40 points.\n\nExample: If you have the following dice: 1, 2, 3, 4, 5, you would score 40 points here.\n\nRequirement: 5 dice in numerical order.\n\nIf you have no Large Straight then you score a 0 here.#{confirm_info}",
		"JASTEV" => "Scoring: 50 points.\n\nExample: If you have the following dice: 2, 2, 2, 2, 2, you would score 50 points here.\n\nRequirement: 5 dice of the same value.\n\nIf you have no JASTEV then you score a 0 here.#{confirm_info}",
		"Chance" => "Scoring: Total of all 5 dice.\n\nExample: If you have the following dice: 1, 1, 4, 5, 6, you would score 17 points here.\n\nRequirement: No requirement. Any value of dice can be put here.#{confirm_info}",
		"Categories" => "The categories you will be scoring in. The game is over once you have filled in all 13 categories.\n\nEach turn consists of #{@@rolls_per_turn} rolls, you can click as many or as few dice as you want between each roll to save those dice (saved dice have a green border around them.) Saved dice won't be rerolled during the next roll. During each roll you can save new dice or un-save dice.\n\nOn the final roll all dice will have a red border around them to show that you can't reroll anymore.\n\nDuring any roll you can choose to enter a score in a category by clicking the category name (the category will have a green border) then clicking \"Confirm Category\" at the bottom.\n\nYou MUST enter a score in a category after the final roll, even if you must enter a 0 in a category.\n\nOnce a category has a Final Score it will have a red border to show you have already completed that category.\n\nHover over each category to see how that category is scored.",
		"Potential Score" => "This shows how many points each category is worth based on the current values of the dice. These values are updated after every roll.",
		"Final Score" => "This shows how many points you have earned for each category. Once you have a Final Score for a category you can't ever change it again.\n\nThe game is over once you have a score in every category.",
		"Upper Section Bonus" => "If you earn at least 63 points in total in the Upper Section (the categories above this line) you will earn a 35 point bonus.\n\nThe \"Potential Score\" for this line shows how many more points are needed to receive this bonus.",
		"Total Score" => "Your total score from all sources is listed here.",
		"JASTEV Bonus" => "Total score from rolling multiple JASTEVs.",
		"Upper Section" => "These are the Upper Section Categories.",
		"Lower Section" => "These are the Lower Section Categories.",
		"Roll Dice" => "Click this button to roll the dice.",
		"Confirm Category" => "Select a category you want to score in for this turn then click this button to confirm your choice.",
		"Get Stats" => "This button is really only needed if you closed the game window in the middle of a game and need to get all of your stats (score, dice, etc.)",
	}
	
	@scoring_values = {
		"Ones" => 1,
		"Twos" => 2,
		"Threes" => 3,
		"Fours" => 4,
		"Fives" => 5,
		"Sixes" => 6,
	}
	
	def self.change_border_color(button, color)
		provider = Gtk::CssProvider.new
		if button.is_a?(Gtk::Button)
			css = <<~CSS
				button {
					border-color: #{color};
					border-style: solid;
					border-width: 5px;
					border-radius: 8px;
				}
			CSS
		elsif button.is_a?(Gtk::Label)
			css = <<~CSS
				label {
					color: #{color};
				}
			CSS
		end
		provider.load_from_data(css)	
		context = button.style_context
		context.add_provider(provider, Gtk::StyleProvider::PRIORITY_APPLICATION)
	end
	
	def self.upper_section_check
		@points_needed = [63 - @upper_section_points, 0].max
						
		if @upper_section_points >= 63 && @do_not_score_again.nil?
			@do_not_score_again = true
			@grandtotal_score += @upper_section_bonus
			change_border_color(@potential_score_labels["Upper Section Bonus"], "red")
			change_border_color(@final_score_labels["Upper Section Bonus"], "red")
			change_border_color(@all_score_boxes["Upper Section Bonus"], "red")
			@final_score_labels["Upper Section Bonus"].set_text(@upper_section_bonus.to_s)
		end
	end
	
	def self.show_score(score_mode)
		of_a_kind_check = Hash.new
		@die_values.each{ |number| of_a_kind_check[number] += 1 }
			
		sorted_numbers = @die_values.sort
		numbers_in_order = 1
		previous_number = -1
		sorted_numbers.each{ |number|
			if number == previous_number + 1
				numbers_in_order += 1
			elsif number == previous_number
				nil
			else
				numbers_in_order = 1 unless numbers_in_order > 3
			end
			previous_number = number
		}

		@potential_score_labels.each{ |category,label|
			@give_mutliple_jastev_bonus = nil
			total_score = 0
			if category == "JASTEV"
				if of_a_kind_check.values.any? { |count| count >= 5 }
					@cholen_rule = "Match die number"
					if @die_values[0] == 1
						@required_upper_choice = "Ones"
					elsif @die_values[0] == 2
						@required_upper_choice = "Twos"
					elsif @die_values[0] == 3
						@required_upper_choice = "Threes"
					elsif @die_values[0] == 4
						@required_upper_choice = "Fours"
					elsif @die_values[0] == 5
						@required_upper_choice = "Fives"
					elsif @die_values[0] == 6
						@required_upper_choice = "Sixes"
					end
								
					if @final_score_labels[@required_upper_choice].text != "INCOMPLETE"
						@cholen_rule = "Lower Section"
					end
								
					if @final_score_labels["3 of a Kind"].text != "INCOMPLETE" && @final_score_labels["4 of a Kind"].text != "INCOMPLETE" && @final_score_labels["Full House"].text != "INCOMPLETE" && @final_score_labels["Small Straight"].text != "INCOMPLETE" && @final_score_labels["Large Straight"].text != "INCOMPLETE" && @final_score_labels["Chance"].text != "INCOMPLETE" && @final_score_labels[@required_upper_choice].text != "INCOMPLETE"
						@cholen_rule = "Forced 0"
					end
								
					if @cholen_rule == "Match die number"
						required_rule = "Since the #{@required_upper_choice} category is open, you MUST place a score there."
					elsif @cholen_rule == "Lower Section"
						required_rule = "Since the #{@required_upper_choice} category is not open and there is at least one open Lower Section category, you MUST enter a score in a Lower Section category (including Chance), and you will receive full points for that category."
					elsif @cholen_rule == "Forced 0"
						required_rule = "Since the #{@required_upper_choice} category is not open and there are no available Lower Section categories open, you MUST enter a 0 in an available Upper Section category."
					end
								
					@information_label.set_tooltip_text("#{required_rule}\n\nCholen Rules: You must score in the category matching the JASTEV roll. For example if you rolled all twos then you must score in the \"Twos\" category, which would net you 10 points.\n\nIf the matching category already has a score in it then you must enter a score in any available Lower Section category. For example you could choose to receive 40 points in the \"Large Straight\" category, or 25 points in the \"Full House\" category. You must choose a Lower Section category if one is available, even \"Chance\".\n\nIf no Lower Section categories are open then you must enter a 0 in any available Upper Section category. For example if you rolled all twos then you could enter a 0 in the \"Threes\" category.")
					if @final_score_labels["JASTEV"].text == "INCOMPLETE"
						total_score = 50
						@potential_score_labels["JASTEV"].set_text(total_score.to_s) if !@finished_categories.include?(category)
						@cholen_rule = "Must select JASTEV"
						@information_label.set_text("You rolled JASTEV! You must enter this into the JASTEV category.")
						@information_label.set_tooltip_text(nil)
					elsif @final_score_labels["JASTEV"].text == "0"
						@information_label.set_text("You rolled JASTEV! Unfortunately you have already recorded a 0 in the JASTEV category so you can't enter the score there and you don't get the JASTEV bonus. However you must use the Cholen Rules for rolling a JASTEV. Hover over this text for instructions on the Cholen Rules and how you must score this roll.")
					else
						@give_mutliple_jastev_bonus = true
						@information_label.set_text("You rolled JASTEV! AGAIN! You will earn a 100 point bonus after you select your category and click \"Confirm Category\". You must use the Cholen Rules for rolling a JASTEV. Hover over this text for instructions on the Cholen Rules and how you must score this roll.")
					end
				end
				label.set_text(total_score.to_s) if !@finished_categories.include?(category)
				break
			end
		}
		
		@potential_score_labels.each{ |category,label|
			total_score = 0
			if category !~ /Upper Section Bonus|Total Score|JASTEV|Upper Section|Lower Section|JASTEV Bonus/
				if category =~ /Ones|Twos|Threes|Fours|Fives|Sixes/
					@die_values.each{ |value| total_score += @scoring_values[category] if value == @scoring_values[category] }
				elsif category == "3 of a Kind"
					total_score = @die_values.reduce(:+) if of_a_kind_check.values.any? { |count| count >= 3 }
				elsif category == "4 of a Kind"
					total_score = @die_values.reduce(:+) if of_a_kind_check.values.any? { |count| count >= 4 }
				elsif category == "Full House"
					total_score = 25 if (of_a_kind_check.values.count(3) == 1 && of_a_kind_check.values.count(2) == 1) || @cholen_rule == "Lower Section"
				elsif category == "Small Straight"
					total_score = 30 if (numbers_in_order >= 4) || @cholen_rule == "Lower Section"
				elsif category == "Large Straight"
					total_score = 40 if (numbers_in_order == 5) || @cholen_rule == "Lower Section"
				elsif category == "Chance"
					total_score = @die_values.reduce(:+)
				end
				if score_mode == "final"
					if @selected_score_name == category || @selected_score_name == "JASTEV"
						if @selected_score_name == "JASTEV"
							total_score = 0
							total_score = 50 if of_a_kind_check.values.any? { |count| count >= 5 }
						end
						@upper_section_points += total_score if @selected_score_name =~ /Ones|Twos|Threes|Fours|Fives|Sixes/
						upper_section_check

						@grandtotal_score += total_score
						if @give_mutliple_jastev_bonus
							@grandtotal_score += @multiple_jastev_bonus
							@total_jastev_bonus += @multiple_jastev_bonus
						end
						@final_score_labels["Total Score"].set_text(@grandtotal_score.to_s)
						@final_score_labels["JASTEV Bonus"].set_text(@total_jastev_bonus.to_s)
						
						@potential_score_labels["Upper Section Bonus"].set_text(@points_needed.to_s)
						@potential_score_labels[@selected_score_name].set_text("COMPLETED")
						@final_score_labels[@selected_score_name].set_text(total_score.to_s)
						@finished_categories.push(@selected_score_name)
						change_border_color(@selected_score_box, "red")
						change_border_color(@final_score_labels[@selected_score_name], "red")
						change_border_color(@potential_score_labels[@selected_score_name], "red")
						break
					end
				else
					label.set_text(total_score.to_s) if !@finished_categories.include?(category)
				end
			end
		}
	end
	
	def self.run_main_loop
		@command_received = nil
		@disable_buttons = true
		GLib::Idle.add do
			if @command_received
				@disable_buttons = nil
				@main_loop.quit
			else
				true
			end
		end
		@main_loop.run
	end
	
	def self.put_dice_in_order
		sorted_dice = @die_values.each_with_index.sort_by { |value, _| value }
		@dice_grid.children.each{ |child| @dice_grid.remove(child) }
		column = -1
		sorted_dice.each_with_index{ |(value, die), _|
			@die_buttons[die].child.set_markup("<span size='72000'>&#x268#{value - 1};</span>")
			@dice_grid.attach(@die_buttons[die], column += 1, 0, 1, 1)
		}
	end
	
	def self.update_roll_amount_text
		if @roll_number == @@rolls_per_turn
			@information_label.set_text("No more rolls. You must enter a score for a category, even if you must enter 0.")
		else
			@information_label.set_text("This is roll number #{@roll_number} out of #{@@rolls_per_turn}. You must enter a score for a category by the last roll, even if you must enter 0.\nClick on any dice you wish to save, or click on any saved dice you wish to un-save.")
		end
	end

	def self.create_window
		@main_window = Gtk::Window.new(:toplevel)
		@main_window.set_keep_above(true)
		@main_window.set_title("Jastev")
		
		parent_grid = Gtk::Grid.new
		main_grid = Gtk::Grid.new
		info_grid = Gtk::Grid.new
		@dice_grid = Gtk::Grid.new
		
		main_notebook = Gtk::Notebook.new
		
		main_notebook.append_page(parent_grid, Gtk::Label.new("Game"))
		
		scores_grid = Gtk::Grid.new
		
		if @@solo_mode.nil?
			main_notebook.append_page(scores_grid, Gtk::Label.new("Scores"))
			@all_scores = {}
			@label_score = Gtk::Label.new("No one has scored yet.")
			@label_score.override_font(Pango::FontDescription.new("Monospace 12"))
			scores_grid.attach(@label_score, 0, 0, 1, 1)
		end
			
		@main_window.add(main_notebook)
		
		parent_grid.attach(main_grid, 0, 0, 1, 1)
		parent_grid.attach(info_grid, 0, 1, 1, 1)
		parent_grid.attach(@dice_grid, 0, 2, 1, 1)
		
		all_score_names = [ "Upper Section", "Ones", "Twos", "Threes", "Fours", "Fives", "Sixes", "Upper Section Bonus", "JASTEV Bonus", "Total Score", "Lower Section", "3 of a Kind", "4 of a Kind", "Full House", "Small Straight", "Large Straight", "JASTEV", "Chance" ]
		@all_score_boxes = {}
		@selected_score_name = nil
		@selected_score_box = nil
		@do_not_score_again = nil
		@game_is_over = nil
		@disable_buttons = nil
		@finished_categories = []
		die_labels = []
		@die_buttons = []
		die_saved_state = []
		@roll_number = 0
		@turn_number = 0
		@upper_section_points = 0
		@upper_section_bonus = 35
		@multiple_jastev_bonus = 100
		@maximum_turns = 13
		@grandtotal_score = 0
		@total_jastev_bonus = 0
		@cholen_rule = nil
		@potential_score_labels = {}
		@final_score_labels = {}
		@die_values = []
		5.times{ |i| @die_values << nil }

		row = 0
		column = -1
		misc_label_names = [ "Categories", "Potential Score", "Final Score", "Categories", "        Potential Score          ", "Final Score" ]
		misc_labels = {}
		misc_label_names.each{ |name|
			misc_labels[name] = Gtk::Label.new(name)
			misc_labels[name].set_tooltip_text(@tooltips[name])
			main_grid.attach(misc_labels[name], column += 1, row, 1, 1)
			if name == "Final Score"
				main_grid.attach(Gtk::Label.new("                                        "), column += 1, row, 1, 1)
				row = 0
				column = 3
			end
		}
		
		main_grid.attach(Gtk::Label.new, 0, row += 1, 1, 1)

		column = 0
		all_score_names.each{ |name|
			if name == "Upper Section Bonus"
				@all_score_boxes[name] = Gtk::Label.new(name)
				@potential_score_labels[name] = Gtk::Label.new("63")
				@final_score_labels[name] = Gtk::Label.new("0")
			elsif name == "Total Score" || name == "JASTEV Bonus"
				@all_score_boxes[name] = Gtk::Label.new(name)
				@potential_score_labels[name] = Gtk::Label.new
				@final_score_labels[name] = Gtk::Label.new("0")
			elsif name == "Upper Section"
				@all_score_boxes[name] = Gtk::Label.new(name)
				@potential_score_labels[name] = Gtk::Label.new
				@final_score_labels[name] = Gtk::Label.new
			elsif name == "Lower Section"
				@all_score_boxes[name] = Gtk::Label.new(name)
				@potential_score_labels[name] = Gtk::Label.new
				@final_score_labels[name] = Gtk::Label.new
				column = 4
				row = 1
			else
				@all_score_boxes[name] = Gtk::Button.new(:label => name)
				change_border_color(@all_score_boxes[name], "white")
				
				@potential_score_labels[name] = Gtk::Label.new("Waiting for roll")
				@potential_score_labels[name].set_tooltip_text("How many points you can get in this category based on the current value of the dice.\n\nIf this is the category you want to place this turn's score in then click this category's box to the left then click \"Confirm Category\" below.")	

				@final_score_labels[name] = Gtk::Label.new("INCOMPLETE")
				@final_score_labels[name].set_tooltip_text("Your Final Score for this category. The game ends once you have entered a score for every category.")
				
				@all_score_boxes[name].signal_connect("clicked") do |widget, event|
					if @roll_number > 0 && !@finished_categories.include?(name) && @game_is_over.nil?
						if @cholen_rule == "Must select JASTEV" && name != "JASTEV"
							next
						elsif @cholen_rule == "Match die number" && name != @required_upper_choice
							next
						elsif @cholen_rule == "Lower Section" && name !~ /3 of a Kind|4 of a Kind|Full House|Small Straight|Large Straight|Chance/
							next
						end
						@all_score_boxes.each{ |name, button| change_border_color(button, "white") if !@finished_categories.include?(name) && name !~ /Upper Section Bonus|Total Score|Upper Section|Lower Section|JASTEV Bonus/ }
						if @selected_score_name == name
							change_border_color(widget, "white")
							@selected_score_name = nil
							@selected_score_box = nil
						else
							change_border_color(widget, "green")
							@selected_score_name = name
							@selected_score_box = widget
						end
					end
				end
			end
			
			@all_score_boxes[name].set_tooltip_text(@tooltips[name])
			main_grid.attach(@all_score_boxes[name], column, row += 1, 1, 1)
			main_grid.attach(@potential_score_labels[name], column + 1, row, 1, 1)
			main_grid.attach(@final_score_labels[name], column + 2, row, 1, 1)
		}
		
		row += 2
		
		roll_dice_button = Gtk::Button.new(:label => "Roll Dice")
		confirm_button = Gtk::Button.new(:label => "Confirm Category")
		get_stats_button = Gtk::Button.new(:label => "Get Stats")
		
		roll_dice_button.set_tooltip_text(@tooltips["Roll Dice"])
		confirm_button.set_tooltip_text(@tooltips["Confirm Category"])
		get_stats_button.set_tooltip_text(@tooltips["Get Stats"])
		
		main_grid.attach(roll_dice_button, 0, row += 1, 1, 1)
		main_grid.attach(confirm_button, 1, row, 1, 1)
		main_grid.attach(get_stats_button, 2, row, 1, 1)
		
		main_grid.attach(Gtk::Label.new, 0, row += 1, 1, 1)
		
		@information_label = Gtk::Label.new("Click \"Roll Dice\" above to get started.\nHover over text to see tooltip information for that part of the game.")
		@information_label.set_line_wrap(true)
		info_grid.attach(@information_label, 0, row += 1, 1, 1)
		
		5.times do |i|
			label = Gtk::Label.new
			button = Gtk::Button.new
			button.add(label)
			die_labels << label
			@die_buttons << button
			die_saved_state[i] = false
			
			change_border_color(button, "white")

			button.signal_connect("clicked") do |widget, event|
				if @roll_number > 0 && @roll_number < @@rolls_per_turn && @game_is_over.nil?
					die_saved_state[i] = !die_saved_state[i]
					if die_saved_state[i]
						change_border_color(button, "green")
					else
						change_border_color(button, "white")
					end
				end
			end

			@dice_grid.attach(button, i, 0, 1, 1)
		end
		
		@die_values.each_with_index { |_, die| die_labels[die].set_markup("<span size='54500'>&#x25FB;</span>") }
		
		roll_dice_button.signal_connect("clicked") do
			if @cholen_rule.nil? && @game_is_over.nil? && @disable_buttons.nil?
				@roll_number += 1
				@selected_score_name = nil
				@selected_score_box = nil
				if @roll_number <= @@rolls_per_turn
					@all_score_boxes.each{ |name, button| change_border_color(button, "white") if !@finished_categories.include?(name) && name !~ /Upper Section Bonus|Total Score|Upper Section|Lower Section|JASTEV Bonus/ }
					if @@solo_mode
						@die_values.each_with_index { |_, die|
							unless die_saved_state[die]
								@die_values[die] = rand(1..6)
							end
						}
					else
						saved_dice_values = []
						die_saved_state.each_with_index{ |die_state, index|
							if die_state
								saved_dice_values.push(@die_values[index])
							else
								@die_values[index] = nil
							end
						}
						if saved_dice_values.count > 0
							put "whisper ooc #{@@game_master} Following Dice Saved: #{saved_dice_values.join(' ')} Command: Roll Dice."
						else
							put "whisper ooc #{@@game_master} Command: Roll Dice."
						end
						run_main_loop
					end
					
					update_roll_amount_text
					
					@information_label.set_tooltip_text(nil)
				end
				
				put_dice_in_order
				
				if @roll_number >= @@rolls_per_turn
					@die_buttons.each_with_index { |button, die| change_border_color(button, "red") }
				end
				
				show_score("potential")
			end
		end
		
		confirm_button.signal_connect("clicked") do
			if @roll_number > 0 && @selected_score_name && @game_is_over.nil? && @disable_buttons.nil?
				if @@solo_mode
					show_score("final")
				else
					put "whisper ooc #{@@game_master} Command: Confirm Category #{@selected_score_name}"
					show_score("final")
				end

				@die_buttons.each{ |button| change_border_color(button, "white") }
				die_saved_state.map! { false }
				@die_values.map! { nil }
				@roll_number = 0
				@die_values.each_with_index { |_, die| die_labels[die].set_markup("<span size='54500'>&#x25FB;</span>") }
				@cholen_rule = nil

				@potential_score_labels.each{ |name,label| @potential_score_labels[name].set_text("Waiting for roll") if !@finished_categories.include?(name) && name !~ /Upper Section Bonus|Total Score|Upper Section|Lower Section|JASTEV Bonus/ }
				@information_label.set_text("You have finished this turn. Click \"Roll Dice\" above to start next turn.")
				
				@turn_number += 1
				if @turn_number >= @maximum_turns
					@information_label.set_text("You have filled out every category.\nYour Total Score for this game is: #{@grandtotal_score}")
					@game_is_over = true
				end
			end
		end
		
		get_stats_button.signal_connect("clicked") do
			if @game_is_over.nil?
				put "whisper ooc #{@@game_master} Command: Need Stats."
				run_main_loop
			end
		end
		
		@main_window.signal_connect("destroy") do
			@main_window.close
			@main_window = nil
			Gtk.main_quit
			kill_script "jastev" if running? "jastev"
		end
		
		@main_window.show_all
	end
	
	def self.watching
		before_dying{
			@main_window.close if @main_window
		}
	
		while line = get
			if line =~ /\(OOC\) #{@@game_master}'s player whispers, "You rolled\: (.*)\."/
				rolled_numbers = line.scan(/\d+/).map(&:to_i)
				@die_values.map! { nil } if rolled_numbers.count == 5
				@die_values.each_with_index { |value, index| @die_values[index] = rolled_numbers.shift if value.nil? }
				@command_received = true
			elsif line =~ /\(OOC\) #{@@game_master}'s player whispers, "Number of rolls per turn: (\d+)/
				@@rolls_per_turn = $1.to_i
			elsif line =~ /\(OOC\) #{@@game_master}'s player whispers, "Your stats:/
				@die_values = $1.split.map(&:to_i) if line =~ /Current Dice\: (.*?)\, /
				put_dice_in_order
				
				if line =~ /Rolls this turn\: (.*?)\, /
					@roll_number = $1.to_i
					update_roll_amount_text
				end
				
				
				line.scan(/(Ones|Twos|Threes|Fours|Fives|Sixes|3 of a Kind|4 of a Kind|Full House|Small Straight|Large Straight|JASTEV|Chance|JASTEV Bonus)\: (.*?)\, / ) do |match|
					category, score = match
					@final_score_labels[category].set_text(score.to_s)
					if category == "JASTEV Bonus"
						@total_jastev_bonus = score.to_i
					else category != "JASTEV Bonus"
						@potential_score_labels[category].set_text("COMPLETED")
						change_border_color(@final_score_labels[category], "red")
						change_border_color(@potential_score_labels[category], "red")
						@finished_categories.push(category)
						change_border_color(@all_score_boxes[category], "red")
					end
					
					@upper_section_points += score.to_i if category =~ /Ones|Twos|Threes|Fours|Fives|Sixes/
				end
				upper_section_check
				
				if line =~ /Grand Total Score\: (\d+)\./
					@grandtotal_score = $1.to_i
					@final_score_labels["Total Score"].set_text(@grandtotal_score.to_s)
				end
				@command_received = true
			elsif line =~ /^#{@@game_master} says\, \"This game of Jastev is over\.\"/
				@information_label.set_text("THIS GAME IS OVER. NO MORE MOVES CAN BE MADE.")
				@game_is_over = true
			elsif line =~ /^#{@@game_master} says\, \"([a-zA-Z]+) .* Grand Total Score\: (\d+)/
				person = $1
				score = $2.to_i
				@all_scores[person] = score
				scores_in_order = @all_scores.sort_by{|key,value| value}.reverse
				longest_name = @all_scores.keys.max_by(&:length).length
				text = ""
				scores_in_order.each{ |person,score| text += "#{person.ljust(longest_name)}     #{score}\n" }
				@label_score.set_text(text)
			end
		end
	end
end

Gtk.queue {
	JastevMain.create_window		
	Gtk.main
}

JastevMain.watching