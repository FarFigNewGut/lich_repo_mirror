=begin
    Millicent gown shifting script
    Designed to allow you to pick all three options of a Millicent gown and have it cycle until found.
    Does not support the NOTHING option for the first descriptor, be more stylish than that!

    SYNTAX - ;tmillicent help

       todo: n/a
     author: Tysong
       name: tmillicent
       tags: millicent, millicent gown, gown
    version: 1.0

    changelog:
        1.0 (2018-11-04)
            Initial Release
=end

millicent_descriptor = Array["alabaster", "amber", "amethyst", "apricot", "aquamarine", "argent", "ash grey", "aubergine", "azure", "back-laced", "beaded", "beige", "beribboned", "black", "blood red", "blue", "bold", "bone white", "bronze", "brown", "burgundy", "carmine", "celadon", "cerulean", "chalk white", "champagne", "charcoal grey", "cherry red", "chestnut", "cinnabar", "cinnamon", "citrine", "claret", "clingy", "copper-colore", "cranberry", "cream-colored", "crimson", "crocheted", "crystal blue", "dainty", "dappled grey", "daring", "delicate", "dove grey", "ebon", "ecru", "elaborate", "elegant", "embroidered", "emerald", "exquisite", "fancy", "festive", "fiery red", "fine", "fitted", "flame-colored", "flashy", "forest green", "front-laced", "garnet-hued", "ghostly white", "golden", "golden brown", "graceful", "heliotrope", "honey-hued", "ice blue", "indigo", "ivory", "jade green", "jet black", "laced", "lapis blue", "lavender", "layered", "leaf green", "lilac", "lime green", "lovely", "luxurious", "magenta", "mahogany", "maroon", "mauve", "midnight blue", "milk white", "mint green", "misty grey", "modest", "moss green", "mulberry", "multihued", "murrey", "ocher", "olive", "opulent", "orange", "orchid", "particolored", "pea green", "peach", "pearl grey", "pearl-hued", "pearlescent", "periwinkle", "pink", "pitch black", "plain", "plum", "puce", "radiant", "raspberry", "raven black", "red", "resplendent", "rich", "rose", "royal blue", "ruby red", "ruched", "russet", "rust-colored", "sable", "saffron", "sanguine", "sapphire blue", "sashed", "scarlet", "sea green", "sepia", "sequined", "shadowy", "side-laced", "sienna", "silvery", "silvery white", "simple", "sky blue", "sleek", "smoky grey", "snow white", "soot black", "sorrel", "splendid", "stylish", "supple", "tailored", "tan", "taupe", "tawny", "teal", "turquoise", "two-toned", "umber", "verdigris", "vermilion", "violet", "viridian", "white", "wine-colored", "winter white", "yellow"]
millicent_material = Array["broadcloth", "brocade", "brocatelle", "brushed cotton", "calico", "cambric", "chambray", "cotton", "damask", "gingham", "lace", "linen", "muslin", "organdy", "panne velvet", "samite", "satin", "silk", "spidersilk", "taffeta", "twill", "velour", "velvet", "watered silk", "wool"]
millicent_noun = Array["ballgown", "bliaut", "blouse", "bodice", "chemise", "dress", "frock", "gown", "houppelande", "kirtle", "pinafore", "robe", "shift", "shirt", "sundress", "tunic", "vest"]
counter = 0

if variable[1] =~ /help/i
	respond "
This scripts help you cycle your Millicent gown to the description you desire.
    SYNTAX: ;tmillicent # # #
    First  # is descriptor
    Second # is material
    Third  # is noun"
	respond ""
	help_text = ""
	counter = 0
	respond "Descriptors:"
	millicent_descriptor.each { |description|
		help_text += "#{counter}".rjust(3) + ": #{description}".ljust(18)
		counter += 1
		if counter % 5 == 0
			respond help_text
			help_text = ""
		end
	}
	respond help_text if help_text != ""
	help_text = ""
	counter = 0
	respond ""
	respond "Materials:"
	millicent_material.each { |material|
		help_text += "#{counter}".rjust(3) + ": #{material}".ljust(18)
		counter += 1
		if counter % 5 == 0
			respond help_text
			help_text = ""
		end
	}
	respond help_text if help_text != ""
	help_text = ""
	counter = 0
	respond ""
	respond "Nouns:"
	millicent_noun.each { |noun|
		help_text += "#{counter}".rjust(3) + ": #{noun}".ljust(18)
		counter += 1
		if counter % 5 == 0
			respond help_text
			help_text = ""
		end
	}
	respond help_text if help_text != ""
	exit
elsif variable[1].nil? || variable[2].nil? || variable[3].nil?
	respond "You need to specify ;tmillicent # # #"
	respond "As shown in ;tmillicent help"
	exit
end

descriptor = variable[1].to_i
material   = variable[2].to_i
noun       = variable[3].to_i

respond "Trying to create: #{millicent_descriptor[descriptor]} #{millicent_material[material]} #{millicent_noun[noun]}"

line = dothistimeout "hands", 5, /You have (?:a|an) (.*) in your right hand\.|You have nothing in your hands\./
if line =~ /You have nothing in your hands\./
	respond "You need to get out your Millicent gown for this to work!"
	exit
elsif line =~ /You have (?:a|an) (.*) in your right hand\./
	item_found = $1
else
	respond "something went wrong"
	exit
end

item_noun       = GameObj.right_hand.noun
item_material   = GameObj.right_hand.name.split(' ')[0...-1].join(' ')
item_descriptor = ""

counter_touches = 0
loop {
	line = dothistimeout "hands", 5, /You have (?:a|an) (.*) #{item_material} #{item_noun} in your right hand\.|You have (?:a|an) #{item_material} #{item_noun} in your right hand\./
	if line =~ /You have (?:a|an) (.*) #{item_material} #{item_noun} in your right hand\./
		item_found = $1
	end
	if item_found == millicent_descriptor[descriptor]
		item_descriptor = item_found
		break
	else
		fput "touch #{item_noun}"
		counter_touches += 1
	end
}
counter_pokes = 0
loop {
	line = dothistimeout "hands", 5, /You have (?:a|an) #{millicent_descriptor[descriptor]} (.*) #{item_noun} in your right hand\./
	if line =~ /You have (?:a|an) #{millicent_descriptor[descriptor]} (.*) #{item_noun} in your right hand\./
		item_found = $1
	end
	if item_found == millicent_material[material]
		break
	else
		fput "poke #{item_noun}"
		counter_pokes += 1
	end
}
counter_rubs = 0
loop {
	line = dothistimeout "hands", 5, /You have (?:a|an) #{millicent_descriptor[descriptor]} #{millicent_material[material]} (.*) in your right hand\./
	if line =~ /You have (?:a|an) #{millicent_descriptor[descriptor]} #{millicent_material[material]} (.*) in your right hand\./
		item_found = $1
	end
	if item_found == millicent_noun[noun]
		break
	else
		fput "rub #{item_found}"
		counter_rubs += 1
	end
}

respond "Item Completed after #{counter_touches} touches for the descriptor, #{counter_pokes} pokes for the material, and #{counter_rubs} rubs for the noun. Creating the #{millicent_descriptor[descriptor]} #{millicent_material[material]} #{millicent_noun[noun]}."