=begin

A simple script to bundle all those notes from various events, such as Rings of Lumnis.  This script is not smart, you must manually make a bundle of at least two notes of each type you wish it to find first.  It also likely will not enjoy full stacks of 100 notes.  This is not a highly optimized and smart script, it is very dumb.  I do not plan to make it smarter, as I made it mostly for my own purposes, and decided to upload it to help others in my shoes.

This script has been LIGHTLY tested, so if you notice any issues, please let me know.

Author: Claudaro
Version: 1.0

TAGS: notes, lighten, deepen, bundle

NOTE:  use ";vars set notesack=YOUR CONTAINER" to set a container that has all your notes and stacks of notes in it.


=end


if Vars.notesack.nil?
	echo "Set a notesack first before trying to run this!  ;vars set notesack=container to do so, where container is your container that has your notes and stacks of notes in it."
	exit
end


container = Vars.notesack

notetype = ["pale", "light", "bright", "vivid", "deep"]
countdesc = ["other", "third", "fourth", "fifth", "sixth", "seventh"]
count = 0

fput "stow all"
notetype.each{|currentnote|
	loop do
		count = count +1
		if count == 1
			fput "get my #{currentnote} note from my #{container}"
		else
			countop = countdesc[(count-2)]
			fput "get my #{countop} #{currentnote} note from my #{container}"
		end
		pause 1
		if GameObj.right_hand.name == "Empty"
			break
		end
		tempnote = GameObj.right_hand.name.to_s[0...-1]
		tempstring = ("name=" + tempnote + " in my " + container + ";get item from my " + container + ";bundle").to_s
		start_script("foreach", [tempstring])
		wait_while {running?("foreach")}
		pause 1
		fput "stow all"
	end
	count = 0
}