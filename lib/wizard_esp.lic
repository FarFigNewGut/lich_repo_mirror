=begin
	Script: wizard_esp
	Author: Drafix
	Version: 0.7
	Notes: This script fixes the output of new ESP system for Wizard FE users

	The format is as follows:
		[Channel]-ESP:Person: "Message"
		[Channel]-ESP:Person->Target: "You, sir, are a saucy, empty-heared egg-shell!"

	Sample:
		[General]-ESP:Treauge->you: "You, sir, are a saucy, empty-heared egg-shell!"
		[General]-ESP:Treauge: "But I digress."
		[PrivateTo]-ESP:Draccor: "Hrmmmm." - (02:52:29)
		[Private]-ESP:Draccor: "Weak sauce." - (02:52:29)

	Options:
		- timestamp - enable a timestamp at the end of the message:
			[General]-ESP:Treauge: "Too much for you to handle." - (01:49:51)

			;wizard_esp timestamp to toggle it
			Setting is saved automatically. Run it again with that option to toggle it off.

   Changelog:
		0.1 - first release
		0.2 - change focused messages to [Private] / [PrivateTo] channels.
		0.3 - decode xml entities
		0.4 - fix when someone thinks with a tone to someone
		0.5 - fix dead people, fix that extra ']' at the end of someone's name when you think to them
		0.6 - fix dead people on help channel
		0.7 - fixed missing ] thank Arianiss
=end
Settings[:timestamp] ||= false

if script.vars[1] == 'timestamp'
	Settings[:timestamp] = !Settings[:timestamp]
	echo "Timestamp is set to #{Settings[:timestamp]}"
end
timestamp = Settings[:timestamp]

def decode(line)
	unescape = { 'lt' => '<', 'gt' => '>', 'quot' => '"', 'apos' => "'", 'amp' => '&' }
	line.gsub(/&(#{unescape.keys.join('|')});/) { unescape[$1] }
end

begin
	seen = false
	action = proc { |server_string|
		if server_string =~ /^<pushStream id="thoughts"\/>\[(.+)\] (.+)(?:,|:) "(.+)"/
			channel = $1
			persons = $2
			message = $3
			message = decode(message)
			channel = strip_xml(channel)
			if channel =~ /Focused to (.+)/
				channel = "PrivateTo"
				persons = $1
			elsif channel =~ /^Focused$/
				channel = "Private"
			end
			persons = strip_xml(persons)
			if persons =~ /Thinking.* to (.+), (.+) \w+$/
				target = $1
				thinker = $2
				respond "You hear the faint thoughts of [#{channel}]-ESP:#{thinker}->#{target} echo in your mind:\r\n\"#{message}\"#{(' - (' + Time.now.strftime('%H:%M:%S') + ')') if timestamp}"
			elsif persons =~ /The ghost of ([A-Z][a-z]+)/
				persons = $1
				respond "You hear the faint thoughts of [#{channel}]-ESP:#{persons}(Dead) echo in your mind:\r\n\"#{message}\"#{(' - (' + Time.now.strftime('%H:%M:%S') + ')') if timestamp}"
			else
				respond "You hear the faint thoughts of [#{channel}]-ESP:#{persons} echo in your mind:\r\n\"#{message}\"#{(' - (' + Time.now.strftime('%H:%M:%S') + ')') if timestamp}"
			end

			seen = true
			nil
		elsif seen && server_string =~ /popStream/
			seen = false
			nil
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}", action)
	mutex = Mutex.new
	resource = ConditionVariable.new

	mutex.synchronize {
		resource.wait(mutex)
	}
ensure
	DownstreamHook.remove("#{script.name}")
end