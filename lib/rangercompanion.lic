=begin
Ranger affiniity script
    gains affinity with your summoned companion in an outdoor room, IMT TC
    Authors: Chuco(bbwhited@icloud.com)
     Contributors: Dreaven, Tysong
    Version 1.1.9
        Version History: 
            09/03/2023 -- Initial creation
            09/03/2023 -- fixed all errors

            Notes: Need to set Vars
                Vars set companion=tiger
                vars set feed=leg
                vars set feedbag = cloak
                need to set location check for 2300
                need to do setup window configuration and save variables 

=end

rangeraffect = ["rub", "pet", "play", "rest", "scratch", "kiss", "lean", "push", "pull", "tap", "dust", "hold"]
affinitycheck = ["glances back at you with familiarity.", "returns the look with a sense of contentment.", "gives a warm, friendly look in return.", "gazes back at you as if to affirm your companionship", "meets your gaze with one like that of a longtime friend.", "gazes back at you with strong admiration", "meets your gaze and returns a strong feeling of fondness", "gazes back at you as if to impart a solid sense of commitment", "looks directly into your eyes and offers a sense of undying loyalty"]

if !Spell[630].known? 
    echo "you dont seem to be a qualified ranger to have an animal companion"
    exit
end

location = ["2300"]

# add affinity.call
def affinity()
    fput "gaze #{UserVars.companion}"
    while(line = get) 
        if line =~ /looks directly into your eyes and offers a sense of undying loyalty/
            echo "you need no further affinity for your summoned companion"
            waitrt?
            exit
        else
            waitrt?
            return
        end
    end
end

#add affection.call
def affection()
    rangeraffect = ["rub", "pet", "play", "rest", "scratch", "kiss", "lean", "push", "pull", "tap", "dust", "hold"]
        fput "#{rangeraffect.sample} #{UserVars.companion}"
            waitrt?
            stand if !standing?
    
end
#add feedcompanion definition using vars
def feedcompanion()
    container = GameObj.inv.find{ |item| item.name =~ /#{UserVars.feedbag}/ }
        fput "look in ##{container}"
        if container.contents.find{ |item| item.name =~ /cockatrice leg/ }
            fput "get #{UserVars.feed} from my #{UserVars.feedbag}"
            fput "feed #{UserVars.companion}"
            waitrt?
            fput "put #{UserVars.feed} in my #{UserVars.feedbag}"
        else
            buyfeed
        end
end

# add timer
def timetonext()
    t = Time.new(0)
    countdown_time_in_seconds = 1200 # change this value

    countdown_time_in_seconds.downto(0) do |seconds|
    #puts (t + seconds).strftime('%H:%M:%S')
    sleep 1
    end
end
#add buyfeed.call so will visit honeybeer inn if no feed in feedbag while in IMT
def buyfeed()
    Script.run "go2", "bank"
        wait_while {running? "go2"}
        fput "withdraw 1000 silvers"
        Script.run "go2", "3449"
            wait_while {running? "go2"}
            fput "order 9"
            fput "get #{UserVars.feed} from bar"
            fput "put #{UserVars.feed} in my #{UserVars.feedbag}"
            Script.run "go2", "bank"
                wait_while{running? "go2"}
                fput "depos all"
                Script.run "go2", "town"
                    wait_while {running? "go2"}
end


loop {
    affinity
    sleep 1
    affection
    sleep 1
    feedcompanion
    timetonext
}
