# Vim ruby syntax highlighting, plz
=begin
*****EBON GATE CAROUSEL RIDING SCRIPT!*****
Come play with us, Kaldonis!

Forever.....
           .....and ever.....
                            ......and EVAR!
*******************************************

RULES
1. You must have a carousel
2. You must have STOW SET on a container
3. You must have silvers in your bank account

Usage: ;carousel2016

YES THAT'S IT!

Start it from anywhere, laying down, already riding, anything.

Will use a standing CANE if you have one.

Withdraws silvers in 10k or 50k increments (the latter if you have a cane).

Should bundle your tickets when necessary and spam the shit out of everyone else.

Squelches most carousel actions of others.

    author: Kaldonis
    name: carousel2016
    tags: ebon gate, games, eg
    version: 2.4

(Some code for standing and moving taken from Caithris's carousel.lic)

=end

=begin
Versions
  2.4   Bug with ExitCrowded fixed
  2.3   More squelching, no more attempts to collect T5 spilled gold rings
  2.2   Squelches most carousel and ticket activity of others
  2.1 	Will take two tours of all the rooms looking for a free creature before leaving
        Picks up all rings for T5 and continues?
  2.0 	Solve the Bad Room, now that GM Vanah confirmed it is a feature not a bug.
  1.8 	encumbrance bug fix
  1.7 	exits if you don't have a carousel
  1.6 	hard checks for RT in all loops
  1.5 	bundles tickets
  1.4 	debugging
  1.3 	learns to move rooms (ibid)
  1.2 	works without a cane (some code from carousel.lic)
  1.1 	debugging
  1.0 	first release 
=end

silence_me
findcreature = 0

#removes <a exist="37575916" noun="tickets">

roomspam = /(removes|grabs) \<a exist=\"[0-9]*\" noun=\"tickets\"\>some Ebon Gate prize tickets|combines the value of|A lanky half-elven child has a short word with|reaches away from (his|her) carousel animal and grabs for the ring dispenser|(put|tucks) \<a exist=\"[0-9]*\" noun=\"tickets\"\>some Ebon Gate prize tickets|misses the rings by several feet and goes tumbling off|stands up|struggles to stand, but fails|A lanky half-elven child heads over to|climbs on top of a|together before jumping off the moving platform of|You are already sitting on|You are now in an offensive stance|You (tuck|put) the \<a exist=\"[0-9]*\" noun=\"tickets\"\>Ebon Gate prize tickets|You will have to stand up first|You glance through some wooden carousel creatures and decide to ride|Since you fell off your carousel animal, you bet you don't get a prize|connects with the rings and comes away with|sits up and scoots next to|struggles to kneel, but fails/

style = proc { |server_string|
  if server_string =~ /#{roomspam}/
    nil
  else
    server_string
  end
}

DownstreamHook.add('carousel2016',style)
before_dying { DownstreamHook.remove('carousel2016') }

Begin:
  empty_hands
  match "Cane", "You grab"
  match "Cane", "You remove"
  match "NoCane", "Get what"
  fput "get my cane"
matchwait

Cane:
  cane = true
  goto "Ride"

NoCane:
  cane = false
  goto "Ride"

Ride:
  match "Riding", "You glance through some wooden carousel creatures and decide to ride"
  match "Riding", "You climb on top of"
  match "Riding", "You are already sitting on"
  match "Riding", "You must stand up off"
  match "RideWait", "There are no free wooden carousel creatures here"
  match "GoGame", "Where are you trying to go"
  match "StandUp", "You will have to stand up first"
  match "Move" ,"There are no free wooden carousel creatures here."
  match "GetMoney", "If you ain't paying, you can't ride for free"
  match "Ride", "...wait"
  sleep 0.5
  waitrt?
  fput "go creature"
matchwait

GoGame:
  start_script 'go2', ["13193"]
  wait_while { running?('go2') }

GetMoney:
  start_script 'go2', ["bank"]
  wait_while { running?('go2') }
  fput "depo all"
  if cane
    fput "withdraw 50000 sil"
  else
    fput "withdraw 10000 sil"
  end
  move "go arch"
  fput "get my carousel"
  goto "EnterCarousel"

EnterCarousel:
 match "WaitCarousel", "Your painted tin carousel trembles for a moment but nothing happens."
 match "StashPrize", "You turn the key on the bottom of your painted tin carousel and set it on your open palm"
 match "NoCarousel", "What were you referring to"
 fput "pet my carousel"
matchwait

NoCarousel:
  echo "You need to complete the quest to get a carousel before you can play!"
  echo "...or you need to have your carousel in an open container"
  exit

WaitCarousel:
 sleep 5
 goto "EnterCarousel"

Riding:
  findcreature = 0
  match "BadRoom","Get what"
  match "BadRoom","You remove"
  match "BadRoom","You grab"
  match "GetMoney","Finding that you do not have the coins"
  match "CheckPrize" ,"You hand over the coins"
  match "Ride", "The lanky half-elven boy frowns at you"
  match "StashPrize", "You need at least one hand free"
  match "StashPrize", "You pick up some Ebon Gate prize tickets"
  match "Unload", "You have too many items on you to consider that"
  match "WaitRiding", "You are unable to handle the additional load some Ebon Gate prize tickets would add"
  match "Riding", "...wait"
  sleep 0.5
  waitrt?
  fput "get ticket"
matchwait

#SEND[Vanah] It's not a bug, that's a merchanting room.  There is no game in the fourth room on the carousel.
# Me: Why, it's confusing...?
#SEND[Vanah] Flavor!
BadRoom:
  echo "You cannot play in this room.  Do not BUG ROOM.  This is a feature for flavor."
  if cane
    sleep 0.5
    waitrt?
    fput "stow l"
  else
    sleep 0.5
    waitrt?
    fput "stow r"
  end
  fput "stand"
  move "southeast"
  goto "Ride"

WaitRiding:
 sleep 5
 goto "Riding"
# do we eventually move if we can't pick up tickets someone dropped?

CheckPrize:
  match "StandUp", "You miss the rings by several feet"
  match "StashPrize", "Great job, mate"
  #match "StashPrize", "Your fingers grace the rings and you manage to pull"
#  match "GetRings", "You grab the ring arm with both hands and pull, bringing the whole mechanism down"
  match "StashPrize", "You grab the ring arm with both hands and pull, bringing the whole mechanism down"
matchwait

# this is dodgy and you may be too encumbered anyway
GetRings:
  waitrt?
  if cane
    sleep 0.5
    waitrt?
    fput "stow l"
  else
    sleep 0.5
    waitrt?
    fput "stow r"
  end
  match "Ride","You already have that"
  match "GetRings","You pick up"
  if cane
    sleep 0.5
    waitrt?
    multifput "get ring","stow l"
  else
    sleep 0.5
    waitrt?
    multifput "get ring","stow r"
  end
matchwait

StashPrize:
  match "Ride","You tuck"
  match "Ride","You slip"
  match "Ride","You put"
  match "Unload","Won't fit"
  match "Ride","You are not holding anything"
  match "StashPrize", "...wait"
  if cane
    sleep 0.5
    waitrt?
    fput "stow l"
  else
    sleep 0.5
    waitrt?
    fput "stow r"
  end
matchwait

StandUp:
  waitrt?
  fput "stance offensive"   
  match "Ride", "That would accomplish nothing"
  match "Ride", "Using your"
  match "Ride" ,"You stand back up"
  match "Ride" ,"You are already standing."
  match "StandUp" ,"You struggle to stand, but end up falling over."
  match "StandUp" ,"You struggle, but fail to stand."
  match "StandUp", "...wait"
#  match "Ride" ,"Roundtime:"
  sleep 1
  waitrt?
  if cane
    fput "push my cane"
  else
    fput "stand"
#    dothistimeout "stand", 5, /^You stand/
  end
matchwait

Unload:
  echo "Too much loot, go unload it!"
  empty_hands
  fput "get my Ebon ticket"
  
BundleTickets:
  match "BundleTickets", "With great effort you combine the value of your two tickets"
  match "Begin", "Get what"
  match "Begin", "You do not have anything to bundle"
  fput "get my other Ebon ticket"
  fput "bundle"
matchwait

RideWait:
  if findcreature > 6
    goto "ExitCrowded"
  end
  findcreature += 1
  match "northeast" ,"Obvious paths: northeast, northwest, out"
  match "northwest" ,"Obvious paths: southwest, northwest, out"
  #match "exit_crowded" ,"Obvious paths: southeast, southwest, out"
  match "southwest" ,"Obvious paths: southeast, southwest, out"
  match "ExitCrowded" ,"Obvious paths: northeast, southeast, out"
  #match "southeast" ,"Obvious paths: northeast, southeast, out"
  # presently we skip this ... need a counter on this loop or something
#  match "exit_crowded" ,"Obvious paths: southeast, southwest, out"
  fput "look"
matchwait

northwest:
  move nw
  goto "Ride"

northeast:
  move ne
  goto "Ride"

southwest:
  move sw
  echo "This room is NOT for playing games!"
  echo "You can get on the creature, but not get a ticket..."
  move se
  goto "Ride"

southeast:
  move se
  goto "Ride"

ExitCrowded:
  echo "No more seats available."
  echo "We will try to leave and get a free one with the carousel..."
  goto "GetMoney"

