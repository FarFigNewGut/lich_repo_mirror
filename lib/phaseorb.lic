=begin
Cast 704 at gems to find orbs.  You need the following containers defined via ";settings add <container> <your-container>": lootsack, orbsack
lootsack should contain gems to be checked and orbsack is where orbs will be put when discovered.

Thanks to Tillmen for providing the code for jackers like myself.
=end

if Lich.lootsack.nil?
	echo "You need to have a lootsack set.  This is where your gems should be.  ;settings add lootsack <container>"
elsif Lich.orbsack.nil?
	echo "You need to specify an orbsack where we'll place your orb gems.  ;settings add orbsack <container>"
	exit
end

unless Char.prof == 'Sorcerer'
	echo "You're a jerk and I hate you."
	exit
end

unless container = GameObj.inv.find { |obj| obj.noun.downcase == Lich.lootsack.downcase }
	unless container = GameObj.inv.find { |obj| obj.name =~ /#{Lich.lootsack.join(' ')}$/ }
		unless container = GameObj.inv.find { |obj| obj.name =~ /#{Lich.lootsack.join('.*?')}/ }
			echo "error: can't find container \"#{Lich.lootsack.join(' ')}\""
			exit
		end
	end
end

if container.contents.nil?
	open_result = dothistimeout "open ##{container.id}", 5, /^You open|^That is already open\.$/
	unless open_result =~ /^You open/
		dothistimeout "look in ##{container.id}", 5, /In .*? you see/
		if container.contents.nil?
			echo "error: failed to find contents of container \"#{container.name}\""
			exit
		end
	end
end

gem_list = container.contents.find_all { |obj| obj.type =~ /gem/ }

if gem_list.empty?
	echo "error: no gems found in container \"#{container.name}\""
	exit
end

checked = 0
found = 0

empty_hands
for gem in gem_list
	if (mana < 4)
		echo "waiting for mana..."
		wait_until { mana >= 4 }
	end
	waitrt?
	waitcastrt?
	dothistimeout "get ##{gem.id}", 5, /^You remove/
	fput "prep 704"
	result = dothistimeout "cast my #{gem.noun.capitalize}", 5, /resists the effects of your magic|^The ([A-Z]?[a-z]+) becomes somewhat insubstantial and appears lighter/
	if result.nil?
		fput "prep 704"
		result = dothistimeout "cast my #{gem.noun.capitalize}", 5, /resists the effects of your magic|^The ([A-Z]?[a-z]+) becomes somewhat insubstantial and appears lighter/
	end
	checked += 1
	if result =~ /and appears lighter/
		fput "drop #{checkright}"
		dothistimeout "mark ##{gem.id}", 3, /^You carefully/
		dothistimeout "put ##{gem.id} in my greatcloak", 3, /^You put/
		#dothistimeout "_drag ##{gem.id} my greatcloak", 5, /^You put/
		found += 1
		echo "#{checked} gem#{'s' unless checked == 1} checked.  #{found} orb#{'s' unless found == 1} found.  #{gem_list.length - checked} gem#{'s' unless (gem_list.length - checked) == 1} remaining."		
	elsif result =~ /resists the effects/
		dothistimeout "put ##{gem.id} in my pack", 3, /^You put/
		#dothistimeout "_drag ##{gem.id} my pack", 5, /^You put/
		echo "#{checked} gem#{'s' unless checked == 1} checked.  #{found} orb#{'s' unless found == 1} found.  #{gem_list.length - checked} gem#{'s' unless (gem_list.length - checked) == 1} remaining."
	end
end
fill_hands
