#silence_me

=begin
	                  Rumor Woods Pixie Hunting Script (1.0)
	
    ------------------------------------------------------------------------------------------
    ;PIXIEPIXIE          Raikhen Farming Mode (focuses only on getting medium reward
                         flowers (~125 raikhen; sweetspire, arnica, cattail, azalea))

    ;PIXIEPIXIE PIXIE    Pixie Hunting Mode (pixie hunting that eventually
                         gives up and goes after a medium reward flower)

    ;PIXIEPIXIE MANUAL   Manual Mode (doesn't do anything beyond having a timer
                         while in the grounds and automated sack emptying)

    ;PIXIEPIXIE HELP     this information
	
	
    ;K PIXIEPIXIE        kills pixiepixie (a good time to do this is when you empty the sack)
    ------------------------------------------------------------------------------------------
	
    * pixiepixie will auto determine whether to observe (perception) or track (survival).

    * To set the Pixie Hunting Mode timeout (in seconds) use -> ;e echo UserVars.pixiepixie = NUMBER

    * If you want the most raikhen, as fast as possible, use farm mode (;pixiepixie).
	
    * If you don't mind taking longer, and trying to find the pixie, use hunting mode (;pixiepixie pixie).
	
    * If you want to use your own tactics, or to explore, use manual mode (;pixiepixie manual).

    * Current pixie hunting movement logic is based on fox.lic which is passable, but flawed.
      This will eventually be replaced with a better process.  Stay tuned!
	
    * https://gswiki.play.net/Pixie_Hunt for information on the Pixie Hunt.
	
    * Based on fox.lic by Ryjex, fox2020.lic by Obelin, foxy.lic by Selema, and foxfox.lic by Arianiss (me).
	
    * Design input from Obelin and Selema.  Thank you!

    * asrialx@gmail.com / Asrial (Arianiss)#1203 on Discord


	
    author: Arianiss
    version: 1.0 (2022-06-10)	
    game: GS
    tags: pixie
	
    changelog:

       1.0 (2022-06-10)
           - initial release (a copy/paste of foxfox which was then modified for the
             Pixie Hunt; any fox commentary in the script will be resolved eventually
             and I also plan to merge this and foxfox into a single script)
=end

# make a faster FoxHunt that doesn't observe/track the entire time

# make movement not backtrack (randomly selected pre defined routes in an array)

# add list of things to check (room ids) on subsequent runs

# add protection against "path" not being detected as an exit

# find a way to keep track of "no sign" rooms (switch script to using line = get)

# multi threading (no sign rooms in fox hunt and manual mode, standing in cave entrance/exit in manual mode)

# average raikhen tracker (make a variable that the user can reset)

if script.vars[1] == nil
	script.vars[1] = "farm"
else
	script.vars[1] = script.vars[1].downcase
end

case script.vars[1]
	when "pixie"
		echo
		echo "Pixie Hunting Mode"
		echo
		if (UserVars.pixiepixie == nil)
			echo "Your pixie hunt timeout has not been set (65 seconds is the recommended default)."
			echo
			echo ";e echo UserVars.pixiepixie = NUMBER "
			echo
			exit
		else
			echo "Your pixie hunt timeout is currently #{UserVars.pixiepixie} seconds."
			echo
		end
	when "farm"
		echo
		echo "Raikhen Farming Mode"
		echo
	when "manual"
		echo
		echo "Manual Mode"
		echo
	when "help"
	
	# tabs get ignored by SF (though they're still there)
	
		respond "
	                  Rumor Woods Pixie Hunting Script (1.0)
	
    ------------------------------------------------------------------------------------------
    ;PIXIEPIXIE          Raikhen Farming Mode (focuses only on getting medium reward
                         flowers (~125 raikhen; sweetspire, arnica, cattail, azalea))

    ;PIXIEPIXIE PIXIE    Pixie Hunting Mode (pixie hunting that eventually
                         gives up and goes after a medium reward flower)

    ;PIXIEPIXIE MANUAL   Manual Mode (doesn't do anything beyond having a timer
                         while in the grounds and automated sack emptying)

    ;PIXIEPIXIE HELP     this information
	
	
    ;K PIXIEPIXIE        kills pixiepixie (a good time to do this is when you empty the sack)
    ------------------------------------------------------------------------------------------
	
    * pixiepixie will auto determine whether to observe (perception) or track (survival).

    * To set the Pixie Hunting Mode timeout (in seconds) use -> ;e echo UserVars.pixiepixie = NUMBER

    * If you want the most raikhen, as fast as possible, use farm mode (;pixiepixie).
	
    * If you don't mind taking longer, and trying to find the pixie, use hunting mode (;pixiepixie pixie).
	
    * If you want to use your own tactics, or to explore, use manual mode (;pixiepixie manual).

    * Current pixie hunting movement logic is based on fox.lic which is passable, but flawed.
      This will eventually be replaced with a better process.  Stay tuned!
	
    * https://gswiki.play.net/Pixie_Hunt for information on the Pixie Hunt.
	
    * Based on fox.lic by Ryjex, fox2020.lic by Obelin, foxy.lic by Selema, and foxfox.lic by Arianiss (me).
	
    * Design input from Obelin and Selema.  Thank you!

    * asrialx@gmail.com / Asrial (Arianiss)#1203 on Discord


	
    author: Arianiss
    version: 1.0 (2022-06-10)	
    game: GS
    tags: pixie
	
    changelog:

       1.0 (2022-06-10)
           - initial release (a copy/paste of foxfox which was then modified for the
             Pixie Hunt; any fox commentary in the script will be resolved eventually
             and I also plan to merge this and foxfox into a single script)
		"
		exit
	when "debug"		
		exit
	else
		echo
		echo "Invalid Option (help, pixie, farm, manual)"
		echo
		exit
end

if Vars.lootsack.nil?
	echo
	echo "Set your lootsack variable before running."
	echo
	echo ";vars set lootsack = CONTAINER "
	echo
	exit
end

if Skills.perception >= Skills.survival
	observe = true
else
	observe = false
end

#observe = (Skills.perception >= Skills.survival) ? true : false

#no_fox_rooms = []

#def FoxHunt(observe, no_fox_rooms)
def FoxHunt(observe)
#	if no_fox_rooms.include? Room.current.id
#		echo
#		echo "You've already determined there are no signs of a fox here."
#		echo
#		result = nil
#	else
		if observe
			#result = dothistimeout "observe", 5, /find many signs of a pixie in this area|A fox trots|loping off/ if Room.current.id != 28111
			result = dothistimeout "observe", 5, /find many signs of a pixie in this area|A fox trots|loping off/ if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
		else
			#result = dothistimeout "track", 5, /find many signs of a pixie in this area|A fox trots|loping off/ if Room.current.id != 28111
			result = dothistimeout "track", 5, /find many signs of a pixie in this area|A fox trots|loping off/ if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
		end
#	end

	waitrt?
	
	if result =~ /find many signs of a pixie in this area/
		#while (Room.current.id != 28111)		
		while ((GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack"))
			pause 0.5
			#fput "search" if Room.current.id != 28111
			fput "search" if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
		end
		return false
#	elsif result =~ /no signs of a fox in this area/
#		no_fox_rooms.push(Room.current.id)
#		echo "here"
#		dothistimeout "", 5, /find many signs of a fox in this area|A fox trots|loping off/
	elsif result =~ /A fox trots/
		dir = result.sub("A fox trots ","")
		dir = dir.sub("!","")
		echo if Room.current.id != 28111
		echo "The fox was spotted heading " + dir + "!" if Room.current.id != 28111
		echo if Room.current.id != 28111
		fput dir if Room.current.id != 28111
		return true
	elsif result =~ /loping off/
		case Room.current.id
			when 28145 # A fox went through a felled log, loping off!
				echo if Room.current.id != 28111
				echo "The fox was spotted heading through the log!" if Room.current.id != 28111
				echo if Room.current.id != 28111
				fput "go log" if Room.current.id != 28111
				return true
			when 28112 # path
				echo # if Room.current.id != 28111
				echo "fox -> path -- please message me the messaging for the fox going down the path" # if Room.current.id != 28111
				echo # if Room.current.id != 28111
				fput "go path" if Room.current.id != 28111
				return true			
			when 28121 # A fox climbed down a massive rock formation, loping off!
				echo if Room.current.id != 28111
				echo "The fox was spotted climbing down the rock formation!" if Room.current.id != 28111
				echo if Room.current.id != 28111
				fput "climb rock" if Room.current.id != 28111
				return true					
			when 28124 # cave
				echo # if Room.current.id != 28111
				echo "fox -> cave -- please message me the messaging for the fox going into the cave" # if Room.current.id != 28111
				echo # if Room.current.id != 28111
				fput "go cave" if Room.current.id != 28111
				until (standing?)
					multifput "stance offensive", "stand", "stance defensive"
				end			
				return true		
			when 28122 # mouth
				echo # if Room.current.id != 28111
				echo "fox -> mouth -- please message me the messaging for the fox leaving the cave" # if Room.current.id != 28111
				echo # if Room.current.id != 28111
				fput "go mouth" if Room.current.id != 28111
				until (standing?)
					multifput "stance offensive", "stand", "stance defensive"
				end
				return true	
			else
				if Room.current.id == 28111
					return false
				end
		end
	end
	
	newroom = XMLData.room_exits.sample
	#fput newroom if Room.current.id != 28111
	fput newroom if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
	
	return true
end

def RaikhenFarm(observe)
	if observe
		#result = dothistimeout "observe", 5, /find many signs of a pixie in this area|no signs of a pixie in this area/ if Room.current.id != 28111
		result = dothistimeout "observe", 5, /find many signs of a pixie in this area|no signs of a pixie in this area/ if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
	else
		#result = dothistimeout "track", 5, /find many signs of a pixie in this area|no signs of a pixie in this area/ if Room.current.id != 28111
		result = dothistimeout "track", 5, /find many signs of a pixie in this area|no signs of a pixie in this area/ if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
	end

	waitrt?

	if result =~ /find many signs of a pixie in this area|no signs of a pixie in this area/
		#while (Room.current.id != 28111)		
		while ((GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack"))
			pause 0.5
			#fput "search" if Room.current.id != 28111
			fput "search" if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
		end
		return false
	end

	newroom = XMLData.room_exits.sample
	#fput newroom if Room.current.id != 28111
	fput newroom if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")

	return true
end

loop do
	Script.run("go2", "28050",:quiet => true)
	multifput "go track", "go northeast", "go northeast"
	
#	if Room.current.id != 25932
#		echo
#		echo "You're not at the entrance."
#		echo
#		exit
#	end
	
	if (GameObj.right_hand.name == "flyrsilk sack" || GameObj.left_hand.name == "flyrsilk sack") # you don't actually get here because the loot is in a loop as long as the sack is in hand
		echo
		echo "Your loot container is full or the sack drop failed."
		echo
		exit
	end

	result = dothistimeout "get marker", 2, /You remove a|You already have that/

	if result !~ /You remove a|You already have that/
		if (checkright != "marker" and checkleft != "marker")
			echo
			echo "You're out of markers or your hands are full."
			echo
			exit
		end
	end
	
	if script.vars[1] == "manual"
		echo
		echo "When ready GO STEPS to start the hunt."
		echo
	else
		fput "go steps"
	end
		
	#wait until Room.current.id == 28108
	waitfor "Brightly shining torches illuminate"
	
	start_time = Time.now

	if !Vars.inv.nil?
		fput "put my marker in my #{Vars.inv}"
	else
		fput "put my marker in my #{Vars.lootsack}"
	end

	case script.vars[1]
		when "pixie"
			loop do
				echo
				echo (Time.now.to_i - start_time.to_i).to_s + " seconds have elapsed."
				echo

				if (Time.now.to_i - start_time.to_i) <= UserVars.pixiepixie
#					continue = FoxHunt(observe, no_fox_rooms) if Room.current.id != 28111
					#continue = FoxHunt(observe) if Room.current.id != 28111
					continue = FoxHunt(observe) if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
				else
					#continue = RaikhenFarm(observe) if Room.current.id != 28111
					continue = RaikhenFarm(observe) if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
				end
			
				if continue
					next
				else
					break
				end
				
				# break if !continue
			end
		when "farm"
			#while (Room.current.id != 28111 && RaikhenFarm(observe))
			while ((GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack") && RaikhenFarm(observe))
			end
		when "manual"
			announce = start_time
		
			#while (Room.current.id != 28111)
			while (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
				pause 1
				
				if Time.now.to_i >= announce.to_i
					echo
					echo (Time.now.to_i - start_time.to_i).to_s + " seconds have elapsed."
					echo
					announce += 10 # the number of seconds to wait between time announcements
				end
			end
		else
			echo
			echo "Shouldn't Get Here"
			echo
			exit
	end

	if (GameObj.right_hand.name != "flyrsilk sack" && GameObj.left_hand.name != "flyrsilk sack")
		echo
		echo "YOUR FLYRSILK SACK IS ON THE GROUND!"
		echo
		echo "THERE MIGHT BE A DRAGONFLY IN THERE!"
		echo
		exit
	end

	while (GameObj.right_hand.name == "flyrsilk sack" || GameObj.left_hand.name == "flyrsilk sack") # this might throw away the gunny sack on accident
		waitrt?
		multifput "open my flyrsilk sack", "look in my flyrsilk sack", "empty my flyrsilk sack in my #{Vars.lootsack}"
		sleep(3.5)
		dothistimeout "throw my flyrsilk sack", 2, /You throw away your sack./ # get messaging for there being stuff in it
		
		# use drop as it has protection against throwing it away
		
	end
	
	fput "out"
	#wait until Room.current.id == 25932
	waitfor "Mist hugs the ground, creating tiny"
end