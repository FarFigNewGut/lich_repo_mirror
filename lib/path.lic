=begin

	Shows you the path between your current room to specified room ID/tag
	Ex: 
	;path 228
	;path town
	
	OR 
	
	It can also show you the path between 2 room ID/tags
	Ex: 
	;path 228 188
	;path town gemshop
	;path town 188
	
	Mostly modified from Tillmen's Step2.lic
	
	Changelog:
	12/29/2011 - bugfix for when two arguments, will properly calculate path between arg1 and arg2 instead of your current room and arg2.
	
	uploaded by Drafix

=end
$step2_path = nil
if script.vars[2].nil?
	unless start_room = Room.current
		echo 'current room was not found in the map database'
		exit
	end
	if script.vars[1] =~ /^[0-9]+$/
		unless destination_room = Room[script.vars[1]]
			echo 'destination room was not found in the map database'
			exit
		end
	else
		id = Room.current.find_nearest_by_tag(script.vars[1])
		destination_room = Room[id]
		if id.nil?
			echo "'#{script.vars[1]}' tag was not found in the map database from your current room"
			exit
		end
	end
else
	if script.vars[1] =~ /^[0-9]+$/
		unless start_room = Room[script.vars[1]]
			echo 'start room was not found in the map database'
			exit
		end
	else
		id = Room.current.find_nearest_by_tag(script.vars[1])
		if id.nil?
			echo "'#{script.vars[1]}' tag was not found in the map database from your current room"
			exit
		end
		start_room = Room[id]
	end
	if script.vars[2] =~ /^[0-9]+$/
		unless destination_room = Room[script.vars[2]]
			echo 'destination room was not found in the map database'
			exit
		end
	else
		id = start_room.find_nearest_by_tag(script.vars[2])
		if id.nil?
			echo "'#{script.vars[2]}' tag was not found in the map database from your current room"
			exit
		end
		destination_room = Room[id]
	end
end

if start_room == destination_room
	echo 'start room and destination room are the same'
	exit
end

unless $step2_path and (s = $step2_path.index(start_room.id)) and (d = $step2_path.index(destination_room.id)) and (s < d)
	previous, shortest_distances = Map.dijkstra(start_room.id, destination_room.id)
	unless previous[destination_room.id]
		echo "error: failed to find a path between your current room (#{start_room.id}) and destination room (#{destination_room.id})"
		exit
	end
	$step2_path = [ destination_room.id ]
	$step2_path.push(previous[$step2_path[-1]]) until previous[$step2_path[-1]].nil?
	$step2_path.reverse!
	previous = shortest_distances = nil
end

counter = 0
while room = Room[$step2_path[$step2_path.index(start_room.id)+1].to_s]
	way = start_room.wayto[$step2_path[$step2_path.index(start_room.id)+1].to_s]
	counter += 1
	if start_room == destination_room
		echo "#{counter} rooms to travel in total"
		echo 'Finished'
		exit
	elsif way.class == String
		respond start_room.id.to_s + ': ' + start_room.title[0]	+' - ' + way + ' -> ' + room.id.to_s
		start_room = room
	elsif way.class == Proc
		respond start_room.id.to_s + ': ' + start_room.title[0]	+' - ' + '['+way.inspect+']' + ' -> ' + room.id.to_s
		start_room = room
	else
		echo 'error in the map database'
		exit
	end
end
