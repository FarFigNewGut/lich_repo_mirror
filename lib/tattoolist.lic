=begin

    Tattoo list, save cached version of list from in game commands and quickly search
	;tattoolist help

     author: someone
       name: tattoolist
       tags: monks, tattoos

    changelog:
        2020.06.12 - Initial release
=end

buff_length = $_SERVERBUFFER_.length

@@start_message = "List of flash tattoos available"
@@end_message = "You have reached the end of the flash tattoo menu"
@@cont_message = "Type TATTOO MENU again in the next minute to display the next group of flash tattoos"

@@tats = CharSettings.to_hash
@@tats['list'] = {} if !@@tats.key? 'list'

#example line:
# 856) a pair of red-inked claw marks

def get_page()
	page = dothistimeout "tattoo menu", 3, /#{@@end_message}|#{@@cont_message}/
	if page =~ /#{@@end_message}/
		return true
	else
		return false
	end
end

def read_page()
	$_SERVERBUFFER_.reverse.each { |b|	
		break if b =~ /#{@@start_message}/
		if b =~ /(\d+)\) (.*)$/
			@@tats['list'][$1.to_s] = $2.strip
		end	
	}
	@@tats['updated'] = Time.now()
end

def get_all_tats()
	until get_page()
		read_page()
	end
	read_page()
end

def search_tats(search_reg)
	if (!search_reg or search_reg.nil? or search_reg.empty? or search_reg == '')
		echo "Search doesn't look right."
	else
		results = @@tats['list'].select { |n,t| t =~ /#{search_reg}/i }
		results.sort_by { |n,t| n.to_i }.each{ |n,t|
			_respond "#{monsterbold_start}#{n})#{monsterbold_end} #{t}"
		}
	end
end

def help_msg(command, info)
	_respond "#{monsterbold_start};tattoolist #{command}#{monsterbold_end}"
	_respond "     #{info}"
end

def print_help()
	_respond "Usage:"
        help_msg("help", "Print this message")
	help_msg("display, print, show or list", "print full cached tattoo list")
	help_msg("stat or info", "show count and last updated time of cached list")
	help_msg("search [search string, regex supported]", "search list for a string, seperate different terms with a pipe |")
	help_msg("search wolf", "search for the term wolf")
	help_msg("search wolf|howling", "search for the terms wolf OR howling")
	help_msg("search wolf|howling|blue dragon", "search for wolf OR howling OR blue dragon")
	help_msg("search ithzir|black (dragon|demon)", "search for any tatoo with Ithzir, or any tattoo with a black dragon OR a black demon")
	help_msg("refresh", "force refresh of tattoo list. This will happen automatically if you run the script and it has been a significant time since your last update, or your first time using the script")
end

def get_info()
	echo "Last updated: #{@@tats['updated']}"
	echo "Tattoos listed: #{@@tats['list'].length}"
end


if script.vars[1] =~ /--help|-h|help/
	print_help()
elsif script.vars[1] =~ /display|print|show|list/
	search_tats('.')
elsif script.vars[1] =~ /stat|info/
	get_info()
elsif script.vars[1] =~ /search/
	search_tats(script.vars[2..-1].join(" "))
elsif script.vars[1] =~ /refresh/ or @@tats['updated_at'] < Time.now() - 2592000 or @@tats['list'].empty?
	get_all_tats()
	_respond "#{monsterbold_start}The tattoo list has been cached locally#{monsterbold_end}"
	_respond "#{monsterbold_start}The script won't spam the list again unless you tell it to refresh the local copy of the list, or 30 days have passed#{monsterbold_end}"
	_respond "#{monsterbold_start}for more usage info: ;tattoolist help#{monsterbold_end}"
	get_info()
else
	print_help()
end
