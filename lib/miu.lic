=begin

Two variables are used:
Vars.miusack = Container holding magical items.
Vars.spellsack = Container holding container holding magical items.
Example: Sarcophagus in Harness
=end

pause_script ('bigshot')
pause_script ('ebounty')
pause_script ('go2')

class Artifacts
	CAST_INFO = {
		"Spirit Defense" 			=> { "number" => "103", 	"item" => "spinewood rod",			"activator" => "raise",		"buried" => false,		"worn" => false,		"scripted" => false		},
		"Lesser Shroud" 			=> { "number" => "120",		"item" => "white rod",				"activator" => "raise",		"buried" => false, 		"worn" => false,		"scripted" => false		},
		"Spirit Shield" 			=> { "number" => "202", 	"item" => "black shell",			"activator" => "raise",		"buried" => false, 		"worn" => false,		"scripted" => false		},
		"Bravery" 					=> { "number" => "211", 	"item" => "shining pin",			"activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => true		},
		"Heroism" 					=> { "number" => "215",		"item" => "heroic clasp",			"activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => false		},			#Handled via Script
		"Prayer of Protection" 		=> { "number" => "303", 	"item" => "jet crystal",            "activator" => "rub",		"buried" => false, 		"worn" => false,		"scripted" => false		},
		"Benediction" 				=> { "number" => "307", 	"item" => "white cube",             "activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => true		},			#Handled via Script
		"Phoen's Strength" 			=> { "number" => "606", 	"item" => "golden rod", 			"activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => false		},
		"Self Control" 				=> { "number" => "613", 	"item" => "shadowglass hexagram",   "activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => false		},
		"Cloak of Shadows" 			=> { "number" => "712", 	"item" => "mote shadow",            "activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => false		},
		"Foresight" 				=> { "number" => "1204", 	"item" => "peacock crystal",        "activator" => "rub",		"buried" => false, 		"worn" => false,		"scripted" => false		},
		"Mantle of Faith" 			=> { "number" => "1601", 	"item" => "shark fin",              "activator" => "raise",		"buried" => false, 		"worn" => false,		"scripted" => false		},
		"Dauntless" 				=> { "number" => "1606", 	"item" => "blue-white flame",       "activator" => "raise",		"buried" => true, 		"worn" => false,		"scripted" => false		},
		"Arcane Decoy" 				=> { "number" => "1701", 	"item" => "gold pin",               "activator" => "rub",		"buried" => false,		"worn" => true,			"scripted" => true		},			#Handled via Script
		"Spirit Guard" 				=> { "number" => "1712", 	"item" => "small statue",  		   	"activator" => "rub",		"buried" => false,		"worn" => false,		"scripted" => false		}
		}

	def self.cast_info_for(spell_name)
		CAST_INFO.fetch(spell_name)
	end

	fput 'store all'

	waitcastrt?
	if Char.name == 'Alastir'
		spell_list = [ 'Bravery', 'Heroism', 'Benediction', "Phoen's Strength", 'Self Control', 'Dauntless', 'Spirit Guard' ]
		spell_list.each{ |spell|
						spell_name = spell
						#echo "#{spell_name} is #{spell}"
						if !Effects::Spells.to_h.include?("#{spell_name}")
							item = cast_info_for(spell)["item"]
							#echo "I tem is #{item}"
							activator = cast_info_for(spell)["activator"]
							#echo "A ctivator is #{item}"
							number = cast_info_for(spell)["number"]
							#echo "N umber is #{number}"
							buried = cast_info_for(spell)["buried"]
							#echo "B uried is #{buried}"
							scripted = cast_info_for(spell)["scripted"]
							#echo "S cripted is #{scripted}"
							
							if scripted == true
								if number == '606'
									if checkoutside == true
										start_script ("#{number}")
										wait_while {running? "#{number}"}
									else
										echo 'This must be cast outdoors'
									end
								else
									start_script ("#{number}")
									wait_while {running? "#{number}"}
								end
							elsif buried == true
								#multifput "get #{Vars.miusack} from my #{Vars.spellsack}","get #{item} from my #{Vars.miusack}"
								result = dothistimeout "get #{Vars.miusack} from my #{Vars.spellsack}", 2, /You remove|You reach|Get what?/
								if result =~ /You remove|You reach/
									waitrt?
									waitcastrt?
									fput "get #{item} from my #{Vars.miusack}"
									dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
									waitrt?
									waitcastrt?
									multifput "put my #{item} in my #{Vars.miusack}","put my #{Vars.miusack} in my #{Vars.spellsack}"
								else
								end
							else
								#multifput "get #{item} from my #{Vars.miusack}"
								result = dothistimeout "get #{item} from my #{Vars.spellsack}", 2, /You remove|You reach|Get what?/
								if result =~ /You remove|You reach/
									waitrt?
									waitcastrt?
									dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
									waitcastrt?
									multifput "put my #{item} in my #{Vars.spellsack}"
								else
								end
							end
						else
							echo "#{spell} is currently active."
						end
						}
	elsif Char.name == 'Rylohk'
		spell_list = [ 'Spirit Guard' ]
		spell_list.each{ |spell|
						spell_name = spell
						#echo "#{spell_name} is #{spell}"
						if !Effects::Spells.to_h.include?("#{spell_name}")
							item = cast_info_for(spell)["item"]
							#echo "I tem is #{item}"
							activator = cast_info_for(spell)["activator"]
							#echo "A ctivator is #{item}"
							number = cast_info_for(spell)["number"]
							#echo "N umber is #{number}"
							buried = cast_info_for(spell)["buried"]
							#echo "B uried is #{buried}"
							scripted = cast_info_for(spell)["scripted"]
							#echo "S cripted is #{scripted}"
							
							if scripted == true
								if number == '606'
									if checkoutside == true
										start_script ("#{number}")
										wait_while {running? "#{number}"}
									else
										echo 'This must be cast outdoors'
									end
								else
									start_script ("#{number}")
									wait_while {running? "#{number}"}
								end
							elsif buried == true
								#multifput "get #{Vars.miusack} from my #{Vars.spellsack}","get #{item} from my #{Vars.miusack}"
								result = dothistimeout "get #{Vars.miusack} from my #{Vars.spellsack}", 2, /You remove|You reach|Get what?/
								if result =~ /You remove|You reach/
									waitrt?
									waitcastrt?
									fput "get #{item} from my #{Vars.miusack}"
									dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
									waitrt?
									waitcastrt?
									multifput "put my #{item} in my #{Vars.miusack}","put my #{Vars.miusack} in my #{Vars.spellsack}"
								else
								end
							else
								#multifput "get #{item} from my #{Vars.spellsack}"
								result = dothistimeout "get #{item} from my #{Vars.miusack}", 2, /You remove|You reach|Get what?/
								if result =~ /You remove|You reach/
									waitrt?
									waitcastrt?
									dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
									waitcastrt?
									multifput "put my #{item} in my #{Vars.miusack}"
								else
								end
							end
						else
							echo "#{spell} is currently active."
						end
						}
	elsif Char.name == 'Sivalis'
		spell_list = [ 'Spirit Shield', 'Prayer of Protection', 'Foresight', 'Mantle of Faith', 'Spirit Guard' ]

		spell_list.each{ |spell|
		spell_name = spell
		if !Effects::Spells.to_h.include?("#{spell}")
			item = cast_info_for(spell)["item"]
			activator = cast_info_for(spell)["activator"]
			number = cast_info_for(spell)["number"]
			buried = cast_info_for(spell)["buried"]

			if buried == true
				#multifput "get #{Vars.miusack} from my #{Vars.spellsack}","get #{item} from my #{Vars.miusack}"
				result = dothistimeout "get #{Vars.miusack} from my #{Vars.spellsack}", 2, /You remove|You reach|Get what?/
				if result =~ /You remove|You reach/
					fput "get #{item} from my #{Vars.miusack}"
					dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
					waitcastrt?
					multifput "put my #{item} in my #{Vars.miusack}","put my #{Vars.miusack} in my #{Vars.spellsack}"
				else
				end
			else
				#multifput "get #{item} from my #{Vars.spellsack}"
				result = dothistimeout "get #{item} from my #{Vars.miusack}", 2, /You remove|You reach|Get what?/
				if result =~ /You remove|You reach/
					dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
					waitcastrt?
					multifput "put my #{item} in my #{Vars.miusack}"
				else
				end
			end
		else
			echo "#{spell} is currently active."
		end
		}
	else
		spell_list = [ 'Spirit Guard' ]

		spell_list.each{ |spell|
		spell_name = spell
		if !Effects::Spells.to_h.include?("#{spell}")
			item = cast_info_for(spell)["item"]
			activator = cast_info_for(spell)["activator"]
			number = cast_info_for(spell)["number"]
			buried = cast_info_for(spell)["buried"]

			if buried == true
				multifput "get #{Vars.miusack} from my #{Vars.spellsack}","get #{item} from my #{Vars.miusack}"
				dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
				waitcastrt?
				multifput "put my #{item} in my #{Vars.miusack}","put my #{Vars.miusack} in my #{Vars.spellsack}"
			else
				multifput "get #{item} from my #{Vars.miusack}"
				dothistimeout "#{activator} #{item}", 3, /^You (?:rub|tap|raise)/
				waitcastrt?
				multifput "put my #{item} in my #{Vars.miusack}"
			end
		else
			echo "#{spell} is currently active."
		end
		}	
	end
end

#spell_list = [ 'Spirit Defense','Bravery' ];spell_list.each{ |spell|respond !Effects::Spells.to_h.include?("#{spell}")}
#		spell_list = [ 'Spirit Defense','Spirit Shield','Bravery','Heroism','Prayer of Protection','Benediction',"Phoen's Strength",'Self Control','Cloak of Shadows','Foresight','Mantle of Faith','Arcane Decoy','Spirit Guard' ]


unpause_script ('bigshot')
unpause_script ('ebounty')
unpause_script ('go2')
