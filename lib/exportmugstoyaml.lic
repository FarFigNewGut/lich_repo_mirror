=begin

	author: Demandred
	version: 1.0

	1.0 - YAML export from old UserVars.mugged data

	run as ;exportmugstoyaml --delete to delete the old data after you're done!

	move your old mugging data to the yaml file - running with --delete deletes the old info in UserVars without moving data.

	if you run it twice it'll double your data . . . it never deletes without you putting --delete in the line, and then that's ALL it does.
=end

require 'yaml'
if script.vars[0] =~ /--delete/
	if !UserVars.mugged.nil?
		UserVars.delete("mugged")
		echo "deleted UserVars.mugged"
		exit
	else
		echo "Nothing to delete"
		exit
	end
end

if UserVars.mugged.nil?
	echo "Nothing to do."
	exit
end

if Script.running?('mugreport')
	echo "Shut down mugreport before running this script, please."
	exit
end

mugfile = "#{$data_dir}#{XMLData.game}/#{XMLData.name}/mugreport.yaml"
if !File.exists?(mugfile)
	mug = Hash.new
	mug[:silvers] = ["silvers", 0]
	mug[:boxes] = []
	mug[:gems] = []
	mug[:items] = []
	mug[:heirlooms] = []
	mug[:attempts] = 0
	mug[:success] = 0
	File.write(mugfile,mug.to_yaml)
else
	mug = YAML.load_file(mugfile)
	if mug == false
		mug = Hash.new
		mug[:silvers] = ["silvers", 0]
		mug[:boxes] = []
		mug[:gems] = []
		mug[:items] = []
		mug[:heirlooms] = []
		mug[:attempts] = 0
		mug[:success] = 0
	end
end

if !(UserVars.mugged[:silvers].nil? || UserVars.mugged[:silvers][1] == 0)
	mug[:silvers][1] += UserVars.mugged[:silvers][1]
end
if !(UserVars.mugged[:attempts].nil? || UserVars.mugged[:attempts] == 0)
	mug[:attempts] += UserVars.mugged[:attempts]
end
if !(UserVars.mugged[:success].nil? || UserVars.mugged[:success] == 0)
	mug[:success] += UserVars.mugged[:success]
end
if !UserVars.mugged[:boxes].nil?
	if !mug[:boxes].empty?
		UserVars.mugged[:boxes].each do |a|
			repeat = false
			mug[:boxes].each do |b|
				if b[0] == a[0]
					b[1] += a[1]
					repeat = true
				end
			end
			if !repeat
				mug[:boxes].push(a)
			end
		end
	else
		mug[:boxes] = UserVars.mugged[:boxes]
	end
end
if !UserVars.mugged[:gems].nil?
	if !mug[:gems].empty?
		UserVars.mugged[:gems].each do |a|
			repeat = false
			mug[:gems].each do |b|
				if b[0] == a[0]
					b[1] += a[1]
					repeat = true
				end
			end
			if !repeat
				mug[:gems].push(a)
			end
		end
	else
		mug[:gems] = UserVars.mugged[:gems]
	end
end

if !UserVars.mugged[:items].nil?
	if !mug[:items].empty?
		UserVars.mugged[:items].each do |a|
			repeat = false
			mug[:items].each do |b|
				if b[0] == a[0]
					b[1] += a[1]
					repeat = true
				end
			end
			if !repeat
				mug[:items].push(a)
			end
		end
	else
		mug[:items] = UserVars.mugged[:items]
	end
end
if !UserVars.mugged[:heirlooms].nil?
	if !mug[:heirlooms].empty?
		UserVars.mugged[:heirlooms].each do |a|
			repeat = false
			mug[:heirlooms].each do |b|
				if b[0] == a[0]
					b[1] += a[1]
					repeat = true
				end
			end
			if !repeat
				mug[:heirlooms].push(a)
			end
		end
	else
		mug[:heirlooms] = UserVars.mugged[:heirlooms]
	end
end
File.write(mugfile,mug.to_yaml)

echo mug[:silvers]