=begin
  sources: https://gswiki.play.net/Research:Ensorcell_(735)_Formula
  discord
  lnet
  
  Shows your stats for ensorcelling.
  
  Accepts additional factors for:
    enchant   e.g. +33
    desired tier e.g. T5
    material (and item type) e.g. mithril shield
    scripts e.g. sigil
    padding/waiting e.g.  CER 12
    flares/flaring 
   
  
  Enchants will be rounded off to the next full enchant
  
  Since people usually ask for a T(#), the input is based on expected resulting tier
  
  e.g.
    ;ensorcell_calc 6x t3 sigil
      shows you your bonus, and the factors to take a 6x sigil staff from t2 to t3
  
  e.g. 
    ;ensorcell_calc 7x t5 mithril weapon CER 2 sanctified enhancive flaring
  
  Some script penalties change based on unlock, most aren't documented. 
  Scripts included so far are base for energy, sigil, sprite, and karma.
  
          author: Xanlin (Xanlin#4407 on discord)
            game: GS
            tags: ensorcell, sorcerer
        required: Lich >= 4.6.56
         version: 5
  
  2020-12-07, v5 adds mana control update
    not updated for difficulty changes
=end
#------------------------------------------------------------------------------#
# script settings
#------------------------------------------------------------------------------#
@script                     = script;
@script.want_downstream     = false;
@script.want_downstream_xml = true;
#------------------------------------------------------------------------------#
# quiet_command by LostRanger, modded a bit by Xanlin
#------------------------------------------------------------------------------#
@script_name = script.name;
def self.anon_hook(prefix = '');now = Time.now;"#{@script_name}::#{prefix}-#{now.tv_sec}.#{now.tv_usec}-#{Random.rand(10000)}";end;
def self.hook_cleanup(); [DownstreamHook, UpstreamHook].each{|provider| provider.list.find_all{|name| name.start_with?("#{@script_name}::")}.each{|name| provider.remove(name)};  };end;
def self.quiet_command(command, start_pattern, quiet = true, end_pattern = /^(?:<popBold\/>)?<prompt/, include_end = true, timeout=5)result = [];name   = self.anon_hook;filter = false;begin;Timeout::timeout(timeout, Interrupt) {DownstreamHook.add(name, proc {|xml|if filter;if xml =~ end_pattern;DownstreamHook.remove(name);filter = false;else;next(nil) if quiet;xml if !quiet;end;elsif xml =~ start_pattern;filter = true;next(nil) if quiet;xml if !quiet;else;next(nil) if xml.strip.length == 0;xml;end;});fput command;until (xml = get) =~ start_pattern; end;result << xml.rstrip;until (xml = get) =~ end_pattern;result << xml.rstrip;end;if include_end;result << xml.rstrip;end;};rescue Interrupt;DownstreamHook.remove(name);nil;end;return result;end;
#------------------------------------------------------------------------------#
# penalties
#------------------------------------------------------------------------------#
script_penalties = {'energy' => -250, 'sigil' => -200, 'sprite' => -250, 'karma' => -200};

#------------------------------------------------------------------------------#
# material info
#------------------------------------------------------------------------------#
materials = {};
materials["adamantine"] = { "weapon" => -500, "shield" => -500, "armor" => -500, "bow" => nil, "runestaff" => nil, "min" => -500, "max" => -500}
materials["alexandrite"] = { "weapon" => -500, "shield" => 0, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -500, "max" => 0}
materials["black-alloy"] = { "weapon" => 0, "shield" => -50, "armor" => 0, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => 0}
materials["bone"] = { "weapon" => -250, "shield" => 10, "armor" => -250, "bow" => nil, "runestaff" => nil, "min" => -250, "max" => 10}
materials["bronze"] = { "weapon" => -50, "shield" => nil, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["carmiln"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => 10, "runestaff" => 10, "min" => 10, "max" => 10}
materials["cloth"] = { "weapon" => nil, "shield" => nil, "armor" => 0, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["copper"] = { "weapon" => -50, "shield" => nil, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["coraesine"] = { "weapon" => -999, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -999, "max" => -999}
materials["deringo"] = { "weapon" => nil, "shield" => -20, "armor" => nil, "bow" => -20, "runestaff" => -20, "min" => -20, "max" => -20}
materials["drakar"] = { "weapon" => -50, "shield" => -50, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["drake"] = { "weapon" => 0, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["eahnor"] = { "weapon" => 15, "shield" => 15, "armor" => 15, "bow" => nil, "runestaff" => nil, "min" => 15, "max" => 15}
materials["eonake"] = { "weapon" => -60, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -60, "max" => -60}
materials["faenor"] = { "weapon" => 15, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => 15, "max" => 15}
materials["faewood"] = { "weapon" => nil, "shield" => 10, "armor" => nil, "bow" => nil, "runestaff" => 0, "min" => 0, "max" => 10}
materials["feras"] = { "weapon" => 0, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["fireleaf"] = { "weapon" => nil, "shield" => 15, "armor" => nil, "bow" => nil, "runestaff" => 15, "min" => 15, "max" => 15}
materials["glaes"] = { "weapon" => -10, "shield" => -10, "armor" => -10, "bow" => nil, "runestaff" => nil, "min" => -10, "max" => -10}
materials["glass"] = { "weapon" => 0, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["glowbark"] = { "weapon" => nil, "shield" => -10, "armor" => nil, "bow" => -10, "runestaff" => -10, "min" => -10, "max" => -10}
materials["golvern"] = { "weapon" => -10, "shield" => -10, "armor" => -10, "bow" => nil, "runestaff" => nil, "min" => -10, "max" => -10}
materials["gornar"] = { "weapon" => -50, "shield" => -50, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["hoarbeam"] = { "weapon" => nil, "shield" => 5, "armor" => nil, "bow" => 5, "runestaff" => 5, "min" => 5, "max" => 5}
materials["illthorn"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => nil, "runestaff" => 0, "min" => 0, "max" => 0}
materials["imflass"] = { "weapon" => -30, "shield" => -30, "armor" => -30, "bow" => nil, "runestaff" => nil, "min" => -30, "max" => -30}
materials["invar"] = { "weapon" => 0, "shield" => 0, "armor" => 0, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["ipantor"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => -40, "runestaff" => nil, "min" => -40, "max" => -40}
materials["iron"] = { "weapon" => -30, "shield" => -30, "armor" => -30, "bow" => nil, "runestaff" => nil, "min" => -30, "max" => -30}
materials["ironwood"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => nil, "runestaff" => 0, "min" => 0, "max" => 0}
materials["kakore"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => nil, "runestaff" => 0, "min" => 0, "max" => 0}
materials["kelyn"] = { "weapon" => 0, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["krodera"] = { "weapon" => -999, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -999, "max" => -999}
materials["kroderine"] = { "weapon" => -999, "shield" => -999, "armor" => -999, "bow" => nil, "runestaff" => nil, "min" => -999, "max" => -999}
materials["leather"] = { "weapon" => nil, "shield" => nil, "armor" => -10, "bow" => nil, "runestaff" => nil, "min" => -10, "max" => -10}
materials["lor"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => -25, "min" => -25, "max" => -25}
materials["mein"] = { "weapon" => -10, "shield" => -10, "armor" => -10, "bow" => nil, "runestaff" => nil, "min" => -10, "max" => -10}
materials["mesille"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => 0, "runestaff" => 0, "min" => 0, "max" => 0}
materials["mithglin"] = { "weapon" => 15, "shield" => 15, "armor" => 15, "bow" => nil, "runestaff" => nil, "min" => 15, "max" => 15}
materials["mithril"] = { "weapon" => 20, "shield" => 20, "armor" => 20, "bow" => nil, "runestaff" => nil, "min" => 20, "max" => 20}
materials["modwir"] = { "weapon" => 0, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["mossbark"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => 0, "runestaff" => 0, "min" => 0, "max" => 0}
materials["obsidian"] = { "weapon" => -500, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -500, "max" => -500}
materials["ora"] = { "weapon" => 0, "shield" => 0, "armor" => 0, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["ora-black"] = { "weapon" => -75, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -75, "max" => -75}
materials["ora-white"] = { "weapon" => -40, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -40, "max" => -40}
materials["orase"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => nil, "runestaff" => 0, "min" => 0, "max" => 0}
materials["razern"] = { "weapon" => -20, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -20, "max" => -20}
materials["rhimar"] = { "weapon" => -50, "shield" => -50, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["rolaren"] = { "weapon" => -40, "shield" => -40, "armor" => -40, "bow" => nil, "runestaff" => nil, "min" => -40, "max" => -40}
materials["rowan"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => 20, "min" => 20, "max" => 20}
materials["ruby"] = { "weapon" => -500, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -500, "max" => -500}
materials["ruic"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => -60, "runestaff" => nil, "min" => -60, "max" => -60}
materials["sephwir"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => -25, "runestaff" => nil, "min" => -25, "max" => -25}
materials["steel"] = { "weapon" => -10, "shield" => -10, "armor" => -10, "bow" => nil, "runestaff" => nil, "min" => -10, "max" => -10}
materials["stone"] = { "weapon" => -500, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -500, "max" => -500}
materials["surita"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => -150, "min" => -150, "max" => -150}
materials["urglaes"] = { "weapon" => -999, "shield" => -999, "armor" => -999, "bow" => nil, "runestaff" => nil, "min" => -999, "max" => -999}
materials["urnon"] = { "weapon" => -999, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => nil, "min" => -999, "max" => -999}
materials["vaalorn"] = { "weapon" => 10, "shield" => 10, "armor" => 10, "bow" => nil, "runestaff" => nil, "min" => 10, "max" => 10}
materials["veil-iron"] = { "weapon" => -50, "shield" => -50, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["villswood"] = { "weapon" => nil, "shield" => 0, "armor" => nil, "bow" => 0, "runestaff" => 0, "min" => 0, "max" => 0}
materials["vultite"] = { "weapon" => 0, "shield" => 0, "armor" => 0, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["white-alloy"] = { "weapon" => nil, "shield" => 0, "armor" => 0, "bow" => nil, "runestaff" => nil, "min" => 0, "max" => 0}
materials["witchwood"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => nil, "runestaff" => -75, "min" => -75, "max" => -75}
materials["wood"] = { "weapon" => -100, "shield" => -10, "armor" => -100, "bow" => -10, "runestaff" => -10, "min" => -100, "max" => -10}
materials["wyrwood"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => -60, "runestaff" => nil, "min" => -60, "max" => -60}
materials["yew"] = { "weapon" => nil, "shield" => nil, "armor" => nil, "bow" => -20, "runestaff" => nil, "min" => -20, "max" => -20}
materials["zelnorn"] = { "weapon" => -999, "shield" => -999, "armor" => -999, "bow" => nil, "runestaff" => nil, "min" => -999, "max" => -999}
materials["zorchar"] = { "weapon" => -50, "shield" => -50, "armor" => -50, "bow" => nil, "runestaff" => nil, "min" => -50, "max" => -50}
materials["metal"] = { "weapon" => -500, "shield" => -500, "armor" => -500, "bow" => nil, "runestaff" => nil, "min" => -500, "max" => -500}
#------------------------------------------------------------------------------#
# calculate ensorcell ability
#------------------------------------------------------------------------------#
def self.sorc_bonus();
  if Spells.sorcerer <= (XMLData.level+1);
    return Spells.sorcerer * 2;
  else;
    return ((XMLData.level+1) * 2) + (Spells.sorcerer - (XMLData.level+1));
  end;
end;
factors = {
'level' => XMLData.level,
'Sorcerer ranks, 2 per rank up to level+1, 1 per rank over level+1' => self.sorc_bonus,
'Wisdom bonus' => Stats.enhanced_wis[1],
'Intuition bonus' => Stats.enhanced_int[1],

"Elemental Mana Control: +1 per #{Skills.emc >= Skills.smc ? 2 : 4} ranks" => Skills.emc / (Skills.emc >= Skills.smc ? 2 : 4),
"Spiritual Mana Control: +1 per #{Skills.smc > Skills.emc ? 2 : 4} ranks" => Skills.smc / (Skills.smc > Skills.emc ? 2 : 4),
'Arcane Symbols: +1 per 10 ranks'        => Skills.arcanesymbols / 10,
'Magic Item Use: +1 per 10 ranks'        => Skills.magicitemuse / 10,
'Workshop +20' => 20,
#'less than full spirit - ??' => 0,
#'Wounds - ??' => 0
};
total = 0;

factors.each { |k,v|
  total += v.to_i;
  respond sprintf("  %4d : %s",v,k);
};
respond sprintf("  %4d : %s",total,"subtotal");
#------------------------------------------------------------------------------#
# calcualted enchant penalties
#------------------------------------------------------------------------------#
#4. On 02/23/20, GM Estild shared that the formula for Enchant Ensorcel Penalty is (TRUNC(Enchant/3))^2.
if script.vars[0] =~ /\b(\+?\d+x?)\b/i;
  enchant = $1.gsub('+','');
  enchant = enchant =~ /x$/ ? enchant.gsub('x','').to_i * 5 : enchant.to_i;
  enchant_penalty = (enchant/3)*(enchant/3)*-1;
  total = total + enchant_penalty;
  respond sprintf("  %4d : %s",enchant_penalty,"enchant penalty for +#{enchant} ((#{enchant}/3)^2)");
end;
#------------------------------------------------------------------------------#
# set ensorcell penalty, base is -50 for none existing, -50 for each tier over 0
#------------------------------------------------------------------------------#
if script.vars[0] =~ /\bT ?(\d)\b/i;
  ensorcell = $1.to_i;
  ensorcell = 5 if ensorcell > 5;
  ensorcell = ensorcell - 1 if ensorcell > 0;
else;
  ensorcell = 0;
end;
ensorcell_penalty = (ensorcell * -50) - 50;
total = total + ensorcell_penalty;
respond sprintf("  %4d : %s",ensorcell_penalty,"ensorcell penalty for T#{ensorcell} to T#{ensorcell+1}");

#------------------------------------------------------------------------------#
# padding/weighting
#------------------------------------------------------------------------------#
if script.vars[0] =~ /\b(?:CER ?(\d+)|(\d+) ?CER)\b/i;
  cer = $1.to_i | $2.to_i;
  wps_penalty = (cer * cer) * -1;
  total = total + wps_penalty;
  respond sprintf("  %4d : %s",wps_penalty,"wps penalty for CER #{cer} (CER^2)");
end;
#------------------------------------------------------------------------------#
# flaring
#------------------------------------------------------------------------------#
if script.vars[0] =~ /\b(acuity|earth|fire|ice|vacuum|acid|lightning|steam)\b?(flaring|flares)?|(flaring|flares)\b/i;
  flare = $1;
  flare_penalty = -100;
  total = total + flare_penalty;
  respond sprintf("  %4d : %s",flare_penalty,"flares penalty");
end;
#------------------------------------------------------------------------------#
# enhancive
#------------------------------------------------------------------------------#
if script.vars[0] =~ /\b(?:enhan[sc]?i?v?e?)/i;
  enhancive_penalty = -200;
  total = total + enhancive_penalty;
  respond sprintf("  %4d : %s",enhancive_penalty,"enhancive penalty");
end;
#------------------------------------------------------------------------------#
# sanctified
#------------------------------------------------------------------------------#
if script.vars[0] =~ /\bsancti?f?i?e?d?\b/i;
  sanctified_penalty = -200;
  total = total + sanctified_penalty;
  respond sprintf("  %4d : %s",sanctified_penalty,"sanctified penalty");
end;
#------------------------------------------------------------------------------#
# lookup and add script penalty
#------------------------------------------------------------------------------#
if script.vars[0] =~ /\b(#{script_penalties.keys.join('|')})/i;
  script_name = $1.downcase;
  script_penalty = script_penalties[script_name];
  total = total + script_penalty;
  respond sprintf("  %4d : %s",script_penalty,"script penalty for #{script_name}");
end;

#------------------------------------------------------------------------------#
# lookup and add material modifier
#------------------------------------------------------------------------------#
#if script.vars[0] =~ /\b(#{materials.keys.sort_by{|k| k.length * -1 }.join('|')})\b(weapon|shield|armor|bow|r?u?n?e?staff|min|max)?/i
if script.vars[0] =~ /\b(#{materials.keys.sort_by{|k| k.length * -1 }.join('|')})/i;
  material_name = $1.downcase;
  item_type = 'min';
  if script.vars[0] =~ /\b(weapon|shield|armor|bow|r?u?n?e?staff|min|max)/
    item_type = $1.downcase;
  end;
  #echo material_name
  #echo item_type
  material_modifier = materials[material_name][item_type];
  total = total + (material_modifier) if !material_modifier.nil?;
  respond sprintf("  %4d : %s",material_modifier,"material modifier for #{material_name}, #{item_type}");
end;
#------------------------------------------------------------------------------#
# total
#------------------------------------------------------------------------------#
respond sprintf("  %4d : %s",total,"total");
exit