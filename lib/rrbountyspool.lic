# Vim ruby syntax highlighting, plz
=begin
Kaldonis's River's Rest Capped Bounty Spooler.

Moves to the Adv Guild and asks about a bounty.  Exits if it is not a foraging / gem bounty.

Burns a BOOST BOUNTY (if called with spool) to get a foraging or gem bounty.

This is presently ALPHA and I am planning to expand the functionality

USAGE: 	;rrbountyspool -- checks for one bounty
	;rrbountyspool spool -- uses a BOOST and continues checking

    author: Kaldonis
    name: rrbountyspool
    tags: RR, bounty
    version: 0.18
=end
=begin

Version history:
  0.18 Testing WL gemshop, healer, and furrier
  0.17 bugfix: turning in when saturated was not perfectly coded
  0.16 bugfix: the bounty turn in could accidentally spool past a bounty of interest
  0.15 added ability for it turn a bounty in, and also not turn in when saturated
       make the structure more sane so the regex of interest is not hardcoded twice
  0.14 added the "spool" option, so it doesn't burn a boost by default

Future ambitions (hopes and ideas):
	ALL towns
	Choose your favorite bounites!
	Choose your favorite gems!
	Choose the foragable items you prefer!
	Give a shop number for skins or foraged items!
		Rather than just mine in RR, lol
	GUI setup with saving
	Command line options
	Pulling gems to accept from your LOCKER MANIFEST <TOWN>
	Getting to FWI lockers!
	Option for URCHIN GUIDE, to make it faster for specific gem selection
	Quantum computing!

=end

if script.vars[0].strip =~ /^spool$/i
  boost = true
else
  boost = false
end

start_script 'go2', ["advguild"]
wait_while { running?('go2') }
# LOCATION says Adventurer's Guild ... :::facepalm:::
#if Room.current.location =~ /River's Rest/
#  echo "Time to get a foraging or gem bounty!"
#else
#  echo "This script is presently designed only for River's Rest, sorry!"
#  exit
#end

# need catches for turning in bounties
#As you approach Alanna, your thoughts drift momentarily and you realize that your mind is already racing with your recent experiences.  If you report back on your success now, you may well lose out on some valuable life experience.
#Alanna says, "All done with that assignment?  Good job, Kaldonis!"

#gemdealer="dealer"
#gemdealer="Diamante"


foraging = true
gems = true 
skinning = true

spool:
result = String.new
#until result =~ /The local gem dealer, (Murdos Burdos|Diamante), has an order to fill and wants our help|The local healer, Surtey Akrash, has asked for our aid|The local furrier Dakris has an order to fill and wants our help/
until result =~ /The local gem dealer, (Murdos Burdos|Diamante), has an order to fill and wants our help|The local alchemist, Lomara, has asked for our aid|The local healer, Surtey Akrash, has asked for our aid|The local furrier Dakris has an order to fill and wants our help/
  fput "ask Taskmaster about bounty"
# debugging some WL and additional bounties
# The local healer, Surtey Akrash, has asked for our aid.
#The local furrier Dakris has an order to fill and wants our help.
#A certain client has hired us to provide a protective escort on his upcoming journey.
  result = matchwait("You have already been assigned a task","You want to be removed from your current task assignment","I'm kind of busy right now","It appears that a local resident urgently needs our help in some matter","It appears they need your help in tracking down some kind of lost heirloom","It appears they have a bandit problem they'd like you to solve","It appears they have a creature problem they'd like you to solve","The local gem dealer,","The local alchemist, Lomara, has asked for our aid","All done with that assignment","your thoughts drift momentarily and you realize that your mind is already racing with your recent experiences","The local healer","The local furrier","A certain client has hired us to provide a protective escort on (his|her) upcoming journey.")
# Kaldonis original, RR specific
  #result = matchwait("You have already been assigned a task","You want to be removed from your current task assignment","I'm kind of busy right now","It appears that a local resident urgently needs our help in some matter","It appears they need your help in tracking down some kind of lost heirloom","It appears they have a bandit problem they'd like you to solve","It appears they have a creature problem they'd like you to solve","The local gem dealer, Diamante, has an order to fill and wants our help","The local alchemist, Lomara, has asked for our aid","All done with that assignment","your thoughts drift momentarily and you realize that your mind is already racing with your recent experiences")
#  echo "got #{result}"
  # this one asks twice?
#  result = matchwait("Alanna says,","your thoughts drift momentarily and you realize that your mind is already racing with your recent experiences")
  if result =~ /your thoughts drift momentarily and you realize that your mind is already racing with your recent experiences/
    echo "Need to wait...quittig!"
    exit
  end
  if result =~ /Come back in about \d{1,2} minutes if you want another task/
    if boost
      fput "boost bounty"
      result = matchwait("You do not have any Bounty Boosts to redeem","You have activated a Bounty Boost")
      if result =~ /You do not have any Bounty Boosts to redeem/
        echo "Sorry, it seems you don't have any more Bounty Boosts!  Trying a Guild Boost..."
        fput "boost guild bounty"
        result = matchwait("You do not have any Guild Boosts to redeem","You have been awarded 1 Bounty Boost")
          if result =~ /You do not have any Guild Boosts to redeem/
            echo "Sorry, it seems you don't have any more Bounty Boosts nor Guild Boosts"
            exit
          else 
            fput "boost bounty"
          end
      end
    else
      echo "Quitting!"
      exit
    end
  elsif result =~ /Come back in about a minute if you want another task/
    sleep 5
  elsif result =~ /You have already been assigned a task|You want to be removed from your current task assignment|It appears that a local resident urgently needs our help in some matter|It appears they have a bandit problem they'd like you to solve|It appears they have a creature problem they'd like you to solve|It appears they need your help in tracking down some kind of lost heirloom/
    2.times{fput "ask Taskmaster about remo"}
  elsif result =~ /All done with that assignment/
    sleep 0.1 # can Ruby take an empty elsif ?
  elsif result =~ /The local gem dealer, (Murdos Burdos|Diamante), has an order to fill and wants our help/
    if gems
      gemdealer=$1
      if gemdealer =~ /Murdos Burdos/
        gemdealer="dealer"
      end
      start_script 'go2', ["gemshop"]
      wait_while { running?('go2') }
      fput "ask #{gemdealer} about bounty"
      echo "Off to your locker with you!"
      break
    else
      2.times{fput "ask Taskmaster about remo"}
      goto "spool"
    end
  elsif result =~ /The local alchemist, Lomara, has asked for our aid/
    if foraging
      start_script 'go2', ["alchemist"]
      wait_while { running?('go2') }
      fput "ask Lomara about bounty"
      #start_script 'go2', ["kaldonis"]
      #wait_while { running?('go2') }
      #move 'south'
      #fput "bounty"
      #echo "Buy my Confluence herbs, thanks!"
      break
    else
      2.times{fput "ask Taskmaster about remo"}
      goto "spool"
    end
  elsif result =~ /The local healer, Surtey Akrash, has asked for our aid/
    if foraging
      start_script 'go2', ["healer"]
      wait_while { running?('go2') }
      fput "ask Akrash about bounty"
      break
    else
      2.times{fput "ask Taskmaster about remo"}
    end
  elsif result =~ /The local furrier Dakris has an order to fill and wants our help/
    if skinning
      start_script 'go2', ["furrier"]
      wait_while { running?('go2') }
      fput "ask Dakris about bounty"
      break
    else
      2.times{fput "ask Taskmaster about remo"}
      goto "spool"
    end
  end
end

exit

# this is the right syntax to see if an array element matches!
herb_list = ['brittle crystalline stalk','dense earthen root','glistening engorged bulb','razor-edged oily flameleaf','spiky luminescent blossom']
herbalist_reply = "I've been working on a concoction that requires a razor-edged oily flameleaf."

herb_list.each do |herb_assignment|
  if herbalist_reply.include? herb_assignment
  	echo "yay! #{herb_assignment}"
  else
  	echo "fuck"
  end
end

#herb_name = "Lomara says, "Ah, so you're from the Adventurer's Guild?  Yes, I do have a task for you.  I've been working on a concoction that requires a razor-edged oily flameleaf.  Unfortunately, I need a specific variety that only grows in the Elemental Confluence near the Elemental Confluence.  If you could retrieve 6 samples for me, I would be most grateful.  Keep in mind that I need these samples to be in pristine condition.  That means no eating, bundling, or otherwise damaging the samples. You can GIVE them to me as you FORAGE them.""
