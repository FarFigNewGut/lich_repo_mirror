=begin
Designed to run with azbounty|bigshot, but can be run independently as well.

";eblade-gsf" will check your current weapon for an eblade and eblade it if the spell is not present.  Afterwards, it goes into "wait mode" where it will wait for the spell to fade and then re-cast.
";eblade-gsf once" will eblade the current weapon without wait mode activating.
	"go", "one", and "force" are valid triggers for the "once" function.
	
	--Razorfang/Subzero
=end

dropped = nil

if GameObj.right_hand.noun == nil
	echo "You need a weapon in your right hand!"
	echo "The script does not detect weapons or cast at the left hand item, so make sure the item you want to cast at is in your right hand"
	exit
else @weap = GameObj.right_hand.id
end

def igo2(room = false)
	fput "out" if checkroom =~ /table|dark alcove/i
	if room
		if running? "go2"
			kill_script "go2"
		end	
		start_script "go2", [room, '_disable_confirm_']
		wait_while { running? "go2" }
	else
		echo "There was an error trying to go where you wanted.  It's all your fault!"
	end
end

eblade = proc {
	if running? "bigshot"
		pause_script "bigshot"
		if running? "azbounty"
			pause_script "azbounty"
		end
	end
	
	cast_411 = proc {
		if Spell[411].known? && Spell[411].affordable?
			fput "release" unless prepped? !~ /none|elemental blade/i
			multifput "prep 411", "cast #{@weap}"
			result = matchwait /leaps from your hand|armor prevents|fumble|at what|could not find|misfires|nothing happens|^You already have a spell/i
			if result =~ /leaps/
				if running? "azbounty"
					unpause_script "azbounty"
				end
				if running? "bigshot"
					unpause_script "bigshot"
				end
			elsif result =~ /prevents|fumble|misfires|nothing/
				waitcastrt?
				eblade.call
			elsif result =~ /have a spell/
				fput "release" unless prepped? !~ /none|elemental blade/i
				eblade.call
			elsif result =~ /what|not find/
				echo "Weapon not found.  Script should find weapon... slacker"
				nil
			end
		end
	}
	
	if dropped != true
		fput "look at my #{@weap}"
		x = matchwait /I could not find|is surrounded by a scintillating|You see nothing unusual/
		if x =~ /I could not find/
			echo "You don't seem to have a weapon to eblade, foo!"
			exit
		elsif x =~ /scintillating/
			nil
		elsif x =~ /nothing unusual/
			cast_411.call
		end
	else cast_411.call
	end
			
	if running? "azbounty"
		unpause_script "azbounty"
	end
	if running? "bigshot"
		unpause_script "bigshot"
	end
}

if script.vars.empty?
	eblade.call
	while line = get
		if line =~ /The scintillating ([a-z]+) light surrounding the .* fades away/
			waitrt?
			fput "stance defensive"
			waitcastrt?
			eblade.call
		end
	end
elsif script.vars[1] =~ /force|on(?:c)?e|go/
	eblade.call
	exit
end
