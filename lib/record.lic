=begin

	Requires Lich version 5.5.0 or greater.
	
	Simple script that allows you to record item data and view it at any time.
	
	To see help menu just start script as: ;record
	
	;record add - Add RECALL information about item in your right hand, if the RECALL information has been unlocked.
	;record add YOUR INFORMATION HERE - Add as much information you want to about an item, as well as records the RECALL information
	;record list - List information for all items you have recorded.
	;record delete - Deletes information about item in your right hand from database.
	;record delete ITEM_NUMBER - Delete information about the item number you specify. Item number can be found when doing ;record list.
	;record reset - Deletes ALL information you have saved. There is no confirmation when using this command.
	
	Changelog:
	Version 1: Initial release!
	Version 2: Script now uses full name of items.
	Version 3: Script no longer logs "You are unable to recall the ITEM'S loresong." if the item's loresong isn't unlocked.
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Author: Dreaven
	Version: 3

=end

LICH_GEM_REQUIRES = '5.5.0'
if Gem::Version.new(LICH_VERSION) < Gem::Version.new(LICH_GEM_REQUIRES)
	_respond "This script requires Lich Version #{LICH_GEM_REQUIRES} or greater. Please update to the latest version of Lich in order to use this script."
	exit
end

CharSettings['item_number'] = 0 unless CharSettings['item_number']

if script.vars[1].downcase == "add"
	if checkright.nil?
		_respond "You must be holding something in your right hand to record any item data."
	else
		item_name = nil
		recall_information = Array.new
		CharSettings['item_number'] += 1
		result = Lich::Util.quiet_command_xml("glance", /You glance down/)
		result.each{ |info|
			info = strip_xml(info)
			if info =~ /You glance down to see [a-zA-Z]+ (.*) in your right hand and/
				item_name = $1
			end
		}
		recall_information.push("(#{CharSettings['item_number']}) #{item_name}")
		if script.vars[2]
			recall_information.push("#{checkname}: #{script.vars[0].split(' ')[1..-1].join(' ')}")
		else
			recall_information.push("#{checkname}:")
		end
		
		if Char.prof == "Bard"
			command_to_use = "recall my #{checkright} quick"
		else
			command_to_use = "recall my #{checkright}"
		end
		result = Lich::Util.quiet_command_xml("#{command_to_use}", /You are unable to recall|As you recall/)
		result.each{ |info|
			info = strip_xml(info)
			recall_information.push(info) if info && info !~ /You are unable to recall/
		}
		_respond "#{monsterbold_start}Information added.#{monsterbold_end}\n"
		File.open("record.txt", "a") { |i| i.write "#{recall_information}\n" }
	end
elsif script.vars[1].downcase =~ /remove|delete/
	item_to_delete = nil
	if script.vars[2] =~ /(\d+)/
		item_to_delete = $1
	elsif checkright
		result = Lich::Util.quiet_command_xml("glance", /You glance down/)
		result.each{ |info|
			info = strip_xml(info)
			if info =~ /You glance down to see [a-zA-Z]+ (.*) in your right hand and/
				item_to_delete = $1
			end
		}
	else
		_respond "You must be holding something in your right hand to remove any item data."
		exit
	end
	if item_to_delete
		all_data = File.readlines('record.txt')
		if item_to_delete =~ /\d+/
			item_found = all_data.find{ |i| i =~ /\(#{item_to_delete}\)/ }
		else
			item_found = all_data.find{ |i| i =~ /#{item_to_delete}/ }
		end
		if item_found
			all_data.delete(item_found)
			File.open("record.txt", "w") { |i| all_data.each{ |t| i.write "#{t}" } }
			if item_to_delete =~ /\d+/
				_respond "Information for item number #{item_to_delete} has been removed."
			else
				_respond "Information for '#{GameObj.right_hand.name}' has been removed."
			end
		else
			if item_to_delete =~ /\d+/
				_respond "Item number #{item_to_delete} does not exist in the database."
			else
				_respond "No data for '#{GameObj.right_hand.name}' exists in the database."
			end
		end
	end
elsif script.vars[1].downcase == "list"
	all_data = File.readlines('record.txt')
	all_data.each{|i|
		monster_bold_line = true
		respond
		temp = i.split(/\"\,|\["| \"|\.\"\]|\"\]/)
		temp.each{ |line| 
			monster_bold_line = nil if line =~ /As you recall/
			if line.length > 0
				if monster_bold_line
					_respond "#{monsterbold_start}#{line}#{monsterbold_end}\n"
				else
					respond "#{line}"
				end
			end
		}
		respond
	}
elsif script.vars[1].downcase == "reset"
	CharSettings['item_number'] = 0
	File.open("record.txt", "w") { |i| i.write "" }
	_respond "#{monsterbold_start}All of your recorded information has been reset.#{monsterbold_end}\n"
else
	_respond "#{monsterbold_start}########################################################################################################{monsterbold_end}\n"
	_respond "#{monsterbold_start}Commands:#{monsterbold_end}\n"
	_respond
	_respond "#{monsterbold_start};record add#{monsterbold_end} Records RECALL information of item in your right hand, if recall information has been unlocked."
	_respond
	_respond "#{monsterbold_start};record add ANY INFORMATION YOU WANT#{monsterbold_end} Records RECALL information of item in your right hand, AND any information you specify."
	_respond "Example: #{monsterbold_start};record add 50 charges remaining, my locker#{monsterbold_end}\n"
	_respond
	_respond "#{monsterbold_start};record list#{monsterbold_end} Lists all saved data."
	_respond
	_respond "#{monsterbold_start};record remove#{monsterbold_end} OR #{monsterbold_start};record delete#{monsterbold_end} Deletes data about item in your right hand."
	_respond
	_respond "#{monsterbold_start};record remove ITEM_NUMBER#{monsterbold_end} OR #{monsterbold_start};record delete ITEM_NUMBER#{monsterbold_end} Deletes data for the item number you specify, item numbers are listed when doing #{monsterbold_start};record list#{monsterbold_end}."
	_respond "Example: #{monsterbold_start};record remove 2#{monsterbold_end} Will delete item number 2 in your list."
	_respond
	_respond "#{monsterbold_start};record reset#{monsterbold_end} Deletes ALL item information. There is no confirmation when using this."
	_respond "#{monsterbold_start}########################################################################################################{monsterbold_end}\n"
end