=begin

Will use 116 to locate a target, and spit out the room number. 
usage

;116locate <target> [sight]    - add "sight" if you want to use Symbol of Sight instead

Symbol of Sight is sometimes useful when 116 can't locate the target due to their corpse being hidden, or other circumstance.
by Daedeus

=end

if script.vars[2] =~ /sight/ && !Spell["Symbol of Sight"].known?
	echo "You don't seem to know symbol of sight."
	exit
end

UseSymbol = script.vars[2] =~ /sight/

fput "set description on"
if script.vars[1]
	# fput 'set description on'
	result = nil
	command = "symbol of sight #{script.vars[1]}" if UseSymbol
	command = "cast #{script.vars[1]}" unless UseSymbol

	unless UseSymbol
		fput "release" if checkprep !~ /None|Locate/ 
		fput "prep 116" if checkprep !~ /Locate/
	end
	result = dothistimeout command, 3, /Cast at what|Your vision|Some unseen force|the distance is too great|must be beyond the reach|you can't seem to make the link work| establishing the link and suddenly you see|no picture comes to mind/
	
	fput 'set description off'
	if result =~ /Cast at what|Some unseen force/
		echo "*** Could not locate #{script.vars[1]} ***"
		echo "*** If their body is hidden, maybe Symbol of Sight will work.  ;116locate <target> sight ***"
		exit
	elsif result =~ /must be beyond the reach/
		echo "*** #{script.vars[1]} out of range of your spell ***"
		exit
	elsif result =~ /the distance is too great/
		echo "*** #{script.vars[1]} is out of range of Symbol of Sight ***"
		exit
	elsif result =~ /can't seem to make the link work|no picture comes to mind/
		echo "*** #{script.vars[1]} is not a Voln member ***"
		exit
	elsif result =~ /establishing the link and suddenly you see/
	end
	sleep 0.5
else
	echo "Usage: ;116locate <target> [sight]"
end

room_title = room_description = room_exits_string = nil
history = ($_SERVERBUFFER_ + $_SERVERBUFFER_.history).reverse
history.each_index { |i|
	# Your vision begins to become murky and clouded.  You have a sensation of rapidly passing distance.  Eventually your sight begins to clear and a vision of .* surroundings fills your mind...
	if history[i] =~ /^Your vision begins to become murky and clouded|You concentrate on establishing the link and suddenly you see/
		history[i-7..i].each { |line|
			if line =~ /<style id="roomName" \/>(.*)$/
				room_title = $1.strip
			elsif line =~ /<style id="roomDesc"\/>(.*?)<style id=""\/>/
				room_description = $1.strip.gsub(/<.*?>/, '')
			elsif line =~ /(Obvious (?:paths|exits): .*)/
				room_exits_string = $1.strip.gsub(/<.*?>/, '')
			end
		}
		break
	end
}

room = Map.list.find { |room| room.title.include?(room_title) and room.desc.include?(room_description) and room.paths.include?(room_exits_string) }

unless room
	desc_regex = /#{Regexp.escape(room_description).gsub(/\\\.(?:\\\.\\\.)?/, '|')}/
	room = Map.list.find { |room| room.title.include?(room_title) and room.paths.include?(room_exits_string) and room.desc.find { |desc| desc =~ desc_regex } }
end

unless room
	echo 'Could not find a maching room in the map database for the last locate.'
	exit
end

echo "***********************************************"
echo "I think #{script.vars[1]} is in Room #{room.id}"
echo "***********************************************"
fput "set description off"