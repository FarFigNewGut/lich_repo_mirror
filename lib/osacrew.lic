VERSION = '5.0.0'
UserVars.osacrew["crewversion"] = VERSION
$TITLE = "OSACrew: v. (#{VERSION})"
$osacrew = self
@once = "False"

		  $get_vBox = proc {
        if Gtk.check_version(3,0,0).nil?
          Gtk::Box.new(:vertical)
        else
          Gtk::VBox.new(false, 0)
        end
      }


  def set_value(key, clean, default)
    if (!UserVars.osacrew[key].nil? && UserVars.osacrew[key] !~ /^\s*$/)
      cleaned = clean_value(clean, UserVars.osacrew[key])
      instance_variable_set("@#{key.upcase}", cleaned)
    else
      instance_variable_set("@#{key.upcase}", default)
    end
  end
  
  def self.profile(vars)
  require 'yaml'
  require 'fileutils'
  FileUtils.mkdir_p(File.join($data_dir, XMLData.game, Char.name, "osacrew_profiles"))
    if vars[2] =~ /load/i
      if vars[3] != nil
        dir = File.join($data_dir, XMLData.game, Char.name, "osacrew_profiles")
        filename = File.join(dir, "#{vars[3]}.yaml")
        if !File.exist?("#{filename}")
          respond ""
          respond " You are trying to load a profile that does not exist."
          respond ""
          respond "***************************"
          respond " Notice- your default osacrew profiles folder has changed to:"
          respond " #{dir}"
          respond ""
          respond " The old location is here: #{File.join($script_dir, 'osacrew_profiles')}"
          respond " You can copy this folder or appropriate profiles into the relevant character directory in your operating system"
          respond "****************************"
          respond ""
        else
          from_file = YAML.load_file(filename)
          UserVars.osacrew = from_file
          echo "Settings loaded from profile: #{filename}."
        end
      else
        echo "You forgot to name your profile you wish to load."
        echo "Syntax: ;osacrew profile load <NAME Here, no Spaces!>"
      end
    elsif vars[2] =~ /save/i
      if vars[3] != nil
        dir = File.join($data_dir, XMLData.game, Char.name, "osacrew_profiles")
        filename = File.join(dir, "#{vars[3]}.yaml")
        if File.exist?("#{filename}")
          echo "File already exists, if you wish to overwrite, please ;unpause osacrew."
          echo "Else ;kill osacrew and choose another filename."
          pause_script
        end
        File.write(filename, UserVars.osacrew.to_yaml)
        echo "Settings saved to profile: #{filename}."
      else
        echo "You forgot to name your profile you wish to save."
        echo "Syntax: ;osacrew profile save <NAME Here, no Spaces!>"
      end
    end
  end
	  
def self.setup
	@theme_state = Lich.track_dark_mode if defined? Lich.track_dark_mode
    Gtk.queue do
      @get_vBox = proc {
        if Gtk.check_version(3,0,0).nil?
          Gtk::Box.new(:vertical)
        else
          Gtk::VBox.new(false, 0)
        end
      }
	  @OC_WINDOW = Gtk::Window.new
      @OC_WINDOW.title = $TITLE
      @OC_WINDOW.set_icon(@default_icon)
      @OC_WINDOW.set_border_width(10)
      @OC_WINDOW.keep_above = true
	  
		if Gtk.check_version(3,0,0).nil? && (@theme_state == 'off' or @theme_state.nil?)
			grey = Gdk::RGBA::parse("#d3d3d3")
			@OP_WINDOW.override_background_color(:normal, grey)
		end

      @OC_BOX = @get_vBox.call
      @OC_BOX.set_border_width(5)
      @OC_WINDOW.add(@OC_BOX)

      @OC_NOTEBOOK = Gtk::Notebook.new
      @OC_NOTEBOOK.set_show_border(true)
	  if Gtk.check_version(3,0,0).nil? && (@theme_state == 'off' or @theme_state.nil?)
		@OC_NOTEBOOK.override_background_color(:normal, grey)
	  end
      @OC_BOX.add(@OC_NOTEBOOK)
      @OC_ENTRY = Hash.new # For mapping entries to variables
      @OC_TABLE_SIZE = Hash.new # For mapping table sizes

  end
  
	Gtk.queue do
      tab_names = %w[
        General
		Commander
		Combat
		Support
      ]
	  
     tab_names.each.with_index(1) do |name, val|
        new_table = Gtk::Table.new(10, 4, true).tap do |table|
          table.row_spacings = 1
          table.column_spacings = 1
        end

        new_box = if Gtk.check_version(3,0,0).nil?
          Gtk::Box.new(:vertical)
        else
          Gtk::VBox.new(false, 0)
        end

        if Gtk.check_version(3,0,0).nil?
          new_box.pack_start(new_table, expand: false, fill: false, padding: 0)
        else
          new_box.pack_start(new_table, false, false, 0)
        end

        @OC_NOTEBOOK.append_page(new_box, Gtk::Label.new(name))

        instance_variable_set("@OC_TABLE#{val}", new_table)
        instance_variable_set("@OC_VERTICAL_BOX#{val}", new_box)
      end
end

def self.add_label_entry(table, label, variable, newrow = false)
    size = @OC_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 0, 1, size, size + 1)

    entry = Gtk::Entry.new
    entry.text = UserVars.osacrew[variable].to_s
    entry.set_width_request(150)
    table.attach(entry, 1, 2, size, size + 1)

    @OC_ENTRY[variable] = entry
    @OC_TABLE_SIZE[table] += 1 if newrow
  end

def self.add_label_entry2(table, label, variable, newrow = false)
    size = @OC_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 2, 3, size, size + 1)

    entry = Gtk::Entry.new
    entry.text = UserVars.osacrew[variable].to_s
    entry.set_width_request(150)
    table.attach(entry, 3, 4, size, size + 1)

    @OC_ENTRY[variable] = entry
    @OC_TABLE_SIZE[table] += 1 if newrow
end  

def self.add_label_entry3(table, label, newrow = false)
    size = @OC_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 0, 1, size, size + 1)

    @OC_TABLE_SIZE[table] += 1 if newrow
end  

def self.add_label_entry4(table, label, newrow = false)
    size = @OC_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 2, 3, size, size + 1)

    @OC_TABLE_SIZE[table] += 1 if newrow
end 

def self.add_label_entry5(table, label, newrow = false)
    size = @OC_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 4, 5, size, size + 1)

    @OC_TABLE_SIZE[table] += 1 if newrow
end 

    def self.add_dropdown(table, dropdown, variable, options, newrow = false)
      size = @OC_TABLE_SIZE[table] || 0

      label = Gtk::Label.new(dropdown)
      dropdown = if Gtk.check_version(3,0,0).nil?
        Gtk::ComboBoxText.new
      else
        Gtk::ComboBox.new
      end

      options.split(',').each { |s| dropdown.append_text(s) }
      if UserVars.osacrew[variable].nil?
        dropdown.set_active(0)
      else
        if UserVars.osacrew[variable].to_s != "Fixnum" && UserVars.osacrew[variable].to_s != "Integer"
          UserVars.osacrew[variable]
        end
        dropdown.set_active(UserVars.osacrew[variable])
      end
      align = Gtk::Alignment.new 0, 0, 0, 0
      align2 = Gtk::Alignment.new 0, 0, 1, 0
      align.set_padding(4, 0, 3, 4)
      align2.set_padding(0, 0, 0, 0)
      align.add(label)
      align2.add(dropdown)
      table.attach(align, 0, 1, size, size + 1)
      table.attach(align2, 1, 2, size, size + 1)
      @OC_ENTRY[variable] = dropdown
      @OC_TABLE_SIZE[table] += 1 if newrow
    end

def self.add_dropdown2(table, dropdown, variable, options, newrow = false)
      size = @OC_TABLE_SIZE[table] || 0

      label = Gtk::Label.new(dropdown)
      dropdown = if Gtk.check_version(3,0,0).nil?
        Gtk::ComboBoxText.new
      else
        Gtk::ComboBox.new
      end

      options.split(',').each { |s| dropdown.append_text(s) }
      if UserVars.osacrew[variable].nil?
        dropdown.set_active(0)
      else
        if UserVars.osacrew[variable].to_s != "Fixnum" && UserVars.osacrew[variable].to_s != "Integer"
          UserVars.osacrew[variable]
        end
        dropdown.set_active(UserVars.osacrew[variable])
      end
      align = Gtk::Alignment.new 0, 0, 0, 0
      align2 = Gtk::Alignment.new 0, 0, 1, 0
      align.set_padding(4, 0, 3, 4)
      align2.set_padding(0, 0, 0, 0)
      align.add(label)
      align2.add(dropdown)
      table.attach(align, 2, 3, size, size + 1)
      table.attach(align2, 3, 4, size, size + 1)
      @OC_ENTRY[variable] = dropdown
      @OC_TABLE_SIZE[table] += 1 if newrow
    end

      def self.add_text_area(vbox, label, variable)
      # Grab value for a manual check since we can't rely on a version of Ruby with safe operators
      current_value = UserVars.osacrew[variable]

      entry = Gtk::TextView.new
      entry.buffer.text = current_value ? current_value.gsub("||","\n") : ""

      swin = Gtk::ScrolledWindow.new
      swin.border_width = 5
      swin.add(entry)
      swin.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS)

      frame = Gtk::Frame.new(label)
      frame.add(swin)

      vbox.pack_start_defaults(frame)

      @OC_ENTRY[variable] = entry
    end
  Gtk.queue do
    @OC_ENTRY = Hash.new
    add_label_entry(@OC_TABLE1, "Commander:", 'commander', true)	
	add_label_entry(@OC_TABLE1, "Crew Channel:", 'crew', true)
	add_label_entry(@OC_TABLE1, "Medical Officer:", 'medicalofficer', true)
	add_label_entry(@OC_TABLE1, "Wound Level To Seek Healing (0-3)", 'wound_level', true)
	add_checkbox(@OC_TABLE1, 0,  "Crew Tasks", 'osacrewtasks')
	add_checkbox(@OC_TABLE1, 1,  "Loot Dead", 'osalooter')
	add_checkbox(@OC_TABLE1, 2,  "Sell Loot", 'slootsell', true)
	add_checkbox(@OC_TABLE1, 0,  "Use Armor Specializations", 'armor_specs')
	add_checkbox(@OC_TABLE1, 1,  "Group Spellup", 'groupspellup')
	add_checkbox(@OC_TABLE1, 2,  "Self Spellup", 'selfspellup', true)
	add_checkbox(@OC_TABLE1, 0,  "Use Long Term Exp", 'uselte')
	add_checkbox(@OC_TABLE1, 1,  "Wind The Sails", 'windedsails', true)
	add_label_entry3(@OC_TABLE2, "Enemy Types To Engage:", true)
	add_checkbox(@OC_TABLE2, 0,  "Pirates", 'enemy_pirate')
	add_checkbox(@OC_TABLE2, 1,  "Krolvin", 'enemy_krolvin')
	add_checkbox(@OC_TABLE2, 2,  "Ethereal", 'enemy_undead', true)
	add_label_entry3(@OC_TABLE2, "Ship Types To Board:", true)
	add_checkbox(@OC_TABLE2, 0,  "Sloop", 'board_sloop')
	add_checkbox(@OC_TABLE2, 1,  "Brigantine", 'board_brigantine')
	add_checkbox(@OC_TABLE2, 2,  "Carrack", 'board_carrack', true)
	add_checkbox(@OC_TABLE2, 0,  "Galleon", 'board_galleon')
	add_checkbox(@OC_TABLE2, 1,  "Frigate", 'board_frigate')
	add_checkbox(@OC_TABLE2, 2,  "Man O' War", 'board_man', true)
	add_label_entry3(@OC_TABLE2, "Ship Types To Cannon:", true)
	add_checkbox(@OC_TABLE2, 0,  "Sloop", 'fire_sloop')
	add_checkbox(@OC_TABLE2, 1,  "Brigantine", 'fire_brigantine')
	add_checkbox(@OC_TABLE2, 2,  "Carrack", 'fire_carrack', true)
	add_checkbox(@OC_TABLE2, 0,  "Galleon", 'fire_galleon')
	add_checkbox(@OC_TABLE2, 1,  "Frigate", 'fire_frigate')
	add_checkbox(@OC_TABLE2, 2,  "Man O' War", 'fire_man', true)
	add_label_entry3(@OC_TABLE2, "", true)
	add_label_entry3(@OC_TABLE2, "General Settings", true)
	add_checkbox(@OC_TABLE2, 0,  "Four Winds Access", 'fwi')
	add_checkbox(@OC_TABLE2, 1,  "Use Net-Launcher", 'netlauncher')
	add_label_entry3(@OC_TABLE3, "Combat Settings", false)
	add_label_entry4(@OC_TABLE3, "Undead Combat Settings", true)
	add_dropdown(@OC_TABLE3, "Attack Option:", 'attacktype', 'None,UAC Brawling,UAC Brawling - Stealth,Melee 1H 2H,Melee 1H 2H Stealth,Bow + Arrow,Bow + Arrow Stealth,Crossbow + Bolt,Crossbow + Bolt Stealth,Magic Bolt Spell Casters,Warding Magic Users,Archer Hybrid Users Spell Openers,Meelee Hybrid Users Spell Openers,Bard Support - 1035- 1002,Bard Caster 1030 AOE 1008')
	add_dropdown2(@OC_TABLE3, "Undead Attack Option:", 'undeadattacktype', 'None,UAC Brawling,UAC Brawling - Stealth,Melee 1H 2H,Melee 1H 2H Stealth,Bow + Arrow,Bow + Arrow Stealth,Crossbow + Bolt,Crossbow + Bolt Stealth,Magic Bolt Spell Casters,Warding Magic Users,Archer Hybrid Users Spell Openers,Meelee Hybrid Users Spell Openers,Bard Support - 1035- 1002,Bard Caster 1030 AOE 1008', true)
	add_dropdown(@OC_TABLE3, "Setup Attack:", 'attackopen', "None,Charge (Polearm),Cripple(Edged),Crowd Press,Dirtkick,Disarm Weapon,Dislodge,Dizzying Swing (Blunt),Feint,Groin Kick,Hamstring,Haymaker,Headbutt,Shield Bash,Shield Charge,Shield Push,Spell Cleave,Sunder Shield,Tackle,Trip, Twin Hammerfists (Brawling),Vault Kick, Voln Sleep, Bertrandt\'s Bellow (Single Target), Bertrandt\'s Bellow (Open), Garrelle\'s Growl (Single Target), Garrelle\'s Growl (Open), Carn\'s Call (Single Target), Carn\'s Call (Open)")
	add_dropdown2(@OC_TABLE3, "Undead Setup Attack:", 'undeadattackopen', "None,Charge (Polearm),Cripple(Edged),Crowd Press,Dirtkick,Disarm Weapon,Dislodge,Dizzying Swing (Blunt),Feint,Groin Kick,Hamstring,Haymaker,Headbutt,Shield Bash,Shield Charge,Shield Push,Spell Cleave,Sunder Shield,Tackle,Trip, Twin Hammerfists (Brawling), Vault Kick, Voln Sleep, Bertrandt\'s Bellow (Single Target), Bertrandt\'s Bellow (Open), Garrelle\'s Growl (Single Target), Garrelle\'s Growl (Open), Carn\'s Call (Single Target), Carn\'s Call (Open)", true)
	add_dropdown(@OC_TABLE3, "Second Setup:", 'attackopen2', "None,Charge (Polearm),Cripple(Edged),Crowd Press,Dirtkick,Disarm Weapon,Dislodge,Dizzying Swing (Blunt),Feint,Groin Kick,Hamstring,Haymaker,Headbutt,Shield Bash,Shield Charge,Shield Push,Spell Cleave,Sunder Shield,Tackle,Trip, Twin Hammerfists (Brawling), Vault Kick, Voln Sleep, Bertrandt\'s Bellow (Single Target), Bertrandt\'s Bellow (Open), Garrelle\'s Growl (Single Target), Garrelle\'s Growl (Open), Carn\'s Call (Single Target), Carn\'s Call (Open)")
	add_dropdown2(@OC_TABLE3, "Undead Second Setup:", 'undeadattackopen2', "None,Charge (Polearm),Cripple(Edged),Crowd Press,Dirtkick,Disarm Weapon,Dislodge,Dizzying Swing (Blunt),Feint,Groin Kick,Hamstring,Haymaker,Headbutt,Shield Bash,Shield Charge,Shield Push,Spell Cleave,Sunder Shield,Tackle,Trip, Twin Hammerfists (Brawling), Vault Kick', Voln Sleep, Bertrandt\'s Bellow (Single Target), Bertrandt\'s Bellow (Open), Garrelle\'s Growl (Single Target), Garrelle\'s Growl (Open), Carn\'s Call (Single Target), Carn\'s Call (Open)", true)
	add_dropdown(@OC_TABLE3, "Special Attack:", 'specialattack', 'None,Exsanguinate,Leap Attack,Mighty Blow,Shield Strike,Spin Attack,Staggering Blow,True Strike')
	add_dropdown2(@OC_TABLE3, "Undead Special Attack:", 'undeadspecialattack', 'None,Exsanguinate,Leap Attack,Mighty Blow,Shield Strike,Spin Attack,Staggering Blow,True Strike', true)
	add_dropdown(@OC_TABLE3,  "AOE Attack:", 'aoe','None,Barrage (Ranged),Bull Rush,Clash (Brawling),Cyclone (Polearm),Flurry (Edged),Fury (Brawling),Guardant Thrusts (Polearm),Pin Down (Ranged),Pummel (Blunt),Pulverize (Blunt),Shield Throw,Thrash (Two-Handed),Whirling Blade (Edged),Whirlwind (Two-Handed),Volley (Ranged)')
	add_dropdown2(@OC_TABLE3,  "Undead AOE Attack:", 'undeadaoe','None,Barrage (Ranged),Bull Rush,Clash (Brawling),Cyclone (Polearm),Flurry (Edged),Fury (Brawling),Guardant Thrusts (Polearm),Pin Down (Ranged),Pummel (Blunt),Pulverize (Blunt),Shield Throw,Thrash (Two-Handed),Whirling Blade (Edged),Whirlwind (Two-Handed),Volley (Ranged)', true)
	add_label_entry(@OC_TABLE3, "Spell Opener:", 'spellopen')
	add_label_entry2(@OC_TABLE3, "Undead Spell Opener:", 'undeadspellopen', true)
	add_label_entry(@OC_TABLE3, "Attack Spell:", 'spelltype')
	add_label_entry2(@OC_TABLE3, "Undead Attack Spell:", 'undeadspelltype', true)
	add_checkbox(@OC_TABLE3, 0,  "Scripted Combat", 'osacombat')
	add_checkbox(@OC_TABLE3, 1,  "Channel Attack", 'spellchan')
	add_checkbox(@OC_TABLE3, 3,  "Channel Undead Attack", 'undeadspellchan', true)
	add_checkbox(@OC_TABLE3, 0,  "Use Brief Combat", 'usebriefcombat')
	add_checkbox(@OC_TABLE3, 1,  "Evoke Attack", 'spellevoke')
	add_checkbox(@OC_TABLE3, 3,  "Evoke Undead Attack", 'undeadspellevoke', true)
	add_checkbox(@OC_TABLE3, 0,  "Kneel With Crossbow", 'use_kneel')
	add_checkbox(@OC_TABLE3, 1,  "Use Mstrike", 'use_mstrike', true)
	add_label_entry3(@OC_TABLE3, "Cannon Settings:", true)
	add_checkbox(@OC_TABLE3, 0,  "Use Cannons", 'cannoneer', false)
	add_checkbox(@OC_TABLE3, 1,  "Load Only", 'loadonly', false)
	add_checkbox(@OC_TABLE3, 2,  "Main Cannons", 'maincannons', true)
	add_checkbox(@OC_TABLE3, 1,  "Fire Only", 'fireonly', false)
	add_checkbox(@OC_TABLE3, 2,  "Mid Cannons", 'midcannons', true)
	add_checkbox(@OC_TABLE3, 1,  "Load And Fire", 'loadandfire', false)
	add_checkbox(@OC_TABLE3, 2,  "Forwards Cannons", 'forwardcannons', true)
	add_label_entry3(@OC_TABLE4, "Armor Specializations Known:", false)
	add_label_entry4(@OC_TABLE4, "Armor Specialization To Request:", false)
	add_label_entry5(@OC_TABLE4, "Group Buffs:", true)
	add_checkbox(@OC_TABLE4, 0,  "Armor Blessing", 'have_armor_blessing', false)
	add_checkbox(@OC_TABLE4, 2,  "Armor Blessing", 'need_armor_blessing', false)
	add_checkbox(@OC_TABLE4, 4,  "Seanette's Shout", 'warcryshout', true)
	add_checkbox(@OC_TABLE4, 0,  "Armor Reinforcement", 'have_armor_reinforcement', false)
	add_checkbox(@OC_TABLE4, 2,  "Armor Reinforcement", 'need_armor_reinforcement', false)
	add_checkbox(@OC_TABLE4, 4,  "Horland's Holler", 'warcryholler', true)
	add_checkbox(@OC_TABLE4, 0,  "Armor Support", 'have_armor_support', false)
	add_checkbox(@OC_TABLE4, 2,  "Armor Support", 'need_armor_support', false)
	add_checkbox(@OC_TABLE4, 4,  "Mind Over Body (1213)", 'mob', true)
	add_checkbox(@OC_TABLE4, 0,  "Armored Casting", 'have_armor_casting', false)
	add_checkbox(@OC_TABLE4, 2,  "Armored Casting", 'need_armor_casting', false)
	add_checkbox(@OC_TABLE4, 4,  "Focus Barrier (1216)", 'focus', true)
	add_checkbox(@OC_TABLE4, 0,  "Armored Evasion", 'have_armor_evasion', false)
	add_checkbox(@OC_TABLE4, 2,  "Armored Evasion", 'need_armor_evasion', false)
	add_checkbox(@OC_TABLE4, 4,  "Group Bravery (211)", 'groupbravery', true)
	add_checkbox(@OC_TABLE4, 0,  "Armored Fluidity", 'have_armor_fluidity', false)
	add_checkbox(@OC_TABLE4, 2,  "Armored Fluidity", 'need_armor_fluidity', false)
	add_checkbox(@OC_TABLE4, 4,  "Group Heroism (215)", 'groupheroism', true)
	add_checkbox(@OC_TABLE4, 0,  "Armored Stealth", 'have_armor_stealth', false)
	add_checkbox(@OC_TABLE4, 2,  "Armored Stealth", 'need_armor_stealth', false)
	add_checkbox(@OC_TABLE4, 4,  "Beacon of Courage (1608)", 'beaconofcourage', true)
	add_checkbox(@OC_TABLE4, 4,  "Song of Tonis (1035)", 'songoftonis', true)
	add_checkbox(@OC_TABLE4, 4,  "Mana Focus", 'groupmana', false)
	add_label_entry3(@OC_TABLE4, "Bless Settings:", true)
	add_checkbox(@OC_TABLE4, 0,  "Bless Caster", 'givebless')
	add_checkbox(@OC_TABLE4, 1,  "Need Bless", 'needbless', true)
	add_label_entry(@OC_TABLE4, "UAC Hand Wraps:", 'uachands', true)
	add_label_entry(@OC_TABLE4, "UAC Foot Wraps:", 'uacfeet', true)
	add_label_entry(@OC_TABLE4, "Paladin Infuse Spell:", 'infusespell',true)
	add_label_entry(@OC_TABLE4, "Armor Specialization To Use:", 'my_armor_spec',true)
end
  
    def self.add_checkbox(table, x_pos, label, variable, newrow = false, default = false)
      size = @OC_TABLE_SIZE[table] || 0
      checkbox = Gtk::CheckButton.new label
      value = UserVars.osacrew[variable] || default
      checkbox.active = value
      table.attach(checkbox, x_pos, x_pos + 1, size, size + 1)
      @OC_ENTRY[variable] = checkbox
      @OC_TABLE_SIZE[table] += 1 if newrow
    end
	
  Gtk.queue do
    @OC_WINDOW.signal_connect("delete_event") {
      @OC_SETUP_COMPLETED = true
    }
  end

  Gtk.queue do 
	
    @OC_WINDOW.show_all
  end

  @OC_SETUP_COMPLETED = false
  until(@OC_SETUP_COMPLETED)
    sleep(0.5)
  end

    UserVars.osacrew ||= Hash.new
    @OC_ENTRY.keys.each do |key|
      echo "#{key} - #{@OC_ENTRY[key].to_s}" if $osacrew_debug
      if @OC_ENTRY[key].to_s =~ /CheckButton/
        value = @OC_ENTRY[key].active?
        UserVars.osacrew[key] = @OC_ENTRY[key].active?
      elsif @OC_ENTRY[key].to_s =~ /ComboBox/
        UserVars.osacrew[key] = @OC_ENTRY[key].active
      elsif @OC_ENTRY[key].to_s =~ /TextView/
        # Store these with double pipes so we don't mess up any supplied expressions
        UserVars.osacrew[key] = @OC_ENTRY[key].buffer.text.gsub("\n","||")
      else
        if key == 'wounded_eval'
          UserVars.osacrew[key] = @OC_ENTRY[key].text
        else
          UserVars.osacrew[key] = @OC_ENTRY[key].text.strip
        end
      end
    end
    UserVars.save

  Gtk.queue do
    @OC_WINDOW.destroy
 end
end

def ship_type
	case Room.current.id
	when (29038..29042)
			@ship_type = "sloop"
			@cargo_hold = 29039
			@main_deck = 29038
			@mid_deck = nil
			@forward_deck = nil
			@bow = nil
			@crows_nest = 29040
			@forward_crows_nest = nil
			@social_room = nil
			@mess_hall = nil
			@crew_quarters = nil
			@helm = 29041
			@cannons1 = 29038
			@cannons2 = nil
			@cannons3 = nil
			@captains_quarters = 29042
			@ship_map = [29038, 29039, 29040, 29041, 29042]
			@Slooptimes = UserVars.osacrew["Slooptimes"].last(50)
			if @Slooptimes.nil? or @Slooptimes.empty?
				@Slooptimes = [0.315]
			end
			@Sailtimes = @Slooptimes
	when (30140..30147)
			@ship_type = "brigantine"
			@cargo_hold = 30145
			@main_deck = 30142
			@mid_deck = nil
			@forward_deck = 30144
			@bow = nil
			@crows_nest = 30143
			@forward_crows_nest = nil
			@social_room = nil
			@mess_hall = 30147
			@crew_quarters = 30146
			@helm = 30141
			@captains_quarters = 30140
			@cannons1 = 30142
			@cannons2 = 30144
			@cannons3 = nil
			@ship_map = [30144, 30142, 30143, 30145, 30147, 30146, 30141, 30140]
			@Brigtimes = UserVars.osacrew["Brigtimes"].last(50)
			if @Brigtimes.nil? or @Brigtimes.empty?
				@Brigtimes = [0.30000000000000000]
			end
			@Sailtimes = @Brigtimes
	when (30119..30127)
			@ship_type = "carrack"
			@cargo_hold = 30125
			@main_deck = 30119
			@mid_deck = nil
			@forward_deck = 30121
			@social_room = nil
			@bow = 30122
			@crows_nest = 30123
			@forward_crows_nest = nil
			@mess_hall = 30127
			@crew_quarters = 30126
			@helm = 30120
			@captains_quarters = 30124
			@cannons1 = 30119
			@cannons2 = 30121
			@cannons3 = nil
			@ship_map = [30122, 30121, 30123, 30119, 30127, 30125, 30126, 30120, 30124]
			@Cartimes = UserVars.osacrew["Cartimes"].last(50)
			if @Cartimes.nil? or @Cartimes.empty?
				@Cartimes = [0.30000000000000000]
			end
			@Sailtimes = @Cartimes
	when (30176..30186)
			@ship_type = "galleon"
			@cargo_hold = 30182
			@main_deck = 30176
			@mid_deck = nil
			@forward_deck = 30177
			@bow = 30178
			@crows_nest = 30181
			@forward_crows_nest = nil
			@social_room = 30185
			@mess_hall = 30184
			@crew_quarters = 30183
			@helm = 30179
			@captains_quarters = 30180
			@cannons1 = 30176
			@cannons2 = 30177
			@cannons3 = nil
			@ship_map = [30178, 30177, 30181, 30176, 30185, 30184, 30182, 30183, 30179, 30180]
			@Galtimes = UserVars.osacrew["Galtimes"].last(50)
			if @Galtimes.nil? or @Galtimes.empty?
				@Galtimes = [0.30000000000000000]
			end
			@Sailtimes = @Galtimes
	when (30166..30175)
			@ship_type = "frigate"
			@cargo_hold = 30167
			@main_deck = 30166
			@mid_deck = nil
			@forward_deck = 30171
			@bow = 30172
			@crows_nest = 30173
			@forward_crows_nest = nil
			@social_room = 30170
			@mess_hall = 30169
			@crew_quarters = 30168
			@helm = 30174
			@captains_quarters = 30175
			@cannons1 = 30166
			@cannons2 = 30171
			@cannons3 = nil
			@ship_map = [30172, 30171, 30173, 30166, 30170, 30169, 30167, 30168, 30174, 30175]
			@Fritimes = UserVars.osacrew["Fritimes"].last(50)
			if @Fritimes.nil? or @Fritimes.empty?
				@Fritimes = [0.30000000000000000]
			end
			@Sailtimes = @Fritimes
	when (30128..30139)
			@ship_type = "man o' war"
			@cargo_hold = 30136
			@main_deck = 30130
			@mid_deck = 30131
			@forward_deck = 30132
			@bow = 30133
			@crows_nest = 30135
			@forward_crows_nest = 30134
			@social_room = 30139
			@mess_hall = 30138
			@crew_quarters = 30137
			@helm = 30128
			@captains_quarters = 30129
			@cannons1 = 30130
			@cannons2 = 30131
			@cannons3 = 30132
			@ship_map = [30133, 30134, 30132, 30131, 30135, 30130, 30139, 30138, 30136, 30137, 30128, 30129]
			@Mantimes = UserVars.osacrew["Mantimes"].last(50)
			if @Mantimes.nil? or @Mantimes.empty?
				@Mantimes = [0.35000000000000000]
			end
			@Sailtimes = @Mantimes
	end
	if (30787..30791).include? Room.current.id || (@enemy_main_deck == 30787)
			@enemy_ship_type = "Sloop"
			@enemy_bow = nil
			@enemy_forward_deck = nil
			@enemy_forward_crows_nest = nil
			@enemy_mid_deck = nil
			@enemy_main_deck = 30787
			@enemy_crows_nest = 30791
			@enemy_cargo_hold = 30790
			@enemy_helm = 30788
			@enemy_quarters = 30789
			@enemy_ship_map = [30787, 30791, 30788, 30790]
	end
	if (30792..30797).include? Room.current.id || (@enemy_main_deck == 30792)
			@enemy_ship_type = "Brigantine"
			@enemy_bow = nil
			@enemy_forward_deck = 30797
			@enemy_forward_crows_nest = nil
			@enemy_mid_deck = nil
			@enemy_main_deck = 30792
			@enemy_crows_nest = 30796
			@enemy_cargo_hold = 30795
			@enemy_helm = 30793
			@enemy_quarters = 30794
			@enemy_ship_map = [30797, 30792, 30796, 30793, 30795]
	end
	if (30266..30272).include? Room.current.id || (@enemy_main_deck == 30266)
			@enemy_ship_type = "Carrack"
			@enemy_bow = 30272
			@enemy_forward_deck = 30271
			@enemy_forward_crows_nest = nil
			@enemy_mid_deck = nil
			@enemy_main_deck = 30266
			@enemy_crows_nest = 30270
			@enemy_cargo_hold = 30269
			@enemy_helm = 30267
			@enemy_quarters = 30268
			@enemy_ship_map = [30272, 30271, 30266, 30270, 30267, 30269]
	end
	if (30798..30804).include? Room.current.id || (@enemy_main_deck == 30798)
			@enemy_ship_type = "Galleon"
			@enemy_bow = 30804
			@enemy_forward_deck = 30803
			@enemy_forward_crows_nest = nil
			@enemy_mid_deck = nil
			@enemy_main_deck = 30798
			@enemy_crows_nest = 30802
			@enemy_cargo_hold = 30801
			@enemy_helm = 30799
			@enemy_quarters = 30800
			@enemy_ship_map = [30804, 30803, 30798, 30802, 30799, 30801]
	end
	if (30805..30810).include? Room.current.id || (@enemy_main_deck == 30805)
			@enemy_ship_type = "Frigate"
			@enemy_bow = nil
			@enemy_forward_deck = 30810
			@enemy_forward_crows_nest = nil
			@enemy_mid_deck = nil
			@enemy_main_deck = 30805
			@enemy_crows_nest = 30809
			@enemy_cargo_hold = 30808
			@enemy_helm = 30806
			@enemy_quarters = 30807
			@enemy_ship_map = [30810, 30805, 30809, 30806, 30808]
	end
	if (30778..30786).include? Room.current.id || (@enemy_main_deck == 30778)
			@enemy_ship_type = "Man O' War"
			@enemy_bow = 30784
			@enemy_forward_deck = 30786
			@enemy_forward_crows_nest = 30758
			@enemy_mid_deck = 30783
			@enemy_main_deck = 30778
			@enemy_crows_nest = 30782
			@enemy_cargo_hold = 30781
			@enemy_helm = 30779
			@enemy_quarters = 30780
			@enemy_ship_map = [30784, 30786, 30758, 30783, 30778, 30782, 30779, 30781]
	end
end

def determine_enemy_ship_type
	if UserVars.osacrew["enemyship"].include? "sloop"
		@enemy_ship_type = "Sloop"
	elsif UserVars.osacrew["enemyship"].include? "brigantine"
		@enemy_ship_type = "Brigantine"
	elsif UserVars.osacrew["enemyship"].include? "carrack"
		@enemy_ship_type = "Carrack"
	elsif UserVars.osacrew["enemyship"].include? "galleon"
		@enemy_ship_type = "Galleon"
	elsif UserVars.osacrew["enemyship"].include? "frigate"
		@enemy_ship_type = "Frigate"
	elsif UserVars.osacrew["enemyship"].include? "man o\' war"
		@enemy_ship_type = "Man O\' War"
	end
end

def determine_enemy_type
	result = dothistimeout "look ocean", 2, /You notice (.*) approaching your position/
	if result.to_s =~ /You notice (.*) approaching your position/
		if $1.include? "ethereal"
			UserVars.osacrew["enemy_type"] = "undead"
		end
		if $1.include? "krolvin"
			UserVars.osacrew["enemy_type"] = "krolvin"
		end
		if $1.include? "dark"
			UserVars.osacrew["enemy_type"] = "pirate"
		end
		if $1.downcase.include? "sloop"
			@enemy_main_deck = 30787
		elsif $1.downcase.include? "brigantine"
			@enemy_main_deck = 30792
		elsif $1.downcase.include? "carrack"
			@enemy_main_deck = 30266
		elsif $1.downcase.include? "galleon"
			@enemy_main_deck = 30798
		elsif $1.downcase.include? "frigate"
			@enemy_main_deck = 30805
		elsif $1.downcase.include? "man o' war"
			@enemy_main_deck = 30778
		end
	end
	Room["#{@main_deck}"].wayto["#{@enemy_main_deck}"] = StringProc.new("fput \"push gang\";fput \"go gang\"")
	Room["#{@main_deck}"].timeto["#{@enemy_main_deck}"] = 0.2
	Room["#{@enemy_main_deck}"].wayto["#{@main_deck}"] = StringProc.new("fput \"go gang\"")
	Room["#{@enemy_main_deck}"].timeto["#{@main_deck}"] = 0.2
end

def medicalofficer_triage
	if variable[1].downcase =~ /debug/
		echo "medicalofficer_triage"
	end
		result = matchtimeout 3, /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*)\: \"I Am Injured!\"$/
		if result.to_s =~ /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*)\: \"I Am Injured!\"$/
			@medicalofficer_patient.push($1)
			medicalofficer_triage
		end
end

def medicalofficer_checkup
	if variable[1].downcase =~ /debug/
		echo "medicalofficer_checkup"
	end
		if Script.running?("ecure")
			wait_while { running?("ecure") }
		end
		waitrt?
		waitcastrt?
		if checkstunned
			wait_until {!checkstunned}
		end
		echo "Your Patients Are: #{@medicalofficer_patient}"
		start_script("ecure", [@medicalofficer_patient])
		wait_while { running?("ecure") }
		pause 0.2
end

def medicalofficer_fix_muscles_ks
		if Script.running?("ecure")
			do_client (";chat to #{@person} Please wait one moment while I finish up.")
			wait_while { running?("ecure") }
		end
		pause_script "osacombat"
		wait_until {!checkstunned}
		waitrt?
		waitcastrt?
		pause 0.5
		fput "transfer #{@person} exertion"
		if Spell[1107].affordable?
			Spell[1107].cast
		end
		unpause_script "osacombat"
end

def medicalofficer_fix_muscles
		if Script.running?("ecure")
			do_client (";chat to #{@person} Please wait one moment while I finish up.")
			wait_while { running?("ecure") }
		end
		pause_script "osacombat"
		wait_until {!checkstunned}
		waitrt?
		waitcastrt?
		pause 0.5
		if Spell[1107].affordable?
			Spell[1107].cast "#{@person}"
		end
		unpause_script "osacombat"
end

def medicalofficer_fix_poison
		if Script.running?("ecure")
			do_client (";chat to #{@person} Please wait one moment while I finish up.")
			wait_while { running?("ecure") }
		end
		pause_script "osacombat"
		wait_until {!checkstunned}
		waitrt?
		waitcastrt?
		pause 0.5
		if Spell[114].affordable?
			Spell[114].cast "#{@person}"
		end
		unpause_script "osacombat"
end

def medicalofficer_give_bread
	result = matchtimeout 3, /^\#{@person} has accepted your offer/
	if result.to_s =~ /^\#{@person} has accepted your offer/
		return
	else
		multifput "cancel", "drop right"
	end
end

def medicalofficer_bread
	if checkmana > 4
		waitrt?
		waitcastrt?
		fput "incant 203"
		pause 1
		fput "give #{checkright} to #{@person}"
		medicalofficer_give_bread
		end
end

def medicalofficer_bread_orders
	result = matchtimeout 3, /^\[Private\]-GSIV:(.*)\: \"I Will Take Some Please.\"/
	if result.to_s =~ /^\[Private\]-GSIV:(.*)\: \"I Will Take Some Please.\"/
        crewmate = $1
        @breadlist.push(crewmate)
		medicalofficer_bread_orders
	end
end

def medicalofficer_spells
		if Script.running?("waggle_spell_active")
			do_client (";chat to #{@recipient} Please wait one moment while I finish up.")
			wait_while { running?("waggle_spell_active") }
		end
		waitrt?
		waitcastrt?
		start_script("waggle_spell_active", ['@recipient'])	
end

def crew_send_mana
	if checkmana >= 50
		if running? "osacombat"
			pause_script "osacombat"
		end
		if running? "osacombat"
			pause_script "osacombat"
		end
		waitrt?
		waitcastrt?
		fput "send 20 #{@manaperson}"
		if running? "osacombat"
			unpause_script "osacombat"
		end
	end
end

def check_rooms
	fput "assess"
	while line = get
	case line
		when /Main Deck:  It appears to be/
			@boatswain = true	
		when /Main Deck:  You cannot seem/
			@boastswain = true
			@repair_map.delete(@main_deck)
		when /Helm:  You cannot seem/
			@repair_map.delete(@helm)
		when /Cargo Hold:  You cannot seem/
			@repair_map.delete(@cargo_hold)
		when /Captain\'s Quarters:  You cannot seem/
			@repair_map.delete(@captains_quarters)
		when /Forward Crow's Nest:  You cannot seem/
			@repair_map.delete(@forward_crows_nest)
		when /Crow's Nest:  You cannot seem/
			@repair_map.delete(@crows_nest)
		when /Mess Hall:  You cannot seem/
			@repair_map.delete(@mess_hall)
		when /Mid Deck:  You cannot seem/
			@repair_map.delete(@mid_deck)
		when /Crew Quarters:  You cannot seem/
			@repair_map.delete(@crew_quarters)
		when /Bow:  You cannot seem/
			@repair_map.delete(@bow)
		when /Social Room:  You cannot seem/
			@repair_map.delete(@social_room)
		when /Forward Deck:  You cannot seem/
			@repair_map.delete(@forward_deck)
		when /\[Health of your ship: (.*)\/(.*)\]/
			if $1 == $2
				waitrt?
				@repairs_complete = true
				return
			end
		when /Roundtime:/
			return	
	end
	end
end

def get_wood
	if checkleft and checkright
		if Room.current.id != @repair_room
			start_script("go2", [@repair_room])
			wait_while { running?("go2") }
		end
		return
	end
	if Room.current.id != @cargo_hold
		start_script("go2", [@cargo_hold])
		wait_while { running?("go2") }
	end
	result = dothistimeout "get wood", 3, /You will need a free|You search through the salvaged wood and|You search through the salvaged wood only|...wait/
		if result.to_s =~ /You will need a free/
			get_wood
		elsif result.to_s =~ /You search through the salvaged wood and/
			waitrt?
			get_wood
		elsif result.to_s =~ /You search through the salvaged wood only/
			waitrt?
			@out_of_wood = true
		elsif result.to_s =~ /...wait/
			pause 1
			waitrt?
			get_wood
		end
end

def fix_ship
	if @fixed == true
		return
	end
	if !checkleft and !checkright
			waitrt?
			get_wood
			if @out_of_wood == true
				return
			end
			if Room.current.id != @repair_room
				start_script("go2", [@repair_room])
				wait_while { running?("go2") }
			end
	end
	result = dothistimeout "fix", 3, /...wait|all the damage|some of the damage|This area does not look/
		if result.to_s =~ /...wait/
			pause 1
			waitrt?
			fix_ship
		elsif result.to_s =~ /all the damage/
			@fixed = true
			waitrt?
			fix_ship
		elsif result.to_s =~ /some of the damage/
			@fixed = false
			waitrt?
			fix_ship
		elsif result.to_s =~ /This area does not look/
			@fixed = true
			waitrt?
			fix_ship
		end
end

def gunner_set_mode
	respond "
	=======================================
	What duties are you assuming\?
		1\. Load Only
		2\. Fire Only
		3\. Load And Fire
	=======================================
	Select your mode - 
		  ;send <#> "
	respond
	clear
	line = nil
	line = get until line.strip =~ /^[0-9]+$/
	duty = line
	if duty == "1"
		UserVars.osacrew["loadonly"] = true
		UserVars.osacrew["fireonly"] = false
		UserVars.osacrew["loadandfire"] = false
	elsif duty == "2"
		UserVars.osacrew["loadonly"] = false
		UserVars.osacrew["fireonly"] = true
		UserVars.osacrew["loadandfire"] = false
	elsif duty == "3"
		UserVars.osacrew["loadonly"] = false
		UserVars.osacrew["fireonly"] = false
		UserVars.osacrew["loadandfire"] = true
	end

	respond "


	=======================================
	Which  \?
		1\. Main Deck"
	if @ship_type == "man o' war"
		respond "2\. Mid Deck"
		respond "3\. Forward Deck"
	else
		respond "2\. Forward Deck"
	end
	respond "=======================================
	Select your cannons - 
		  ;send <#> "
	respond
	clear
	line = nil
	line = get until line.strip =~ /^[0-9]+$/
	cannons = line
	if cannons == "1"
		UserVars.osacrew["maincannons"] = true
		UserVars.osacrew["midcannons"] = false
		UserVars.osacrew["forwardcannons"] = false
	elsif cannons == "2"
		UserVars.osacrew["maincannons"] = false
		UserVars.osacrew["midcannons"] = true
		UserVars.osacrew["forwardcannons"] = false
	elsif cannons == "3"
		UserVars.osacrew["maincannons"] = false
		UserVars.osacrew["midcannons"] = false
		UserVars.osacrew["forwardcannons"] = true
	end
end

def gunner_get_balls
	if @boarded or @thirty or @sunk
		return
	end
	waitrt?
	if Room.current.id != @cargo_hold
		start_script("go2", [@cargo_hold])
		wait_while { running?("go2") }
	end
	result = dothistimeout "get balls", 2, /You cannot fire your cannons while boarded|You search through the cannon balls and find an iron cannon ball|You search through the cannon balls only to find that you are out of cannon balls|...wait/
		if result.to_s =~ /You cannot fire your cannons while boarded/
			@boarded = true
			return
		elsif result.to_s =~ /You search through the cannon balls and find an iron cannon ball/
			waitrt?
			if checkleft and checkright
				return
			end
			gunner_get_balls
		elsif result.to_s =~ /You search through the cannon balls only to find that you are out of cannon balls/
			gunner_out_of_balls
		elsif result.to_s =~ /...wait/
			waitrt?
			gunner_get_balls
		end
end

def gunner_out_of_balls
	if checkright == "ball"
		fput "drop right"
	end
	if checkleft == "ball"
		fput "drop left"
	end
	respond "
	
	         ------------====== The Ship Is Out Of Cannon Balls ======-------------
	
	"
	@thirty = true
end

def gunner_load_cannon
	if @boarded or @thirty or @sunk
		return
	end
	waitrt?
	if Room.current.id != @cannons
		start_script("go2", [@cannons])
		wait_while { running?("go2") }
	end
	result = dothistimeout "load cannon", 2, /You carefully lift your cannon ball and drop it into the tubular opening of a (.*) cannon|You need to be holding a cannon ball in order to load the (.*) cannon|You cannot fire your cannons while boarded|The (.*) cannon already appears to be loaded to capacity/
		if result.to_s =~ /You carefully lift your cannon ball and drop it into the tubular opening of a (.*) cannon/
			waitrt?
			if checkloot.include? "ball"
				fput "get ball"
			end
			if checkleft.nil? and checkright.nil?
				gunner_get_balls
			end
			gunner_load_cannon
		elsif result.to_s =~ /You need to be holding a cannon ball in order to load the (.*) cannon/
			gunner_get_balls
			gunner_load_cannon
		elsif result.to_s =~ /You cannot fire your cannons while boarded/
			@boarded = true
			return
		elsif result.to_s =~ /The (.*) cannon already appears to be loaded to capacity/
			if checkright == "ball"
				fput "drop right"
			end
			if checkleft == "ball"
				fput "drop left"
			end
		end
end

def gunner_fire_cannon
	if @boarded or @thirty or @sunk
		return
	end
	waitrt?
	if Room.current.id != @cannons
		start_script("go2", [@cannons])
		wait_while { running?("go2") }
	end
	result = dothistimeout "fire cannon", 2, /You cannot fire your cannons while boarded|You'll need to load one of the cannons first|...wait|You fire a (.*) cannon at the (.*)/
		if result.to_s =~ /You cannot fire your cannons while boarded/
			@boarded = true
			return
		elsif result.to_s =~ /You'll need to load one of the cannons first/
			return
		elsif result.to_s =~ /...wait/
			waitrt?
			gunner_fire_cannon
		elsif result.to_s =~ /You fire a (.*) cannon at the (.*)/
			waitrt?
			gunner_fire_cannon
		end
end

def gunner_boarded
	waitrt?
	if checkright == "ball"
		fput "drop right"
	end
	if checkleft == "ball"
		fput "drop left"
	end
	if UserVars.osacrew["osacombat"] == true
		if @boarded 
			@report = @enemy_main_deck
		else 
			@report = @main_deck
		end
		if Room.current.id != @report
			start_script("go2", [@report])
			wait_while { running?("go2") }
		end
		wait_until {checkpcs.include? UserVars.osacrew["commander"]}
		fput "join #{UserVars.osacrew["commander"]}"
	end
	@boarded = false
	@thirty = false
	@sunk = false
end		

def gunner_cycle
	ship_type
	if UserVars.osacrew["maincannons"]
		@cannons = @cannons1
	end
	if UserVars.osacrew["midcannons"]
		@cannons = @cannons2
	end
	if UserVars.osacrew["forwardcannons"]
		@cannons = @cannons3
	end
	if UserVars.osacrew["loadonly"]
		@duty = "load"
	end
	if UserVars.osacrew["fireonly"]
		@duty = "fire"
	end
	if UserVars.osacrew["loadandfire"]
		@duty = "both"
	end
	gunner_get_balls
	if @duty == "load" or @duty == "both"
		if !@boarded and !@thirty and !@sunk
			gunner_load_cannon
		else
			gunner_boarded
			return
		end
	end
	if @duty == "fire" or @duty == "both"
		if !@boarded and !@thirty and !@sunk
			gunner_fire_cannon
		else
			gunner_boarded
			return
		end
	end
	if !@boarded and !@thirty and !@sunk
		gunner_cycle
	else
		gunner_boarded
		return
	end
end

def begin_repairs
	pause 0.5
	@repairs_complete = false
	@out_of_wood = false
	ship_type
	@repair_map = @ship_map
	check_rooms
	@repair_map.each do |ship_room|
		@repair_room = ship_room
		@fixed = false
		if @out_of_wood
			break
		end
		if @repairs_complete
			break
		end
		if Room.current.id != @repair_room
			start_script("go2", [@repair_room])
			wait_while { running?("go2") }
		end
		waitrt?
		result = dothistimeout "assess", 3, /It appears to be|You cannot seem to find any damage/
			if result.to_s =~ /It appears to be/
				waitrt?
				fix_ship
			elsif result.to_s =~ /You cannot seem to find any damage./
				if get.to_s =~ /\[Health of your ship: (.*)\/(.*)\]/ && $1 == $2
					waitrt?
					@repairs_complete = true
					return
				end
			end
		end
end

def damage_control
	wait_while { running?("osacombat") }
	if !checkleft.nil? or !checkright.nil?
		fput "store both"
	end
	if UserVars.osacrew["osacrewtasks"]
		determine_enemy_type
		ship_type
		if Room.current.id != @main_deck
			start_script("go2", [@main_deck])
			wait_while { running?("go2") }
		end
		begin_repairs
	end
		if !checkleft.nil? or !checkright.nil? 
			if Room.current.id != @cargo_hold
				start_script("go2", [@cargo_hold])
				wait_while { running?("go2") }
			end
			if !checkleft.nil?
				fput "put left in wood"
			end
			if !checkright.nil?
				fput "put right in wood"
			end
		end
	if Room.current.id != @main_deck
		start_script("go2", [@main_deck])
		wait_while { running?("go2") }
	end
	if @out_of_wood		
		echo "The Hull Is Repaired As Much As Possible. However, We Are Out Of Shoring Planks Captain!"
	end
	if @out_of_wood == false
		echo "The Hull Is Repaired Captain!"
	end
	if Room.current.id != @captains_quarters
		start_script("go2", [@captains_quarters])
		wait_while { running?("go2") }
	end
end

def sailing_from_icemule
	if @dest == "Wehnimer\'s Landing"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [3, 'southeast'], [3, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [20, 'south'], [1, 'southeast'], [6, 'south'], [4, 'southwest'], [3, 'northwest'], [5, 'west'], [4, 'northwest'], [8, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [20, 'south'], [5, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [20, 'south'], [1, 'southeast'], [18, 'south'], [8, 'southeast'], [2, 'east'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [20, 'south'], [1, 'southeast'], [7, 'south'], [17, 'southwest'], [4, 'southeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [19, 'south'], [14, 'southeast'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [20, 'south'], [1, 'southeast'], [19, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[1, 'southwest'], [4, 'south'], [4, 'southwest'], [1, 'south'], [1, 'southeast'], [20, 'south'], [1, 'southeast'], [19, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_landing
	if @dest == "Icemule Trace"
		@route = [[4, 'northwest'], [3, 'west'], [3, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [15, 'south'], [1, 'southwest'], [4, 'west'], [1, 'southwest'], [1, 'south'], [3, 'southwest'], [2, 'west'], [4, 'northwest'], [8, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [13, 'south'], [5, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [13, 'south'], [1, 'southeast'], [18, 'south'], [9, 'southeast'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [18, 'south'], [1, 'southeast'], [2, 'south'], [14, 'southwest'], [6, 'south'], [1, 'southeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [13, 'south'], [1, 'southeast'], [19, 'south'], [14, 'southeast'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [13, 'south'], [1, 'southeast'], [19, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[4, 'northwest'], [2, 'west'], [2, 'south'], [3, 'southwest'], [13, 'south'], [1, 'southeast'], [19, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_teras
	if @dest == "Icemule Trace"
		@route = [[8, 'east'], [4, 'southeast'], [5, 'east'], [3, 'southeast'], [4, 'northeast'], [6, 'north'], [1, 'northwest'], [20, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[8, 'east'], [4, 'southeast'], [2, 'east'], [3, 'northeast'], [1, 'north'], [1, 'northeast'], [4, 'east'], [1, 'northeast'], [15, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[8, 'east'], [5, 'southeast'], [9, 'east'], [5, 'northeast'], [1, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[8, 'east'], [4, 'southeast'], [2, 'east'], [8, 'southeast'], [1, 'south'], [10, 'southeast'], [2, 'east'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[1, 'east'], [1, 'southeast'], [15, 'south'], [9, 'southeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[7, 'east'], [5, 'southeast'], [3, 'east'], [9, 'southeast'], [2, 'south'], [14, 'southeast'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[7, 'east'], [5, 'southeast'], [3, 'east'], [9, 'southeast'], [2, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[7, 'east'], [5, 'southeast'], [3, 'east'], [9, 'southeast'], [2, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_solhaven
	if @dest == "Icemule Trace"
		@route = [[5, 'northwest'], [20, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[5, 'northwest'], [13, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[1, 'northwest'], [5, 'southwest'], [9, 'west'], [5, 'northwest'], [8, 'west'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[1, 'northwest'], [2, 'southwest'], [14, 'south'], [7, 'southeast'], [2, 'east'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[1, 'northwest'], [1, 'southwest'], [1, 'south'], [19, 'southwest'], [4, 'southeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[1, 'northwest'], [3, 'southwest'], [13, 'south'], [14, 'southeast'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[1, 'northwest'], [3, 'southwest'], [13, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[1, 'northwest'], [3, 'southwest'], [13, 'south'], [13, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_brisker
	if @dest == "Icemule Trace"
		@route = [[3, 'west'], [7, 'northwest'], [19, 'north'], [1, 'northwest'], [20, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[1, 'southwest'], [9, 'northwest'], [18, 'north'], [1, 'northwest'], [13, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[2, 'west'], [10, 'northwest'], [1, 'north'], [8, 'northwest'], [2, 'west'], [4, 'northwest'], [8, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[2, 'west'], [7, 'northwest'], [14, 'north'], [2, 'northeast'], [1, 'southeast'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[2, 'west'], [8, 'northwest'], [1, 'north'], [5, 'northwest'], [12, 'southwest'], [3, 'southeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[1, 'west'], [1, 'southwest'], [6, 'southeast'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[1, 'west'], [1, 'southwest'], [5, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[1, 'west'], [1, 'southwest'], [5, 'southeast'], [4, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end 
end

def sailing_from_kraken
	if @dest == "Icemule Trace"
		@route = [[1, 'west'], [4, 'northwest'], [17, 'northeast'], [7, 'north'], [1, 'northwest'], [20, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[1, 'west'], [1, 'northwest'], [6, 'north'], [14, 'northeast'], [2, 'north'], [1, 'northwest'], [18, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[1, 'west'], [9, 'northwest'], [15, 'north'], [1, 'northwest'], [1, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[1, 'west'], [4, 'northwest'], [19, 'northeast'], [1, 'north'], [1, 'northeast'], [1, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[1, 'west'], [3, 'northwest'], [12, 'northeast'], [5, 'southeast'], [1, 'south'], [8, 'southeast'], [2, 'east'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[1, 'west'], [4, 'northwest'], [12, 'northeast'], [5, 'southeast'], [1, 'south'], [14, 'southeast'], [1, 'south'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[1, 'south'], [4, 'southeast'], [5, 'south'], [10, 'southeast'], [4, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[1, 'south'], [4, 'southeast'], [5, 'south'], [10, 'southeast'], [4, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_river
	if @dest == "Icemule Trace"
		@route = [[14, 'northwest'], [19, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[14, 'northwest'], [19, 'north'], [1, 'northwest'], [13, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[14, 'northwest'], [2, 'north'], [9, 'northwest'], [3, 'west'], [5, 'northwest'], [7, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[14, 'northwest'], [13, 'north'], [3, 'northeast'], [1, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[6, 'northwest'], [1, 'northeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route =  [[1, 'north'], [14, 'northwest'], [1, 'north'], [5, 'northwest'], [12, 'southwest'], [4, 'southeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[1, 'southwest'], [2, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[1, 'southwest'], [2, 'south'], [11, 'southwest'], [5, 'south'], [6, 'southwest'], [2, 'south'], [1, 'southwest'], [4, 'south'], [2, 'southeast'], [7, 'east'], [4, 'southeast'], [3, 'northeast'], [4, 'east'], [2, 'northeast'], [7, 'east'], [2, 'southeast'], [5, 'northeast'], [2, 'north'], [2, 'northwest'], [3, 'north'], [6, 'northwest'], [4, 'northeast'], [4, 'east'], [6, 'northeast'], [12, 'east'], [6, 'northeast'], [6, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_nielira
	if @dest == "Icemule Trace"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [19, 'north'], [1, 'northwest'], [20, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [19, 'north'], [1, 'northwest'], [13, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [2, 'north'], [9, 'northwest'], [3, 'west'], [5, 'northwest'], [7, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [13, 'north'], [3, 'northeast'], [1, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [4, 'north'], [5, 'northwest'], [1, 'northeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [4, 'north'], [10, 'northwest'], [5, 'north'], [4, 'northwest'], [1, 'north'], [1, 'port']]  
	end
	if @dest == "River\'s Rest"
		@route = [[2, 'southwest'], [3, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [2, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Ta\'Vaalor"
		@route = [[1, 'east'], [4, 'northeast'], [12, 'east'], [4, 'northeast'], [3, 'east'], [2, 'northeast'], [3, 'east'], [8, 'northeast'], [4, 'north'], [1, 'port']]
	end
end

def sailing_from_vaalor
	if @dest == "Icemule Trace"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [19, 'north'], [1, 'northwest'], [20, 'north'], [1, 'northwest'], [1, 'north'], [4, 'northeast'], [4, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Wehnimer\'s Landing"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [19, 'north'], [1, 'northwest'], [13, 'north'], [3, 'northeast'], [2, 'north'], [2, 'east'], [4, 'southeast'], [1, 'port']]
	end
	if @dest == "Kharam Dzu"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [2, 'north'], [9, 'northwest'], [3, 'west'], [5, 'northwest'], [7, 'west'], [1, 'port']]
	end
	if @dest == "Solhaven"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [13, 'north'], [3, 'northeast'], [1, 'southeast'], [1, 'port']]
	end
	if @dest == "Brisker\'s Cove"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [4, 'north'], [13, 'northwest'], [4, 'north'], [5, 'northwest'], [1, 'northeast'], [1, 'east'], [1, 'port']]
	end
	if @dest == "Kraken\'s Fall"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [4, 'north'], [10, 'northwest'], [5, 'north'], [4, 'northwest'], [1, 'north'], [1, 'port']]
	end
	if @dest == "River\'s Rest"
		@route = [[4, 'south'], [8, 'southwest'], [6, 'west'], [6, 'southwest'], [12, 'west'], [6, 'southwest'], [4, 'west'], [4, 'southwest'], [6, 'southeast'], [3, 'south'], [2, 'southeast'], [2, 'south'], [5, 'southwest'], [2, 'northwest'], [7, 'west'], [2, 'southwest'], [4, 'west'], [3, 'southwest'], [4, 'northwest'], [7, 'west'], [2, 'northwest'], [4, 'north'], [1, 'northeast'], [2, 'north'], [6, 'northeast'], [5, 'north'], [11, 'northeast'], [2, 'north'], [1, 'northeast'], [1, 'port']]
	end
	if @dest == "Nielira Harbor"
		@route = [[4, 'south'], [8, 'southwest'], [3, 'west'], [2, 'southwest'], [3, 'west'], [4, 'southwest'], [12, 'west'], [4, 'southwest'], [1, 'west'], [1, 'port']]
	end
end

def lower_sail
	result = dothistimeout "lower sail", 3, /you slowly lower the (.*) sail until it is at half mast|you slowly lower the (.*) sail until it is fully open|far as it can go!/
        waitrt?
	if result.to_s =~ /...wait/
		waitrt?
		lower_sail
	elsif result.to_s =~ /you slowly lower the (.*) sail until it is at half mast/
		waitrt?
		lower_sail
	elsif result.to_s =~ /you slowly lower the (.*) sail until it is fully open/
		@lowered_sail = true
		waitrt?
	elsif result.to_s =~ /far as it can go!/
		end
end

def raise_anchor
	result = dothistimeout "push capstan", 3, /begin to push|one final push|anchor is already up/
        waitrt?
	if result.to_s =~ /...wait/
		waitrt?
		raise_anchor
	elsif result.to_s =~ /begin to push/
		waitrt?
		raise_anchor
	elsif result.to_s =~ /one final push/
		@anchor_aweigh = true
		waitrt?
	elsif result.to_s =~ /anchor is already up/
		return
	end
end

def one_mast
	fput "pull gangplank"
	lower_sail
	if @lowered_sail
		waitrt?
		if checkname == UserVars.osacrew["commander"]
			fput "yell Main Mast Unfurled, She's Ready to Sail!"
		else
			fput "yell Main Mast Unfurled, She's Ready to Sail Captain!"
		end
		@lowered_sail = false
	end
	pause 0.5
	move "west"
end

def two_masts
	fput "pull gangplank"
	lower_sail
	if @lowered_sail
		waitrt?
		fput "yell Main Mast Unfurled"
		@lowered_sail = false
	end
	pause 0.5
	move "east"
	lower_sail
	if @lowered_sail
		waitrt?
		if checkname == UserVars.osacrew["commander"]
			fput "yell Fore Mast Unfurled, She's Ready to Sail!"
		else
			fput "yell Fore Mast Unfurled, She's Ready to Sail Captain!"
		end
		@lowered_sail = false
	end
	pause 0.5
	move "west"
	pause 0.5
	move "west"
end

def three_masts
	fput "pull gangplank"
	lower_sail
	if @lowered_sail
		waitrt?
		fput "yell Mizzen Mast Unfurled"
		@lowered_sail = false
	end
	pause 0.5
	move "east"
	lower_sail
	if @lowered_sail
		waitrt?
		fput "yell Main Mast Unfurled"
		@lowered_sail = false
	end
	pause 0.5
	move "east"
	lower_sail
	if @lowered_sail
		waitrt?
		if checkname == UserVars.osacrew["commander"]
			fput "yell Fore Mast Unfurled, She's Ready to Sail!"
		else
			fput "yell Fore Mast Unfurled, She's Ready to Sail Captain!"
		end
		@lowered_sail = false
	end
	pause 0.5
	move "west"
	pause 0.5
	move "west"
	pause 0.5
	move "west"
end

def crew_det_drift
	echo "Determining Corrective Course"
	result = matchtimeout 300, /The (.*) wheel slowly turns off course.|The (.*) (cuts through the ocean, heading|drifts slowly) ([a-z,]+) (at full speed|,|.)/
	if result.to_s =~ /The (.*) wheel slowly turns off course./
		@ph_corrected = "None"
		echo @ph_corrected
	elsif result.to_s =~ /The (.*) (cuts through the ocean, heading|drifts slowly) ([a-z,]+) (at full speed|,|.)/
		if $3 == @course
			@ph_corrected = "None"
			echo @ph_corrected
		elsif $3 == "northeast"
			@ph_corrected = "southwest"
			echo @ph_corrected
		elsif $3 == "northwest"
			@ph_corrected = "southeast"
			echo @ph_corrected
		elsif $3 == "southwest"
			@ph_corrected = "northeast"
			echo @ph_corrected
		elsif $3 == "southeast"
			@ph_corrected = "northwest"
			echo @ph_corrected
		elsif $3 == "north"
			@ph_corrected = "south"
			echo @ph_corrected
		elsif $3 == "south"
			@ph_corrected = "north"
			echo @ph_corrected
		elsif $3 == "west"
			@ph_corrected = "east"
			echo @ph_corrected
		elsif $3 == "east"
			@ph_corrected = "west"
			echo @ph_corrected
		end
	end
end	

def crew_fix_wheel
	echo "Taking Corrective Course"
	if @ph_corrected == "None"
		fput "turn wheel #{@course}"
		crew_keep_course
		return
	end
	result = dothistimeout "turn wheel #{@ph_corrected}", 300, /The (.*) (cuts through the ocean, heading|drifts slowly)|The sound of ropes coming free of the rigging|A large swell crashes into the side of the|The (.*) suddenly drifts from its course as the/
		if line.to_s =~ /The (.*) (cuts through the ocean, heading|drifts slowly)/
			waitrt?
			echo "Resuming Original Course"
			waitrt?
		elsif line.to_s =~ /The sound of ropes coming free of the rigging/
			echo "The Sails Have Been Furled"
			crew_how_many_masts
		elsif line.to_s =~ /A large swell crashes into the side of the/
			echo "Rogue Wave! Secure that Anchor!"
			crew_fix_anchor
		elsif line.to_s =~ /The (.*) suddenly drifts from its course as the/
			respond "The Ship's Gone Off Course Captain!"
			crew_det_drift
			echo "Corrective Course Determined"
			crew_fix_wheel
		end
end

def crew_keep_course
		#echo "Maintaining Course"
		@sailing_begin_time = Time.now
	result = matchtimeout 300, /The (.*) (cuts through the ocean, heading|drifts slowly)|A large swell crashes into the side of the|The sound of ropes coming free of the rigging|The (.*) suddenly drifts from its course as the|The (.*) drifts steadily toward the/
	if result.to_s =~ /The (.*) (cuts through the ocean, heading|drifts slowly)/
			@sailing_end_time = Time.now
			@sailingtime = ((@sailing_end_time - @sailing_begin_time) / 60.00)
			#respond "Time to move was: #{@sailingtime.as_time}"
			@Sailtimes.push(@sailingtime)
			if @ship_type == 'sloop'
				UserVars.osacrew["Slooptimes"] = @Sailtimes
			end
			if @ship_type == 'brigantine'
				@Brigtimes = @Sailtimes
			end
			if @ship_type == 'carrack'
				@Cartimes = @Sailtimes
			end
			if @ship_type == 'galleon'
				@Galtimes = @Sailtimes
			end
			if @ship_type == 'frigate'
				@Fritimes = @Sailtimes
			end
			if @ship_type == 'man o\' war'
				@Mantimes = @Sailtimes
			end
			@averagetime = (@Sailtimes.sum/ @Sailtimes.size.to_f)
			#respond "Average move time for you ship is: #{@averagetime.as_time}"
			waitrt?
	elsif result.to_s =~ /A large swell crashes into the side of the/
			waitrt?
			fput "yell Rogue Wave! Secure the Anchor!"
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			waitrt?
			waitcastrt?
			raise_anchor
			crew_keep_course
	elsif result.to_s =~ /The sound of ropes coming free of the rigging/
			waitrt?
			fput "yell The Sails Have Furled, Let Go the Halyard, Sheets, and Braces!"
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			waitrt?
			fput "kick capstan"
			waitrt?
			if Room.current.id != @main_deck
				start_script("go2", [@main_deck])
				wait_while { running?("go2") }
			end
			if @ship_type == "sloop" 
				one_mast
			elsif (@ship_type == "brigantine" or @ship_type == "carrack" or @ship_type == "galleon" or @ship_type == "frigate")
				two_masts
			elsif @ship_type == "man o' war"
				three_masts
			end
			raise_anchor
			crew_keep_course
	elsif result.to_s =~ /The (.*) suddenly drifts from its course as the/
			echo "The Ship Has Gone Off Course"
			waitrt?
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			waitcastrt?
			crew_det_drift
			echo "Corrective Course Determined"
			crew_fix_wheel
			waitrt?
			if @ph_corrected != "None"
				crew_keep_course
			end
	elsif result.to_s =~ /The (.*) drifts steadily toward the/
			@sailing_end_time = Time.now
			@sailingtime = ((@sailing_end_time - @sailing_begin_time) / 60.00)
			#respond "Time to move was: #{@sailingtime.as_time}"
			@Sailtimes.push(@sailingtime)
			if @ship_type == 'sloop'
				UserVars.osacrew["Slooptimes"]= @Sailtimes
			end
			if @ship_type == 'brigantine'
				UserVars.osacrew["Brigtimes"] = @Sailtimes
			end
			if @ship_type == 'carrack'
				UserVars.osacrew["Cartimes"] = @Sailtimes
			end
			if @ship_type == 'galleon'
				UserVars.osacrew["Galtimes"] = @Sailtimes
			end
			if @ship_type == 'frigate'
				UserVars.osacrew["Fritimes"] = @Sailtimes
			end
			if @ship_type == 'man o\' war'
				UserVars.osacrew["Mantimes"] = @Sailtimes
			end
			@averagetime = (@Sailtimes.sum/ @Sailtimes.size.to_f)
			#respond "Average move time for you ship is: #{@averagetime.as_time}"
			waitrt?
			respond "Liberty Call! Liberty Call!"
			@end_trip = Time.now
			@trip_total_time = ((@end_trip - @start_trip)/ 60.00)
			respond "
			Estimated Trip Time Was: #{@estimated_trip_time}"
			respond "Actual Trip Time: #{@trip_total_time.as_time}
			"
			if checkname == UserVars.osacrew["commander"]
				do_client ";chat on #{UserVars.osacrew["crew"]} #{UserVars.osacrew["commander_ship_name"]} Is Now Moored In #{@dest}. Estimated Trip Time Was Approximately: #{@estimated_trip_time}, Actual Trip Time Was: #{@trip_total_time.as_time}"
			end
			exit
	end
end

def crew_start_nav
	ship_type
	if Room.current.location != "Ships"
		respond "
                 Please Restart When You Are On Your Ship
				 "
		exit
	end
	if Room.current.id != @helm
		start_script("go2", [@helm])
		wait_while { running?("go2") }
	end
	result = dothistimeout "look ocean", 3, /Potential docking options include (.*)./
	if result.to_s =~ /Potential docking options include (.*)./
		if $1.include? 'a bustling port'
			@nearest_town = "Kraken\'s Fall"
		elsif $1.include? 'a diverse port'
			@nearest_town = "Solhaven"
		elsif $1.include? 'a lively port'
			@nearest_town = "Wehnimer\'s Landing"
		elsif $1.include? 'an idle port'
			@nearest_town = "River\'s Rest"
		elsif $1.include? 'an ash-covered port'
			@nearest_town = "Kharam Dzu"
		elsif $1.include? 'a sprawling imperial port'
			@nearest_town = "Brisker\s Cove"
		elsif $1.include? 'a ramshackle port'
			@nearest_town = "Icemule Trace"
		elsif $1.include? 'an industrious port'
			@nearest_town = "Ta\'Vaalor"
		elsif $1.include? 'a naefira and ivy-draped port'
			@nearest_town = "Nielira Harbor"
		end
		ship_flag
	else
		start_script("osacommander", ['underway'])
		waitfor /You yell, "Underway!"/
		crew_start_nav
	end
	crew_nav_destination
end

def crew_nav_destination
	@city_one = "Icemule Trace"
	@city_two = "Wehnimer\'s Landing"
	@city_three = "Brisker\'s Cove"
	@city_four = "Solhaven"
	@city_five = "River\'s Rest"
	@city_six = "Kharam Dzu"
	@city_seven = "Nielira Harbor"
	@city_eight = "Ta\'Vaalor"
	if @nearest_town == "Icemule Trace"
		@city_one = "Kraken\'s Fall"
	elsif @nearest_town == "Wehnimer\'s Landing"
		@city_two = "Kraken\'s Fall"
	elsif @nearest_town == "Brisker\'s Cove"
		@city_three = "Kraken\'s Fall"
	elsif @nearest_town == "Solhaven"
		@city_four = "Kraken\'s Fall"
	elsif @nearest_town == "River\'s Rest"
		@city_five = "Kraken\'s Fall"
	elsif @nearest_town == "Kharam Dzu"
		@city_six = "Kraken\'s Fall"
	elsif @nearest_town == "Nielira Harbor"
		@city_seven = "Kraken\'s Fall"
	elsif @nearest_town == "Ta\'Vaalor"
		@city_eight = "Kraken\'s Fall"
	end
	if Room.current.id != @helm
		start_script("go2", [@helm])
		wait_while { running?("go2") }
	end
	respond "


	=======================================
	Please Select A Destination Captain\?
		1\. #{@city_one}
		2\. #{@city_two}
		3\. #{@city_three}
		4\. #{@city_four}
		5\. #{@city_five}
		6\. #{@city_six}
		7.\ #{@city_seven}
		8.\ #{@city_eight}
	=======================================
	Select a destination - 
		  ;send <#> or 0 to Quit"
	respond ""
	clear
	line = nil
	line = get until line.strip =~ /^[0-9]+$/
	destination = line
	if destination == "1"
		@start_time = Time.now.to_f
		@dest = "#{@city_one}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "2"
		@start_time = Time.now.to_f
		@dest = "#{@city_two}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "3"
		@start_time = Time.now.to_f
		@dest = "#{@city_three}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "4"
		@start_time = Time.now.to_f
		@dest = "#{@city_four}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "5"
		@start_time = Time.now.to_f
		@dest = "#{@city_five}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "6"
		@start_time = Time.now.to_f
		@dest = "#{@city_six}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "7"
		@start_time = Time.now.to_f
		@dest = "#{@city_seven}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	elsif destination == "8"
		@start_time = Time.now.to_f
		@dest = "#{@city_eight}"
		echo "Set course to #{@dest} from #{@nearest_town}"
		#near_city
	else
		echo "Those Are Uncharted Waters, Captain!"
	end
	if @nearest_town == "Solhaven"
		sailing_from_solhaven
	elsif @nearest_town == "River\'s Rest"
		sailing_from_river
	elsif @nearest_town == "Wehnimer\'s Landing"
		sailing_from_landing
	elsif @nearest_town == "Kharam Dzu"
		sailing_from_teras
	elsif @nearest_town == "Kraken\'s Fall"
		sailing_from_kraken
	elsif @nearest_town == "Icemule Trace"
		sailing_from_icemule
	elsif @nearest_town == "Ta\'Vaalor"
		sailing_from_vaalor
	elsif @nearest_town == "Nielira Harbor"
		sailing_from_nielira
	elsif @nearest_town == "Brisker\s Cove"
		sailing_from_brisker
	end
	crew_navigation_array
end

def crew_navigation_array
	number_of_moves = Array.new
	@start_trip = Time.now
	ship_type
	@averagetime = (@Sailtimes.sum/ @Sailtimes.size.to_f)
	if Room.current.id != @helm
			start_script("go2", [@helm])
			wait_while { running?("go2") }
	end
	@route.each do |distance,course|
		number_of_moves.push(distance)
	end
	@total_moves = number_of_moves.sum.to_f
	@estimated_trip_time = (@total_moves * @averagetime).as_time
	@end_trip_time = (Time.now + ((@total_moves * @averagetime) * 60))
	if checkname == UserVars.osacrew["commander"]
		do_client ";chat on #{UserVars.osacrew["crew"]} #{UserVars.osacrew["commander_ship_name"]} Expects To Make Way From #{@nearest_town} And Will Be Moored In #{@dest} At Approximately: #{@end_trip_time.strftime("%H:%M %p")}" 
	end
	respond "
	Estimated Trip Time: #{@estimated_trip_time}
	Estimated Arrival Time: #{@end_trip_time.strftime("%H:%M %p")}
	"
	@route.each do |distance,course|
		@course = course
		#echo @course
		fput "turn wheel #{course}"
		distance.times {crew_keep_course}
	end
	@end_trip = Time.now
	@trip_total_time = ((@end_trip - @start_trip)/ 60.00)
	respond ""
	respond "Average move time for you ship is: #{@averagetime.as_time}"
	respond "Estimated Trip Time Was: #{@estimated_trip_time}"
	respond "Actual Trip Time: #{@trip_total_time.as_time}"
	
end

def ship_flag
	result = dothistimeout "ship flag", 3, /is currently flying (.*) flag./
		if result.to_s =~ /is currently flying (.*) flag./
			if $1 != "a white"
				if Room.current.id != @crows_nest
					start_script("go2", [@crows_nest])
					wait_while { running?("go2") }
				end
				fput "ship flag white"
				waitrt?
			end
		end
end

def crew_get_underway
	ship_type
	if Room.current.id != @main_deck
		start_script("go2", [@main_deck])
		wait_while { running?("go2") }
	end
	if @ship_type == "sloop" 
		one_mast
	elsif (@ship_type == "brigantine" or @ship_type == "carrack" or @ship_type == "galleon" or @ship_type == "frigate")
		two_masts
	elsif @ship_type == "man o' war"
		three_masts
	end
	waitrt?
	waitcastrt?
	if Room.current.id != @helm
		start_script("go2", [@helm])
		wait_while { running?("go2") }
	end
	echo "Raising Anchor"
	raise_anchor
	waitrt?
	if @anchor_aweigh
		fput "yell Anchor's Aweigh!"
		@anchor_aweigh = false
	end
	multifput "depart","depart"
	fput "yell Underway!"
end

def crew_check_task
result = dothistimeout "osa task", 1, /You do not currently have a task from the Sea Hag's Roost|You should return to the Sea Hag's Roost to report your success|Abandons your current task/
    if result.to_s =~ /You do not currently have a task from the Sea Hag's Roost/
		@turnin = false
		fput "take board"
		pause 0.5
		crew_task_complete
	elsif result.to_s =~ /You should return to the Sea Hag's Roost to report your success/
		@turnin = true
		if saturated?
			if UserVars.osacrew["uselte"]
				fput "boost long"
			end
			wait_until {!saturated?}
		end
			fput "turn board"
			pause 0.5
			fput "take board"
			pause 0.5
			crew_task_complete
	elsif result.to_s =~ /Abandons your current task/
		crew_task_complete
	else
		crew_task_complete
    end
end 

def crew_task_complete
	pause rand(5)
	do_client ";chat to #{UserVars.osacrew["commander"]} Task Complete"
end

def crew_recieve_bread
	result = matchtimeout 30, /#{UserVars.osacrew["medicalofficer"]} offers (.*) (a|some)|#{UserVars.osacrew["medicalofficer"]} offers you (a|some)/
	if result.to_s =~ /#{UserVars.osacrew["medicalofficer"]} offers you (a|some)/
		fput "accept"
		crew_eat_bread
	elsif result.to_s =~ /#{UserVars.osacrew["medicalofficer"]} offers (.*) (a|some)/
			crew_recieve_bread
	end
end

def crew_eat_bread
	result = dothistimeout "gobble my #{checkright}", 1, /^\That was the last of it!|You have (.*) bite left.|You have (.*) bites left./
		if result.to_s =~ /That was the last of it!/
			return
		elsif result.to_s =~ /You have (.*) bite left./
			crew_eat_bread
		elsif result.to_s =~ /You have (.*) bites left./
			crew_eat_bread
		end
end

def determine_group_members
	status_tags
	$everyone_in_my_group = Array.new
	res = dothistimeout 'group',3,/^You are/
	grouped = res.scan(/noun="([^"]+)"/).flatten
	grouped.each{|member| $everyone_in_my_group.push(member)}
	$everyone_in_my_group.push(XMLData.name)
	status_tags
end

def crew_apply_support
	@supportlist.each do |n, t|
		@support_rec = n
		@support_type = t
		if @support_type == "Blessing"
			waitrt?
			pause 5
			fput "armor blessing #{@support_rec}"
		elsif @support_type == "Reinforcement"
			pause 5
			waitrt?
			fput "armor reinforement #{@support_rec}"
		elsif @support_type == "Support"
			pause 5
			waitrt?
			fput "armor support #{@support_rec}"
		elsif @support_type == "Casting"
			pause 5
			waitrt?
			fput "armor casting #{@support_rec}"
		elsif @support_type == "Evasion" 
			pause 5
			waitrt?
			fput "armor evasion #{@support_rec}"
		elsif @support_type == "Fluidity"
			pause 5
			waitrt?
			fput "armor fluidity #{@support_rec}"
		elsif @support_type == "Stealth"
			pause 5
			waitrt?
			fput "armor stealth #{@support_rec}"
		end
	end
end

def need_mana
	while running?("ewaggle")
		if percentmana < 15
			do_client ";chat on #{UserVars.osacrew["crew"]} I Need Mana!"
			wait_until {percentmana > 15}
		end
	end
end

def crew_spell_up
	if Stats.prof == "Empath"
		if running? "ecure"
			stop_script "ecure"
		end
		wait_while { running?("ecure") }
		Script.run("ecure","group")
		wait_while { running?("ecure") }
	end
	if Feat.known?("Kroderine Soul")
		multifput "leave", "group open"
	end
	if UserVars.osacrew["selfspellup"] == true
		start_script("ewaggle", ['--start-at=60', '--stop-at=90', '--stop-before=180', '--refreshable-min=30', '--use-multicast=on', '--use-power=on', '--use-concentration=on', '--use-mana=on'])
		need_mana
	end
	if UserVars.osacrew["groupspellup"] == true
		pause 2
		determine_group_members
		if !Feat.known?("Kroderine Soul")
			$everyone_in_my_group.each do |n|
				$pc = n
				echo "Spelling up, #{$pc}"
				start_script("ewaggle", ['--start-at=60', '--stop-at=90', '--stop-before=180', '--refreshable-min=30', '--use-multicast=on', '--use-power=on', '--use-concentration=on', '--use-mana=on', $pc])
				need_mana
			end
		end
	end
	if UserVars.osacrew["armor_specs"] == true
		crew_apply_support
		@supportlist.clear
		pause 5
		if !UserVars.osacrew["my_armor_spec"].empty?
			waitrt?
			fput "#{UserVars.osacrew["my_armor_spec"]}"
		end
	end
	crew_task_complete
end

def recieve_bless
result = matchtimeout 15, /a moment and then gently dissipates|leaving a soft white afterglow|appears to become incorporated into it|but it quickly returns to normal/
	if result.to_s =~ /a moment and then gently dissipates|leaving a soft white afterglow|appears to become incorporated into it|but it quickly returns to normal/
		return
	else
		respond ""
		respond "                                  Something May Have Gone Wrong With The Bless                               "
		respond ""
	end
end

def get_bless
	if UserVars.osacrew["needbless"]
		do_client ";chat to #{UserVars.osacrew["blesser"]} I Need Blessed Please!"
		waitfor /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["blesser"]}\: \"#{checkname}/
		if UserVars.osacrew["uachands"].empty? and UserVars.osacrew["uacfeet"].empty?
			fput "gird"
			pause 1
		else
			if !UserVars.osacrew["uachands"].empty?
				fput "remove #{UserVars.osacrew["uachands"]}"
				pause 0.5
			end
			if !UserVars.osacrew["uacfeet"].empty?
				fput "remove #{UserVars.osacrew["uacfeet"]}"
			end
		end
		if !checkleft.nil? && checkright.nil?
			fput "swap"
		end
		if !checkleft.nil? && !checkright.nil?
			do_client ";chat to #{UserVars.osacrew["blesser"]} I Have Two."
			do_client ";chat to #{UserVars.osacrew["blesser"]} I Am Ready."
			recieve_bless
			fput "swap"
			do_client ";chat to #{UserVars.osacrew["blesser"]} Ok, The Next One Is Ready."
			recieve_bless
		else
			do_client ";chat to #{UserVars.osacrew["blesser"]} I Have One."
			do_client ";chat to #{UserVars.osacrew["blesser"]} I Am Ready."
			recieve_bless
		end
		if UserVars.osacrew["uachands"].empty? and UserVars.osacrew["uacfeet"].empty?
			fput "store both"
		else
			if !UserVars.osacrew["uachands"].empty?
				fput "wear #{UserVars.osacrew["uachands"]}"
				pause 0.5
			end
			if !UserVars.osacrew["uacfeet"].empty?
				fput "wear #{UserVars.osacrew["uacfeet"]}"
			end
		end	
	end
end

def cast_bless
	result = matchtimeout 5, /^\[Private\]-GSIV:#{@name}\: \"I Am Ready.\"|^\[Private\]-GSIV:#{@name}\: \"Ok, The Next One Is Ready.\"/
		if result.to_s =~ /^\[Private\]-GSIV:#{@name}\: \"I Am Ready.\"|^\[Private\]-GSIV:#{@name}\: \"Ok, The Next One Is Ready.\"/
			if Spell[1604].known? and Spell[1604].affordable?
				Spell[1604].cast("#{@name}")
			end
			waitcastrt?
			if Spell[304].known? and Spell[304].affordable?
				Spell[304].cast("#{@name}")
			else
				fput "symbol bless #{@name}"
			end
		end
end
		
def give_bless
	do_client ";chat on #{UserVars.osacrew["crew"]} #{@name}"
	result = matchtimeout 5, /^\[Private\]-GSIV:#{@name}\: \"I Have One.\"|^\[Private\]-GSIV:#{@name}\: \"I Have Two.\"/
		if result.to_s =~ /^\[Private\]-GSIV:#{@name}\: \"I Have One.\"/
			cast_bless
		elsif result.to_s =~ /^\[Private\]-GSIV:#{@name}\: \"I Have Two.\"/
			2.times{cast_bless}
		end
end

def who_needs_blessed
	result = matchtimeout 1, /^\[Private\]-GSIV:(.*)\: \"I Need Blessed Please!\"/
	if result.to_s =~ /^\[Private\]-GSIV:(.*)\: \"I Need Blessed Please!\"/
		@blessname.push($1)
		who_needs_blessed
	end
end

def begin_bless
	if (Spell[304].known? or Spell[9802].known?) && UserVars.osacrew["givebless"] == true
		do_client ";chat on #{UserVars.osacrew["crew"]} I Will Be Providing All Crew Blessings!"
		@blessname = Array.new
		do_client ";chat on #{UserVars.osacrew["crew"]} Does Anyone Need A Bless?"
		who_needs_blessed
		@blessname.each do |n|
			@name = n
			give_bless
		end
		do_client ";chat on #{UserVars.osacrew["crew"]} The Crew Has Been Properly Blessed!"
	else
		do_client ";chat on #{UserVars.osacrew["crew"]} Can Anyone Bless?"
		result = matchtimeout 3, /^\[Private\]-GSIV:(.*)\: \"I Can Captain!\"/
		if result.to_s =~ /^\[Private\]-GSIV:(.*)\: \"I Can Captain!\"/
			UserVars.osacrew["blesser"] = $1
			do_client ";chat on #{UserVars.osacrew["crew"]} #{UserVars.osacrew["blesser"]}, Will You Please Bless The Crew?"
			waitfor /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["blesser"]}\: \"Does Anyone Need A Bless\?\"/
			get_bless
			waitfor /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["blesser"]}\: \"The Crew Has Been Properly Blessed Captain!"/
		else
			do_client ";chat on #{UserVars.osacrew["crew"]} We Do Not Have Anyone Present Who Can Bless Us, We Will Avoid This Ship"
		end
	end		
end

def status_check
	@capped = false
	@resource = nil
	@resource_total = nil
	@resource_weekly = nil
	exp = Lich::Util.quiet_command("exp", /Level:/, end_pattern = /You mind is (.*)\./)
	if exp.to_s =~ /Exp to next TP: ([0-9,]+)/
		@capped = true
		@exptntp = $1
	elsif exp.to_s =~ /Exp until lvl: ([0-9,]+)/
		@capped = false
	end
	if exp.to_s =~ /PTPs\/MTPs: ([0-9,]+)\/([0-9,]+)/
		@mtrainingpoints = $2
		@ptrainingpoints = $1
	end
	resource = Lich::Util.quiet_command("resource", /Health:/, end_pattern = /(Grit|Essence|Motes of Tranquility|Devotion|Lore Knowledge|Nature\'s Grace|Necrotic Energy): ([0-9,]+)/)
	if resource.to_s =~ /(.*): ([0-9,]+)\/50,000/
		if Stats.prof == "Warrior"
			@resource = "Grit"
		elsif Stats.prof == "Wizard"
			@resource = "Essence"
		elsif Stats.prof == "Monk"
			@resource = "Motes of Tranquility"
		elsif Stats.prof == "Cleric"
			@resource = "Devotion"
		elsif Stats.prof == "Bard"
			@resource = "Lore Knowledge"
		elsif Stats.prof == "Ranger"
			@resource = "Nature's Grace"
		elsif Stats.prof == "Sorcerer"
			@resource = "Necrotic Energy"
		end
		@resource_weekly = $2
	end
	if resource.to_s =~ /(.*) ([0-9,]+)\/200,000/
		@resource_total = $2
	end
	if !@capped && !@resource.nil?
		do_client ";chat on #{UserVars.osacrew["crew"]} Health: #{health}/#{maxhealth} | Mana: #{mana}/#{maxmana} | Stamina: #{stamina}/#{maxstamina} | Spirit: #{spirit}/#{maxspirit} | Exp Till Level #{Stats.level.to_i + 1}: #{XMLData.next_level_text.to_i} State Of Mind: #{checkmind.split(/ |\_/).map(&:capitalize).join(" ")} | Weekly #{@resource}: #{@resource_weekly} | Total #{@resource}: #{@resource_total}"
	end
	if !@capped && @resource.nil?
		do_client ";chat on #{UserVars.osacrew["crew"]} Health: #{health}/#{maxhealth} | Mana: #{mana}/#{maxmana} | Stamina: #{stamina}/#{maxstamina} | Spirit: #{spirit}/#{maxspirit} | Exp Till Level #{Stats.level.to_i + 1}: #{XMLData.next_level_text.to_i} State Of Mind: #{checkmind.split(/ |\_/).map(&:capitalize).join(" ")}"
	end
	if @capped && !@resource.nil?
		do_client ";chat on #{UserVars.osacrew["crew"]} Health: #{health}/#{maxhealth} | Mana: #{mana}/#{maxmana} | Stamina: #{stamina}/#{maxstamina} | Spirit: #{spirit}/#{maxspirit} | Exp Till Next TP: #{@exptntp} | #{@ptrainingpoints} PTP\'s | #{@mtrainingpoints} MTP\'s | State Of Mind: #{checkmind.split(/ |\_/).map(&:capitalize).join(" ")} | Weekly #{@resource}: #{@resource_weekly} | Total #{@resource}: #{@resource_total}"
	end
	if @capped && @resource.nil?
		do_client ";chat on #{UserVars.osacrew["crew"]} Health: #{health}/#{maxhealth} | Mana: #{mana}/#{maxmana} | Stamina: #{stamina}/#{maxstamina} | Spirit: #{spirit}/#{maxspirit} | Exp Till Next TP: #{@exptntp} | #{@ptrainingpoints} PTP\'s | #{@mtrainingpoints} MTP\'s | State Of Mind: #{checkmind.split(/ |\_/).map(&:capitalize).join(" ")}"
	end
end

def crew_help_display
	respond ""
	respond "   OSACrew Version: #{VERSION}"
	respond ""
	respond "   Usage: "
	respond ""
	respond "   ;osacrew setup                       Opens the setup window"
	respond "   ;osacrew underway                    Will get your ship underway"
	respond "   ;osacrew underway anchor             Will raise the anchor"
	respond "   ;osacrew underway sails              Will lower your sails"
	respond "   ;osacrew navigation                  Will begin port to port travel"
	respond "   ;osacrew repair                      Will begin damage control on the ship"
	respond "   ;osacrew cannons                     Will man the cannons of your choosing"
	respond "   ;osacrew swap                        Enables you to swap commands with ease"
	respond "   ;osacrew orders                      Will await your commander to announce location of ship then board ship"
	respond "   ;osacrew disembark                   Will depart the crew at the next convienent location"
	respond "   ;osacrew settings                    Will show current settings"
	respond "   ;osacrew profile                     Will save/load profiles for different commander settings"
	respond ""
	respond "   This is a companion to OSACommander. It is ran on your crew members to complete simple tasks on the ship including combat. "
	respond "   Enjoy "
	respond ""
	respond "   ~Peggyanne "
	respond " PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them. "
end

def crew_sell
	if UserVars.osacrew["slootsell"]
		start_script("eloot", ['sell'])
		wait_while { running?("eloot") }
	end
	crew_task_complete
end

def crew_match_city
	if (Room.current.location.include? "Landing" or Room.current.location.include? "Solhaven") and (@crew_orders_town.include? "Solhaven" or @crew_orders_town.include? "Landing")
		@crew_city_match = true
	end
	if Room.current.location.include? "River's Rest" and @crew_orders_town.include? "River's Rest"
		@crew_city_match = true
	end
	if Room.current.location.include? "Kharam-Dzu" and @crew_orders_town.include? "Kharam-Dzu"
		@crew_city_match = true
	end
	if Room.current.location.include? "Kraken's Fall" and @crew_orders_town.include? "Kraken's Fall"
		@crew_city_match = true
	end
	if @crew_city_match == true
		start_script("go2", [@crew_orders_room])
		wait_while { running?("go2") }
		wait_until { Room.current.id == @crew_orders_room.to_i }
		fput "go gangplank"
		multimove "west", "go door"
		respond "
		Crewman #{checkname} Standing By And Awaiting Orders Captain!
		"
		return
	else	
		respond "
		The Ship Has Arrived In #{@crew_orders_town}, Please Travel Closer Or Await It's Arrival Near #{Room.current.location}
		"
		exit
	end
end

def crew_give_coins
	if Lich::Util.silver_count != 0
		fput "give #{UserVars.osacrew["commander"]} #{Lich::Util.silver_count}"
	else
		return
	end
end

def crew_start_orders
	@crew_city_match = false
	respond "   ---------------------------==================================================================================================---------------------------

				                                               Welcome Back Crewman #{checkname}, Waiting For The Ship To Arrive!

	   ---------------------------==================================================================================================---------------------------"
	   while line = get
	   case line
	   when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"The Ship Is Now Moored In (.*). Room Number: (.*) \[/
		@crew_orders_town = $1
		@crew_orders_room = $2
		do_client ";chat to #{UserVars.osacrew["commander"]} Crewman #{checkname}, Requesting Permission To Come Aboard!"
		result = matchtimeout 30, /^\[Private\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Permission Granted\, Come Aboard!"|^\[Private\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Permission Denied, Im Sorry Shipmate But The Ship Is Too Full Right Now. Try Again Later!"/
			if result.to_s =~ /^\[Private\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Permission Granted\, Come Aboard!"/
				crew_match_city
				return
			elsif result.to_s =~ /^\[Private\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Permission Denied, Im Sorry Shipmate But The Ship Is Too Full Right Now. Try Again Later!"/
				respond "
						Sorry Shipmate, The Ship Has A Full Berth! Restarting Orders!
						"
				crew_start_orders
		end
	end	
	end
end

def crew_vessel_messaging
	waitrt?
	@ph_vessel_messaging = rand(1..11)
	if @ph_vessel_messaging == 1
		fput "yell We Are Engaging A #{UserVars.osacrew["enemy_type"]} Vessel, All Hands Man Your Battlestations!"
	elsif @ph_vessel_messaging == 2
		fput "yell Surface Contact, Port Side, Bearing #{"%03d" % rand(225..315)}, #{UserVars.osacrew["enemy_type"]} Vessel Inbound!"
	elsif @ph_vessel_messaging == 3
		fput "yell Surface Contact, Starboard Side, Bearing #{"%03d" % rand(46..135)}, #{UserVars.osacrew["enemy_type"]} Vessel Inbound!"
	elsif @ph_vessel_messaging == 4
		fput "yell Surface Contact, Dead Ahead, Bearing #{"%03d" % rand(0..45)}, #{UserVars.osacrew["enemy_type"]} Vessel Inbound!"
	elsif @ph_vessel_messaging == 5
		fput "yell Surface Contact, Dead Ahead, Bearing #{"%03d" % rand(316..359)}, #{UserVars.osacrew["enemy_type"]} Vessel Inbound!"	
	elsif @ph_vessel_messaging == 6
		fput "yell Surface Contact, Dead Astern, Bearing #{"%03d" % rand(136..224)}, #{UserVars.osacrew["enemy_type"]} Vessel Inbound!"
	elsif @ph_vessel_messaging == 7
		fput "yell Cannon Fire Inbound, Brace For Shock!"
		fput "yell #{UserVars.osacrew["enemy_type"]} Vessel Approaching!"
	elsif @ph_vessel_messaging == 8
		fput "yell #{UserVars.osacrew["enemy_type"]} Ship Detected, She's Caught Between The Devil And The Deep Blue Sea!"
		fput "yell To Your Battlestations!"
	elsif @ph_vessel_messaging == 9
		fput "yell #{UserVars.osacrew["enemy_type"]} Vessel Inbound! She Be Sailing Close To The Wind Me Boys!"
		fput "yell Time To Make Waves!"
	elsif @ph_vessel_messaging == 10
		fput "yell #{UserVars.osacrew["enemy_type"]} Vessel Starboard Side!"
		fput "yell She Be Choc-a-Block, Knock Seven Bells!"
	elsif @ph_vessel_messaging == 11
		fput "yell #{UserVars.osacrew["enemy_type"]} Vessel Port Side!"
		fput "yell She Be Choc-a-Block, Knock Seven Bells!"
	end
end

def determine_to_engage
	@enemy_type_list = Array.new
	@enemy_ship_list = Array.new
	@enemy_cannon_list = Array.new
	@enemy_type_list.push ("pirate") if UserVars.osacrew["enemy_pirate"]
	@enemy_type_list.push ("krolvin") if UserVars.osacrew["enemy_krolvin"]
	@enemy_type_list.push ("undead") if UserVars.osacrew["enemy_undead"]
	@enemy_ship_list.push ("Sloop") if UserVars.osacrew["board_sloop"]
	@enemy_ship_list.push ("Brigantine") if UserVars.osacrew["board_brigantine"]
	@enemy_ship_list.push ("Carrack") if UserVars.osacrew["board_carrack"]
	@enemy_ship_list.push ("Galleon") if UserVars.osacrew["board_galleon"]
	@enemy_ship_list.push ("Frigate") if UserVars.osacrew["board_frigate"]
	@enemy_ship_list.push ("Man O\' War") if UserVars.osacrew["board_man"]
	@enemy_cannon_list.push ("Sloop") if UserVars.osacrew["fire_sloop"]
	@enemy_cannon_list.push ("Brigantine") if UserVars.osacrew["fire_brigantine"]
	@enemy_cannon_list.push ("Carrack") if UserVars.osacrew["fire_carrack"]
	@enemy_cannon_list.push ("Galleon") if UserVars.osacrew["fire_galleon"]
	@enemy_cannon_list.push ("Frigate") if UserVars.osacrew["fire_frigate"]
	@enemy_cannon_list.push ("Man O\' War") if UserVars.osacrew["fire_man"]
	if (@enemy_type_list.include? UserVars.osacrew["enemy_type"]) and (@enemy_ship_list.include? @enemy_ship_type)
		UserVars.osacrew["engage"] = true
	else
		UserVars.osacrew["engage"] = false
	end
	if (@enemy_cannon_list.include? @enemy_ship_type)
		UserVars.osacrew["cannon_engage"] = true
	else
		UserVars.osacrew["cannon_engage"] = false
	end
end

def cast_sails
	if Spell[912].known?
		Spell[912].cast "sail"
	end
	if Spell[612].known?
		Spell[612].cast "sail"
	end
	waitrt?
	waitcastrt?
end

def check_winded
	if @winded
		pause 5
		return
	else
		if Room.current.id != @helm
			start_script("go2", [@helm])
			wait_while { running?("go2") }
		end
		return
	end
end

def winded_sails
	if @winded
		if Room.current.id != @main_deck
			start_script("go2", [@main_deck])
			wait_while { running?("go2") }
		end
		cast_sails
	else
		if Room.current.id != @helm
			start_script("go2", [@helm])
			wait_while { running?("go2") }
		end
		return
	end
	if @winded
		if !@mid_deck.nil?
			if Room.current.id != @mid_deck
				start_script("go2", [@mid_deck])
				wait_while { running?("go2") }
			end
			cast_sails
		end
	else
		if Room.current.id != @helm
			start_script("go2", [@helm])
			wait_while { running?("go2") }
		end
		return
	end
	if @winded
		if !@forward_deck.nil?
			if Room.current.id != @forward_deck
				start_script("go2", [@forward_deck])
				wait_while { running?("go2") }
			end
			cast_sails
		end
	else
		if Room.current.id != @helm
			start_script("go2", [@helm])
			wait_while { running?("go2") }
		end
		return
	end
	10.times{check_winded}
	winded_sails
end

def crew_display_settings
if UserVars.osacrew["othersailors"] == true
	$othersailors_value = "Yes"
else
	$othersailors_value = "No"
end
if UserVars.osacrew["stowaways"] == true
	$stowaways_value = "Yes"
else
	$stowaways_value = "No"
end
if UserVars.osacrew["piratehunter"] == true
	$piratehunter_value = "Yes"
else 
	$piratehunter_value = "No"
end
if UserVars.osacrew["boarding"] == true
	$boarding_value = "Yes"
else
	$boarding_value = "No"
end
if UserVars.osacrew["cleanup"] == true
	$cleanup_value = "Yes"
else
	$cleanup_value = "No"
end
if UserVars.osacrew["helmsman_enabled"] == true
	$helmsman_enabled = "Yes"
else
	$helmsman_enabled = "No"
end
if UserVars.osacrew["cleanup_type"] == nil
	$cleanup_type_value = "Normal"
elsif UserVars.osacrew["cleanup_type"] == raze
	$cleanup_type_value = "Raze Spawn"
elsif UserVars.osacrew["cleanup_type"] == spawn
	$cleanup_type_value = "Treasure Spawn"
end
respond "

Your Current Crew Settings Are As Follows:

Commander:                  #{UserVars.osacrew["commander"]}

Crew:                       #{UserVars.osacrew["crew"]}

Medical Officer:            #{UserVars.osacrew["medicalofficer"]}

"
if checkname == (UserVars.osacrew["commander"])
	respond "
	
You Are Currently Commander Of #{UserVars.osacrew["commander_ship_name"]}, A Battle Ready #{UserVars.osacrew["commander_ship_type"].split(/ |\_/).map(&:capitalize).join(" ")}!

Current Crew Size:                          #{Vars.crewsize} out of #{UserVars.osacrew["commander_max_crew"]}

Accepting Outside Scripted Crew:            #{$othersailors_value}

Pausing For Non-Scripted Crew:              #{$stowaways_value}

Enemy Detection Mode:                       #{$piratehunter_value}

Currently Boarding A Ship:                  #{$boarding_value}

Currently Cleaning Up Stragglers:           #{$cleanup_value}

Current Clean Up Mode:                      #{$cleanup_type_value}

Helmsman Qualified:                         #{$helmsman_enabled}
"
end
end

def crew_disembark
	UserVars.osacrew["depart"] = true
	respond ""
	respond "                     You Will Depart The Crew When The Crew Visits The Bank Next!
	                                      Thanks For Sailing With Us...
										 "
end

def crew_crew_swap
	if variable[2].nil?
			respond "
		 
		 Please Select A Valid Commander:
		  
		  ;osacrew swap <commander>
		 
		 "
		return
	else
		do_client ";chat to #{variable[2]} Crewman #{checkname} Checking Onboard Captain!"
		result = matchtimeout 3, /^\[Private\]-GSIV:(.*)\: \"Excellent Crewman #{checkname}, Welcome Aboard! Our Medical Officer Is: (.*). Our Shipboard Communications Channel Is: (.*)\"/
		if result.to_s =~ /^\[Private\]-GSIV:(.*)\: \"Excellent Crewman #{checkname}, Welcome Aboard! Our Medical Officer Is: (.*). Our Shipboard Communications Channel Is: (.*)\"/
			UserVars.osacrew["commander"] = $1
			UserVars.osacrew["medicalofficer"] = $2
			UserVars.osacrew["crew"] = $3
			respond ""
			_respond "\<preset id=\"thought\"\>" + "Your Crew Settings Have Changed And Now Are:" + "\<\/preset\>"
			respond ""
			_respond "\<preset id=\"thought\"\>" + "Crew:                #{UserVars.osacrew["crew"]}" + "\<\/preset\>"
			_respond "\<preset id=\"thought\"\>" + "Commander:           #{UserVars.osacrew["commander"]}" + "\<\/preset\>"
			_respond "\<preset id=\"thought\"\>" + "Medical Officer:     #{UserVars.osacrew["medicalofficer"]}" + "\<\/preset\>"
			respond ""
			respond ""
		else
			respond "The Captain Didn't Respond, Try Again Later!"
			respond ""
			respond ""
		end
	end
end

if script.vars[1] =~ /call/
(eval script.vars[2]).call
elsif (script.vars[1] =~ /setup/i)
  self.setup()
  exit
elsif (Script.current.vars[1] =~ /profile/i)
	self.profile(Script.current.vars)
	exit
elsif (script.vars[1] =~ /navigation/i)
	crew_start_nav
	UserVars.osacrew["piratehunter"] = false 
elsif script.vars[1].downcase == 'help'
	crew_help_display
	exit
elsif script.vars[1].downcase == 'cannons'
	@boarded = false
	@thirty = false
	@sunk = false
	ship_type
	gunner_set_mode
	do_client ';e while thirty = get;if thirty.match?(/^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Stop\"/);@sunk = true;exit;elsif thirty.match?(/The sides of the (.*) collide against your (.*)/);@boarded = true;exit;elsif thirty.match?(/Tenebrous Cauldron.  Victory is yours!/);@sunk = true;exit;elsif thirty.match?(/^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Thirty second warning, drop what yer doing and prepare for battle. Here they come!"/);@thirty = true;exit;end;end'
	gunner_cycle
	@boarded = false
	@thirty = false
	@sunk = false
	exit
elsif script.vars[1].downcase == 'swap'
	crew_crew_swap
elsif script.vars[1].downcase == 'orders'
	crew_start_orders
elsif script.vars[1] == '?'
	crew_help_display
	exit
elsif script.vars[1] =~ /underway/
		if script.vars[2].nil?
			crew_get_underway
			exit
		end
		if !script.vars[2].include? "sai" and !variable[2].include? "anc"
			respond "
					Please Select A Valid Underway Option: Sails or Anchor.
						No Option Will default To Full Underway Process
					"
		end
		if script.vars[2].include? "sai"
			crew_how_many_masts
		end
		if script.vars[2].include? "anc"
			crew_go_to_capstan
		end	
elsif script.vars[1] =~ /repairs/
	damage_control
	exit
elsif script.vars[1] =~ /settings/
	crew_display_settings
	exit
end

before_dying {
if checkname == (UserVars.osacrew["commander"])
	if script.vars[1] != /settings/
		do_client ";chat on #{UserVars.osacrew["crew"]} *Ding* *Ding* #{UserVars.osacrew["commander_ship_name"]} Departing!"
	end
else
	if !script.vars[1] != /settings/
		do_client ";chat on #{UserVars.osacrew["crew"]} *Ding* *Ding* Crewman #{checkname} Departing!"
	end
end
}

toggle_upstream

Thread.new{
	loop{
		command = upstream_get
			if command =~/^\<c\>;osacrew setup/i
				self.setup()
			elsif command =~/^\<c\>;osacrew profile (.*)/i
				@entry = $1.split(' ')
				@entry1 = @entry[0]
				@entry2 = @entry[1]
				do_client ";force osacrew profile #{@entry1} #{@entry2}"
			elsif command =~/^\<c\>;osacrew settings/i
				variable[1] = "settings"
				crew_display_settings
			elsif command =~/^\<c\>;osacrew help/i
				crew_help_display
			elsif command =~/^\<c\>;osacrew disembark/i
				crew_disembark
			elsif command =~/^\<c\>;osacrew orders/i
				do_client ";e stop_script 'osacrew';start_script('osacrew', ['orders'])"
			elsif command =~/^\<c\>;osacrew rogerup/i
				do_client ";chat on #{UserVars.osacrew["crew"]} The Following Crew Did Not Roger Up\: #{@crewsize.delete(checkpcs)}"
			end
	}
}

fput "flag sortedview on"
UserVars.osacrew["depart"] = false
UserVars.osacrew["piratehunter"] = false
@crew_lowered_sail = false
@crew_anchor_aweigh = false
@combat_cure = false
@boarded = false
@thirty = false
@sunk = false
@medicalofficer_patient = Array.new
@supportlist = Array.new
if checkname != UserVars.osacrew["commander"]
	UserVars.osacrew["cleanup"] = false
	UserVars.osacrew["piratehunter"] = false
	UserVars.osacrew["boarding"] = false
end
if script.vars[1].nil?
	crew_display_settings
end
if UserVars.osacrew["wound_level"].nil?
	UserVars.osacrew["wound_level"] = 0
end
Map.reload
Room[30778].wayto["30783"] = "east"
Room[30778].timeto["30783"] = 0.2
Room[30778].wayto.delete("30786")
Room[30786].wayto["30783"] = "west"
Room[30786].timeto["30783"] = 0.2
Room[30786].wayto.delete("30778")
Room[30129].tags.push("meta:trashcan:bucket")
Room[30175].tags.push("meta:trashcan:bucket")
Room[30180].tags.push("meta:trashcan:bucket")
Room[30124].tags.push("meta:trashcan:bucket")
Room[30140].tags.push("meta:trashcan:bucket")
Room[29042].tags.push("meta:trashcan:bucket")

while line = get
	case line
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["blesser"]}\: \"Does Anyone Need A Bless\?\"/
		if running? "osacommander"
			next
		end
		if UserVars.osacrew["needbless"]
			get_bless
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}: "Enemy Vessel Detected, (.*) Sound General Quarters! Gunners Man Your Irons!"/
		if UserVars.osacrew["cannoneer"] == true
			@boarded = false
			@thirty = false
			@sunk = false
			ship_type
			do_client ';e while thirty = get;if thirty.match?(/^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Stop\"/);@sunk = true;exit;elsif thirty.match?(/The sides of the (.*) collide against your (.*)/);@boarded = true;exit;elsif thirty.match?(/Tenebrous Cauldron.  Victory is yours!/);@sunk = true;exit;elsif thirty.match?(/^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Thirty second warning, drop what yer doing and prepare for battle. Here they come!"/);@thirty = true;exit;end;end'
			gunner_cycle
		end
		if UserVars.osacrew["osacombat"] == true
			if !running? "osacombat"
				start_script "osacombat"
			end
		else
			echo "You Are Not Currently In A Combatant Role, Ready Thyself For Combat!"
			fput "gird"
			if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
				ship_type
				if Room.current != "#{@captains_quarters}"
					start_script("go2", [@captains_quarters])
					wait_while { running?("go2") }
				end
			end
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}: "Enemy Vessel Detected, (.*) Sound General Quarters!"/
		if UserVars.osacrew["osacombat"] == true
			if !running? "osacombat"
				start_script "osacombat"
			end
		else
			echo "You Are Not Currently In A Combatant Role, Ready Thyself For Combat!"
			fput "gird"
			if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
				ship_type
				if Room.current != "#{@captains_quarters}"
					start_script("go2", [@captains_quarters])
					wait_while { running?("go2") }
				end
			end
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}: "(.*) Expects To Make Way From/
		if UserVars.osacrew["windedsails"]
			@winded = true
			do_client ";e while winded = get;if winded.match?(/(.*) Is Now Moored In (.*). Estimated Trip Time Was Approximately/);@winded = false;exit;end;end"
			ship_type
			winded_sails
			wait_until {checkpcs.include? UserVars.osacrew["commander"]}
			fput "join #{UserVars.osacrew["commander"]}"
			@winded = true
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Turn To!\"/
		ship_type
		wait_until { !running?("eloot") }
		if UserVars.osacrew["osacombat"] == true
				stop_script "osacombat"
				wait_while { running?("osacombat") }
		end
		waitrt?
		waitcastrt?
		if !checkleft.nil? or !checkright.nil?
			fput "store both"
		end
		fput "leave"
		pause 0.5
		fput "group open"
		damage_control
		wait_until {checkpcs.include? "#{UserVars.osacrew["commander"]}"}
		crew_task_complete
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Silvers\"/
		crew_give_coins
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Stop\"/
		if UserVars.osacrew["osacombat"] == true
			if running? "osacombat"
				stop_script "osacombat"
				wait_while { running?("osacombat") }
			end
			waitrt?
			waitcastrt?
			fput "store both"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"All Hands Make Ready To Get Underway!\"/
		if UserVars.osacrew["osacrewtasks"] == true
			fput "leave"
			pause 0.5
			fput "group open"
			ship_type
			if Room.current != "#{@main_deck}"
				start_script("go2", [@main_deck])
				wait_while { running?("go2") }
			end
			if @ship_type == "sloop" 
				one_mast
			elsif (@ship_type == "brigantine" or @ship_type == "carrack" or @ship_type == "galleon" or @ship_type == "frigate")
				two_masts
			elsif @ship_type == "man o' war"
				three_masts
			end
			move "go door"
		else
			if Room.current.id != @captains_quarters
				start_script("go2", [@captains_quarters])
				wait_while { running?("go2") }
			end
			echo "You Are Not Currently In A Crew Role, Please Standby To Standby!" 
		end
		pause 1
		if percentmana <= 84
			respond ""
			respond "          -----------------------------------------------------"
			respond "          |                Waiting For Mana                   |"
			respond "          -----------------------------------------------------"
			respond ""
			wait_until {percentmana >= 85}
		end
		wait_until {checkpcs.include? "#{UserVars.osacrew["commander"]}"}
		crew_task_complete
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Status\"/
		status_check
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Spells\"/
		crew_spell_up
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Task Time!\"/
		crew_check_task
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Deposit\"/
		fput "depo all"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Sheath\"/
		do_client "sheath"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Reset\"/
		do_client ";e stop_script 'osacrew';wait_while { running?('osacrew') };start_script 'osacrew'"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Change Of Command: (.*)\"/
		UserVars.osacrew["commander"] = $1
		respond "
		Your New Commanding Officer Is Now: #{UserVars.osacrew["commander"]}
		"
		when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Crew Swap: (.*)\"/
		do_client ";lnet untune #{UserVars.osacrew["crew"]}"
		pause 0.5
		UserVars.osacrew["crew"] = $1
		pause 0.5
		do_client ";lnet tune #{UserVars.osacrew["crew"]}"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Pause\"/
		if UserVars.osacrew["osacombat"] == true
			if running? "osacombat"
				pause_script "osacombat"
			end
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Unpause\"/
		if UserVars.osacrew["osacombat"] == true
			if running? "osacombat"
				unpause_script "osacombat"
			end
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*)\: \"I Need Mana!\"$/
		@manaperson = $1
		echo @manaperson
		crew_send_mana
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Make Repairs!\"/
		if UserVars.osacrew["osacrewtasks"]
			damage_control
		else
			echo "You Are Not Currently In A Crew Role, Please Standby To Standby!"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Can Anyone Bless\?\"/
		if UserVars.osacrew["givebless"]
			do_client ";chat to #{UserVars.osacrew["commander"]} I Can Captain!"
			result = matchtimeout 3, /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"#{checkname}, Will You Please Bless The Crew\?"/
				if result.to_s =~ /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"#{checkname}, Will You Please Bless The Crew\?"/
					do_client ";chat on #{UserVars.osacrew["crew"]} Of Course Captain!"
					@blessname = Array.new
					do_client ";chat on #{UserVars.osacrew["crew"]} Does Anyone Need A Bless?"
					who_needs_blessed
					@blessname.each do |n|
						@name = n
						give_bless
					end
					do_client ";chat on #{UserVars.osacrew["crew"]} The Crew Has Been Properly Blessed Captain!"
				else
					next
				end
		else
			next
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"(.*), Will You Please Bless The Crew\?\"/
		UserVars.osacrew["blesser"] = $1
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"I Will Be Providing All Crew Blessings!\"/
		UserVars.osacrew["blesser"] = UserVars.osacrew["commander"]
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Quarters! All Hands To Quarters For Muster, Instruction and Inspection!\"/
			pause rand(5)
			LNet.send_message(attr = { 'type' => 'private', 'to' => UserVars.osacrew["commander"] }, "Crewman #{checkname} Reporting For Duty Captain!")
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Invoker!\"/
		fput "ask invoker about spells"
		pause 0.5
		fput "spell active"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Current Version Are As Follows(.)/
		do_client ";chat on #{UserVars.osacrew["crew"]} My Versions are as follows: Combat #{UserVars.osacrew["combatversion"]} and Crew #{UserVars.osacrew["crewversion"]}"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}: "Crew, Report To: (.*)\"/
		if !checkpcs.include? "#{UserVars.osacrew["commander"]}"
			start_script("go2", [$1])
			wait_while { running?("go2") }
			multifput "salute #{UserVars.osacrew["commander"]}", "join #{UserVars.osacrew["commander"]}"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}: "Mana Spellup\"/
		if (Stats.prof != "Warrior") and (Stats.prof !="Rogue")
			fput "mana spellup"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*): "\*Ding\* \*Ding\* Crewman (.*) Departing!\"/
		if checkname == (UserVars.osacrew["commander"]) and @crewsize.include? "#{$2}"
			respond "
			Removing #{$2} From The Ship's Roster!
			"
			@crewsize.delete "#{$2}"
			do_client ";var set crewsize= #{@crewsize.count}"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["medicalofficer"]}: "I Shall Supply The Bread!\"/
		if UserVars.osacrew["groupspellup"]
			fput "stow all"
			pause rand(3)
			do_client ";chat to #{UserVars.osacrew["medicalofficer"]} I Will Take Some Please."
			crew_recieve_bread
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}: "Let Us Break Bread Together!\"/
		if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
			do_client ";chat on #{UserVars.osacrew["crew"]} I Shall Supply The Bread!"
			@breadlist = Array.new
			medicalofficer_bread_orders
			multifput "stow all", "incant 203"
			crew_eat_bread
			@breadlist.each do |n|
				@person = n
				medicalofficer_bread
			end
			do_client ";chat on #{UserVars.osacrew["crew"]} Bread Is Served Captain!"
		end
	when /Connection Test: #{checkname}/
		do_client ";chat on #{UserVars.osacrew["crew"]} Test Satisfactory Captain!"
	when /Attention To Quarters!/
		fput "snap attention"
		waitfor /Post!/
		fput "salute #{UserVars.osacrew["commander"]}" if UserVars.osacrew["commander"] != checkname
		if (checkname == "Bait") or (checkname == "Subeta") or (checkname == "Ithloria") or (checkname == "Carolanne") or (checkname == "Dargol") or (checkname == "Cindrasa")
			fput "exit"
		end
	when /^\[Private\]-GSIV:(.*)\: \"Crewman (.*) Checking Onboard Captain!\"/
		if checkname == UserVars.osacrew["commander"]
			pause 0.5
			do_client ";chat to #{$1} Excellent Crewman #{$1}, Welcome Aboard! Our Medical Officer Is: #{UserVars.osacrew["medicalofficer"]}. Our Shipboard Communications Channel Is: #{UserVars.osacrew["crew"]}"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Does Anyone Need Armor Adjustments\?\"/
		if UserVars.osacrew["need_armor_blessing"]
			if Effects::Spells.time_left("Armor Blessing") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armor Blessing, Please"
			end
		end
		if UserVars.osacrew["need_armor_reinforcement"]
			if Effects::Spells.time_left("Armor Reinforcement") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armor Reinforcement, Please"
			end
		end
		if UserVars.osacrew["need_armor_support"]
			if Effects::Spells.time_left("Armor Support") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armor Support, Please"
			end
		end
		if UserVars.osacrew["need_armor_casting"]
			if Effects::Spells.time_left("Armored Casting") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armored Casting , Please"
			end
		end
		if UserVars.osacrew["need_armor_evasion"]
			if Effects::Spells.time_left("Armored Evasion") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armored Evasion, Please"
			end
		end
		if UserVars.osacrew["need_armor_fluidity"]
			if Effects::Spells.time_left("Armored Fluidity") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armored Fluidity, Please"
			end
		end
		if UserVars.osacrew["need_armor_stealth"]
			if Effects::Spells.time_left("Armored Stealth") <= 30
				do_client ";chat on #{UserVars.osacrew["crew"]} I Need Armored Stealth, Please"
			end
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*): \"I Need (Armor|Armored) (.*), Please/
		person = $1
		type = $3
		#echo person
		#echo type
		if type == "Blessing"
			if UserVars.osacrew["have_armor_blessing"]
				@supportlist.push([person, type])
			end
		elsif type == "Reinforcement"
			if UserVars.osacrew["have_armor_reinforcement"]
				@supportlist.push([person, type])
			end
		elsif type == "Support"
			if UserVars.osacrew["have_armor_support"]
				@supportlist.push([person, type])
			end
		elsif type == "Casting"
			if UserVars.osacrew["have_armor_casting"]
				@supportlist.push([person, type])
			end
		elsif type == "Evasion" 
			if UserVars.osacrew["have_armor_evasion"]
				@supportlist.push([person, type])
			end
		elsif type == "Fluidity"
			if UserVars.osacrew["have_armor_fluidity"]
				@supportlist.push([person, type])
			end
		elsif type == "Stealth"
			if UserVars.osacrew["have_armor_stealth"]
				@supportlist.push([person, type])
			end
		end
	when /You could use this opportunity to (.*)!/
		UserVars.osacrew["reactive"] = true
		UserVars.osacrew["reactivetype"] = $1
	when /^\[Private\]-(Noob|GSIV):(.*)\: \"(heal|spells|dims|bread|surge KS|surge)\"/
		if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
			@person = $2
			echo @person
			pause_script "osacombat"
			@combat_cure = true
			if $3 == "heal"
				@medicalofficer_patient.push(@person)
				medicalofficer_checkup
				@medicalofficer_patient.clear
			elsif $3 == "sugre KS"
				medicalofficer_fix_muscles_ks
			elsif $3 == "surge" 
				medicalofficer_fix_muscles
			elsif $3 == "dims"
				medcalofficer_dims
			elsif $3 == "spells"
				medcalofficer_spells
			elsif $3 == "bread" 
				medicalofficer_bread
			end
			@combat_cure = false
			unpause_script "osacombat"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*)\: \"I Am Poisoned!\"$/
		if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
			@person = $1
			pause_script "osacombat"
			@combat_cure = true
			medicalofficer_fix_poison
			unpause_script "osacombat"
			@combat_cure = false
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:(.*)\: \"I Am Injured!\"$/
		if UserVars.osacrew["medicalofficer"].include? "#{checkname}"
			pause_script "osacombat"
			@combat_cure = true
			@medicalofficer_patient.push($1)
			medicalofficer_triage
			medicalofficer_checkup
			unpause_script "osacombat"
			@medicalofficer_patient.clear
			@combat_cure = false
		end
	when /The (Krolvin|Pirate|Ethereal) Captain shouts in rage aboard the (.*) as (he|she) enters the fray!/
		if UserVars.osacrew["cleanup"] && checkname == UserVars.osacrew["commander"]
			wait_until {GameObj.targets.count {|npc| npc.status !~ /dead|gone|prone/ && npc.name !~ /animated| arm|arms|tentacle|tentacles/ } < 1}
			start_script "eloot"
			wait_while { running?("eloot") }
			start_script("osacommander", ["cleanup"])
		end
	when /A large swell crashes into the side of the/
		if (UserVars.osacrew["piratehunter"])
			pause_script "osacommander"
			waitrt?
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			fput "yell Rogue Wave! Secure the Anchor!"
			waitrt?
			waitcastrt?
			raise_anchor
			fput "turn wheel ship"
			waitrt?
			move "go door"
			unpause_script "osacommander"
		end
	when /The sound of ropes coming free of the rigging/
		if (UserVars.osacrew["piratehunter"])
			pause_script "osacommander"
			waitrt?
			fput "yell The Sails Have Furled, Let Go the Halyard, Sheets, and Braces!"
			waitrt?
			waitcastrt?
			ship_type
			if Room.current.id != @main_deck
				start_script("go2", [@main_deck])
				wait_while { running?("go2") }
			end
			if @ship_type == "sloop" 
				one_mast
			elsif (@ship_type == "brigantine" or @ship_type == "carrack" or @ship_type == "galleon" or @ship_type == "frigate")
				two_masts
			elsif @ship_type == "man o' war"
				three_masts
			end
			fput "turn wheel ship"
			waitrt?
			move "go door"
			unpause_script "osacommander"
		end
	when /The (.*) suddenly drifts from its course as the/
		if (UserVars.osacrew["piratehunter"])
			echo "The Ship Has Gone Off Course"
			pause_script "osacommander"
			waitrt?
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			waitcastrt?
			crew_det_drift
			echo "Corrective Course Determined"
			crew_fix_wheel
			fput "turn wheel ship"
			waitrt?
			move "go door"
			unpause_script "osacommander"
		end
	when /A sudden booming of cannon fire erupts from the enemy/
		if (UserVars.osacrew["piratehunter"] && !UserVars.osacrew["boarding"])
			wait_while {GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone|stunned/}}
			determine_enemy_ship_type
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			fput "look ocean"
		end
	when /(.*)carves through the ocean toward your (.*)/
		UserVars.osacrew["enemyship"] = $1
		if (UserVars.osacrew["piratehunter"])	
			UserVars.osacrew["enemy_type"] = "pirate"
			determine_enemy_ship_type
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			wait_while {GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone|stunned/}}
			determine_to_engage
			if UserVars.osacrew["engage"]
				crew_vessel_messaging
				start_script("osacommander", ['start'])
			else
				do_client ";chat on #{UserVars.osacrew["crew"]} Crew, We Do Not Have Authorization To Engage This Vessel!"
				if Room.current.id != @helm
					start_script("go2", [@helm])
					wait_while { running?("go2") }
				end
				fput "turn wheel port"
				waitfor /The (.*) drifts steadily toward the (.*) port/
				UserVars.osacrew["boarding"] = false
				start_script("osacommander", ['underway'])
			end
		end
	when /As the water falls\,\ (.*) materializes next to your ship!/
		UserVars.osacrew["enemyship"] = $1
		if (UserVars.osacrew["piratehunter"])
			UserVars.osacrew["enemy_type"] = "undead"
			determine_enemy_ship_type
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			wait_while {GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone|stunned/}}
			determine_to_engage
			if UserVars.osacrew["engage"]
				crew_vessel_messaging
				start_script("osacommander", ['start'])
			else
				do_client ";chat on #{UserVars.osacrew["crew"]} Crew, We Do Not Have Authorization To Engage This Vessel!"
				if Room.current.id != @helm
					start_script("go2", [@helm])
					wait_while { running?("go2") }
				end
				fput "turn wheel port"
				waitfor /The (.*) drifts steadily toward the (.*) port/
				UserVars.osacrew["boarding"] = false
				start_script("osacommander", ['underway'])
			end
		end
	when /A distant thudding of the drums of war acts as a harbinger for (.*) ripping/
		UserVars.osacrew["enemyship"] = $1
		if (UserVars.osacrew["piratehunter"])
			UserVars.osacrew["enemy_type"] = "krolvin"
			determine_enemy_ship_type
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			wait_while {GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone|stunned/}}
			determine_to_engage
			if UserVars.osacrew["engage"]
				crew_vessel_messaging
				start_script("osacommander", ['start'])
			else
				do_client ";chat on #{UserVars.osacrew["crew"]} Crew, We Do Not Have Authorization To Engage This Vessel!"
				if Room.current.id != @helm
					start_script("go2", [@helm])
					wait_while { running?("go2") }
				end
				fput "turn wheel port"
				waitfor /The (.*) drifts steadily toward the (.*) port/
				UserVars.osacrew["boarding"] = false
				start_script("osacommander", ['underway'])
			end
		end
	when /You notice (.*) approaching your position/
		UserVars.osacrew["enemyship"] = $1
		if (UserVars.osacrew["piratehunter"] && !UserVars.osacrew["boarding"])
			if $1.include? "ethereal"
				UserVars.osacrew["enemy_type"] = "undead"
			end
			if $1.include? "krolvin"
				UserVars.osacrew["enemy_type"] = "krolvin"
			end
			if $1.include? "dark"
				UserVars.osacrew["enemy_type"] = "pirate"
			end
			determine_enemy_ship_type
			ship_type
			if Room.current.id != @helm
				start_script("go2", [@helm])
				wait_while { running?("go2") }
			end
			wait_while {GameObj.pcs.any? {|s| s.status =~ /sitting|^lying|prone|stunned/}}
			determine_to_engage
			if UserVars.osacrew["engage"]
				crew_vessel_messaging
				start_script("osacommander", ['start'])
			else
				do_client ";chat on #{UserVars.osacrew["crew"]} Crew, We Do Not Have Authorization To Engage This Vessel!"
				if Room.current.id != @helm
					start_script("go2", [@helm])
					wait_while { running?("go2") }
				end
				fput "turn wheel port"
				waitfor /The (.*) drifts steadily toward the (.*) port/
				UserVars.osacrew["boarding"] = false
				start_script("osacommander", ['underway'])
			end
		end
	when /Curses and insults rise above the crashing waters below as the (.*) continues to give chase./
		if (UserVars.osacrew["piratehunter"])
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /The (.*) matches your (.*) pace as it looms within range./
		if (UserVars.osacrew["piratehunter"])
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /Cresting waves rapidly, the (.*) continues to chase your (.*)/
		if (UserVars.osacrew["piratehunter"])	
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /The sails of the (.*) rapidly shift from port to starboard as the (.*) does not relent in its attempt to overcome your (.*)!/
		if (UserVars.osacrew["piratehunter"])	
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /Barks of rage can be heard from the (.*) as it continues to give chase./
		if (UserVars.osacrew["piratehunter"])
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /Hollow sounding moans erupt from the (.*) as it continues to give chase./
		if (UserVars.osacrew["piratehunter"])
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /Sails billowing, the (.*) continues to chase your (.*)/
		if (UserVars.osacrew["piratehunter"])
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (LOOK OCEAN to Engage) *
			"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Thirty second warning, drop what yer doing and prepare for battle. Here they come!"/
		@thirty = true
	when /The sides of the (.*) collide against your (.*)/
		@boarded = true
	when /A stiff breeze begins to swirl around (.*)./
		if checkpcs.include?($1) or ($1 == "you")
			UserVars.osacrew["badtempest"] = false
		else
			UserVars.osacrew["badtempest"] = true
		end
	when /You cast into the air above you and the sky rips open into a void/
		UserVars.osacrew["badvoid"] = false
	when /(.*) casts into the air above his head and a rip appears in the sky!/
		if checkpcs.include?($1)
			UserVars.osacrew["badvoid"] = false
		else
			UserVars.osacrew["badvoid"] = true
		end
	when /A thick cloud of wisps gathers around (.*) and quickly spreads to cover much of the surrounding area./
		if checkpcs.include?($1) or ($1 == "you")
			UserVars.osacrew["badweb"] = false
		else
			UserVars.osacrew["badweb"] = true
		end
	when /^\[Private\]-GSIV:(.*)\: \"Captain\, I\'ve Been Injured and Will Return Shortly\"/
		if checkname == UserVars.osacrew["commander"] 
			if running? "osacombat"
				pause_script "osacombat"
			end
			if running? "osacombat"
				pause_script "osacommander"
			end
			@crew_being_healed = $1
			LNet.send_message(attr = { 'type' => 'private', 'to' => @crew_being_healed }, "Ok Crewman, We Are At #{Room.current.id} And Will Await Your Arrival")
			wait_until {checkpcs.include?(@crew_being_healed)}
			fput "hold #{@crew_being_healed}"
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"The Ship Is Now Moored In (.*) Room Number: (.*) \[(.*)\"/
		if !UserVars.osacrew["gangplank"].nil? 
			Room[UserVars.osacrew["gangplank"]].tags.delete("myship") if Room[UserVars.osacrew["gangplank"]].tags.include? "myship"
		end
		UserVars.osacrew["gangplank"] = $2
		Room[UserVars.osacrew["gangplank"]].tags.push("myship") if !Room[UserVars.osacrew["gangplank"]].tags.include? "myship"
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Update!\"/
		if (checkname != "Bait") or (checkname != "Subeta") or (checkname != "Ithloria") or (checkname != "Carolanne")
			start_script("repository", ["download", "osacrew"])
			wait_while { running?("repository") }
			start_script("repository", ["download", "osacombat"])
			wait_while { running?("repository") }
			start_script("repository", ["download", "osacommander"])
			wait_while { running?("repository") }
		end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"Spell Up Completed"/
		if Feat.known?("Kroderine Soul")
			pause 0.5
			fput "join #{UserVars.osacrew["commander"]}"
		end
	#when /Suddenly you have the strangest feeling that you are being watched/
	#	if Spell[116].available?
	#		Spell[116].cast
	#	end
	when /^\[#{UserVars.osacrew["crew"]}\]-GSIV:#{UserVars.osacrew["commander"]}\: \"(.*), Punish Yourself!\"/
		if $1 == checkname
			do_client ";chat on #{UserVars.osacrew["crew"]} I Am Sorry Commander! I Will Strive To Be a Better Sailor! Please Forgive Me!"
			multifput "slap #{checkname}", "slap #{checkname}", "cry", "pose #{checkname}"
		end
	end
end