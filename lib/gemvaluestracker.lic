# gemvaluestracker.lic
=begin

This script will run in the background, when you appraise a gem, it will add the gem name and value to an array, then create an average over time.

It is currently set to work in the Hinterwilds but I will add other towns as I get the appraise messaging.

=end

#This is a test!

no_pause_all
no_kill_all

module Gemvaluetracker

  gem_value = 0

  def self.main
    # Global hash to store gem data
    # Format: { "gem name" => { count: 1, total: 1000, average: 1000 } }
    $gem_prices ||= {}

    # Pattern to match gemcutter offer lines
    gem_offer_pattern = /The gemcutter takes the (.*?) and inspects it carefully.*?give you ([\d,]+) silvers/

    # Watch lines from the game and register the gem and value
    while (line = get)
      case line
      when gem_offer_pattern
        gem_name = $1.strip
        gem_value1 = "#{$+.split.last.gsub(',', '')}"
        gem_value = gem_value1.to_i

        # Initialize or update the gem data
        if $gem_prices.key?(gem_name)
          $gem_prices[gem_name][:count] += 1
          $gem_prices[gem_name][:total] += gem_value
#          echo $gem_price[gem_name][:total]
        else
          $gem_prices[gem_name] = { count: 1, total: gem_value }
        end

        # Update average
#        echo $gem_prices[gem_name][:total]
#        echo $gem_prices[gem_name][:count]
        $gem_prices[gem_name][:average].round = ($gem_prices[gem_name][:total].to_f / $gem_prices[gem_name][:count].round)

        echo "[gemvaluestracker: *** Saved value: #{gem_name} => #{gem_value} silvers]"
        echo "[gemvaluestracker: Seen #{$gem_prices[gem_name][:count]}x | Average: #{$gem_prices[gem_name][:average].round} silvers]"
      end
    end
  end

end #End of module


if script.vars[1] =~ /reset/
  $gem_prices = {}
  echo "[gemvaluestracker: Gem prices cache reset.]"
  Vars.delete('reset_gem_prices')
elsif script.vars[1] =~ /list/
  echo $gem_prices.inspect
else
  Gemvaluetracker::main
end

# To see all saved gem data:
# echo $gem_prices.inspect
