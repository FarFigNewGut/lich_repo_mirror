module Giftbox
  module Outcomes
    Err = Regexp.union(
      %r[GIFTBOX isn't active right now.],
      %r[Sorry, you have already received a GIFTBOX on this account with])
    Ok  = %r[You glance down and notice]
    All = Regexp.union(Err, Ok)
  end

  def self.assert(msg: nil, timeout: 5)
    ttl = Time.now + timeout
    wait_until {yield or Time.now > ttl}
    fail(msg || "could not perform action after #{timeout}s") if Time.now > ttl
  end

  def self.main()
    empty_hands
    self.assert { Char.right.nil? and Char.left.nil? }
    result = dothistimeout "giftbox confirm", 5, Outcomes::All
    fail "no giftbox" if result =~ Outcomes::Err
    self.assert {not Char.right.nil?}
    fput "open #%s" % Char.right.id
    fput "look in #%s" % Char.right.id
    self.assert {Char.right.contents}
    Containers.lootsack.add(*Containers.right_hand)
    2.times { fput "toss #%s" % Char.right.id }
  end

  self.main()
end