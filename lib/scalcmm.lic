##quiet
## vim: set ft=ruby:
=begin

    SCalcMM by SpiffyJr (spiffyjr@gmail.com)
    
     author: spiffyjr
      email: theman@spiffyjr.me
       name: SCalcMM
       tags: mechanics
    version: 1.0

=end

CharSettings['attacks'] ||= Hash.new

message = proc { |msg|
    echo '-- ' + msg
}

report = proc { |stance|
    message.call('report')
    CharSettings['attacks'].each { |attack_stance, data|
        next if not stance.nil? and attack_stance != stance
        message.call(sprintf('stance: %s, min: %d, max: %d, average: %d, swings: %d', stance, data.min, data.max, data.inject{ |sum, el| sum + el }.to_f / data.size, data.size))
    }
}

if script.vars[0] =~ /^clear/i
    CharSettings['attacks'] = Hash.new
    message.call('cleared')
elsif script.vars[0] =~ /^report/i
    message.call('report')
    report.call(nil)
    exit
end

status_tags
attacked = true

while line = get
    if line =~ /You attempt to (?:punch|grapple|jab|kick) <pushBold\/>(?:a|an) <a exist="(\d+)"/
        attacked = true
    elsif line =~ /Roundtime: \d+/
        attacked = false
    end
    
    if attacked and line =~ /UAF: -?\d+ vs UDF: \d+ = .* \* MM: (-?\d+) \+ d100:/
        stance = checkstance
        if CharSettings['attacks'][stance].nil?
            CharSettings['attacks'][stance] = Array.new
        end
        CharSettings['attacks'][stance].push($1.to_i)
        report.call(stance)
    end
end
