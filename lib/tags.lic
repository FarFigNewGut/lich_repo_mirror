=begin
  Automates adding/remove/listing Room tags

  *** for adding/removing tags with spaces in the name, you must use quotes ***
  
  usage:
    ;tags --add [tag1] [tag2]...[tagN]   adds a list of tags to the room
    ;tags --rm  [tag1] [tag2]...[tagN]   removes a list of tags from the room
    ;tags --sense                        attempt to use your survival skill to add missing herbs to a room
    ;tags --ls                           shows all current tags for the room
    ;tags --crawl <location>             crawl an area using survival sense
    ;tags --crawl current                crawl the current area using survival sense
  
  single tag operations:
    ;tags + [tag]                        add a single tag, no need to use quotes
    ;tags - [tag]                        remove a single tag, no need to use quotes
    
  
  Required: Lich 4.3.12
  Tags: tags
  Author: Ondreian


=end

module Tags
  vars = Script.current.vars[1..-1]
  type, *tags = vars

  ADD        = %{--add}
  REMOVE     = %{--rm}
  LIST       = %{--ls}
  SENSE      = %{--sense}
  CRAWL      = %{--crawl}
  ADD_ONE    = %{+}
  REMOVE_ONE = %{-}

  def self.log(*messages)
    messages.each do |msg|
      if msg.is_a?(Array)
        log(*msg)
      else
        _respond(%{<b>#{msg}</b>})
      end
    end
  end


  def self.list()
    Tags.uniq()
    _respond "<b>tags: #{Room.current.tags.join(", ")}</b>"
    :ok
  end

  def self.add(*tags)
    prev = Room.current.tags.clone

    tags.each do |tag|
      Room.current.tags << tag unless Room.current.tags.include?(tag)
    end

    added_tags = Room.current.tags - prev
    Tags.log(if added_tags.empty?
      %{no tags were added}
    else
      [%{[Tags.previous] #{prev.join(", ")}},
       %{[Tags.addded] #{added_tags.join(", ")}}
      ]
    end)
    :ok
  end

  def self.remove(*tags)
    tags.each do |tag|
      Room.current.tags.delete(tag)
    end
    :ok
  end

  def self.raise_not_enough_survival()
    raise Exception.new <<-ERROR
      you do not have enough survival for this
    ERROR
  end

  def self.crawl(location)
    raise_not_enough_survival() if Skills.survival < 25
    location = Room.current.location if location.eql?(%{current})
    anchor = Room.current.id
    rooms = Map.list.select do |room| room.location.eql?(location) end
    raise "no rooms found for #{location}" if rooms.empty?
    Tags.log %{going to crawl #{rooms.size} rooms in 5 seconds}
    sleep 5
    room_ids = rooms.map(&:id)
    until room_ids.empty?
      closest = Room.current.find_nearest(room_ids)
      room_ids.delete(closest)
      Script.run("go2", closest.to_s)
      Tags.add(*Tags.sense())
    end
    Script.run("go2", anchor)
  end

  def self.parse_sense(line)
    return [] if line.eql?(%{Glancing about, you doubt that anything interesting could be foraged here.})

    line
      .gsub("Glancing about, you notice the immediate area should support specimens of ", "")
      .gsub(", and ", ", ")
      .gsub(".", "")
      .split(", ")
  end

  def self.sense()
    raise_not_enough_survival() if Skills.survival < 25
    fput "forage sense"
    while line=get
      if line=~ %r{^Glancing about}
        return parse_sense(line)
      end
    end
  end

  def self.uniq()
    Room.current.tags.uniq!
    :ok
  end

  case type
  when ADD
    Tags.add(*tags) && Tags.list()
  when REMOVE
    Tags.remove(*tags) && Tags.list()
  when LIST
    Tags.list()
  when ADD_ONE
    Tags.add(tags.join(" "))
  when REMOVE_ONE
    Tags.remove(tags.join(" ")) && Tags.list()
  when SENSE
    Tags.add(*Tags.sense())
  when CRAWL
    Tags.crawl(*tags.join(" "))
  else
    _respond <<-HELP
      usage:

        ;tags --add [tag1] [tag2]...[tagN]   adds a list of tags to the room
        ;tags --rm  [tag1] [tag2]...[tagN]   removes a list of tags from the room
        ;tags --sense                        attempt to use your survival skill to add missing herbs to a room
        ;tags --ls                           shows all current tags for the room
        ;tags --crawl <location>             crawl an area using survival sense
        ;tags --crawl current                crawl the immediate area using survival sense
      
      single tag operations:
        ;tags + [tag]                        add a single tag, no need to use quotes
        ;tags - [tag]                        remove a single tag, no need to use quotes

      <b>for --add/--rm operations with spaces in the name, you must use quotes</b>

      <b>;tags --add "small tomato" "onion skin"</b>
      <b>;tags --rm "small tomato" "onion skin"</b>
    HELP
  end
end
