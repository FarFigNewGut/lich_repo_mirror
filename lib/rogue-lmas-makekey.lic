=begin
Makes keys for your lock assemblies
Hold a lock assembly in your right hand

;rogue-lmas-makekey

=end

if GameObj.right_hand.name !~ /assembly/
    echo "Please hold a lock assembly in your right hand."
    exit
end

left_hand = GameObj.left_hand.id

unless left_hand.nil?
    fput "stow left"
end

fput "gld"
waitfor "Lock Mastery skill"
result = waitfor "The Training Administrator told you to cut keys", "visit a master footpad", "repetitions remaining"
#The Training Administrator told you to visit a master footpad for a talk
#echo "RESULT: #{result}"

turnin_to_footpad = result =~ /visit a master footpad/
result = waitfor "remaining to complete this task"
result =~ /You have (\d+) repetition/
n = $1.to_i

echo "Making #{n} keys."
echo "Will discard keys as they are made."
echo "Starting in 3..."
sleep 4

RogueStoreRooms = [17821,17880,16421,17970,17992,17935] #illistim - change if you're somewhere else!
RogueFootpadRooms = [17965, 16540, 17951, 17419, 17864]
RogueWorkshopRooms = [ 17978,16574,17960,17881 ]

KeyBlankOrder = 25

def go(dest)
    start_script "go2", [dest]
    wait_while { running? "go2" }
end
def goNearest(destArr)
    go(Room.current.find_nearest(destArr))
end

go("bank")

fput "withdraw #{300 * n} silver"

goNearest(RogueWorkshopRooms)
fput "go toolbench"

n.times {
    fput "order #{KeyBlankOrder}"
    fput "buy"
    fput "lmas cut"
    
    sleep 1
    waitrt?

    fput "drop key"
}

fput "stow assembly"
fput "out"