=begin

	This script creates a window that shows information about you and your group members. It will show things like status condition (stunned, sleeping, bleeding, cutthroat, etc), hard RT, mind percent filled, how many more kills needed for current culling/bandit task, and more!
	
	This script accomplishes this via group whisper s, so this script will work for any group, whether you're grouped with your own characters or other players. Most features of the script requires those in your party to be running this script as well.
	
	The script will squelch the whispers so you won't even notice it's running, other than the window being updated of course.
	
	If you wish to just provide information to your group and squelch the whispers but don't want to see the window, start script like this:
	;party-buddy no

	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Version 1: Initial release!
	
	Author: Dreaven
	Version: 1

=end

require 'gtk3'
require 'yaml'

silence_me

class PartyBuddyMain
	silence = proc{
		action = proc { |string|
			if strip_xml(string) =~ /\(OOC\) You whisper, "(Roundtime|Mind|Health|Bounty|Bleeding)\: .*\.\" to your group\.|\(OOC\) (.*?)\'s player whispers to the group, \"Cutthroat removed\.\"|\(OOC\) (.*?)\'s player whispers to the group, \"(Roundtime|Mind|Health|Bounty|Bleeding)\: .*\.\"|But you are not part of a group.|You can't whisper to a group while dead./
				nil
			else
				string
			end
		}
		DownstreamHook.add("party_buddy_silence", action)
	}
	
	silence.call

	CONFIG_FILE = 'party-buddy.yml'
	@everyones_status = {}
	@status_labels = {}
	
	@tooltip = "Person's name: Self-explanatory. The group leader's name will be in green text.\n\nRT: How much hard RT the person is in.\n\nStatus: The person's current status. Serious conditions will be in red text, less serious conditions will be in black text, if the person doesn't suffer from any status conditions then \"GOOD\" will appear in green text.\n\nMind: How full percent wise the person's mind currently is.\n\nHealth: Shows the person's percent health remaining as well as the highest wound\\scar rank they currently have.\n\nKills Remaining: How many more kills needed for their current culling or bandit task."

	def self.create_window
		@main_window = Gtk::Window.new(:toplevel)
		@main_window.set_keep_above(true)
		@main_window.set_title("Party Buddy")
		
		load_position
		
		@parent_grid = Gtk::Grid.new
		
		@main_window.signal_connect("delete-event") do
			save_position
			false
		end
		
		@main_window.signal_connect("destroy") do
			@main_window.close
			@main_window = nil
			Gtk.main_quit
			kill_script "party-buddy" if running? "party-buddy"
		end
		
		@main_window.add(@parent_grid)
		
		@main_window.show_all
	end
	
	def self.new_group
		@group_members.each{ |name|
			if @everyones_status[name].nil?
				@everyones_status[name] = {}
				@everyones_status[name]["Round Time"] = 0
				@everyones_status[name]["Status"] = "GOOD"
				@everyones_status[name]["Jaws Trap"] = "NO"
				@everyones_status[name]["Bleeding"] = "NO"
				@everyones_status[name]["Cutthroat"] = "NO"
				@everyones_status[name]["Mind Status"] = 0
				@everyones_status[name]["Health Status"] = ""
				@everyones_status[name]["Bounty Status"] = 0
				@status_labels[name] = Gtk::Label.new("#{name}:\nRT: #{@everyones_status[name]["Round Time"]}\nStatus: #{@everyones_status[name]["Status"]}\nMind: #{@everyones_status[name]["Mind Status"]}%\nHealth: #{@everyones_status[name]["Health Status"]}\nKills Remaining: #{@everyones_status[name]["Bounty Status"]}\n")
				@status_labels[name].set_tooltip_text(@tooltip)
			end
		}
		@parent_grid.each { |child| @parent_grid.remove(child) }
		number = 0
		row = 0
		column = -1
		@status_labels.each{ |name,label|
			@parent_grid.attach(label, column += 1, row, 1, 1)
			number += 1
			@parent_grid.attach(Gtk::Label.new("          "), column += 1, row, 1, 1)
			if number >= 5
				row += 1
				column = -1
				number = 0
			end
		}
		@main_window.show_all
	end
	
	def self.update_person_label(name)
		@everyones_status[name]["Status"] = "prone" if @everyones_status[name]["Status"] =~ /sit|kneel|lying/i

		if @everyones_status[name]["Cutthroat"] == "YES"
			if @everyones_status[name]["Status"] != "GOOD" && @everyones_status[name]["Status"] !~ /dead/
				@everyones_status[name]["Status"] += ", cutthroat"
			elsif @everyones_status[name]["Status"] == "GOOD"
				@everyones_status[name]["Status"] = "cutthroat"
			end
		elsif @everyones_status[name]["Bleeding"] == "YES"
			if @everyones_status[name]["Status"] != "GOOD" && @everyones_status[name]["Status"] !~ /dead/
				@everyones_status[name]["Status"] += ", bleeding"
			elsif @everyones_status[name]["Status"] == "GOOD"
				@everyones_status[name]["Status"] = "bleeding"
			end
		elsif @everyones_status[name]["Jaws Trap"] == "YES"
			if @everyones_status[name]["Status"] != "GOOD" && @everyones_status[name]["Status"] !~ /dead/
				@everyones_status[name]["Status"] += ", jaws trap"
			elsif @everyones_status[name]["Status"] == "GOOD"
				@everyones_status[name]["Status"] = "jaws trap"
			end
		end
		
		if @everyones_status[name]["Status"] =~ /DEAD|Cutthroat|Stunned|Bound|Webbed|Bleeding/i
			status_color = "red"
		elsif @everyones_status[name]["Status"] == "GOOD"
			status_color = "green"
		else
			status_color = "black"
		end
		
		if @group_leader == name
			name_color = "green"
		else
			name_color = "black"
		end
		
		text = "<span foreground='#{name_color}'>#{name}</span>:\nRT: #{@everyones_status[name]["Round Time"]}\nStatus: <span foreground='#{status_color}'>#{@everyones_status[name]["Status"]}</span>\nMind: #{@everyones_status[name]["Mind Status"]}%\nHealth: #{@everyones_status[name]["Health Status"]}\nKills Remaining: #{@everyones_status[name]["Bounty Status"]}\n"
		@status_labels[name].set_markup(text)
	end
	
	def self.remove_person(name)
		@everyones_status.delete(name)
		@status_labels.delete(name)
		@group_members.delete(name)
		new_group
	end
	
	def self.no_more_group
		@everyones_status = {}
		@status_labels = {}
		@group_members = []
		@group_members.push(checkname)
		@group_leader = checkname
		new_group
	end

	def self.watching
		before_dying{
			DownstreamHook.remove("party_buddy_silence")
			@main_window.close if @main_window
		}
		
		@percent_health = 0
		@highest_wound_rank = -1
		
		Thread.new{
			loop{
				wait_until{ checkrt > 0 }
				rt = checkrt.ceil
				put "whisper ooc group Roundtime: #{rt} seconds."
				sleep rt
			}
		}
		
		Thread.new{
			sleep 2
			@my_mind_status = percentmind
			put "whisper ooc group Mind: #{percentmind}."
			loop{
				wait_until{ percentmind != @my_mind_status }
				@my_mind_status = percentmind
				put "whisper ooc group Mind: #{percentmind}."
			}
		}
		
		Thread.new{
			loop{
				if bleeding? && @everyones_status[checkname]["Bleeding"] == "NO"
					@everyones_status[checkname]["Bleeding"] = "YES"
					put "whisper ooc group Bleeding: #{@everyones_status[checkname]["Bleeding"]}."
				elsif !bleeding? && @everyones_status[checkname]["Bleeding"] == "YES"
					@everyones_status[checkname]["Bleeding"] = "NO"
					put "whisper ooc group Bleeding: #{@everyones_status[checkname]["Bleeding"]}."
				end
				sleep 2
			}
		}
		
		Thread.new{
			sleep 2
			loop{
				all_wounds = [ Wounds.head, Wounds.neck, Wounds.abs, Wounds.lhand, Wounds.rhand, Wounds.larm, Wounds.rarm, Wounds.chest, Wounds.back, Wounds.rleg, Wounds.lleg, Wounds.nerves, Wounds.leye, Wounds.reye, Scars.head, Scars.neck, Scars.abs, Scars.lhand, Scars.rhand, Scars.larm, Scars.rarm, Scars.chest, Scars.back, Scars.rleg, Scars.lleg, Scars.nerves, Scars.leye, Scars.reye ]
				highest_rank = 0
				all_wounds.each{ |rank| highest_rank = rank if rank > highest_rank }
				if @percent_health != percenthealth || @highest_wound_rank != highest_rank
					@percent_health = percenthealth
					@highest_wound_rank = highest_rank
					put "whisper ooc group Health: #{percenthealth}%, Wound: #{@highest_wound_rank}."
				end
				sleep 1
			}
		}
		
		if @main_window
			Thread.new{
				loop{
					@everyones_status.each{ |name,value|
						if name != checkname
							if @everyones_status[name]["Round Time"].is_a?(Integer) && @everyones_status[name]["Round Time"] > 0
								@everyones_status[name]["Round Time"] -= 1
							end
							person = GameObj.pcs.find{ |pc| pc.noun == name }
							@everyones_status[name]["Status"] = person.status
							@everyones_status[name]["Status"] = "GOOD" if person.status.nil?
							update_person_label(name)
						end
					}
					
					@everyones_status[checkname]["Round Time"] = checkrt.ceil
					
					if dead?
						@everyones_status[checkname]["Status"] = "DEAD"
					elsif stunned?
						@everyones_status[checkname]["Status"] = "stunned"
					elsif bound?
						@everyones_status[checkname]["Status"] = "bound"
					elsif webbed?
						@everyones_status[checkname]["Status"] = "webbed"
					elsif !standing?
						@everyones_status[checkname]["Status"] = "prone"
					elsif sleeping?
						@everyones_status[checkname]["Status"] = "sleeping"
					elsif silenced?
						@everyones_status[checkname]["Status"] = "silenced"
					elsif calmed?
						@everyones_status[checkname]["Status"] = "calmed"
					else
						@everyones_status[checkname]["Status"] = "GOOD"
					end
					update_person_label(checkname)
					
					@main_window.resize(10, 10)
					
					sleep 1
				}
			}
		end
		
		if @main_window
			put "group"
			while line = get		
				#Group Info Start
				if line =~ /^You are leading / || line =~ /^You are grouped with ([a-zA-Z]+) who is leading/ || line =~ /You are not currently in a group./
					@group_leader = $1
					@group_leader = checkname if line =~ /You are leading|You are not currently in a group./

					if line !~ /You are not currently in a group./
						group = line.gsub(/You are grouped with ([a-zA-Z]+) who is leading|You are leading |\.|,| and| who is invisible| who is hidden/, "")
						group = group.split(" ")
					end
					@group_members = []
					@group_members.push(checkname)
					@group_members.push(@group_leader) if checkname != @group_leader
					group.each{ |name| @group_members.push(name) }
					new_group
				elsif line =~ /^You clasp ([a-zA-Z]+)'s hand tenderly./ || line =~ /^You add ([a-zA-Z]+) to your group./ || line =~ /([a-zA-Z]+) joins your group./
					name = $1
					@group_members.push(name)
					new_group
				elsif line =~ /^You remove ([a-zA-Z]+) from the group./ || line =~ /^([a-zA-Z]+) leaves your group./
					name = $1
					remove_person(name)
				elsif line =~ /^[a-zA-Z]+ clasps your hand tenderly./ || line =~ /^[a-zA-Z]+ adds you to [a-zA-Z]+ group./ || line =~ /^You join [a-zA-Z]+./
					put "group"
				elsif line =~ /^[a-zA-Z]+ removes you from [a-zA-Z]+ group./ || line =~ /^You disband your group./ || line =~ /^You leave [a-zA-Z]+\'s group./
					no_more_group
				elsif line =~ /^([a-zA-Z]+) removes ([a-zA-Z]+) from the group./
					name = $2
					remove_person(name) if @group_leader == $1
				elsif line =~ /^([a-zA-Z]+) joins ([a-zA-Z]+)'s group./
					name = $1
					if @group_leader == $2
						@group_members.push(name)
						new_group
					end
				elsif line =~ /^([a-zA-Z]+) disbands [a-zA-Z]+ group./
					no_more_group if @group_leader == $1
				elsif line =~ /^([a-zA-Z]+) clasps ([a-zA-Z]+)'s hand tenderly./ || line =~ /^([a-zA-Z]+) adds ([a-zA-Z]+) to [a-zA-Z]+ group./
					name = $2
					if @group_leader == $1
						@group_members.push(name)
						new_group
					end
				elsif line =~ /^[a-zA-Z]+ designates you as the new leader of the group./
					@group_leader = checkname
				elsif line =~ /^[a-zA-Z]+ designates ([a-zA-Z]+) as the new leader of the group./ || line =~ /^You designate ([a-zA-Z]+) as the new leader of the group./
					name = $1
					@group_leader = name
				#Group Info End
				elsif line =~ /\(OOC\) (You) whisper, "Roundtime: (\d+) seconds\.\" to your group\./ || line =~ /\(OOC\) (.*?)\'s player whispers to the group, \"Roundtime\: (\d+) seconds\.\"/
					name = $1
					rt_seconds = $2.to_i
					name = checkname if name == "You"
					@everyones_status[name]["Round Time"] = rt_seconds
					update_person_label(name)
				elsif line =~ /\(OOC\) (You) whisper, \"Mind\: (.*?)\.\" to your group\./ || line =~ /\(OOC\) (.*?)\'s player whispers to the group, \"Mind\: (.*?)\.\"/
					name = $1
					mind_status = $2
					name = checkname if name == "You"
					@everyones_status[name]["Mind Status"] = mind_status
					update_person_label(name)
				elsif line =~ /\(OOC\) (You) whisper, \"Health\: (\d+)\%, Wound: (\d+)\.\" to your group\./ || line =~ /\(OOC\) (.*?)\'s player whispers to the group, \"Health\: (\d+)\%, Wound: (\d+)\.\"/
					name = $1
					health_percent = $2
					wound_rank = $3
					name = checkname if name == "You"
					@everyones_status[name]["Health Status"] = "#{health_percent}%, R#{wound_rank}"
					update_person_label(name)
				elsif line =~ /slices deep into (.*?)\'s vocal cords!/ || line =~ /^(.*?) tries to say something but only managed to cough up some blood./
					name = $1
					@everyones_status[name]["Cutthroat"] = "YES" if @everyones_status[name]
				elsif line =~ /slices deep into your vocal cords!/ || line =~ /All you manage to do is cough up some blood./
					@everyones_status[checkname]["Cutthroat"] = "YES"
				elsif line =~ /The horrible pain in your vocal cords subsides as you spit out the last of the blood clogging your throat./
					put "whisper ooc group Cutthroat removed."
					@everyones_status[checkname]["Cutthroat"] = "NO"
				elsif line =~ /\(OOC\) (.*?)\'s player whispers to the group, \"Cutthroat removed\.\"/
					name = $1
					@everyones_status[name]["Cutthroat"] = "NO"
				elsif line =~ /Suddenly\, your hear a loud \*clink\* as you notice a large pair of carefully concealed metal jaws slam shut on (.*?)\'s .*? leg\!/
					name = $1
					@everyones_status[name]["Jaws Trap"] = "YES" if @everyones_status[name]
				elsif line =~ /The metal jaws restraining (.*?)\'s movement snap apart\./
					name = $1
					@everyones_status[name]["Jaws Trap"] = "NO" if @everyones_status[name]
				elsif line =~ /Suddenly\, you hear a loud \*clink\* as a large pair of carefully concealed metal jaws slam shut on your .* leg\!|You don\'t seem to be able to move your legs to do that\./
					name = checkname
					@everyones_status[name]["Jaws Trap"] = "YES" if @everyones_status[name]
				elsif line =~ /The metal jaws restraining your movement snap apart\./
					name = checkname
					@everyones_status[name]["Jaws Trap"] = "NO" if @everyones_status[name]
				elsif line =~ /\[You have (\d+) kills remaining\.\]/ || line =~ /You need to kill (\d+).*of them to complete your task\./ || line =~ /Ah, so you're from the Adventurer's Guild.*Killing (\d+) of them should do nicely./
					put "whisper ooc group Bounty: #{$1} more."
				elsif line =~ /\[You have completed this portion of your Adventurer's Guild task.\]/
					put "whisper ooc group Bounty: 0 more."
				elsif line =~ /\(OOC\) (You) whisper, \"Bounty: (\d+) more\.\" to your group\./ || line =~ /\(OOC\) (.*?)\'s player whispers to the group, \"Bounty: (\d+) more\.\"/
					name = $1
					number = $2
					name = checkname if name == "You"
					@everyones_status[name]["Bounty Status"] = number
				elsif line =~ /\(OOC\) (You) whisper, \"Bleeding\: (.*?)\.\" to your group\./ || line =~ /\(OOC\) (.*?)\'s player whispers to the group, \"Bleeding: (.*?)\.\"/
					name = $1
					bleeding = $2
					name = checkname if name == "You"
					@everyones_status[name]["Bleeding"] = bleeding
				end
			end
		else
			while line = get
				if line =~ /The horrible pain in your vocal cords subsides as you spit out the last of the blood clogging your throat./
					put "whisper ooc group Cutthroat removed."
				elsif line =~ /\[You have (\d+) kills remaining\.\]/ || line =~ /You need to kill (\d+).*of them to complete your task\./
					put "whisper ooc group Bounty: #{$1} more."
				end
			end
		end
	end
	
	private

	def self.load_position
		return unless File.exist?(CONFIG_FILE)

		config = YAML.load_file(CONFIG_FILE)
		if config.is_a?(Hash) && config.key?(checkname) && config[checkname].key?("Window Position") && config[checkname]["Window Position"].is_a?(Array) && config[checkname]["Window Position"].size == 2
			x, y = config[checkname]["Window Position"]
			@original_position = x, y
			@main_window.move(x, y)
		end
	rescue StandardError => e
		puts "Error loading window position: #{e.message}"
	end

	def self.save_position
		current_position = @main_window.position
		return if current_position == @original_position
		config = File.exist?(CONFIG_FILE) ? YAML.load_file(CONFIG_FILE) : {}
		config[checkname] = { "Window Position" => @main_window.position }
		File.write(CONFIG_FILE, config.to_yaml)
	rescue StandardError => e
		puts "Error saving window position: #{e.message}"
	end
end

Gtk.queue {
	PartyBuddyMain.create_window if script.vars[1] != "no"	
	Gtk.main
}

respond "########################################"
respond "Message from ;party-buddy"
respond "If you don't want to see the window but still want to send information to your group (so it updates your information on their windows), start script as: ;party-buddy no"
respond "########################################"
sleep 1
PartyBuddyMain.watching