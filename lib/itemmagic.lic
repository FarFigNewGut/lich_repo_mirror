=begin

Helps you use your magic items.

******* IMPORTANT **********
You must teach this script about your items!
Open the script file and edit the first variable.

You can enter your entire collection of magic items, across characters.
The script will search for them on the current character.
So you can use this same script for all of your characters.

You need to specify a sack where you hold your CHARGED MAGIC ITEMS:
This is different than the "magicsack" variable used by sloot.
It can be set to the same sack, if you do not intend to ever charge the items.

    ;vars set chargedsack=<sack>    #sack where you store your charged magical items

****************************

;itemmagic                      - will created a numbered list of all the magic items in your charged item sack
;itemmagic <number>             - will attempt to use the numbered item

****************************

BETA VERSION:  NOT ALL ITEMS OR VERBS SUPPORTED-

Will wear the item if it's jewelry.
Will RUB the item by default, or RAISE the item if it's a rod or stick.

If you've got an item with a custom activation verb, set the :activate variable in its entry.
=end

# RECORD YOUR MAGICAL ITEMS HERE
MagicItems = {
    "golden topaz sunburst symbol" => { :spell => 606, :rechargeable => true },
    "onyx-inlaid platinum crown" => { :spell => 215, :rechargeable => true }, 
    "square-cut star sapphire talisman" => { :spell => 211, :rechargeable => true },
    "soulstone studded silver talisman" => { :spell => 613, :rechargeable => true },
    "beryl-inset pewter pin" => { :spell => 712, :rechargeable => true },
    "pewter and ruby necklace" => { :spell => 712, :rechargeable => true },
    "trilliant-cut golden topaz necklace" => { :spell => 913, :empowerable => true },
    "fine copper orb" => { :spell => 506, :empowerable => true },
    "platinum gladiator figurine" => { :spell => 1711, :empowerable => true },
    "burnished gold orb" => { :spell => 117, :empowerable => true },
    #"magic button" => { :spell => 101, :activate => "tap" }
}

StandardMagicItems = {
    "small statue" => { :spell => 1712, :rechargeable => true },
    "heavy quartz orb" => { :spell => 1711, :rechargeable => true },
    "ruby amulet" => { :spell => 140, :rechargeable => true },
    "small moonstone cube" => { :spell => 1705, :rechargeable => false },
    "heavy moonstone cube" => { :spell => 1705, :rechargeable => true },
    "dull gold coin" => { :spell => 1701, :rechargeable => true }
}

# these are the ones I know about or are applicable to me
# feel free to add to this list
SpellNotes = {
    215 => "+25 AS",
    211 => "+15 AS",
    509 => "+15 STR",
    606 => "+10 STR",
    613 => "+20 DS, +20 TD",
    712 => "+25 DS, +20 TD",
    913 => "+10 DS, +20 eTD",
    1711 => "+10 CS",
    1712 => "+25 DS",
    117 => "+75 AS once",
    1705 => "+10 cman"
}

if UserVars.chargedsack.nil?
    echo "Please specify a sack where I can find your charged magical items."
    echo ";vars set chargedsack=<sack>"
    exit
end

if GameObj[UserVars.chargedsack].nil?
    echo "I could not find your #{UserVars.chargedsack}"
    exit
end

sack = GameObj[UserVars.chargedsack]
fput "look in ##{sack.id}" if sack.contents.nil?

magicitems = []
list = []

if script.vars[0].nil?
    $ItemMagicList = []
    $ItemActivator = {}
    currentNumber = 1

    #list
    sack.contents.each { |i|
        if MagicItems.keys.include?(i.name)
            mi = MagicItems[i.name]
            spell = mi[:spell]
            type = ""
            type = "rechargeable" if mi[:rechargeable]
            type = "empowerable" if mi[:empowerable]
            list.push(" #{currentNumber}) <a exist=\"#{i.id}\" noun=\"#{i.noun}\">#{i.name}</a>")
            list.push("        #{spell} #{Spell[spell].name} (#{SpellNotes[spell]}) ** #{type}")
            $ItemMagicList.push(i)
            $ItemActivator[i.id] = mi[:activate] unless mi[:activate].nil?
            currentNumber += 1
        end

        if StandardMagicItems.keys.include?(i.name)
            mi = StandardMagicItems[i.name]
            spell = mi[:spell]
            type = ""
            type = "rechargeable" if mi[:rechargeable]
            type = "empowerable" if mi[:empowerable]
            list.push(" #{currentNumber}) <a exist=\"#{i.id}\" noun=\"#{i.noun}\">#{i.name}</a>")
            list.push("        #{spell} #{Spell[spell].name} (#{SpellNotes[spell]}) ** #{type}")
            $ItemMagicList.push(i)
            currentNumber += 1
        end
    }

    

    pushonce = proc { |server_string|
        if server_string =~ /Please rephrase that command/
            server_string = list.join("\n") + "\n"
            DownstreamHook.remove('pushonce')
        end
        server_string
    }

    DownstreamHook.add('pushonce',pushonce)
    put " "
    sleep 1
    echo " You may use ;itemmagic <#> to use one of these items."

elsif script.vars[0] =~ /(\d+)/
    #specific spell
    itemnumber = $1.to_i
    item = $ItemMagicList[itemnumber-1]
    fput "get ##{item.id}"
    
    wearable = item.noun =~ /amulet|talisman|symbol|crown|pin|necklace/ || item.type =~ /jewelry/
    fput "wear ##{item.id}" if wearable

    verb = "rub"
    verb = $ItemActivator[item.id] unless $ItemActivator[item.id].nil?
    verb = "raise" if item.noun =~ /rod|stick/

    fput "#{verb} ##{item.id}"

    fput "remove ##{item.id}" if wearable
    fput "put ##{item.id} in ##{sack.id}"
end