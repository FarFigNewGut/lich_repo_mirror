=begin
Check how many points you have in clear English towards your bard permanent loresong points or how many points are required for any item you have just sung to.

It only informs you and translates from obscure messaging into actual information. It will not spend your points to permatize the loresong in an item. You'll have to type that in yourself.

    author: Luxelle
    game: Gemstone
    tags: bard, lkp, loresong, permanent, murderverse, kill points, points, utility, translate, recall, lore knowledge point, knowledge, point
    version: 1.2 (never use a version that ends in 0)
    Note: Thanks to Mister Nodyre for the really descriptive name of this ability which requires up to 750 kills per point
    Usage: ;murderverses
           ;murderverses help

    Version Notes:
     1.3 ... Gives you your status for the week even when loresong needs to be re-sung
             Added warning about 30 seconds on active item at end
     1.2 ... now with colored messaging results
     1.1 ... release
=end


############
# Setup
##################

    def self.bold(msg)
      _respond "<pushBold/>#{msg}<popBold/>"
    end


if script.vars[0] == "help"
  respond " "
  respond "BARDS ONLY: Use this script to determine how many points you currently have OR how many points will be required for an item. It'll also nag you if you need to be out there murdering things for another point."
  respond " "
  respond "The script will NOT make it permanent, only check it. You will need to issue the RECALL again to make it permanent yourself."
  respond " "
  respond "Usage: ;murderverses"
  respond "If you have something in your right hand, it will check to see how many points and how difficult it is. With an empty right hand, it will report on your number of points and if you need to be hunting for more."
  respond " "
  exit
end

points = 0
setexit = 0


############
# Start Here
##################

fput "recall"
	recall_status = matchtimeout(1, "(can't|yarn|treasures|secrets|heroes|repertoire|>)")
	case recall_status
	when /You can't/
		points = 0
	when /You remember a yarn/
		points = 1
	when /thoughts shift to tales of treasure/
		points = 2
	when /secrets of lost civilizations/
		points = 3
	when /Memories of the history of Elanthian heroes/
		points = 4
	when /filled with a vast repertoire of lore/
		points = 5
	end

#puts recall_status.inspect

	week_status = matchtimeout(1, "(exhausted|>)")
	case week_status
	when /You feel you have exhausted your inspiration/
		hunt = "are done hunting "
	else
		hunt = "need to get out there and hunt still for your point "
	end

#fput "glance"

if GameObj.right_hand.id.nil?

self.bold("** You have #{points} points to use for Loresong Unlocking.")
self.bold("** You #{hunt.rstrip!} this week.")


else

itemname = GameObj.right_hand.noun
fput "recall #{itemname}"
#fput "echo #{itemname}"
	chance_succeed = matchtimeout(2, "(reveal|unlucky|barring|odds|more|possible|very|impossible|miracle|beyond)")
	case chance_succeed
	when /You must reveal the entire/
		self.bold("** It's been too long, please loresing the #{itemname} again.")
		setexit = 1
	when /horribly unlucky/
		success = "99%, fails only on a fumble. Don't fumble, please!"
	when /barring bad luck/
		success = "90-98%"
	when /odds are on your side/
		success = "75-80%"
	when /more likely than not/
		success = "55-74%"
	when /difficult, but possible/
		success = "35-54%"
	when /will be very difficult/
		success = "15-34%"
	when /nearly impossible/
		success = "1-14%"
	when /need a miracle/
		success = "You need an open roll. Bring out the enhancives and prayers."
	when /completely beyond your abilities/
		success = "0%. Let someone know if enhancives or other things helped you get over the goose-egg!"
	end

if setexit == 1
	respond ""

self.bold("** You have #{points} points to use for Loresong Unlocking.")
self.bold("** You #{hunt.rstrip!} this week.")


	exit
end

	requires_status = matchtimeout(1, "(fair|substantial|generous|epic|vast)")
	case requires_status

	when /fair amount/
		item_points = 1
	when /substantial amount/
		item_points = 2
	when /generous amount/
		item_points = 3
	when /epic amount/
		item_points = 4
	when /vast amount/
		item_points = 5
	end


respond ""
self.bold("** You have #{points} points to use for Loresong Unlocking.")
self.bold("** You #{hunt.rstrip!} this week.")
self.bold("** The #{itemname} will require #{item_points} points.")
self.bold("The #{itemname} has the following chance of success: #{success}")
respond ""
respond "You will need to type in the confirming RECALL #{itemname.upcase} to make it permanent."
respond ""
respond "But be careful - the #{itemname} is on a 30 second timer right now."
respond "If you RECALL within that period, the permanent attempt will be made."
respond ""

end
