#version 4.3.1, A LOT less screen roll in this version. Still not perfect. Corrected a small error in unexpected search results. Taleph

# Your items will go in your "stow container"

# I'm still working on moving you away from the smaller areas (like the crawlspace) once the searching fails due to not enough time passing,
# but eventually the searches will work anyway.

#I set a 5 second timer when a new round is starting so you can stop the script at a convenient point if you so desire.

#I used Tgo01's "GameObj.room_desc.find" lines below. They could be simplified a bit, but what he has works.

# If you're a Mac user, and you mark this as a trusted script, you can set the "Mac" variable here to "1" and the script will talk to you at key points:

mac = 0

def search(jackpot)

	if jackpot == 1
				echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	end

	test = " "
	fput "search"
	test = matchtimeout 2, "You don't find anything", "confused as to where you are", "You search through the sundries", "You've recently searched", "You search through some sundries"
	words = test.split(' ')
	waitrt?
	if words [-1] == "inspection!"
		jackpot = 1
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "Jackpot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"	
		if mac == 1
			`say "Master! Master! We found something cool! Cool I say! Let's inspect it!"`
		end
	end

	if words[1] == "recently" and (checkroom =~ /Basement/ or checkroom =~ /Nursery/)
		start_script "go2", [25377]
		loop {
			pause 1
			if !(running? "go2")
				break
			end
		}
	end

	if words[1] == "recently" and checkroom =~ /Delirium Manor\, Attic Landing/
			fput "go trap"
	end

	if checkleft =~ /ticket/i
		fput "bundle"
	elsif
		if checkleft
			fput "stow left"
		end
	end
end	

def start (mac)
	if mac == 1
		`say "New round of searching"`
	end
	start_script "go2", [25356]
	loop {
	pause 1
	if !(running? "go2")
		break
	end
	}

	pause 5  #reduces the number of re-searches you might be faced with when you get back in
	fput "get my pass"	
	test = matchwait "You remove", "Get what", "invitational pass"
	words = test.split(' ')
	if words[1] == "what?"
		if mac == 1
			`say "Out of Passes Master!"`
		end
		echo "Out of Passes!"
		exit
	end

	move 'go door'
	fput "exam pass"
	if checkleft
		fput "stow left"
	end
end

jackpot = 0
direction = nil
random = nil
fput "stow all" 
fput "get my ticket"
start(mac)

loop{
	if checkleft =~ /ticket/i
		fput "bundle"
	else
		if checkleft
			fput "stow left"
		end
	end

	if checkroom =~ /Delirium Manor\, Side Porch/
		start(mac)
	end

	if checkroom =~ /Delirium Manor\, Front Porch/
		start(mac)
	end

	if checkroom =~ /Lawn/
		start(mac)
	end

	search(jackpot)
	waitrt?
	if GameObj.room_desc.find{ |i| i.name =~ /pantry|staircase/i;direction = i.name }
		random = rand(XMLData.room_exits.length + 1)
		if random == 0 && direction =~ /pantry|staircase/
			if direction =~ /pantry/
				move "go pantry"
			elsif direction =~ /staircase/
				move "climb staircase"
			end
		else
			move "#{XMLData.room_exits.at(rand(XMLData.room_exits.length))}"
		end
	else
		move "#{XMLData.room_exits.at(rand(XMLData.room_exits.length))}"
	end
}