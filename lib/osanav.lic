=begin
This will sail your ship from point A to point B and try to fix any encountered problems along the way.
This script is not intended to be used AFK in anyway.
You may start the script from anywhere in your ship and it will get you underway and navigate the journey for you.
Enjoy

~Peggyanne
PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
1/30/2021 Initial Release, Currently only supports Sloop.
2/6/2021 Updated some routes to avoid bugged ocean room. Updated course correction to account for changing course into land.
2/9/2021 Updated to Account for multiple masts.
2/17/2021 Fixed issue with ship not returning to course when sails furl.
2/18/2021 Script will automatically get you underway now. (Had a few requests for this)
3/02/2021 Minor Fix for being blown off course. Sorry if that affected anyone
3/03/2021 Fixed issue with crows nest and gave option for if ship is already outside the port.
3/06/2021 Added Support for stopping and fighting pirates along the way (Had a few requests for this)
3/06/2021 Also fixed major error with determining ship type.
4/10/2021 Updated to remove the need for LOOKing to detirming location.
=end

lower_sail = proc{
fput "lower sail"
while line = get
if line =~ /(.*)until it is at half mast(.)/
waitrt?
lower_sail.call
break
elsif line =~ /(.*)until it is fully open(.)/
waitrt?
break
elsif line =~ /The (.*)is already lowered as far as it can go!/
break
end
end
}

raise_anchor = proc{
fput "push capstan"
while line = get
if line =~ /(.*)and begin to push(!)/
waitrt?
raise_anchor.call
break
elsif line =~ /(.*)settles against the hull./
waitrt?
break
elsif line =~ /The anchor is already up(!)/
break
end
end
}

det_drift = proc{
	echo "Detirmining Corrective Course"
while line = get
if line =~ /The (.*) wheel slowly turns off course./
	@corrected = "None"
	break
elsif line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (\w+)/
  if $3 == @course
	break
  if $3 == "north"
    @corrected = "south"
	break
  elsif $3 == "south"
    @corrected = "north"
	break
  elsif $3 == "west"
    @corrected = "east"
	break
  elsif $3 == "east"
    @corrected = "west"
	break
  elsif $3 == "northeast"
    @corrected = "southwest"
	break
  elsif $3 == "northwest"
    @corrected = "southeast"
	break
  elsif $3 == "southwest"
    @corrected = "northeast"
	break
  elsif $3 == "southeast"
    @corrected = "northwest"
	break
	end
	end
	end
	end
}	

fix_wheel = proc{
if @corrected == "None"
fput "turn wheel #{@course}"
echo "Taking Corrective Course"
next
else fput "turn wheel #{@corrected}"
echo "Taking Corrective Course"
	while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
					waitrt?
					echo "Resuming Original Course"
					waitrt?
					break
		elsif line =~ /The sound of ropes coming free of the rigging (.*)/
					echo "The Sails Have Been Furled"
					fix_sails.call
					break
		elsif line =~ /A large swell crashes into the side of the (.*)/
					echo "Rogue Wave! Secure that Anchor!"
					fix_anchor.call
					break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
					respond "The Ship's Gone Off Course Captain!"
					det_drift.call
					echo "Corrective Course Detirmined"
					fix_wheel.call
					end
end
end
}
one_mast = proc{
fput "pull gangplank"
lower_sail.call
echo "Main Mast Unfurled, She's Ready to Sail Captain!"
move "west"
echo "Raising Anchor"
raise_anchor.call
fput "yell Anchor's Aweigh!"
fput "yell Underway"
while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
					waitrt?
					echo "Resuming Original Course"
					break
		elsif line =~ /The sound of ropes coming free of the rigging (.*)/
					echo "The Sails Have Been Furled"
					fix_sails.call
					break
		elsif line =~ /A large swell crashes into the side of the (.*)/
					echo "Rogue Wave! Secure that Anchor!"
					fix_anchor.call
					break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
					respond "The Ship's Gone Off Course Captain!"
					det_drift.call
					fix_wheel.call
					end
end	
}

two_mast = proc{
fput "pull gangplank"
lower_sail.call
echo "Main Mast Unfurled"
move "east"
lower_sail.call
echo "Fore Mast Unfurled, She's Ready to Sail Captain!"
move "west"
move "west"
echo "Raising Anchor"
raise_anchor.call
fput "yell Anchor's Aweigh!"
fput "yell Underway"
while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
					waitrt?
					echo "Resuming Original Course"
					break
		elsif line =~ /The sound of ropes coming free of the rigging (.*)/
					echo "The Sails Have Been Furled"
					fix_sails.call
					break
		elsif line =~ /A large swell crashes into the side of the (.*)/
					echo "Rogue Wave! Secure that Anchor!"
					fix_anchor.call
					break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
					respond "The Ship's Gone Off Course Captain!"
					det_drift.call
					fix_wheel.call
					end
end
}

three_mast = proc{
lower_sail.call
echo "Mizzen Mast Unfurled"
move "east"
lower_sail.call
echo "Main Mast Unfurled"
move "east"
lower_sail.call
echo "Fore Mast Unfurled, She's Ready to Sail Captain!"
move "west"
move "west"
move "west"
echo "Raising Anchor"
raise_anchor.call
fput "yell Anchor's Aweigh!"
fput "yell Underway"
while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
					waitrt?
					echo "Resuming Original Course"
					break
		elsif line =~ /The sound of ropes coming free of the rigging (.*)/
					echo "The Sails Have Been Furled"
					fix_sails.call
					break
		elsif line =~ /A large swell crashes into the side of the (.*)/
					echo "Rogue Wave! Secure that Anchor!"
					fix_anchor.call
					break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
					respond "The Ship's Gone Off Course Captain!"
					det_drift.call
					fix_wheel.call
					end
end
}

fix_sails = proc{
echo "Dropping Anchor"
fput "kick capstan"
waitrt?
respond "Let Go the Halyard, Sheets, and Braces!"
move "east"
	if @shiptype == "sloop" 
	then
	one_mast.call
	elsif @shiptype == "brigantine"
	then
	two_mast.call
	elsif @shiptype == "carrack"
	then
	two_mast.call
	elsif @shiptype == "galleon"
	then
	three_mast.call
	elsif @shiptype == "frigate"
	then
	three_mast.call
	elsif @shiptype == "manowar"
	then
	three_mast.call
	end
}

fix_anchor = proc{
echo "Securing the Anchor"
raise_anchor.call
while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
					waitrt?
					echo "Resuming Original Course"
					break
		elsif line =~ /The sound of ropes coming free of the rigging (.*)/
					echo "The Sails Have Been Furled"
					fix_sails.call
					break
		elsif line =~ /A large swell crashes into the side of the (.*)/
					echo "Rogue Wave! Secure that Anchor!"
					fix_anchor.call
					break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
					respond "The Ship's Gone Off Course Captain!"
					det_drift.call
					fix_wheel.call
					end
end
}

keep_course = proc{
	echo "Maintaining Heading"
	while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
			waitrt?
			break
		elsif line =~ /A large swell crashes into the side of the (.*)/
			echo "Rogue Wave! Secure that Anchor!"
			fix_anchor.call
			break
		elsif line =~ /The sound of ropes coming free of the rigging(.*)/
			echo "The Sails Have Furled"
			fix_sails.call
			break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
			echo "The Ship Has Gone Off Course"
			det_drift.call
			fix_wheel.call
			break
		elsif line =~ /(.*)carves through the ocean toward your (.*)/
			fput "yell Enemy ship detected! Take Cover!"
			respond  "


=======================================
DANGER: An Enemy Vessel Approaches\!
    1\. Engage
    2\. Run
=======================================
  What Are Your Orders Captain\?
		  ;send <#> "
		elsif line =~ /A sudden splash of glowing green waters rises skyward surrounding your (.*)/
			fput "yell Enemy ship detected! Take Cover!"
			respond  "


=======================================
DANGER: An Enemy Vessel Approaches\!
    1\. Engage
    2\. Run
=======================================
  What Are Your Orders Captain\?
		  ;send <#> "
		elsif line =~ /A distant thudding of the drums of war act as a harbinger for a (.*)/
			fput "yell Enemy ship detected! Take Cover!"
			respond  "


=======================================
DANGER: An Enemy Vessel Approaches\!
    1\. Engage
    2\. Run
=======================================
  What Are Your Orders Captain\?
		  ;send <#> "
		elsif line == "1"
			fput "yell We Are Engaging The Enemy Vessel, All Hands To Your Battlestations!"
			puts "
			==============================================================================
			Pausing Script To Engage The Enemy, Unpause After You Raze Thier Ship
			==============================================================================
			"
			fput "turn wheel ship"
			do_client ";pause osanav"
			fput "turn wheel #{@course}"
		elsif line == "2"
			respond "Helmsman! Take Us Out Of Here!"
			fput "yell Evasive Manuevers, All Hands Take Cover!"
		elsif line =~ /The (.*) abruptly changes course away from your (.*)/
			respond "
* I Think We Lost Them Captain, Resuming Course *
"
		elsif line =~ /Curses and insults rise above the crashing waters below as the (.*) continues to give chase./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /The (.*) matches your (.*) pace as it looms within range./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /Cresting waves rapidly, the (.*) continues to chase your (.*)/
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /The sails of the (.*) rapidly shift from port to starboard as the (.*) does not relent in its attempt to overcome your (.*)!/
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /Barks of rage can be heard from the (.*) as it continues to give chase./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /Hollow sounding moans erupt from the (.*) as it continues to give chase./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
			elsif line =~ /Sails billowing, the (.*) continues to chase your (.*)/
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
	end
end
}
steer_course = proc{
	echo "Changing Heading"
	fput "turn wheel #{@course}"
	while line = get
		if line =~ /The (.*) (cuts through the ocean, heading|drifts slowly) (.*)/
			waitrt?
			break
		elsif line =~ /A large swell crashes into the side of the (.*)/
			echo "Rogue Wave! Secure that Anchor!"
			fix_anchor.call
			break
		elsif line =~ /The sound of ropes coming free of the rigging(.*)/
			echo "The Sails Have Furled"
			fix_sails.call
			break
		elsif line =~ /The (.*) suddenly drifts from its course as the (.*) wheel spins out of control!/
			echo "The Ship Has Gone Off Course"
			det_drift.call
			fix_wheel.call
			break
		elsif line =~ /The (.*) drifts steadily toward the (.*)/
		respond "Liberty Call! Liberty Call!"
		exit
		elsif line =~ /(.*)carves through the ocean toward your (.*)/
			fput "yell Enemy ship detected! Take Cover!"
			respond  "


=======================================
DANGER: An Enemy Vessel Approaches\!
    1\. Engage
    2\. Run
=======================================
  What Are Your Orders Captain\?
		  ;send <#> "
		elsif line =~ /A sudden splash of glowing green waters rises skyward surrounding your (.*)/
			fput "yell Enemy ship detected! Take Cover!"
			respond  "


=======================================
DANGER: An Enemy Vessel Approaches\!
    1\. Engage
    2\. Run
=======================================
  What Are Your Orders Captain\?
		  ;send <#> "
		elsif line =~ /A distant thudding of the drums of war act as a harbinger for a (.*)/
			fput "yell Enemy ship detected! Take Cover!"
			respond  "


=======================================
DANGER: An Enemy Vessel Approaches\!
    1\. Engage
    2\. Run
=======================================
  What Are Your Orders Captain\?
		  ;send <#> "
		elsif line == "1"
			fput "yell We Are Engaging The Enemy Vessel, All Hands To Your Battlestations!"
			puts "
			==============================================================================
			Pausing Script To Engage The Enemy, Unpause After You Raze Thier Ship
			==============================================================================
			"
			fput "turn wheel ship"
			do_client ";pause osanav"
			fput "turn wheel #{@course}"
		elsif line == "2" 
			respond "Helmsman! Take Us Out Of Here!"
			fput "yell Evasive Manuevers, All Hands Take Cover!"
		elsif line =~ /The (.*) abruptly changes course away from your (.*)/
			respond "
* I Think We Lost Them Captain, Resuming Course *
"
		elsif line =~ /Curses and insults rise above the crashing waters below as the (.*) continues to give chase./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /The (.*) matches your (.*) pace as it looms within range./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /Cresting waves rapidly, the (.*) continues to chase your (.*)/
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /The sails of the (.*) rapidly shift from port to starboard as the (.*) does not relent in its attempt to overcome your (.*)!/
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /Barks of rage can be heard from the (.*) as it continues to give chase./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
		elsif line =~ /Hollow sounding moans erupt from the (.*) as it continues to give chase./
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
			elsif line =~ /Sails billowing, the (.*) continues to chase your (.*)/
			respond "
			* We Are Being Persued Captain! It Is Not Too Late To Engage The Enemy! (;send 1 to Engage) *
			"
	end
end
}

#routes go here
sol_tokraken = proc{
@course = "north"
steer_course.call
@course = "west"
steer_course.call
@course = "southwest"
steer_course.call
4.times { keep_course.call }
@course = "west"
steer_course.call
3.times { keep_course.call }
@course = "south"
steer_course.call
9.times { keep_course.call }
@course = "west"
steer_course.call
5.times { keep_course.call }
@course = "south"
steer_course.call
2.times { keep_course.call }
@course = "west"
steer_course.call
keep_course.call
@course = "south"
steer_course.call
6.times { keep_course.call }
@course = "east"
steer_course.call
keep_course.call
@course = "port"
steer_course.call
}

sol_tokharam = proc{
@course = "north"
steer_course.call
@course = "west"
steer_course.call
8.times { keep_course.call }
@course = "northwest"
steer_course.call
@course = "southwest"
steer_course.call
@course = "south"
steer_course.call
@course = "southwest"
steer_course.call
2.times { keep_course.call }
@course = "west"
steer_course.call
2.times { keep_course.call }
@course = "northwest"
steer_course.call
3.times { keep_course.call }
@course = "west"
steer_course.call
6.times { keep_course.call }
@course = "port"
steer_course.call
}

sol_torr = proc{
@course = "northwest"
steer_course.call
@course = "west"
steer_course.call
keep_course.call
@course = "south"
steer_course.call
16.times { keep_course.call }
@course = "southeast"
steer_course.call
12.times { keep_course.call }
@course = "port"
steer_course.call
}

sol_tolanding = proc{
@course = "northwest"
steer_course.call
4.times { keep_course.call }
@course = "north"
steer_course.call
15.times { keep_course.call }
@course = "northeast"
steer_course.call
keep_course.call
@course = "east"
steer_course.call
2.times { keep_course.call }
@course = "southeast"
steer_course.call
3.times { keep_course.call }
@course = "port"
steer_course.call
}

kraken_tosol = proc{
@course = "West"
steer_course.call
keep_course.call
@course = "North"
steer_course.call
5.times { keep_course.call }
@course = "East"
steer_course.call
@course = "North"
steer_course.call
2.times { keep_course.call }
@course = "East"
steer_course.call
5.times { keep_course.call }
@course = "North"
steer_course.call
10.times { keep_course.call }
@course = "East"
steer_course.call
3.times { keep_course.call }
@course = "Northeast"
steer_course.call
4.times { keep_course.call }
@course = "East"
steer_course.call
@course = "South"
steer_course.call
@course = "port"
steer_course.call
}

kraken_tokharam = proc{
@course = "west"
steer_course.call
2.times { keep_course.call }
@course = "north"
steer_course.call
6.times { keep_course.call }
@course = "west"
steer_course.call
6.times { keep_course.call }
@course = "north"
steer_course.call
17.times { keep_course.call }
@course = "west"
steer_course.call
keep_course.call
@course = "port"
steer_course.call
}

kraken_torr = proc{
@course = "west"
steer_course.call
keep_course.call
@course = "north"
steer_course.call
5.times { keep_course.call }
@course = "northeast"
steer_course.call
7.times { keep_course.call }
@course = "east"
steer_course.call
2.times { keep_course.call }
@course = "southeast"
steer_course.call
4.times { keep_course.call }
@course = "south"
steer_course.call
@course = "southeast"
steer_course.call
11.times { keep_course.call }
@course = "south"
steer_course.call
@course = "port"
steer_course.call
}

kraken_tolanding = proc{
@course = "west"
steer_course.call
@course = "northwest"
steer_course.call
2.times { keep_course.call }
@course = "north"
steer_course.call
@course = "northeast"
steer_course.call
15.times { keep_course.call }
@course = "north"
steer_course.call
7.times { keep_course.call }
@course = "west"
steer_course.call
@course = "north"
steer_course.call
16.times { keep_course.call }
@course = "northeast"
steer_course.call
keep_course.call
@course = "east"
steer_course.call
2.times { keep_course.call }
@course = "southeast"
steer_course.call
3.times { keep_course.call }
@course = "port"
steer_course.call
}

landing_tokraken = proc{
@course = "northwest"
steer_course.call
3.times { keep_course.call }
@course = "west"
steer_course.call
2.times { keep_course.call }
@course = "southwest"
steer_course.call
keep_course.call
@course = "south"
steer_course.call
16.times { keep_course.call }
@course = "east"
steer_course.call
@course = "south"
steer_course.call
7.times { keep_course.call }
@course = "southwest"
steer_course.call
15.times { keep_course.call }
@course = "south"
steer_course.call
@course = "southeast"
steer_course.call
2.times { keep_course.call }
@course = "east"
steer_course.call
@course = "port"
steer_course.call
}

landing_tosol = proc{
@course = "north"
steer_course.call
@course = "west"
steer_course.call
@course = "northwest"
steer_course.call
2.times { keep_course.call }
@course = "west"
steer_course.call
5.times { keep_course.call }
@course = "south"
steer_course.call
16.times { keep_course.call }
@course = "southeast"
steer_course.call
5.times { keep_course.call }
@course = "port"
steer_course.call
}

landing_torr = proc{
@course = "north"
steer_course.call
@course = "west"
steer_course.call
@course = "northwest"
steer_course.call
2.times { keep_course.call }
@course = "west"
steer_course.call
5.times { keep_course.call }
@course = "south"
steer_course.call
16.times { keep_course.call }
@course = "southeast"
steer_course.call
2.times { keep_course.call }
@course = "south"
steer_course.call
18.times { keep_course.call }
@course = "southeast"
steer_course.call
12.times { keep_course.call }
@course = "port"
steer_course.call
}

landing_tokharam = proc{
@course = "northwest"
steer_course.call
3.times { keep_course.call }
@course = "west"
steer_course.call
4.times { keep_course.call }
@course = "south"
steer_course.call
18.times { keep_course.call }
@course = "southwest"
steer_course.call
2.times { keep_course.call }
@course = "northwest"
steer_course.call
keep_course.call
@course = "west"
steer_course.call
@course = "south"
steer_course.call
4.times { keep_course.call }
@course = "west"
steer_course.call
4.times { keep_course.call }
@course = "northwest"
steer_course.call
3.times { keep_course.call }
@course = "west"
steer_course.call
7.times { keep_course.call }
@course = "port"
steer_course.call
}

rr_tokharam = proc{
@course = "northwest"
steer_course.call
14.times { keep_course.call }
@course = "north"
steer_course.call
2.times { keep_course.call }
@course = "northwest"
steer_course.call
7.times { keep_course.call }
@course = "west"
steer_course.call
2.times { keep_course.call }
@course = "northwest"
steer_course.call
3.times { keep_course.call }
@course = "west"
steer_course.call
7.times { keep_course.call }
@course = "port"
steer_course.call
}

rr_tokraken = proc{
@course = "north"
steer_course.call
@course = "northwest"
steer_course.call
11.times { keep_course.call }
@course = "north"
steer_course.call
@course = "northwest"
steer_course.call
4.times { keep_course.call }
@course = "west"
steer_course.call
2.times { keep_course.call }
@course = "southwest"
steer_course.call
8.times { keep_course.call }
@course = "south"
steer_course.call
4.times { keep_course.call }
@course = "west"
steer_course.call
2.times { keep_course.call }
@course = "port"
steer_course.call
}

rr_tosol = proc{
@course = "northwest"
steer_course.call
12.times { keep_course.call }
@course = "north"
steer_course.call
14.times { keep_course.call }
@course = "northeast"
steer_course.call
keep_course.call
@course = "southeast"
steer_course.call
@course = "port"
steer_course.call
}

rr_tolanding = proc{
@course = "northwest"
steer_course.call
13.times { keep_course.call }
@course = "north"
steer_course.call
18.times { keep_course.call }
@course = "northwest"
steer_course.call
keep_course.call
@course = "north"
steer_course.call
13.times { keep_course.call }
@course = "northeast"
steer_course.call
2.times { keep_course.call }
@course = "east"
steer_course.call
2.times { keep_course.call }
@course = "southeast"
steer_course.call
3.times { keep_course.call }
@course = "port"
steer_course.call
}

kharem_tokraken = proc{
@course = "east"
steer_course.call
keep_course.call
@course = "south"
steer_course.call
14.times { keep_course.call }
@course = "southeast"
steer_course.call
7.times { keep_course.call }
@course = "south"
steer_course.call
keep_course.call
@course = "east"
steer_course.call
keep_course.call
@course = "port"
steer_course.call
}

kharem_tosol = proc{
@course = "east"
steer_course.call
6.times { keep_course.call }
@course = "southeast"
steer_course.call
3.times { keep_course.call }
@course = "east"
steer_course.call
2.times { keep_course.call }
@course = "northeast"
steer_course.call
2.times { keep_course.call }
@course = "north"
steer_course.call
@course = "northeast"
steer_course.call
@course = "southeast"
steer_course.call
@course = "east"
steer_course.call
7.times { keep_course.call }
@course = "south"
steer_course.call
@course = "port"
steer_course.call
}

kharem_tolanding = proc{
@course = "east"
steer_course.call
7.times { keep_course.call }
@course = "southeast"
steer_course.call
3.times { keep_course.call }
@course = "east"
steer_course.call
4.times { keep_course.call }
@course = "north"
steer_course.call
4.times { keep_course.call }
@course = "east"
steer_course.call
keep_course.call
@course = "southeast"
steer_course.call
keep_course.call
@course = "northeast"
steer_course.call
keep_course.call
@course = "north"
steer_course.call
20.times { keep_course.call }
@course = "east"
steer_course.call
4.times { keep_course.call }
@course = "southeast"
steer_course.call
3.times { keep_course.call }
@course = "port"
steer_course.call
}

kharem_torr = proc{
@course = "east"
steer_course.call
7.times { keep_course.call }
@course = "southeast"
steer_course.call
4.times { keep_course.call }
@course = "east"
steer_course.call
keep_course.call
@course = "southeast"
steer_course.call
9.times { keep_course.call }
@course = "south"
steer_course.call
keep_course.call
@course = "southeast"
steer_course.call
12.times { keep_course.call }
@course = "port"
steer_course.call
}

rr_dest = proc{
		if @dest == "Solhaven"
			rr_tosol.call
		elsif @dest == "Wehnimer\'s Landing"
			rr_tolanding.call
		elsif @dest == "Kharam Dzu"
			rr_tokharam.call
		elsif @dest == "Kraken\'s Fall"
			rr_tokraken.call
		end
}

sol_dest = proc{
		if @dest == "River\'s Rest"
			sol_torr.call
		elsif @dest == "Wehnimer\'s Landing"
			sol_tolanding.call
		elsif @dest == "Kharam Dzu" 
			sol_tokharam.call
		elsif @dest == "Kraken\'s Fall"
			sol_tokraken.call
		end
}

landing_dest = proc{
		if @dest == "Solhaven"
			landing_tosol.call
		elsif @dest == "River\'s Rest"
			landing_torr.call
		elsif @dest == "Kharam Dzu"
			landing_tokharam.call
		elsif @dest == "Kraken\'s Fall"
			landing_tokraken.call
		end
}

kharam_dest = proc{
		if @dest == "Solhaven"
			kharem_tosol.call
		elsif @dest == "River\'s Rest"
			kharem_torr.call
		elsif @dest == "Wehnimer\'s Landing"
			kharem_tolanding.call
		elsif @dest == "Kraken\'s Fall"
			kharem_tokraken.call
		end
}

kraken_dest = proc{
		if @dest == "Solhaven"
			kraken_tosol.call
		elsif @dest == "River\'s Rest"
			kraken_torr.call
		elsif @dest == "Wehnimer\'s Landing"
			kraken_tolanding.call
		elsif @dest == "Kharam Dzu"
			kraken_tokharam.call
		end
}

near_city = proc{
		if @nearest_town == "Solhaven"
			sol_dest.call
		elsif @nearest_town == "River\'s Rest"
			rr_dest.call
		elsif @nearest_town == "Wehnimer\'s Landing"
			landing_dest.call
		elsif @nearest_town == "Kharam Dzu"
			kharam_dest.call
		elsif @nearest_town == "Kraken\'s Fall"
			kraken_dest.call
end
}

city_menu = proc{
respond "


=======================================
Where would you like to sail captain\?
    1\. #{@city_one}
    2\. #{@city_two}
    3\. #{@city_three}
    4\. #{@city_four}
=======================================
Select a destination - 
      ;send <#> or 5 to Quit"
respond
clear
line = nil
line = get until line.strip =~ /^[0-9]+$/
destination = line
if destination == "1"
	@dest = "#{@city_one}"
	echo "Set course to #{@dest} from #{@nearest_town}"
	fput "depart"
	pause
	fput "depart"
	near_city.call
elsif destination == "2"
	@dest = "#{@city_two}"
	echo "Set course to #{@dest} from #{@nearest_town}"
	fput "depart"
	pause
	fput "depart"
	near_city.call
elsif destination == "3"
	@dest = "#{@city_three}"
	echo "Set course to #{@dest} from #{@nearest_town}"
	fput "depart"
	pause
	fput "depart"
	near_city.call
elsif destination == "4"
	@dest = "#{@city_four}"
	echo "Set course to #{@dest} from #{@nearest_town}"
	fput "depart"
	pause
	fput "depart"
	near_city.call
elsif destination == "5"
	respond "Seaman Dummy! Quarterdeck!"
	exit
else
  echo "Them be uncharted waters, Captain!"
end
}

dest_city = proc{
@city_one = "Solhaven"
@city_two = "River\'s Rest"
@city_three = "Wehnimer\'s Landing"
@city_four = "Kharam Dzu"
		if @nearest_town == "Solhaven"
			@city_one = "Kraken\'s Fall"
			city_menu.call
		elsif @nearest_town == "River\'s Rest"
			@city_two = "Kraken\'s Fall"
			city_menu.call
		elsif @nearest_town == "Wehnimer\'s Landing"
			@city_three = "Kraken\'s Fall"
			city_menu.call
		elsif @nearest_town == "Kharam Dzu"
			@city_four = "Kraken\'s Fall"
			city_menu.call
		elsif @nearest_town == "Kraken\'s Fall"
			city_menu.call
		end
}

set_city = proc{
respond "


=======================================
Where are you sailing from captain\?
    1\. Solhaven
    2\. River\s Rest
    3\. Wehnimer\s Landing
    4\. Kharam Dzu
    5\. Kraken\s Fall		
=======================================
Select your city of origin - 
      ;send <#> "
respond
clear
line = nil
line = get until line.strip =~ /^[0-9]+$/
origin = line
if origin == "1"
	@nearest_town = "Solhaven"
	dest_city.call
elsif origin == "2"
	@nearest_town = "River\'s Rest"
	dest_city.call
elsif origin == "3"
	@nearest_town = "Wehnimer\'s Landing"
	dest_city.call
elsif origin == "4"
	@nearest_town = "Kharam Dzu"
	dest_city.call
elsif origin == "5"
	@nearest_town = "Kraken\'s Fall"
	dest_city.call
	end
}

lower_sail = proc{
fput "lower sail"
while line = get
if line =~ /(.*)until it is at half mast(.)/
waitrt?
lower_sail.call
break
elsif line =~ /(.*)until it is fully open(.)/
waitrt?
break
elsif line =~ /The (.*)is already lowered as far as it can go!/
break
end
end
}

raise_anchor = proc{
fput "push capstan"
while line = get
if line =~ /(.*)and begin to push(!)/
waitrt?
raise_anchor.call
break
elsif line =~ /(.*)settles against the hull./
waitrt?
break
elsif line =~ /The anchor is already up(!)/
break
end
end
}

one_underway = proc{
fput "pull gangplank"
lower_sail.call
echo "Main Mast Unfurled, She's Ready to Sail Captain!"
move "west"
echo "Raising Anchor"
raise_anchor.call
fput "yell Anchor's Aweigh!"
fput "depart"
fput "depart"
fput "yell Underway"
set_city.call
}

two_underway = proc{
fput "pull gangplank"
lower_sail.call
echo "Main Mast Unfurled"
move "east"
lower_sail.call
echo "Fore Mast Unfurled, She's Ready to Sail Captain!"
move "west"
move "west"
echo "Raising Anchor"
raise_anchor.call
fput "yell Anchor's Aweigh!"
fput "depart"
fput "depart"
fput "yell Underway"
set_city.call
}

three_underway = proc{
fput "pull gangplank"
lower_sail.call
echo "Mizzen Mast Unfurled"
move "east"
lower_sail.call
echo "Main Mast Unfurled"
move "east"
lower_sail.call
echo "Fore Mast Unfurled, She's Ready to Sail Captain!"
move "west"
move "west"
move "west"
echo "Raising Anchor"
raise_anchor.call
fput "yell Anchor's Aweigh!"
fput "depart"
fput "depart"
fput "yell Underway"
set_city.call
}

mast_count = proc{
	if @shiptype == "sloop" 
	then
	one_underway.call
	elsif @shiptype == "brigantine"
	then
	two_underway.call
	elsif @shiptype == "carrack"
	then
	two_underway.call
	elsif @shiptype == "galleon"
	then
	three_underway.call
	elsif @shiptype == "frigate"
	then
	three_underway.call	
	elsif @shiptype == "manowar"
	then
	three_underway.call
	end
}

get_underway = proc{
	if @underway == TRUE
	then
	set_city.call
	elsif @underway == FALSE
	then
	mast_count.call
	end
}

is_underway = proc{
puts  "


=======================================
Is your ship already underway\?
    1\. Yes
    2\. No
=======================================
If the ship is under way it MUST be in front of the port!
		  ;send <#> "
respond
clear
line = nil
line = get until line.strip =~ /^[0-9]+$/
underway = line
if underway == "1"
	@underway = TRUE
	move "west"
	puts "Helmsman, Lay In A Course For..."
	get_underway.call
elsif underway == "2"
	@underway = FALSE
	puts "Make Ready For Getting Underway!"
	get_underway.call
end
}

	cargo_main = proc{
	move "up"
	is_underway.call
}
	
	helm_main = proc{
	move "east"
	is_underway.call
}
	
	cq_main = proc{
	multimove "out","east"
	is_underway.call
}
	
	mforward_main = proc{
	multimove "west","west"
	is_underway.call
}
	
	mcrow_main = proc{
	multimove "down","west","west"
	is_underway.call
}
	
	forward_main = proc{
	move "west"
	is_underway.call
}

	bow_main = proc{
	multimove "west","west"
	is_underway.call
}
	
	mbow_main = proc{
	multimove "west","west","west"
	is_underway.call
}
	
	mess_main = proc{
	multimove "west","up"
	is_underway.call
}
	
	crew_main = proc{
	multimove "east","up"
	is_underway.call
}
	
	mid_main = proc{
	move "west"
	is_underway.call
}

start_location = proc{
		if checkroom.include?("Main Deck")
		is_underway.call
		elsif checkroom.include?("Cargo Hold")
		cargo_main.call
		elsif checkroom.include?("Crow's Nest")
		move "down"
		start_location.call
		elsif checkroom.include?("Helm")
		helm_main.call
		elsif checkroom.include?("Captain's Quarters")
		cq_main.call
		elsif checkroom.include?("Man O' War, Forward Deck")
		mforward_main.call
		elsif checkroom.include?("Forward Deck")
		forward_main.call
		elsif checkroom.include?("Man O' War, Bow")
		mbow_main.call
		elsif checkroom.include?("Bow")
		bow_main.call
		elsif checkroom.include?("Mess Hall")
		mess_main.call
		elsif checkroom.include?("Crew Quarters")
		crew_main.call
		elsif checkroom.include?("Mid Deck")
		mid_main.call
end
}

ship_type = proc{
			if checkroom.include?("Sloop")
			@shiptype = "sloop"
			start_location.call
			elsif checkroom.include?("Brigantine")
			@shiptype = "brigantine"
			start_location.call
			elsif checkroom.include?("Carrack")
			@shiptype = "carrack"
			start_location.call
			elsif checkroom.include?("Galleon")
			@shiptype = "galleon"
			start_location.call
			elsif checkroom.include?("Frigate")
			@shiptype = "frigate"
			start_location.call
			elsif checkroom.include?("Man O' War")
			@shiptype = "manowar"
			start_location.call
			else
			echo "Please Restart Script From Your Ship!"
			exit
			end
}

if variable[1].downcase =~ /help/
	echo "
	
	This sail your ship from point A to point B and try to fix any encountered problems along the way.
This script is not intended to be used AFK in anyway.
Enjoy

~Peggyanne
PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
1/30/2021 Initial Release, Currently only supports Sloop.
2/6/2021 Updated some routes to avoid bugged ocean room. Updated course correction to account for changing course into land.
2/9/2021 Updated to Account for multiple masts.
2/17/2021 Fixed issue with ship not returning to course when sails furl.
2/18/2021 Script will automatically get you underway now. (Had a few requests for this)
3/02/2021 Minor Fix for being blown off course. Sorry if that affected anyone
3/03/2021 Fixed issue with crows nest and gave option for if ship is already outside the port.
3/06/2021 Added Support for stopping and fighting pirates along the way (Had a few requests for this)
3/06/2021 Also fixed major error with determining ship type.
4/10/2021 Updated to remove the need for LOOKing to detirming location."
exit
end
respond "      ====================================================================================================================================
            *****User beware, this script is not meant for AFK use. The sea is a fickle beast and there can be unforseen events***** 
								                                                 Fair Winds and Following Seas Captain!
		      ==================================================================================================================================== 			
			  "
@underway = FALSE
ship_type.call


