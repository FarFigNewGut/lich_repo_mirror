=begin
https://discordapp.com/channels/226045346399256576/1339018254517145681

This script creates a dedicated window to display treasure objects in real time.

Features:
  - Continuously updates with treasures found in the room.
  - Displays treasures categorized by type using gameobj-data.
  - Automatically removes treasures that disappear.
  - Clickable links to interact with treasure objects.
  - Incorporates killtracker output if killtracker is running.
  - Populates a list of dead creatures in the room and allows you to click on each creature to loot manually.
  - Adds click commands to facilitate looting the entire room or executing the eloot lich script.

Commands:
  *click - Enable or disable LOOT ROOM and ELOOT commands.

Changelog:
  1.2.2 (2025-05-06)
    - Minor fixes for Moonsedge bounty display.
  1.2.1 (2025-05-02)
    - Added an upstream hook to allow users to turn the clickable LOOT ROOM and ELOOT commands on or off. They are off by default now.
  1.2.0 (2025-04-30)
    - Added LOOT ROOM command. Will empty and fill right hand automatically to loot room.
    - Added eloot command.
    - Dead Creature output added. Can click on dead creature to loot creature.
  1.1.0 (2025-04-26)
    - Killtracker output removed from creaturewindow and moved to treasurewindow.
  1.0.0 (2025-02-11)
    - Initial release.

author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, treasures, gems, coins, artifacts, loot, looting
=end

no_kill_all

@show_click_links ||= false  # Default: enabled

UPSTREAM_HOOK_ID = "treasurewindow::upstream"

UpstreamHook.add(UPSTREAM_HOOK_ID, proc do |command|
  case command.strip.downcase
  when /\*click/
    @show_click_links = !@show_click_links
    respond "Click-to-loot links are now #{@show_click_links ? 'ENABLED' : 'DISABLED'}."
    nil
  else
    command
  end
end)

before_dying do
  UpstreamHook.remove(UPSTREAM_HOOK_ID)
end


puts("<closeDialog id='TreasureWindow'/><openDialog type='dynamic' id='TreasureWindow' title='Treasure' target='TreasureWindow' scroll='manual' location='main' justify='3' height='100' resident='true'><dialogData id='TreasureWindow'></dialogData></openDialog>")

@last_treasures = []

def format_reset_time(seconds_left)
  return "Reset soon!" if seconds_left <= 0
  days = seconds_left / 86400
  hours = (seconds_left % 86400) / 3600
  minutes = (seconds_left % 3600) / 60
  if days > 0
    "Reset: #{days}d #{hours}h #{minutes}m"
  else
    "Reset: #{hours}h #{minutes}m"
  end
end

def killtracker_summary_lines
  return [] unless Script.running?("killtracker") && defined?($killtracker) && $killtracker.is_a?(Hash)

  gems_total = $killtracker[:jewel_found].size
  dust_total = $killtracker[:dust_found].size
  weekly_searches = $killtracker[:weekly_ascension_searches] || 0
  gems_this_week = $killtracker[:weekly_gemstone] || 0
  dust_this_week = $killtracker[:weekly_dust] || 0
  gems_this_month = $killtracker[:monthly_gemstones] || 0

  # Calculate reset timers here, locally
  weekly_reset_in = ($killtracker[:cached_reset_time] - Time.now.to_i)
  weekly_reset_text = weekly_reset_in > 0 ? format_reset_time(weekly_reset_in) : "Reset soon!"

  now = Time.now
  if now.month == 12
    next_month_time = Time.new(now.year + 1, 1, 1)
  else
    next_month_time = Time.new(now.year, now.month + 1, 1)
  end
  monthly_reset_in = (next_month_time.to_i - now.to_i)
  monthly_reset_text = monthly_reset_in > 0 ? format_reset_time(monthly_reset_in) : "Reset soon!"

  summary_lines = []
  summary_lines << "Killtracker Summary"
  summary_lines << "--------------------------------------"
  if gems_this_month < 3
  summary_lines << "Weekly Gem"
  summary_lines << "Found: #{gems_this_week}"
  summary_lines << "Searches: #{weekly_searches.with_commas}"
  summary_lines << weekly_reset_text
  else
  summary_lines << "All Gems Found for Month!"
  end
  summary_lines << "--------------------------------------"
  summary_lines << "Monthly Gems"
  summary_lines << "Found: #{gems_this_month}"
  summary_lines << "Remaining: #{[0, 3 - gems_this_month].max}"
  summary_lines << monthly_reset_text
  summary_lines << "---------------------------------------"
  summary_lines
end

def push_treasures_to_window(treasures)
  output = "<dialogData id='TreasureWindow' clear='t'>"
  current_top = 0

  # --- Killtracker Summary Lines ---
  killtracker_summary_lines.each do |line|
    output += "<label id='kt_line_#{current_top}' value='#{line}' justify='left' left='0' top='#{current_top}' />"
    current_top += 20
  end

if ARGV.first == "lootroom"
  empty_hand
  fput "loot room"
  fill_hand
  exit
elsif ARGV.first == "eloot"
  start_script("eloot") unless Script.running?("eloot")
  exit
end

# Click to Loot Room
if @show_click_links
  output += "<link id='lootroom' value='Click to LOOT ROOM.' cmd=';e empty_hand(); fput(\"loot room\"); fill_hand()' echo='Looting room...' fontSize='32' left='0' top='#{current_top}' />"
  current_top += 20
  output += "<link id='eloot' value='Click to run ELOOT.' cmd=';e start_script(\"eloot\") unless Script.running?(\"eloot\")' echo='Running eloot...' fontSize='32' left='0' top='#{current_top}' />"
  current_top += 20
		output += "<label id='div1' value='--------------------------------------' justify='left' left='0' top='#{current_top}' />"
  current_top += 20
end

# Treasure count
output += "<label id='treasuretotal' value='Treasures: #{treasures.size}' left='0' top='#{current_top}' />"
current_top += 20

  treasures.each_with_index do |treasure, index|
    treasure_type = treasure.type || 'Miscellaneous'
    treasure_name = "#{treasure_type.capitalize}: #{treasure.name}"
    output += "<link id='treasure_#{index}' value='#{treasure_name}' cmd='get ##{treasure.id}' echo='get ##{treasure.id}' justify='bottom' left='0' top='#{current_top}' />"
				current_top += 20
  end

# Dead creatures listing
dead_creatures = GameObj.npcs.select { |t| t.status.to_s.downcase == 'dead' }

output += "<label id='deadcount' value='Dead Creatures: #{dead_creatures.size}' left='0' top='#{current_top}' />"
current_top += 20

dead_creatures.each_with_index do |t, index|
  label_value = "#{t.name}"
  output += "<link id='dead_#{index}' value='#{label_value}' cmd='loot ##{t.id}' echo='loot ##{t.id}' justify='bottom' left='0' top='#{current_top + (index * 20)}' />"
end

  output += "</dialogData>"
  puts(output)
end

last_push_time = Time.now

loop do
  current_treasures = GameObj.loot.select do |obj|
    obj.type =~ /ammo|armor|box|clothing|collectible|cursed|gem|herb|jewelry|junk|magic|reagent|scarab|scroll|skin|uncommon|valuable|wand|weapon/i
  end

  now = Time.now
  if current_treasures != @last_treasures || (now - last_push_time) >= 2
    @last_treasures = current_treasures
    push_treasures_to_window(current_treasures)
    last_push_time = now
  end

  sleep 0.025
end

echo "Dedicated Treasure Window is active."
