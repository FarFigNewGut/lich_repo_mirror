=begin
author: Alastir
date: 10/7/18

This script will play all the games in Caligos Isle
You need to have a seashell bucket!

 Step 1:  Make sure your variables are configured.
 - ;vars set lootsack=container (The container where the junk you want to sell will be stored - backpack, cloak, etc)
 - ;vars set keepsack=container (The container where the stuff you want to keep will be stored - backpack, cloak, etc)
 
 Step 2:  ;ci_games
 Step 3:  profit
 
=end

if $SAFE > 0
  echo "error: This script needs to be trusted to work. (;trust #{script.name.downcase})"
  exit
end

Script.run('repository', "set-updatable ci_games.lic")
respond 'This script provided by Alastir'
respond ';unpause ci_games to continue, or kill the script and ;ci_games help for setup information'
pause_script

if $frontend == 'stormfront'
	fam_window_begin = "<pushStream id=\"loot\" ifClosedStyle=\"watching\"/>"
	fam_window_end   = "<popStream/>\r\n"
else
	fam_window_begin = "\034GSe\r\n"
	fam_window_end   = "\034GSf\r\n"
end

StartRooms = Array[27564,27566,27565,26593,27567,27568,27569,27570,26591,27571,27572,27573,27574,27575,27576,27577,26531,27557,27558,27559,27560,27561,27562,27563]

UserVars.cigames ||= {}
UserVars.cigames[:rooms]			 ||= Array[]
UserVars.cigames[:nextrooms]		 ||= Array[]
UserVars.cigames[:activation]        ||= nil
UserVars.cigames[:trash]         	 ||= nil
UserVars.cigames[:amount]			 ||= 50000

silence_me

def eelbeds
	UserVars.cigames[:rooms]			 = Array[27564,27566,27565,26593]
	UserVars.cigames[:nextrooms]		 = Array[27567,27568,27569,27570]
	UserVars.cigames[:activation]        = "bucket"
	UserVars.cigames[:trash]         	 = "hole"
end

def whackyeels
	UserVars.cigames[:rooms]			 = Array[27567,27568,27569,27570]
	UserVars.cigames[:nextrooms]		 = Array[26591,27571,27572,27573]
	UserVars.cigames[:activation]        = "stick"
	UserVars.cigames[:trash]         	 = "crag"
end

def fishpits
	UserVars.cigames[:rooms]			 = Array[26591,27571,27572,27573]
	UserVars.cigames[:nextrooms]		 = Array[27574,27575,27576,27577]
	UserVars.cigames[:activation]        = "pit"
	UserVars.cigames[:trash]         	 = "hole"
end

def watercannons
	UserVars.cigames[:rooms]			 = Array[27574,27575,27576,27577]
	UserVars.cigames[:nextrooms]		 = Array[26531,27557,27558,27559]
	UserVars.cigames[:activation]        = "cannon"
	UserVars.cigames[:trash]         	 = "crag"
end

def tidepools
	UserVars.cigames[:rooms]			 = Array[26531,27557,27558,27559]
	UserVars.cigames[:nextrooms]		 = Array[27560,27561,27562,27563]
	UserVars.cigames[:activation]        = "crevasse"
	UserVars.cigames[:trash]         	 = "hole"
end

def balloondarts
	UserVars.cigames[:rooms]			 = Array[27560,27561,27562,27563]
	UserVars.cigames[:nextrooms]		 = Array[27564,27566,27565,26593]
	UserVars.cigames[:activation]        = "dart"
	UserVars.cigames[:trash]         	 = "crag"
end

def checkhands

	if $frontend == 'stormfront'
		fam_window_begin = "<pushStream id=\"loot\" ifClosedStyle=\"watching\"/>"
		fam_window_end   = "<popStream/>\r\n"
	else
		fam_window_begin = "\034GSe\r\n"
		fam_window_end   = "\034GSf\r\n"
	end

	if GameObj.right_hand.noun =~ /seashells/
		fput "rummage my bucket"
		line = get
		if line =~ /You find (.*) new seashells/
			puts("#{fam_window_begin}Found #{$1} seashells.\r\n#{fam_window_end}")
		end
	#Keep List
	elsif GameObj.right_hand.name =~ /silvery grey parchment|mithril pendant|rouge sphere|slim silver bracelet|spinewood wand/
		puts("#{fam_window_begin}Found #{GameObj.right_hand.noun}.\r\n#{fam_window_end}")
		fput "put #{GameObj.right_hand.noun} in my #{Vars.keepsack}"				
	elsif GameObj.right_hand.noun =~ /contract|corkscrew|fishbone|kit|limb|salve|talisman/
		puts("#{fam_window_begin}Found #{GameObj.right_hand.noun}.\r\n#{fam_window_end}")
		fput "put #{GameObj.right_hand.noun} in my #{Vars.keepsack}"				
	#Trash List
	elsif GameObj.right_hand.name =~ /walnut case|silver case/
		puts("#{fam_window_begin}Found trash.\r\n#{fam_window_end}")
		fput "put #{GameObj.right_hand.noun} in #{UserVars.cigames[:trash]}"
		fput "put #{GameObj.right_hand.noun} in #{UserVars.cigames[:trash]}"
	elsif GameObj.right_hand.noun =~ /runestone/
		puts("#{fam_window_begin}Found trash.\r\n#{fam_window_end}")
		fput "put #{GameObj.right_hand.noun} in #{UserVars.cigames[:trash]}"
	elsif GameObj.right_hand.noun =~ /runestone|vase/
		puts("#{fam_window_begin}Found trash.\r\n#{fam_window_end}")
		fput "put #{GameObj.right_hand.noun} in #{UserVars.cigames[:trash]}"
		fput "put #{GameObj.right_hand.noun} in #{UserVars.cigames[:trash]}"
	#Sell List
	elsif GameObj.right_hand.name =~ /pale driftwood wand|silvery-grey orb|driftwood hairsticks|waterstained scroll|grey sheet of vellum|solid silver mockingbird pin|iron signet ring|mint brocade jacket|velveteen cloak|damask cloak|crystal potion|lavender sphere|hazy black sphere|orange sphere|blood red sphere/
		fput "put #{GameObj.right_hand.noun} in my #{Vars.lootsack}"			
	elsif GameObj.right_hand.noun =~ /amulet|bag|baldric|belt|bones|boomerang|bouquet|bracelet|cloak|cord|dice|earcuff|flask|footwraps|gown|greaves|handflower|handwraps|heater|knapsack|loupe|marionette|mask|pauldrons|pomander|satchel|scroll|serwals|sigil|skirt|tower|veil|vellum|wizard/
		fput "put #{GameObj.right_hand.noun} in my #{Vars.lootsack}"		
	else
		fput "put #{GameObj.right_hand.noun} in my #{Vars.lootsack}"					
	end
end

def roomcheck
	if Room.current.id == 27564
		eelbeds
	elsif Room.current.id == 27566
		eelbeds
	elsif Room.current.id == 27565
		eelbeds
	elsif Room.current.id == 26593
		eelbeds
	elsif Room.current.id == 27567
		whackyeels
	elsif Room.current.id == 27568
		whackyeels
	elsif Room.current.id == 27569
		whackyeels
	elsif Room.current.id == 27570
		whackyeels
	elsif Room.current.id == 26591
		fishpits
	elsif Room.current.id == 27571
		fishpits
	elsif Room.current.id == 27572
		fishpits
	elsif Room.current.id == 27573
		fishpits
	elsif Room.current.id == 27574
		watercannons
	elsif Room.current.id == 27575
		watercannons
	elsif Room.current.id == 27576
		watercannons
	elsif Room.current.id == 27577
		watercannons
	elsif Room.current.id == 26531
		tidepools
	elsif Room.current.id == 27557
		tidepools
	elsif Room.current.id == 27558
		tidepools
	elsif Room.current.id == 27559
		tidepools
	elsif Room.current.id == 27560
		balloondarts
	elsif Room.current.id == 27561
		balloondarts
	elsif Room.current.id == 27562
		balloondarts
	elsif Room.current.id == 27563
		balloondarts
	elsif Room.current.id == 26478
		fput "withdraw #{UserVars.cigames[:amount]} silver"
		waitfor "The teller carefully records the transaction, and then hands you"
		start_script "go2", [ StartRooms.sample ]
		wait_while { running? 'go2' }
		roomcheck
	else
		start_script "go2", ['26478']
		wait_while { running? 'go2' }
		if Room.current.id == 26478
			fput "withdraw #{UserVars.cigames[:amount]} silver"
			waitfor "The teller carefully records the transaction, and then hands you"
			start_script "go2", [ UserVars.cigames[:nextrooms].sample ]
			wait_while { running? 'go2' }
			roomcheck
		end
	end
end

if variable[1].downcase == "help"
	respond "SYNTAX - ;ci_games"
    respond 'Start the script while on EG grounds.'
	respond 'This script will withdraw silvers and rotate between the games.'
	respond ''
    respond 'It defaults to withdrawing 50000 silvers.'
    respond 'To change the amount of silvers to withdraw.'
    respond ';e echo UserVars.cigames[:amount] = 100000'
	respond ''
    respond 'It will attempt to pause on T5/jackpot wins.'
	respond "It does NOT automatically sell, as I'm not taking on that responsibility of choosing for you."
    respond 'You will have to empty your containers via selling/lockering stuff away.'
	respond 'It will however trash certain items of little to no value.'
	respond ''
	respond 'Variables used:'
	respond 'These should be different, and do NOT use scripted containers.'
	respond ''
	respond 'Vars.keepsack = Where worthy items are stored'
	respond "Vars.keepsack is set to #{Vars.keepsack}"
	respond 'You can change this by typing -- ;vars set keepsack=container'
	respond ''
	respond 'Vars.lootsack = Where sellable items are stored'
	respond "Vars.lootsack is set to #{Vars.lootsack}"
	respond 'You can change this by typing -- ;vars set lootsack=container'
	respond ''
	respond 'Seashells will be automatically placed in a seashell bucket.'
	respond ''
	respond 'Send me a PM if you find bugs -- http://forum.gsplayers.com/private.php?do=newpm&u=11359 --'
	respond 'I also appreciate positive feedback! -- http://forum.gsplayers.com/reputation.php?do=addreputation&p=2031292 --'
	respond ';ci_games if you are satisfied with this setup.'
	exit
end

roomcheck

loop {
	result = dothistimeout "get #{UserVars.cigames[:activation]}", 5, /Not having the coins with you|manage to get nothing more than a handful of slime|manage to get a pinched grip upon its dorsal fin|manage to get a slippery grip on its tail|manage to get both hands around its middle|You quickly swing the stick around and manage to hit a pair of eels|You quickly swing the stick around and manage to hit four eels|You quickly swing the stick around and manage to hit six eels|You quickly swing the stick around and manage to hit eight eels|you clamp down hard, pulling out a fleshy pink sea pig|you clamp down hard, pulling out a light coral coffinfish|you clamp down hard, pulling out a transparent barreleye fish|you clamp down hard, pulling out a fleshy pink blobfish|which fills about a quarter of the way to full with water|which fills about a third of the way to full with water|which fills halfway to full with water|which almost completely fills with water|you pull a rough barnacle-laced rock out of the crevasse|you pull a periwinkle hermit crab|you pull a spindled silvery-grey nautilus shell|you pull a needle-nosed grey ghostfish|a goofy joker sticking out of the point|a red-suited knave sticking out of the point|a black-dressed queen sticking out of the point|a red-suited king sticking out of the point/
	if result =~ /Not having the coins with you/
		start_script "go2", ['26478']
		wait_while { running? 'go2' }
		if Room.current.id == 26478
			fput "withdraw #{UserVars.cigames[:amount]} silver"
			waitfor "The teller carefully records the transaction, and then hands you"
			start_script "go2", [ UserVars.cigames[:nextrooms].sample ]
			wait_while { running? 'go2' }
			roomcheck
		end
	elsif result =~ /manage to get nothing more than a handful of slime|You quickly swing the stick around and manage to hit a pair of eels|you clamp down hard, pulling out a fleshy pink sea pig|which fills about a quarter of the way to full with water|you pull a rough barnacle-laced rock out of the crevasse|a goofy joker sticking out of the point/
		waitrt?
	elsif result =~ /manage to get a pinched grip upon its dorsal fin|manage to get a slippery grip on its tail|manage to get both hands around its middle|You quickly swing the stick around and manage to hit four eels|You quickly swing the stick around and manage to hit six eels|You quickly swing the stick around and manage to hit eight eels|you clamp down hard, pulling out a light coral coffinfish|you clamp down hard, pulling out a transparent barreleye fish|you clamp down hard, pulling out a fleshy pink blobfish|which fills about a third of the way to full with water|which fills halfway to full with water|which almost completely fills with water|you pull a periwinkle hermit crab|you pull a spindled silvery-grey nautilus shell|you pull a needle-nosed grey ghostfish|a red-suited knave sticking out of the point|a black-dressed queen sticking out of the point|a red-suited king sticking out of the point/
		waitrt?
		#wait_until { checkright != nil }
		wait_until{GameObj.right_hand.name != 'Empty' || GameObj.left_hand.name != 'Empty'}
		checkhands
	elsif result =~ /you pull a mucus-coated bright green baby eel/
		respond "You won a T5 or a Jackpot!!"	
		respond "You won a T5 or a Jackpot!!"	
		respond "You won a T5 or a Jackpot!!"	
		respond "You won a T5 or a Jackpot!!"	
		respond "You won a T5 or a Jackpot!!"	
		pause_script
	else
		respond "What happened?  Did you WIN A BIG PRIZE??"
		pause_script
	end
}

