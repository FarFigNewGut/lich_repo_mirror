=begin

	A script to help with CoL stuff. You can use:
		;col in
		;col out
		;col poohbah
		
	Using ;col by itself will attempt to do or turn in whatever task you're on.
	If it's skinning you must have the skins in your lootsack. ;set change lootsack <sack>
	
	# Name: CoL Helper
	# Author: Fib
	# Category: society, utility
	# Tags: council of light, col, council
	# Version: 0.2

	changelog:
		0.2 (2015-02-14):
			remove "return" from procs for Ruby 2.0 compatibility (Tillmen)
			add questions and answers (DaCapn)

=end

qna = {
	"A granite bench that serves a dual purpose as a grave marker sits between a pair of what sort of plants?" => "Junipers",
	"What creature's skull adorns the wall in The Legendary Rest's Desert Evening Room?" => "Minotaur",
	"What type of trees grow in the orchard?" => "Apple",
	"What fruit grows in the orchard?" => "Apples",
	"Where can one buy a blackjack?" => "Armory",
	"What colour hair does Holly have?" => "Auburn",
	"Where can you find Rolly Siphter?" => "Bakery",
	"Girvahk's shop widely known for his?" => "Bar",
	"What do the ants encase near the lake?" => "Basket",
	"What can be found lying around empty carts in the orchard?" => "Baskets",
	"What does Ayniya carefully dab?" => "Beeswax",
	"What color is the boulder in the apple tree orchard?" => "Black",
	"What colour is Ronan's gate?" => "Black",
	"What colour eyes does Rolly have?" => "Blue",
	"What colour is the North Wall?" => "Blue",
	"What colour is the sphere?" => "Blue",
	"What is Kelph displaying?" => "Bluebird",
	"What can you find at the mouth of the pit?" => "Bones",
	"What can be seen littering a field on the west road?" => "Boulders",
	"What hangs above the armory?" => "Breastplate",
	"What colour is Kelph's hair?" => "Brown",
	"What is the curtain made of in the Ancient Shrine?" => "Burlap",
	#"What color is Ayniya's hair?" => "Chestnut",
	"What colour is Ayniya's hair?" => "Chestnut", # Fixed
	"What do the parents tend as depicted by the panels?" => "Children",
	"What can you find Holly selling?" => "Chocolate",
	"To what type of road does the tower lead?" => "Cobblestone",
	"What can you find littering the dunes in the pine forest?" => "Cones/Branches",
	"Walsor's store is a _______ store." => "Corner",
	"What is the woodcrafter's last name?" => "Crafyien",
	"What colour is Kai's gate?" => "Crimson",
	"What colour is the gate outside of Kai's temple?" => "Crimson",
	"What creature is commonly seen in the orchard?" => "Daggerbeak",
	"Where can you buy a narrow gold ring?" => "Darbo",
	"What is the armourer's name?" => "Dargeur",
	"From whose shop can you purchase a visored helm?" => "Dargeur",
	"In what state of condition is the house by the lake?" => "Disrepair",
	"What covers Tyalosa?" => "Dust",
	"Marsaena is a member of the _________ race." => "Dwarven",
	"What colour is the gate to Vornavis?" => "Ebony",
	"Dargeur is a member of the _________ race." => "Elven",
	"To what race does the lone fisherman belong?" => "Elven",
	"The night comes softly with her velvety cloak, wrapping me in warm ______?" => "Embrace",
	"What surrounds the local school?" => "Fence",
	"What plant, growing in the lower fields, emits an aromatic scent from its tiny yellow flowers?" => "Fennel",
	"What can you find opposite the bar in Girvahk's?" => "Fireplace",
	"Along the forest road there is a boulder, what shape does it resemble?" => "Fist",
	"What does the merchant Beltheine sell?" => "Flowers",
	"How many different cakes can you buy from the baker?" => "Four",
	"Red is a member of the ________ race." => "Giantman",
	"What does Nerm have on his chin?" => "Goatee",
	"What color is the thatch on the cottage near the orchard?" => "Golden",
	"Where can you buy thrak hide boots?" => "Gornissa",
	"Who is the cobbler of Solhaven?" => "Gornissa",
	"What does Kahlyr wear?" => "Gown",
	"What colour gown does Ayniya wear?" => "Green",
	"What colour vest does Turask have on?" => "Green",
	"Along the coast, near the foggy valley what colour tint do the trees appear?" => "Grey",
	"What colour are Walsor's suspenders?" => "Grey",
	"What colour is Jyhm's hair?" => "Grey",
	"The pawnbroker's last name is _______?" => "Gryhm",
	#"What kind of captain wanders the town?" => "Guild",
	"What sort of Captain wanders through town?" => "Guild", # Fixed
	"What race does Rolly belong to?" => "Halfling",
	"What kind of bushes can you find on the west road?" => "Holly",
	"What structure stands near the lake?" => "House",
	"What colour is Vlodimm's voice?" => "Ivory",
	"What is the name of the locksmith?" => "Jyhm",
	"The name of the jeweler is _____?" => "Kahlyr",
	"From whose shop can basal moss be purchased?" => "Kelph",
	"What are the swans doing in front of the temple?" => "Kissing",
	"What type of pond can you find in Ronan's courtyard?" => "Koi",
	"What sort of skin does Will Oakum have?" => "Leathery",
	"From whom can you buy a flask of absinthe?" => "Lem",
	"What tree can be found budding?" => "Linden",
	"What type of tree is budding?" => "Linden",
	"Depicted in the panels, what did the woodsman chop?" => "Lumber",
	"What does the woodsman cut as depicted by the panels?" => "Lumber",
	"What is the old woman's name?" => "Mabel",
	"What type of weapon is displayed in the case in Grivahk's?" => "Mace",
	"Turask's last name is ____________?" => "Maldib",
	"Who is the weaponsmith?" => "Marsaena",
	"The poor section of town is called ________?" => "MarshTown",
	"From what metal is the anvil at the museum made of?" => "Mithril",
	"What is on the ceiling of the basement in the museum?" => "Moss",
	"What is Gornissa's gown made from?" => "Muslin",
	"Who is the apprentice Locksmith?" => "Nerm",
	"What do the fisherman pull as depicted by the panel?" => "Nets",
	"What color is Dargeur's apron?" => "Off-grey",
	"What temple do the kissing swans lead to?" => "Oleani",
	"What is the white swan sitting on some copper gates, made from?" => "Ora",
	"What colour are Turask's boots?" => "Orange",
	"What is wrong with the cat?" => "Peglegged",
	"What spans the canal beneath the trees?" => "Planks",
	"What is outside of Saragassa's cottage?" => "Plaque",
	"What critter can be found in Dargeur's shop?" => "Rat",
	"Ouslanders garb is owned by _________." => "Red McKrieg",
	"Tyalosa's last name is ________?" => "Rhus",
	"What is the bell doing on the South Beach?" => "Ringing",
	"What colour are the windows and awnings on Triton road?" => "Rose",
	"What colour is Gertie's apron?" => "Saffron",
	"Who used to live in the house by the lake?" => "Sailor",
	"The water in the Caverns contains what?" => "Salt",
	"What can be seen surrounding a tower?" => "Scaffold",
	"Lem's Clothes hang on him like a _______ ?" => "Scarecrow",
	"What can you find standing near the surf on the South Beach?" => "Seagulls",
	"What does Walsor jingle?" => "Silver pieces",
	"What is Lem's last name?" => "Skinker",
	"What does Tynira sell?" => "Slippers",
	"What do the farmers till as depicted by the panels?" => "Soil",
	"What has Kelph captured and displays for all to see?" => "Songbird",
	"What does Walsor have protruding?" => "Stomach",
	"What is Darbo's cottage made of?" => "Stone",
	"A ring of ______ can be found on Jag Point." => "Stones",
	"How many spheres can you find above the door at Walsors?" => "Three",
	"Precise stitches is Tynira's ______?" => "Trademark",
	"What is behind the altar in Charl's Quay?" => "Trident",
	"What does Turask have on his head?" => "Turban",
	"From whom can a pair of saffron slippers be purchased?" => "Tynira",
	"What is the famed Banaltra's cage made out of?" => "Vultite",
	"What could the Broken tower once have been?" => "Watchtower",
	"What can be found dripping to the floor in the Caverns?" => "Wax",
	"What is mounted on the walls of Girvahk's shop?" => "Weapons",
	"What can you find lying off the path to the north on the forest road?" => "Wheel",
	"What colour is the dais in Lorminstra's temple?" => "White",
	"What colour is the library?" => "White",
	"What surrounds the school?" => "Yard",
	"How long has Gornissa owned her shop?" => "Years",
	"What color ribbon does Kelph use to tie her hair?" => "Yellow",
}
items = { 
	'gold lockpick' => [ 10434 ],
	'heavy backpack' => [ 17290 ],
	'flowing white robe' => [ 12350 ],
	'arm greaves' => [ 12350 ],
	'tarnished silver wand' => [ 10364 ],
	'reinforced shield' => [ 12350 ],
	'chain hauberk' => [ 12350 ],
	'metal aventail' => [ 12350 ],
	'leather breastplate' => [ 12350 ],
	'crystal amulet' => [ 10364 ],
	'war hammer' => [ 10367 ],
	'small chest' => [ 17290 ]
}

poohbah_locs = [ 4593 ]
col_entrances = [ 5922 ]

def holding?(item)
	item = item.to_s
	right = GameObj.right_hand
	left = GameObj.left_hand
	
	right.id.to_s == item or left.id.to_s == item or
	right.noun == item or left.noun == item or
	right.name == item or left.name == item
end

shortest_path_from_list = proc { |target_list|
	least_time = nil
	least_target = nil
	previous, shortest_distances = Map.dijkstra(Room.current.id)
	for target in target_list
		target = target.to_i
		if Room.current.id == target
			est_time = shortest_distances[target]
			if !est_time.nil? and (least_time.nil? or least_time > est_time)
				least_target = target
				least_time = est_time
			end
		else
			least_target = target
		end
	end				
	least_target
}

go2 = proc { |room|
	next if Room.current.id.to_s == room.to_s
	waitrt?

	wait_while{ running?('go2') }
	start_script('go2', [ room.to_s, '_disable_confirm_' ]);
	wait_while{ running?('go2') }
}
poohbah = proc { 
	go2.call(shortest_path_from_list.call(poohbah_locs))
}

@@entrance = shortest_path_from_list.call(col_entrances)

get_item = proc { |item, count|
	go2.call('bank')
	fput "withdraw 16000 silvers"
	
	go2.call(shortest_path_from_list.call(items[item]))
	
	number = nil
	dothistimeout "order", 1, /You can APPRAISE/
	
	reget(20).each { |line| number = $1 if line =~ /(\d+)\. (?:a|an|some) (?:#{item})/ }
	
	if number.nil?
		echo '-- COL: unable to find item to buy', :all
		exit
	end
	
	fput "order #{count} of #{number}"
	fput "buy"
	fput "get package" unless holding?('package')
	
	go2.call('bank')
	fput "deposit all"
}

go2_col = proc {
	next if GameObj.npcs.find { |npc| npc.name =~ /Taskmaster/ }
	go2.call(@@entrance)
	
	if Room.current.id == 5922
		line = fput "go niche"		
		if line =~ /It was very dark and cramped in the niche/
			go2.call('town')
			echo '-- COL: not able to enter yet', :all
			exit
		end
		
		multifput 'touch pointed stone','push pointed stone','push small stone','push round stone','push long stone','push thick stone','push flat stone'
		move 'go hallway'
		move 'n'
		move 'n'
	end
}

out_col = proc {
	#return unless checkarea =~ /Catacombs/ or checkarea =~ /Wine Cellar/
	
	npc = GameObj.npcs.first
	case npc.noun
		when /Services/
			move 'e'
		when /Gifts/
			move 's'
		when /Inquisitor/
			move 'w'
		when /Taskmaster/
		else
			next
	end
	
	if checkarea =~ /Catacombs/
		move 's'
		move 's'
		fput "stand"
		move 'go hallway'
		move 'out'
		fput 'search'
		move 'go crevice'
		go2.call('town')
	else
		go2.call('1481')
	end
}

offer_gift = proc {
	package = nil
	if checkleft =~ /package/
		package = GameObj.left_hand
	elsif checkright =~ /package/
		package = GameObj.right_hand
	end
	
	if package.nil?
		echo '-- COL: no package to give items with'
	end
	
	fput 'open package'
	fput 'look in package'
	package.contents.each { |obj|
		fput "get ##{obj.id}"
		fput "put ##{obj.id} on altar"
		fput "offer ##{obj.id}"
	}
	fput 'drop package'
	fput 'drop package' if checkleft =~ /package/ or checkright =~ /package/
}

get_task = proc {
	dothistimeout 'society task', 3, /You have been tasked|Report to the/
}

if not (checkright =~ /package/ and checkleft.nil?) or (checkleft =~ /package/ and checkright.nil?)
	empty_hands
end

if script.vars[1] =~ /^out$/i
	out_col.call
	exit
elsif script.vars[1] =~ /^in$/i
	go2_col.call
	exit
elsif script.vars[1] =~ /^poohbah$/i
	poohbah.call
	exit
elsif script.vars[1] =~ /^help|\?$/i
end

line = get_task.call
case line
	when /Report to the High Taskmaster/
		if GameObj.npcs.find_all { |npc| npc.noun =~ /Taskmaster/ }.size > 0
			out_col.call
		else
			go2_col.call
		end
	when /Report to the Master of Gifts/
		go2_col.call
		move 'n'
		
		loop {
			line = get_task.call
			break if line !~ /Report to the Master of Gifts/
			
			sleep 1
		}
		
		move 's'
		out_col.call
	when /Report to the Master of Services/
		go2_col.call
		move 'w'
		
		loop {
			line = get_task.call
			break if line !~ /Report to the Master of Services/
			
			sleep 1
		}
		
		move 'e'
		out_col.call
	when /present the Master of Services with (\d+) more (.*)\./	
		count = $1
		skin = $2.gsub(/s$/, '')
		
		out_col.call
		
		skinsack = GameObj[UserVars.lootsack]
		fput "open ##{skinsack.id}"
		if skinsack.contents.nil?
			fput "look in ##{skinsack.id}"
		end
		
		skins = skinsack.contents.find_all { |obj| obj.name =~ /#{skin}/}
		if skins.size >= count.to_i
			go2_col.call
			move 'w'
			
			count.to_i.times { 
				skin = skins.shift
				fput "get ##{skin.id}"			
				fput "offer ##{skin.id}"
			}
		end
		
		move 'e'
	when /present the Master of Gifts with (\d+) more offerings? of (?:a|an|some) (.*)\./
		item = $2
		count = $1
		
		unless checkleft =~ /package/ or checkright =~ /package/
			out_col.call
			get_item.call(item,count)
		end
	
		go2_col.call
		
		move 'n'
		offer_gift.call
		move 's'
	when /Grand Inquisitor/
		go2_col.call
		
		move 'e'
		waitfor "#{Char.name}"
		reget(30).each { |line| qna.each_pair { |q,a| fput "answer #{a}" if line.include?(q) } }
		
		start_time = Time.now.to_f
		line = nil
		loop {
			if reget(1) =~ /The #{GameObj.npcs[0].noun}/
				line = reget(1)
				break
			end
			break if Time.now.to_f - start_time > 1
		}
		
		unless line =~ /Congratulations/
			echo '-- COL: you fucked up', :all
			exit
		end
end

fill_hands

