arena_script = "dr-#{Char.name.downcase}"
lootsack = GameObj.inv.find { |i| i.noun == 'cloak' }

empty_package = proc do
    if checkleft or checkright
        fput "store all"
    end

    if checkleft !~ /package/ and checkright !~ /package/
        fput "stow all"
        fput "get package"
    end
    
    fput "open my package"

    if not GameObj.right_hand.contents
        fput "look in my package"

        30.times do
            if GameObj.right_hand.contents
                break
            end
            sleep 0.10
        end
    end

    echo '--------------------------------'
    GameObj.right_hand.contents.each do |i|
        echo i.name
        fput "_drag ##{i.id} ##{lootsack.id}"
    end
    echo '--------------------------------'

    waitrt?

    fput "drop package"
    sleep 1

    if checkleft =~ /package/ or checkright =~ /package/
        echo 'not empty'
        exit
    end
end

go2dr = proc {
    if Room.current.location !~ /Bloodriven Village|Duskruin/i
        Script.run('go2', 'town')
        fput "quest transport duskruin"
        fput "quest transport duskruin"
    end

    if Room.current.location !~ /Bloodriven Village|Duskruin/i
        echo '** failed to transport to duskruin'
        exit
    end

    sleep 1

    # in arena exit
    if Room.current.id == 23798 and (checkleft =~ /package/ or checkright =~ /package/)
        empty_package.call()
    # in wagon
    elsif Room.current.id == 25184
        kill_script('salert') if running?('salert')
        wait_while { Room.current.id == 25184 }
        start_script('salert')
    end
}

pawn = proc {
    if Room.current.location =~ /Bloodriven Village|Duskruin/
        Script.run('go2', '26905')
        fput "go wagon"
    end

    fput "store all" if checkleft or checkright
    fput "stow all" if checkleft or checkright

    Script.run('go2', 'pawnshop')

    lootsack.contents.each { |i|
        if i.type.include?('uncommon') or i.type.include?('clothing') or i.type.include?('jewelry') or i.type.include?('armor') or i.type.include?('weapon')
            fput "_drag ##{i.id} right hand"
            res = dothistimeout "appraise ##{i.id}", 3, /I've no use|How's \d+ silvers sound|I'll give you \d+|but I'll offer you 35,000|Can't say|I already quoted \d+/
            sell = false
            mark = true

            if res =~ /I'll give you \d+ silvers|How's \d+ silvers sound|I'll give you \d+/
                sell = true
            elsif res =~ /that's worth at least (\d+)/
                value = $1.to_i
                required = 50000

                if i.type =~ /katana/
                    required = 200000
                elsif i.type =~ /armor/
                    required = 250000
                elsif i.type =~ /weapon/
                    required = 100000
                end

                if value < required
                    sell = true
                end
            elsif res =~ /Can't say|I've no use/
                mark = false
            end

            if sell
                fput "sell ##{i.id}"
            else
                if mark
                    fput "mark ##{i.id}"
                end

                fput "_drag ##{i.id} ##{lootsack.id}"
            end
            
            sleep(0.5)

            if GameObj.left_hand.name =~ /note/
                fput "_drag ##{GameObj.left_hand.id} ##{lootsack.id}"
            elsif GameObj.right_hand.name =~ /note/
                fput "_drag ##{GameObj.right_hand.id} ##{lootsack.id}"
            end
        end
    }

    start_script('go2', ['bank'])
    wait_while { running?('go2') }
    fput "deposit all"

    sleep 5

    if percentencumbrance > 0
        echo '-- failed to reduce encumbrance'
        echo '-- time to unload!'
        exit
    end
}

get_token = proc {
    if percentencumbrance > 0
        Script.run('go2', '23717')
        fput "go wagon"
        pawn.call()
        go2dr.call()

        next get_token.call()
    end

    start_script('go2', ['23780'])
    wait_while { running?('go2') }

    jar = lootsack.contents.find { |i| i.name =~ /dueling slip|rat token jar|dueling slip booklet|stamped voucher booklet/ }
    if jar.nil?
        echo 'out of jars'
        exit
    end

    fput "store all" if checkleft or checkright
    fput "stow all" if checkleft or checkright
    fput "get ##{jar.id} from ##{lootsack.id}"
    fput "shake ##{jar.id}" if jar.name =~ /token/
    fput "tear ##{jar.id}" if jar.name =~ /book/
    fput "stow ##{jar.id}" if jar.name !~ /slip/
}

fight = proc {
    if not Script.running?('salert2')
        Script.start('salert2')
    end

    Spell['POPed Muscles'].timeleft = 0

    fput 'gird'
    $shunt.clear_aim()

    need_watch = false

    watch_thr = Thread.new do
        while true
            if reget.reverse[0..5].any? { |l| l =~ /you (roll|bob|lean|back pedal|jump|duck)|(?:enter|enters) the arena/ }
                need_watch = true
            else
                sleep(0.1)
            end
        end
    end

    watch = proc do
        if Room.current.id != 24550
            $salert.message('You entered an unknown room, exiting arena!')
            exit
        end

        GameObj.npcs.each do |npc|
            waitrt?
            res = dothistimeout "watch ##{npc.id}", 1, /\.\.\.wait|cannot concentrate well enough|You are still stunned|back pedal|bob back and forth|lean out of the way|try to duck down|roll out of the way|prepare to jump|doesn't appear to be up to anything|looking for any untoward activities|You've already spotted|watching your every move|You survey your surroundings carefully, looking for any untoward activities.|You watch a(?:.*) closely for a moment./
            if npc.status =~ /dead|gone/
                break
            elsif res =~ /back (pedal)|(bob) back and forth|(lean) out of the way|try to (duck) down|(roll) out of the way|prepare to (jump)/
                waitrt?
                fput "#{$+.split.last}"
                break
            elsif res =~ /You've already spotted|watching your every move|cannot concentrate well enough|You cannot do that while berserking.|You survey your surroundings carefully, looking for any untoward activities.|You watch a(?:.*) closely for a moment./
                break
            elsif res =~ /...wait|You are still stunned|doesn't appear to be up to anything/
                sleep 1				
            elsif Room.current.id != 24550
                break
            else
                echo res
                echo "Something went wrong, report me"
                echo ""
                break
            end
        end

        need_watch = false
    end

    loop do
        if Room.current.id == 23797
            $salert.message('You died in the arena!')
            if Script.running?(arena_script)
                Script.kill(arena_script)
            end
            exit
        elsif Room.current.id != 24550
            $salert.message('You entered an unknown room, exiting arena!')
            exit
        end

        wait_until { GameObj.npcs.length > 0 }

        if GameObj.npcs.find { |npc| npc.name =~ /scripmaster|healer/ }
            break
        end

        if need_watch and GameObj.npcs.first.status !~ /stunned/i
            watch.call()
        end

        # temporary buff items
        if not Spell[211].active? and bourbon = lootsack.contents.find { |i| i.name =~ /bourbon/ }
            fput "_drag ##{bourbon.id} right hand"
            fput "drink ##{bourbon.id}"
            fput "_drag ##{bourbon.id} ##{lootsack.id}"
        end

        if not Spell[215].active? and vodka = lootsack.contents.find { |i| i.name =~ /vodka/ }
            fput "_drag ##{vodka.id} right hand"
            fput "drink ##{vodka.id}"
            fput "_drag ##{vodka.id} ##{lootsack.id}"
        end

        if not Spell[1109].active? and whiskey = lootsack.contents.find { |i| i.name =~ /whiskey/ }
            fput "_drag ##{whiskey.id} right hand"
            fput "drink ##{whiskey.id}"
            fput "_drag ##{whiskey.id} ##{lootsack.id}"
        end

        if not Spell[509].active? and crystal = lootsack.contents.find { |i| i.name =~ /white crystal/ }
            fput "_drag ##{crystal.id} right hand"
            fput "rub ##{crystal.id}"
            fput "_drag ##{crystal.id} ##{crystal.id}"
        end

        Script.run(arena_script)

        if GameObj.npcs.find { |npc| npc.status =~ /dead/ } or $_SERVERBUFFER_.reverse[0..10].find { |l| l =~ /lumbers in and drags/i }
            echo '-- success!'
            $shunt.clear_aim()

            # clear dangerous weapons
            need_get = false
            need_watch = true
            
            GameObj.loot.each do |loot|
                if loot.type =~ /weapon/
                    fput "stow right" if checkright
                    fput "get ##{loot.id}"
                    need_get = true
                end
            end

            if need_get
                fput "gird"
            end

            echo '-- waiting for new target'
            wait_until { GameObj.npcs.find_all { |npc| npc.status !~ /dead/ }.length > 0 or Room.current.id == 23798 }
        end

        if Room.current.id == 23798
            break
        end
    end

    watch_thr.exit

    if Script.running?(arena_script)
        Script.kill(arena_script)
    end
}

if script.vars[1] == 'pawn'
    pawn.call()
elsif script.vars[1] == 'dig'
    go2dr.call()

    fput "store all" if checkleft or checkright
    fput "stow all" if checkleft or checkright
    fput "get pickaxe from ##{lootsack.id}"

    Script.run('duskdigbin')
elsif script.vars[1] == 'arena'
    if not Script.exists?(arena_script)
        echo "** failed to find attack script for arena: #{arena_script}"
        exit
    end

    if Room.current.id != 24550
        if percentencumbrance > 0
            pawn.call()
        end

        go2dr.call()
    end

    loop do
        if Room.current.id != 24550
            get_token.call()
            Script.run('waggle')
            wait_until { checkmana(maxmana) }
            waitcastrt?
            sleep 3
            fput "go entrance"
            waitfor "An announcer shouts"
            fput "shout"
        end

        fight.call()
        empty_package.call()

        if saturated?
            waitrt?
            fput "boost longterm"
            fput "boost longterm"
        end
    end
elsif script.vars[1] == 'sell'
    fput "stow all"

    lootsack.contents.each { |i|
        npc = GameObj.npcs.find { |npc| npc.name =~ /archaeologist|adventurer/ }

        if npc.name =~ /archaeologist/ 
            if i.name !~ /\b(?:balenite|chunk|moon|flat etched stone|cracked ur-barath stone|fragment|sliver|shard|sphere|strip|totem|nugget)\b/
                next
            end

            if i.name =~ /shard of alexandrite|chunk of balenite|lilac-toned amethyst|greyish green malachite|fire agate|forest jade/
                next
            end
        elsif npc.name =~ /adventurer/
            if i.name !~ /\b(?:blue feather-shaped charm|squat pale grey crystal bottle|contract|pack|twisting blue-green potion)\b/
                next
            end
        else
            echo "** failed to find npc"
        end

        fput "get ##{i.id}"
        fput "give ##{i.id} to ##{npc.id}"
        fput "give ##{i.id} to ##{npc.id}"
    }
elsif script.vars[1] == 'sellgem'
    Script.run('go2', 'gemshop')

    lootsack.contents.each do |item|
        if item.name !~ /(?:jacinth|garnet|opal|pearl|lapis|bloodjewel|dreamstone|turquoise|geode|ora-bloom|sapphire|rosespar|blazestar|amber|sapphire|hyacinth|citrine|diamond|glimaerstone|amethyst|zircon|agate|heliodor|quartz|chrysoberyl|azurite|haon|peridot|moonstone|malachite|ametrine|emerald)$/
            next
        end

        fput "_drag ##{item.id} right"
        fput "sell ##{item.id}"
    end
end

