=begin
This script will check a list of enhancives and pour your blue-potion on any that aren't charged by a simucoin item.
You can add and remove things from your list by holding them in your right hand and using the arguments "add" or "remove"
You can see your list with the argument "list" and clear your list with arguement "clear"
Running the script without arguments will pour your potion on the items that need it.
Set your potionsack with ;e echo UserVars.bluegreen[:potionsack] = <sackname>

Script by Queatus, version 1

=end

UserVars.bluegreen                   ||= {}
UserVars.bluegreen[:itemszz]           = []   if UserVars.bluegreen[:itemszz].nil?
UserVars.bluegreen[:potionsack]        =	UserVars.lootsack   if UserVars.bluegreen[:potionsack].nil?

before_dying {UserVars.bluegreen[:itemszz].compact!}

if script.vars[0] =~ /help/i
respond "***** Usage ****"
respond "*ADD will add the item in your right hand to the list.  It will wear the item in the process"
respond "*REMOVE will remove the item in your right hand from the list.  It will wear the item in the process"
respond "LIST will show your list"
respond "CLEAR will clear your list"
respond ";e echo UserVars.bluegreen[:potionsack] = <sackname> will set your potion sack.  Will default to your lootsack."
respond "Just running the script will check your enhancives and pour your blue-green potion on those that are not currently charged by a potion"
exit
end

if script.vars[0] =~ /add/i
	if GameObj.right_hand.name.nil?
		echo "You need to hold a thing in your right hand to add it.  Exiting!"
		exit
	end
	respond "****ADDING ITEM IN YOUR RIGHT HAND****"	
	id_to_add = GameObj.right_hand.id
	fput "wear ##{id_to_add.to_s}"
	name_to_add = GameObj.inv.find { |item| item.id == id_to_add }
	UserVars.bluegreen[:itemszz] << name_to_add.name
	respond "***** Your list is currently the below******"
	UserVars.bluegreen[:itemszz].each { |item| respond "* #{item}" }
end

if script.vars[0] =~ /remove/i
	if GameObj.right_hand.name.nil?
		echo "You need to hold a thing in your right hand to add it.  Exiting!"
		exit
	end
	respond "****REMOVING ITEM IN YOUR RIGHT HAND****"
	id_to_add = GameObj.right_hand.id
	fput "wear ##{id_to_add.to_s}"
	name_to_add = GameObj.inv.find { |item| item.id == id_to_add }
	UserVars.bluegreen[:itemszz].delete("#{name_to_add.name}")
	respond "***** Your list is currently the below******"
	UserVars.bluegreen[:itemszz].each { |item| respond "* #{item}" }
end

if script.vars[0] =~ /list/i
	respond "***** Your list is currently the below******"
	UserVars.bluegreen[:itemszz].each { |item| respond "* #{item}" }
end

if script.vars[0] =~ /clear/i
	UserVars.bluegreen[:itemszz] = nil
	respond "****CLEARING LIST****"
	respond "***** Your list is currently the below******"
	UserVars.bluegreen[:itemszz].each { |item| respond "* #{item}" }
end


if script.vars[0] == nil
	if UserVars.bluegreen[:itemszz].length < 1
		echo "Your list is empty.  EXITING"
		exit
	end
	charge_list_ids = []
	fput "inventory enhancive list"
	waitfor "You are wearing the following enhancive items:"
	while line=get
		break if line =~ /Items:/
		object_to_charge = nil
		item_to_charge = nil
		if UserVars.bluegreen[:itemszz].each { |pattern| line =~ /#{pattern}/ }
			item_to_charge = UserVars.bluegreen[:itemszz].find { |item| line =~ /#{item}/i && line !~ /charged until/ }
			if item_to_charge != nil
				object_to_charge = GameObj.inv.find { |item| item.name =~ /#{item_to_charge}/ }
				if object_to_charge != nil
					charge_list_ids << object_to_charge.id
				end
			end
		end
	end
	if charge_list_ids.length >= 1
		empty_right_hand if GameObj.right_hand.noun != nil and GameObj.left_hand.noun != nil
		fput "get my blue-green potion"
		charge_list_ids.each { |number| multifput "pour my pot on ##{number.to_s}", "pour my pot on ##{number.to_s}" }
		fput "put my blue-green potion in my #{UserVars.bluegreen[:potionsack]}"
		fill_right_hand
	end
end

