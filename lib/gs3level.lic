=begin
GemStone III Level Script

	author: Xorus
	game: Gemstone
	version: 1.0
	date: 9/26/2019

This is a script that calculates what your level would have been in GemStone III with the same amount of XP.

It will also tell you:
- What your level in GemStone IV would have been without the cap at Level 100.
- How far you are from your next GemStone III and GemStone IV levels.
- How far you are from cap, or the next multiple of cap.
- When you have achieved a new level or cap increment.
=end
=begin
Automatic notifications from the script for new GemStone IV levels do not begin until after cap. 

GemStone III and GemStone IV levels will rarely happen simultaneously:

GemStone IV <-> GemStone III <-> Experience
Level 3     <-> Level 1      <-> 10,000 XP
Level 6     <-> Level 4      <-> 40,000 XP
Level 44    <-> Level 51     <-> 2,050,000 XP
Level 114   <-> Level 194    <-> 9,200,000 XP
Level 139   <-> Level 257    <-> 12,350,000 XP
Level 210   <-> Level 470    <-> 23,000,000 XP
Level 235   <-> Level 557    <-> 27,350,000 XP
Level 314   <-> Level 873    <-> 43,150,000 XP
Level 339   <-> Level 986    <-> 48,800,000 XP
Level 410   <-> Level 1341   <-> 66,550,000 XP
Level 435   <-> Level 1478   <-> 73,400,000 XP
Level 514   <-> Level 1952   <-> 97,100,000 XP
=end

oldXP = nil
line1 = nil
line2 = nil

nowTime = Time.now - 1
xpdummyold = xpdummy2old = xp = (Char.exp)
percentnext1 = 0
fractioncap = xp.fdiv(7572500)

loop {
	# Resets the dummy variables
	xp = (Char.exp)		# Calls current XP from data
	xpdummy = 0		# Counter for GemStone III level calculation
	xpdummy2 = 0		# Counter for GemStone IV level calculation
	gs3lvl = 0		# Stores calculated GemStone III level
	gs4lvl = 0		# Stores calculated GemStone IV level
	gs4lvlextended = 99	# Stores post-cap GemStone IV level, or else equals current pre-cap GemStone IV level
	increment = 5000	# Starting basis for increasing XP requirements for GemStone IV levels in calculation

	# Counts up a dummy variable using the GemStone III level progression rate until reaching your current XP to find GemStone III level
	while xp > xpdummy
		if (xpdummy < 10000)
			xpdummy = xpdummy + 10000
			gs3level = gs3level
		elsif (xpdummy < 50000)
			xpdummy = xpdummy + 10000
			gs3lvl = gs3lvl + 1
		elsif (xpdummy < 150000)
			xpdummy = xpdummy + 20000
			gs3lvl = gs3lvl + 1
		elsif (xpdummy < 300000)
			xpdummy = xpdummy + 30000
			gs3lvl = gs3lvl + 1
		elsif (xpdummy < 500000)
			xpdummy = xpdummy + 40000
			gs3lvl = gs3lvl + 1
		elsif (xpdummy < xp)
			xpdummy = xpdummy + 50000
			gs3lvl = gs3lvl + 1
		end
	end

	# Counts up a dummy variable using the GemStone IV level progression rate, assuming +500 per level past cap, to find GemStone IV level for your current XP
	while xp > xpdummy2
		if (gs4lvl < 2)
			xpdummy2 = xpdummy2 + 2500
			gs4lvl = gs4lvl + 1
			gs4lvlextended = gs4lvl
		elsif (gs4lvl < 14)
			xpdummy2 = xpdummy2 + increment
			increment = increment + 2500
			gs4lvl = gs4lvl + 1
			gs4lvlextended = gs4lvl
		elsif (gs4lvl < 24)
			xpdummy2 = xpdummy2 + increment
			increment = increment + 2000
			gs4lvl = gs4lvl + 1
			gs4lvlextended = gs4lvl
		elsif (gs4lvl < 39)
			xpdummy2 = xpdummy2 + increment
			increment = increment + 1500
			gs4lvl = gs4lvl + 1
			gs4lvlextended = gs4lvl
		elsif (gs4lvl < 49)
			xpdummy2 = xpdummy2 + increment
			increment = increment + 1000
			gs4lvl = gs4lvl + 1
			gs4lvlextended = gs4lvl
		elsif (gs4lvl < 101)
			xpdummy2 = xpdummy2 + increment
			increment = increment + 500
			gs4lvl = gs4lvl + 1
			gs4lvlextended = gs4lvl
		else
			xpdummy2 = xpdummy2 + increment
			increment = increment + 500
			gs4lvlextended = gs4lvlextended + 1
		end
	end


	# Checks to see if your XP to next GemStone III Level is greater than in the previous loop, which means you leveled
  	if xp > 9999
		if (xpdummy - xp) > xpdummyold
  			puts "#{monsterbold_start} You are now GemStone III level #{gs3lvl}!#{monsterbold_end}"
		end
  	end

	# Checks to see if your XP to next GemStone IV Level is greater than in the previous loop for post-cap XP, which means you leveled
 	 if xp > 7575000
  		if (xpdummy2 - xp) > xpdummy2old
			puts "#{monsterbold_start} You are now level #{gs4lvlextended - 1}!#{monsterbold_end}"
		end
  	 end

	# Stores the XP-to-next-level for the next loop, to check if you have leveled
	xpdummyold = xpdummy - xp
        xpdummy2old = xpdummy2 - xp

	# Cap alerts based on difference of values from previous loop. The first announces whole 1x achievements, the second announces 0.1x achievements.
	newfractioncap = xp.fdiv(7572500)
	multiplecap = newfractioncap.ceil

	# Bug - Repeats You are now Y.Zx cap! over and over. Fixed now with inclusion of new defs for percentnext1 and fractioncap
	if newfractioncap > 0.09
		if ( (newfractioncap - (newfractioncap).floor)*100 < percentnext1 )
			puts "#{monsterbold_start} You are now #{newfractioncap.round(0)}x cap!#{monsterbold_end}"
			percentnext1 = (fractioncap - fractioncap.floor)*100
		elsif ( ((newfractioncap*10).floor - (fractioncap*10).floor) == 1 )
			puts "#{monsterbold_start} You are now #{newfractioncap.round(1)}x cap!#{monsterbold_end}"
			fractioncap = newfractioncap
		end
	end

	# Waits for user to prompt for their experience, regular expression identifies it from incoming screen text
  	line1=matchtimeout 1, ("Experience:")
  	if line1 =~ /Experience:/
		# Delays a moment so the text appears only after giving status message about your mind
		line2=matchtimeout 1, ("Your mind")
		if line2 =! /Your mind/
			fractioncap = xp.fdiv(7572500)				# Fractional value of your XP relative to the amount for cap
			percentcap = fractioncap * 100				# Converts that fractional value into a percentage
			multiplecap = fractioncap.ceil				# Identifies the cap increment you are working on
			percentnext = percentcap.fdiv(multiplecap)		# Percent value of total way to next cap increment
			percentnext1 = (fractioncap - fractioncap.floor)*100	# Percent value of way between last and next cap increments
			respond "Your level in GemStone IV is presently:     Level #{gs4lvl - 1}"	
			respond "Your level in GemStone IV without the cap:  Level #{gs4lvlextended - 1}"		
			respond "Your level in GemStone III would have been: Level #{gs3lvl}"
			respond ""
			# Calculates how much XP to next level. Synchs with the game showing negative experience TNL, just isn't showing that as a negative number
			if xpdummy >= xp
				respond "Exp. until next GemStone III Level: #{xpdummyold}"
			end

			if xpdummy2 >= xp
				respond "Exp. until next GemStone IV Level: #{xpdummy2old}"
			end
			respond "You are #{percentnext1.round(3)}% of the way between #{multiplecap.round(0) - 1}x and #{multiplecap.round(0)}x cap."
			respond "You are presently #{fractioncap.round(2)}x cap, which is #{(percentnext.round(3))}% overall to #{multiplecap.round(0)}x cap."
		end					
  	end
  
	# Clears the line variables of their string content to reset for the next loop
  	line1.clear
  	line2.clear

	# Pauses the loop until your XP changes, beginning of loop recalculates the dummy variables
  	wait_while { oldXP == XMLData.next_level_text and ( Time.now - nowTime < 1) }
  	nowTime = Time.now

  	if oldXP != XMLData.next_level_text
       		
       		oldXP = XMLData.next_level_text       
  	end 
}
