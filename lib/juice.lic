=begin
    Ensorcell (735) Necrojuice Assistance
    Handy script to assist with juice info
	
    SYNTAX - ;juice <OPTION>
	
    OPTION Selections Include:
         BONUS - Prints off a chart showing your bonuses for enchanting
         CHART - Prints off ensorcell cast necrojuice cost chart for each tier
         CHANCE - Description Of Test Cast Readouts And Chance To Succeed
         ROLLS - Numeric Values For Roll Descriptions
         MATERIALS - Material Difficulty Modifiers
         CALC  - calculate cost for an ensorcell project from x to y
                 ;juice calc [starting tier] [ending tier]

     author: Elkiros (based off of ElanthiaOnline's ;tears script)
       name: juice
       tags: juice, necrojuice, ensorcell, ensorcelling, 735
    version: 1.1

    changelog:
        1.0 (2020-04-14)
            Initial release
        1.1 (2020-08-03)
            Added BONUS functionality

=end

juice_cost = ["10000", "15000", "20000", "25000", "30000"]
WEEK = 10000.0
PAD = 91

#Array of Material Modifiers [12, 4, 4, 4, 4, 4]
mat_list = [["Adamantine  ", "-500", "-500", "-500", "N/A ", "N/A "],
			["Alexandrite ", "-500", "0   ", "N/A ", "N/A ", "N/A "],
			["Black-alloy ", "0   ", "-50 ", "0   ", "N/A ", "N/A "],
			["Bone        ", "-250", "+10 ", "-250", "N/A ", "N/A "],
			["Bronze      ", "-50 ", "N/A ", "-50 ", "N/A ", "N/A "],
			["Carmiln     ", "N/A ", "N/A ", "N/A ", "+10 ", "+10 "],
			["Cloth       ", "N/A ", "N/A ", "0   ", "N/A ", "N/A "],
			["Copper      ", "-50 ", "N/A ", "-50 ", "N/A ", "N/A "],
			["Coraesine   ", "-999", "N/A ", "N/A ", "N/A ", "N/A "],
			["Deringo     ", "N/A ", "-20 ", "N/A ", "-20 ", "-20 "],
			["Drakar      ", "-50 ", "-50 ", "-50 ", "N/A ", "N/A "],
			["Drake       ", "0   ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Eahnor      ", "+15 ", "+15 ", "+15 ", "N/A ", "N/A "],
			["Eonake      ", "-60 ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Faenor      ", "+15 ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Faewood     ", "N/A ", "+10 ", "N/A ", "N/A ", "0   "],
			["Feras       ", "0   ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Fireleaf    ", "N/A ", "+15 ", "N/A ", "N/A ", "+15 "],
			["Glaes       ", "-10 ", "-10 ", "-10 ", "N/A ", "N/A "],
			["Glass       ", "0   ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Glowbark    ", "N/A ", "-10 ", "N/A ", "-10 ", "-10 "],
			["Golvern     ", "-10 ", "-10 ", "-10 ", "N/A ", "N/A "],
			["Gornar      ", "-50 ", "-50 ", "-50 ", "N/A ", "N/A "],
			["Hoarbeam    ", "N/A ", "+5  ", "N/A ", "+5  ", "+5  "],
			["Illthorn    ", "N/A ", "0   ", "N/A ", "N/A ", "0   "],
			["Imflass     ", "-30 ", "-30 ", "-30 ", "N/A ", "N/A "],
			["Invar       ", "0   ", "0   ", "0   ", "N/A ", "N/A "],
			["Ipantor     ", "N/A ", "N/A ", "N/A ", "-40 ", "N/A "],
			["Iron        ", "-30 ", "-30 ", "-30 ", "N/A ", "N/A "],
			["Ironwood    ", "N/A ", "0   ", "N/A ", "N/A ", "0   "],
			["Kakore      ", "N/A ", "0   ", "N/A ", "N/A ", "0   "],
			["Kelyn       ", "0   ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Krodera     ", "-999", "N/A ", "N/A ", "N/A ", "N/A "],
			["Kroderine   ", "-999", "-999", "-999", "N/A ", "N/A "],
			["Leather     ", "N/A ", "N/A ", "-10 ", "N/A ", "N/A "],
			["Lor         ", "N/A ", "N/A ", "N/A ", "N/A ", "-25 "],
			["Mein        ", "-10 ", "-10 ", "-10 ", "N/A ", "N/A "],
			["Mesille     ", "N/A ", "0   ", "N/A ", "0   ", "0   "],
			["Mithglin    ", "+15 ", "+15 ", "+15 ", "N/A ", "N/A "],
			["Mithril     ", "+20 ", "+20 ", "+20 ", "N/A ", "N/A "],
			["Modwir      ", "0   ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Mossbark    ", "N/A ", "0   ", "N/A ", "0   ", "0   "],
			["Obsidian    ", "-500", "N/A ", "N/A ", "N/A ", "N/A "],
			["Ora         ", "0   ", "0   ", "0   ", "N/A ", "N/A "],
			["Ora, Black  ", "-75 ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Ora, White  ", "-40 ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Orase       ", "N/A ", "0   ", "N/A ", "N/A ", "0   "],
			["Razern      ", "-20 ", "N/A ", "N/A ", "N/A ", "N/A "],
			["Rhimar      ", "-50 ", "-50 ", "-50 ", "N/A ", "N/A "],
			["Rolaren     ", "-40 ", "-40 ", "-40 ", "N/A ", "N/A "],
			["Rowan       ", "N/A ", "N/A ", "N/A ", "N/A ", "+20 "],
			["Ruby        ", "-500", "N/A ", "N/A ", "N/A ", "N/A "],
			["Ruic        ", "N/A ", "N/A ", "N/A ", "-60 ", "N/A "],
			["Sephwir     ", "N/A ", "N/A ", "N/A ", "-25 ", "N/A "],
			["Steel       ", "-10 ", "-10 ", "-10 ", "N/A ", "N/A "],
			["Stone       ", "-500", "N/A ", "N/A ", "N/A ", "N/A "],
			["Urglaes     ", "-999", "-999", "-999", "N/A ", "N/A "],
			["Urnon       ", "-999", "N/A ", "N/A ", "N/A ", "N/A "],
			["Vaalorn     ", "+10 ", "+10 ", "+10 ", "N/A ", "N/A "],
			["Veil-iron   ", "-50 ", "-50 ", "-50 ", "N/A ", "N/A "],
			["Villswood   ", "N/A ", "0   ", "N/A ", "0   ", "0   "],
			["Vultite     ", "0   ", "0   ", "0   ", "N/A ", "N/A "],
			["White-alloy ", "N/A ", "0   ", "0   ", "N/A ", "N/A "],
			["Witchwood   ", "N/A ", "N/A ", "N/A ", "N/A ", "-75 "],
			["Wood        ", "-100", "-10 ", "-100", "-10 ", "-10 "],
			["Wyrwood     ", "N/A ", "N/A ", "N/A ", "-60 ", "N/A "],
			["Yew         ", "N/A ", "N/A ", "N/A ", "-20 ", "N/A "],
			["Zelnorn     ", "-999", "-999", "-999", "N/A ", "N/A "],
			["Zorchar     ", "-50 ", "-50 ", "-50 ", "N/A ", "N/A "],
			["Metal       ", "-500", "-500", "-500", "N/A ", "N/A "]]

#Arrays of Roll Results and Descriptions [33, 82]-Needed [40, 6]-Roll
r_need = [["97% (Will only fail on a fumble.)", "You can only fail if you are horribly unlucky.                                    "],
		  ["90%-96% Chance                   ", "you should be able to ensorcell it easily enough, barring bad luck                 "],
		  ["75%-89% Chance                   ", "The odds are on your side to successfully complete the ensorcellment.               "],
		  ["55%-74% Chance                   ", "You are more likely than not to succeed on your cast, but you will need some luck."],
		  ["35%-54% Chance                   ", "This ensorcellment will be difficult, but possible.                                 "],
		  ["15%-34% Chance                   ", "This ensorcellment will be very difficult.                                          "],
		  ["2%-14% Chance                    ", "That this ensorcellment will be nearly impossible.                                  "],
		  ["1% Chance (Roll 100)             ", "You will likely need a miracle to complete this ensorcellment.                      "],
		  ["Only rolling over 100 has a shot.", "This ensorcellment is completely beyond your abilities.                             "]]

r_result = [["You make an outstanding attempt!        ", "90+   "],
			["You make an excellent attempt!          ", "80+   "],
			["You make a good attempt!                ", "70+   "],
			["You make a decent attempt.              ", "60+   "],
			["You make an okay attempt.               ", "50+   "],
			["You make a passable attempt.            ", "40+   "],
			["You make a questionable attempt.        ", "30+   "],
			["You make a poor attempt!                ", "20+   "],
			["You make a very poor attempt!           ", "10+   "],
			["You make a horribly poor attempt!       ", "2+    "],
			["You make an astoundingly inept attempt! ", "1     "],
			["Something doesn't seem right...         ", "Fumble"]]


def rowout(msg_arr, mbold = false)
        out = '| '
        msg_arr.each { |m|
                out += '%-12.12s | ' % m
        }
        if mbold == true
                _respond "#{monsterbold_start}#{out}#{monsterbold_end}"
        else
                _respond out
        end
end

def do_calc(juice_cost)
	starting_tier = variable[2].to_i
	if variable[3] and variable[3].to_i <= 5
		ending_tier = variable[3].to_i
	elsif not variable[3] or variable[3].to_i > 5
		ending_tier = 5
	end
	if ending_tier <= starting_tier
		_respond "Ending tier must be greater than starting tier"
		_respond ";juice calc [starting tier] [ending tier]"
		exit
	end

	_respond "Calculating juice needed to take an item from tier #{starting_tier} to tier #{ending_tier}"
	_respond ""

	_respond "-" * PAD
	headers = ['Start', 'End', 'Cost (NEU)', 'Cost (wks)', 'Total (NEU)', 'Total (wks)']
	rowout(headers, true)
	_respond "-" * PAD

	current_tier = starting_tier
	running_total_jui = 0
	while current_tier < ending_tier
		if current_tier < 0
			step_cost = 0
		else
			step_cost = juice_cost[current_tier].to_i
		end
		running_total_jui += step_cost
		response_array = [current_tier, 
                                  current_tier + 1, 
                                  step_cost, 
                                  (step_cost / WEEK).round(2), 
                                  running_total_jui, 
                                  (running_total_jui / WEEK).round(2)]
		rowout(response_array)
		current_tier += 1
	end
	_respond "-" * PAD	
	_respond "NEU = Necrotic Energy Units   ---  download ;necrojuice and add to autostart to get NEU numbers added to SENSE"
end

if variable[0].nil?
	respond "You need to give an option. See below:"
	respond ""
	respond "   ;juice bonus - Prints off a chart showing your bonuses for enchanting"
	respond "   ;juice chart - Prints off ensorcell cast necrojuice cost chart for each tier"
	respond "   ;juice chance - Description Of Test Cast Readouts And Chance To Succeed"
	respond "   ;juice rolls - Numeric Values For Roll Descriptions"
	respond "   ;juice materials - Material Difficulty Modifiers"
	respond "   ;juice calc [starting tier] [ending tier]"
        respond "       Tells you the cost for ensorcelling an item from starting tier to ending tier"
	respond
elsif variable[0] =~ /help/
	respond "To use this script, run:"
	respond ""
	respond "   ;juice bonus - Prints off a chart showing your bonuses for enchanting"
	respond "   ;juice chart - Prints off ensorcell cast necrojuice cost chart for each tier"
	respond "   ;juice chance - Description Of Test Cast Readouts And Chance To Succeed"
	respond "   ;juice rolls - Numeric Values For Roll Descriptions"
	respond "   ;juice materials - Material Difficulty Modifiers"
	respond "   ;juice calc [starting tier] [ending tier]"
        respond "       Tells you the cost for ensorcelling an item from starting tier to ending tier"
	respond ""
	
	exit
elsif variable[0] =~ /calc/
	do_calc(juice_cost)
	exit
elsif variable[0] =~ /chart/
	respond "Juice needed to do a single tier"
	respond ""
	juice_cost.each_index { |juice|
		respond "Tier #{juice.to_s.rjust(2, " ")} -> Tier #{(juice+1).to_s.rjust(2, " ")} - #{juice_cost[juice].rjust(5, " ")} necrotic energy units"
	}
	respond ""
	
	exit
elsif script.vars[0] =~ /materials/
	respond "|--------------------------------------------------------------|"
	respond "|                    Material Difficulty Modifiers             |"
	respond "|--------------------------------------------------------------|"
	respond "|   Material   | Weapons | Shields | Armor | Bows | Runestaves |"
	respond "|--------------------------------------------------------------|"
	mat_list.each{ |mat, weap, shie, arm, bow, rune|
		respond "| #{mat} |  #{weap}   |  #{shie}   | #{arm}  | #{bow} |    #{rune}    |"
	}
	respond "|--------------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /chance/
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	respond "|                                  Description Of Test CASTs And Chance To Succeed                                        |"
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	respond "| Chance To Get A Successful CHANNEL |                       Messaging On Test CAST                                       |"
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	r_need.each{|rchan, rmes|
	respond "| #{rchan}  | #{rmes} |"}
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /rolls/
	respond "|-------------------------------------------------------|"
	respond "|          Numeric Values For Roll Descriptions         |"
	respond "|-------------------------------------------------------|"
	respond "|          Roll Result Description         | Roll Value |"
	respond "|-------------------------------------------------------|"
	r_result.each{|rdesc, rval|
	respond "| #{rdesc} |    #{rval}  |"}
	respond "|-------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /bonus/
	respond "Ensorcelling Success Formula"
	respond "---------------------------"
	respond "  #{(Char.level).to_s.rjust(3)} : Level"
	respond "+ #{(Stats.enhanced_wis[1]).to_s.rjust(3)} : WIS Bonus"
	respond "+ #{(Stats.enhanced_int[1]).to_s.rjust(3)} : INT Bonus"
	respond "+ #{((Skills.magicitemuse/10).truncate).to_s.rjust(3)} : trunc(MIU ranks/10)"
	respond "+ #{((Skills.arcanesymbols/10).truncate).to_s.rjust(3)} : trunc(AS ranks/10)"
	respond "+ #{(((Skills.emc)/4).truncate).to_s.rjust(3)} : trunc(EMC ranks/4)"
	respond "+ #{(((Skills.smc)/4).truncate).to_s.rjust(3)} : trunc(SMC ranks/4)"
	respond "+ #{((Spells.sorcerer > (Char.level + 1) ? (Char.level + 1)*2 + (Spells.sorcerer - (Char.level + 1)) : Spells.sorcerer * 2)).to_s.rjust(3)} : Sorcerer Spells"
	respond "+  20 : Workshop Bonus"
	respond "==========================="
	respond "Total of #{Char.level + Stats.enhanced_wis[1] + Stats.enhanced_int[1] + (Skills.magicitemuse/10).truncate + (Skills.arcanesymbols/10).truncate + (Skills.emc/4).truncate + (Skills.smc/4).truncate + (Spells.sorcerer > (Char.level + 1) ? (Char.level + 1)*2 + (Spells.sorcerer - (Char.level + 1)) : Spells.sorcerer * 2) + 20}"
	exit
	elsif variable[0] =~ /tiers/
		if variable[2].nil?
			tier = 6
			showall = true
			percent = Array.new(6)
			i = 1
			while i < 6 do
				percent[i] = (Char.level + (Stats.enhanced_wis[1]) + (Stats.enhanced_int[1]) + (Skills.magicitemuse/10).truncate + (Skills.arcanesymbols/10).truncate + 
				(Skills.emc/4).truncate + (Skills.smc/4).truncate + (Spells.sorcerer > (Char.level + 1) ? (Char.level + 1)*2 + (Spells.sorcerer - (Char.level + 1)) : Spells.sorcerer * 2) + 20 - (50*i))
				if percent[i] > 100
					percent[i] = 100
			end
			if i == tier.to_i
				result = percent[i]
			end
			i +=1
			end

			if showall
				output =      "*******************************\n"
				output.concat "  ODDS FOR EACH ENSORCELL TIER\n"
				output.concat "     T1:  #{percent[1]}%\n"
				output.concat "     T2:  #{percent[2]}%\n"
				output.concat "     T3:  #{percent[3]}%\n"
				output.concat "     T4:  #{percent[4]}%\n"
				output.concat "     T5:  #{percent[5]}%\n"
				output.concat "*******************************\n"
				output.concat "****Assuming Vanilla Item******\n"
				output.concat "***With Only Tier Penalties****\n"
				output.concat "*****And Inside Workshop*******\n"
				output.concat "*******************************\n"
				respond output
			end
		end	
	exit
end
