=begin

;dropalltype <type> (<container>)

Will search your inventory for all items of a type
and DROP IT on the ground

Optional parameter: <container> 
will search only your <container>

Won't search closed containers, will only search your hands and
worn containers.  Not containers inside containers.

=end


$held_item = nil

if checkleft && checkright
    $held_item = checkleft
    fput 'store left'
end

unless variable[1]
    echo "USAGE:;dropalltype <type> (from <container>)"
    echo "This won't search closed containers."
    exit
end

def get_container(name)
    $mine = name =~ /my/
    itemname = name.sub(/my/,'').chomp if $mine
    return GameObj.left_hand if checkleft =~ itemname
    return GameObj.right_hand if checkright =~ itemname
    return GameObj.inv.find{ |i| i.name =~ /#{name.sub(/my/,'').chomp}/} if $mine
    return GameObj[name]
end

$from = variable[2]
$type = variable[1]

$container = get_container($from) if $from

$count = $source.count{ |i| i.type =~ /#{$type}/}
if $from.nil?
    echo "Dropping all items of type \"#{$type}\""
    fput "drop right" if GameObj.right_hand.type =~ /#{$type}/
    fput "drop left" if GameObj.left_hand.type =~ /#{$type}/
    GameObj.inv.each{ |i| i.contents.each { |c|
        if c.type =~ /#{$type}/
            fput "get ##{c.id}"
            fput "drop ##{c.id}"
            sleep 0.2
        end
    }}

    fput "get my #{$held_item}" if $held_item
    fput "drop right" if GameObj.right_hand.type =~ /#{$type}/
    fput "drop left" if GameObj.left_hand.type =~ /#{$type}/
else
    if $container.nil?
        echo "Couldn't find container \"#{$from}\""
    else
        echo "Dropping all items of type \"#{$type}\" from #{$container.name}"
        $container.contents.each { |c| 
            if c.type =~ /#{$type}/
                fput "get ##{c.id}"
                fput "drop ##{c.id}"
                sleep 0.2
            end
        }
    end
    fput "get my #{$held_item}" if $held_item
end
