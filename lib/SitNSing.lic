# SitnSing
#Origonal Idea from AutoLoreSing2 (only real data are the verses, and maybe 2-3 other lines)
#Rewritten by Auryana

verses = ["%s, whose vibrations I feel;Your original value now reveals;You that are so cunningly wrought;At what price were you bought?",
	"%s, wrought in days of yore;Sing to me of thy lore;By candle's light and twisted fate;Loud and clear thy purpose state.",
	"%s, by my mana and it's flow;Your enchantment I shall know;Tell me of thy history;Of thy magic and thy mystery.",
	"%s I shall chant the quarters, chant them 'round;'Til your secrets I have found;So by witches candle, book and bell;Reveal to me your magic spell."]

def sns_recite(customer, itemdata)
  this = 0
  recite = ""
  itemdata.each { |datt|
    if datt !~ /^\[.+\]\-.+\".+\"$/
      recite += "#{datt};"
      this += 1
    end
    if this > 6
      fput "recite #{recite}"
      recite = ""
      this = 0
    end
  }
  fput "recite #{recite}" if this > 0
end

def sns_sing(customer, verses)
  put "speak bard"
  4.times { |n|
    break if $sns_Timer + 300 < Time.now
    if righthand? then sing_string = sprintf("loresing :quiet ::#%s #{verses[n]}", GameObj.right_hand.id, GameObj.right_hand.name)
    elsif lefthand? then sing_string = sprintf("loresing :quiet ::#%s #{verses[n]}", GameObj.left_hand.id, GameObj.left_hand.name)
    else ; echo "unknown error - sns_sing - item hand check" ; exit ; end
    record = false
    line = ""
    itemdata = []
    
    put sing_string
    put "glance"
    loop {
      break if $sns_Timer + 300 < Time.now
      line = get
      if line =~ /Roundtime/ or line =~ /As you sing, you feel a faint resonating vibration from the .+ in your hand, and you learn something about it\.\.\./ or line =~ /^As you sing, you feel a faint resonating vibration from the .+ in your hand\.\.\.$/ then record = true
      elsif line =~ /^You glance/ then break
      elsif (record or line =~ /^You learn nothing new about .+\.$/) and line !~ /^\[.+\]\-.+\".+\"$/ then itemdata.push line end
    }
    wait_while { checkrt > 0 or checkcastrt > 0 }
    pause("1s")
    fput "speak common"
    sns_recite(customer, itemdata)
    fput "speak bard"
      #itemdata.each do |itty|
	#sns_whisper(customer, itty)
	#pause("0.25s")
      #end
    wait_while { checkmana < 20 or checkrt > 0 or checkcastrt > 0 }
    pause("1s")
    if line =~ /^You learn nothing new about .+\.$/ then break end
  }
  put "speak common"
end

empty_hands()
sns_Accept = false
sns_Client = nil
expired = 0
$sns_Timer = Time.now + 1800

multifput "store all", "stow left", "stow right"

loop {
  line = get
  if line =~ /^([A-Z,a-z]+) offers you .+\.  Click ACCEPT to accept the offer or DECLINE to decline it\.  The offer will expire in 30 seconds\.$/
    sns_Client = $1
    sns_Accept = true
  elsif line =~ /^You accept ([A-Z,a-z]+)'s offer and are now holding .+\.$/
    ["ADGuild", "Hunt", "Rest"].each { |pau| pause_script pau if running? pau }
    sns_Client = $1
    sns_sing(sns_Client, verses)
    fput "give #{sns_Client}"
    expired = 0
    $sns_Timer = Time.now
  elsif line =~ /^You offer your .+ to ([A-Z,a-z]+), who has 30 seconds to accept the offer\.  Click CANCEL to prematurely cancel the offer\.$/
    sns_Client = $1
  elsif line =~ /^([A-Z,a-z]+) has accepted your offer and is now holding .+\.$/
    sns_Client = nil
    ["ADGuild", "Hunt", "Rest"].each { |pau| unpause_script pau if running? pau }
    $sns_Timer = Time.now + 1800
    fput "decline"
  elsif line =~ /^Your offer to ([A-Z,a-z]+) has expired\.$/ or line =~ /^([A-Z,a-z]+) has declined the offer\.$/
    sns_Client = $1
    expired += 1
    if expired > 4
      multifput "drop ##{GameObj.right_hand.id}", "drop ##{GameObj.left_hand.id}", "whisper #{sns_Client} Sorry, You didn't accept in 4 offers, dropping item"
      sns_Client = nil
      ["ADGuild", "Hunt", "Rest"].each { |pau| unpause_script pau if running? pau }
      $sns_Timer = Time.now + 1800
    else
      fput "give #{sns_Client}"
    end
  elsif line =~ /^To whom\?$/ or ($sns_Timer + 300 < Time.now and !sns_Client.nil?)
    multifput "drop ##{GameObj.right_hand.id}", "drop ##{GameObj.left_hand.id}", "whisper #{sns_Client} Unable to see you or timer ran out, dropping item"
  end
  if lefthand? == nil and righthand == nil and sns_Accept
    fput "accept"
    sns_Accept = false
  end
}