=begin
   
     A Duskruin arena script for wizards. It is written for my own needs 
     so modify as you like, and use at your own risk.
     
     All items in your rewards package get dumped into your lootsack.
     
     Snap your fingers to let the script know to exit while resting or after
     current run.

          
     Basic combat loop:
         515 > 413 > 516 > 519 > 501 > 917 > 903 ...
       
         All steps in the combat loop can be toggled on/off
         To check how to configure script please use:           ;arenawizard help
	 
     
         author: Elvidor
           game: Gemstone
           tags: Duskruin, Arena
        version: 0.7
  
              
     Change log:
     0.7
	 - Script will terminate if lootsack is full
	 - Script will try to open your lootsack if it is closed
	 - Will put away what ever is in you left hand after victory to receive your loot
	 - Script will not crash if not setting have been set yet
	 - Script now checks to make sure you are a Wizard
	 - Now supports use of 909 stomp 
	 - Now supports using Call Wind
	 - Misc spelling errors corrected

     0.6
         - Will no longer attempt Voln symbols by default if you aren't in Voln
         - Will no longer attempt to use spells you do not actually know.
         - Default primary and secondary spells have been changed to 903 and 904
         - Fixed a visual issue with display of current settings.
     
     0.5
         - Fixed a bug when you had no mana left to cast spells that could cause a crash
         - Warding wizards will no longer cast in offensive
         - Winnings packages will be emptied from either hand
         - Any items put away to grab a booklet will be returned to your hands
         - Can now specify a script to run after each completed entry
         - Dismisses your familiar before each entry.
     
     0.4
         - Option to exit script if you die in combat added
         - script will now not crash if you die or surrender in combat
         - In theory endless will work, though its simple combat logic will limit success
          
     0.3     
         - Will now use 917 cold on fire creatures
         - Will now stance dance if rapid fire is not enabled
         - Items in left hand will be stowed before trying to get the booklet
         - Winnings packages should no longer sometimes get left in the left hand
         - Will no longer attempt to sleep Tsarks
         - Snapping fingers will properly wait until the end of the entry to terminate
         - Fixed script crash if restuntil is set as a string
	    
=end


if (variable[0])
	
	echo
        respond "  A Duskruin arena script for a capped bolting wizard. Written for my own needs       "
	respond "  so modify as you like, and use at your own risk.                                    "
	respond "                                                                                      "
	respond "  All items in your rewards package get dumped into your lootsack.                    "
	respond "                                                                                      "     
	respond "  Snap your fingers to let the script know to exit after while resting or after       "
	respond "  current run.                                                                        "
	respond "                                                                                      "   
        respond "  Primary bolt will be used on all non fire immune critters                           "
        respond "  Secondary bolt is used for Tsarks and Fire Elementals                               "
	respond "                                                                                      "   
	respond "  The script will attempt to keep Voln symbols and rapid fire (515) up at all times.  "
	respond "  if enabled.                                                                         "
	respond "                                                                                      "
	respond "  519 will never be cast at fire immune enemies, 917 will use cold variant against    "
	respond "  fire immune enemies, and 501 will never be cast at Tsarks.                          "
	respond "                                                                                      "     
	respond "  Combat loop:                                                                        "
	respond "      413 > 519 > 501 >  917 > 903 ...                                                "
	respond "                                                                                      "       
	respond "  Set your lootsack:                           ;Vars set lootsack = <container>       "
	respond "  Set your book container:                     ;Vars set eventsack = <container>      "
	respond "                                                                                      "
        respond "  Exit script if you get dead (default false): ;vars set exitondeath= <true|false>    "
	respond "  Rest after combat (default true):            ;vars set userest = <true|false>       "
	respond "  Percent mind to rest to (default 50):        ;vars set restuntil = <##>             "
	respond "  Set a script to run once before resting:     ;vars set startrestingscript = <script>"
	respond "    (This script will run after each                                                  "
	respond "      completed entry and must finish                                                 "
	respond "       before the next entry will start)                                              "
	respond "                                                                                      "
	respond "  Keep up voln symbols (default true):         ;Vars set usevoln = <true|false>       "
	respond "  Use Rapid Fire (default true):               ;Vars set userapidfire = <true|false>  "
	respond "  Use Tremors(909) Stomp (default false):      ;Vars set usestomp = <true|false>      " 
	respond "  Use Elemental saturation (default true):     ;Vars set usesaturate = <true|false>   " 
	respond "  Use Mana Leech as needed (default true):     ;Vars set usemanaleech = <true|false>  "
	respond "  Use Immolation (default true):               ;Vars set useimmolate = <true|false>   "
	respond "  Use Sleep (default true):                    ;Vars set usesleep = <true|false>      "
	respond "  Use Earthen Fury (default false):            ;Vars set useearthen = <true|false>    "
	respond "  Set your primarybolt (default 903):          ;Vars set primarybolt = <spell #>      "
	respond "  Set your primarybolt (default 904):          ;Vars set secondarybolt = <spell #>    "
	echo
	echo
	kill_script ('arenawizard')
end



  $primaryBolt = (!Vars.primarybolt.nil?)   ? Vars.primarybolt : "903"
$secondaryBolt = (!Vars.secondarybolt.nil?)  ? Vars.secondarybolt : "904"
 $useRapidFire = (!Vars.userapidfire.nil?)  ? Vars.userapidfire : Spell[515].known?
  $useImmolate = (!Vars.useimmolate.nil?)  ? Vars.useimmolate : Spell[519].known?
     $useSleep = (!Vars.usesleep.nil?)  ? Vars.usesleep : Spell[501].known?
   $useEarthen = (!Vars.useearthen.nil?)  ? Vars.useearthen : false
      $useVoln = (!Vars.usevoln.nil?)  ? Vars.usevoln : Spell["Symbol of Mana"].known?
  $useSaturate = (!Vars.usesaturate.nil?)  ? Vars.usesaturate : Spell[413].known?
     $useDrain = (!Vars.usemanaleech.nil?)  ? Vars.usemanaleech : Spell[516].known?
      $useRest = (!Vars.userest.nil?) ? Vars.userest : true
   $useRestPct = (!Vars.restuntil.nil?)  ? Vars.restuntil : 50
  $exitOnDeath = (!Vars.exitondeath.nil?)  ? Vars.exitondeath : true
$restingScript = (!Vars.startrestingscript.nil?)  ? Vars.startrestingscript : ""
     $useStomp = (!Vars.usestomp.nil?)  ? Vars.usestomp : false
  $useCallwind = (!Vars.usecallwind.nil?)  ? Vars.usecallwind : false



$useSaturate = false if !Spell[413].known?
$useSleep = false if !Spell[501].known? 
$useRapidFire = false if !Spell[515].known?
$useImmolate = false if !Spell[519].known?
$useEarthen = false if !Spell[917].known?
$useVoln = false if !Spell["Symbol of Recognition"].known? 
$useStomp = false if !Spell[909].known?
$useCallwind = false if !Spell[909].known?



if (!Spell[$primaryBolt].known?  || !Spell[$secondaryBolt].known?)
	echo " * Primary and secondary spells must be set to known spells   "
	echo " * use ;arenawizard help for information on changing settings."
	kill_script ('arenawizard')
end
	

$exitScript = nil
$combatBegin = nil
$praycounter = nil
$firstRun = true

echo
echo "Use ;arenawizard help to see the help screen"
echo
echo "lootsack:           #{Vars.lootsack}"
echo "eventsack:          #{Vars.eventsack}"
echo "primarybolt:        #{$primaryBolt}"
echo "secondarybolt:      #{$secondaryBolt}"
echo "userapidfire:       #{$useRapidFire}"
echo "usevoln:            #{$useVoln}"
echo "usesaturate:        #{$useSaturate}"
echo "useimmolate:        #{$useImmolate}"
echo "usesleep:           #{$useSleep}"
echo "usestomp:           #{$useStomp}"
echo "useearthen:         #{$useEarthen}"
echo "usemanaleech:       #{$useDrain}"
echo "userest:            #{$useRest}"
echo "restuntil:          #{$useRestPct}"
echo "exitondeath:        #{$exitOnDeath}"         
echo "startrestingscript: #{$restingScript}"
echo 
echo "Unpause script to begin with current settings"
echo

pause_script ('arenawizard')
$heldItem = (checkleft)  ? GameObj.left_hand.id : 0


# End script hook

action = proc { |client_string|
	if client_string =~ /You snap your fingers/
		$exitScript = 1
	elsif client_string =~ /YOU HAVE BEEN IDLE/
		fput "exp"
	elsif client_string =~ /defeating all those that opposed/
		$heldItem = (checkleft)  ? GameObj.left_hand.id : 0
		put "put ##{$heldItem} in my #{Vars.eventsack}" if $heldItem != 0
#	elsif client_string =~ /Introducing our new challenger/
		# && (checkroom =~ /Duskruin Arena, Dueling Sands/)
#		fput "shout"
	end
	client_string
}



# Begin the arena

def start

	if percentencumbrance > 50
		echo "You're carrying too much stuff. Exiting Script."
		kill_script ('arenawizard')
	end
	
	$heldItem = (checkleft)  ? GameObj.left_hand.id : 0
	fput "put ##{$heldItem} in my #{Vars.eventsack}" if $heldItem != 0
		
	result = dothistimeout("get my booklet from my #{Vars.eventsack}", 5, /You (?:discreetly|remove|reach)|Get what\?/)
	if result =~ /Get what\?/
		echo 'Out of booklets!'
		kill_script ('arenawizard')
	else
		fput "tell familiar to leave" if checkspell("Call Familiar")
		move 'go entrance'
		fput "put my booklet in my #{Vars.eventsack}"
	end		
	fput "get ##{$heldItem}" if $heldItem != 0

end



# Kill the mobs

def startcombat
	
	target_npc = GameObj.npcs.find { |npc| npc.id }
		
	if (target_npc != nil)
		until (!muckled? && !waitrt? && !waitcastrt?)
			pause '1s'
		end
		
		$combatbegin = 1
		
		until (GameObj.npcs.find { |npc| npc.id == target_npc.id } == nil) || dead?
			waitcastrt?
			waitrt?

			fput "stand" if (!standing?)
			
			if (!checkspell("Rapid Fire")  && Spell[515].affordable? && $useRapidFire)
				fput "incant 515"
			end
			
			if (!checkspell("Symbol of courage")  && $useVoln)
				fput "sym courage"
			end
			
			if (!checkspell("Symbol of protection")  && $useVoln)
				fput "sym prot"
			end 

			if (!checkspell("Tremors")  && Spell[909].affordable? && $useStomp)
				fput "incant 909 channel"
			end

						
			if $combatbegin == 1 
				if (percentmana <= 35 && $praycounter < 3)
					fput "pray"
					$praycounter = $praycounter + 1
				end
				if (Spell[413].affordable? && $useSaturate)
					fput "incant 413"
					waitcastrt?
				end
				if (Spell[516].affordable? && percentmana <= 35 && $useDrain)
					fput "incant 516";;
					waitcastrt?
				end
				if (Spell[519].affordable? && $useImmolate && !(target_npc.name =~ /tsark|elemental|fire giant/))
					fput "incant 519"
					waitcastrt?
				end
				if (Spell[501].affordable? && $useSleep && !(target_npc.name =~ /tsark/))
					fput "incant 501"
					waitcastrt?
				end
				if (Spell[909].affordable? && $useStomp && !(target_npc.name =~ /tsark|yeti|worm/))
					result = dothistimeout("stomp", 2, /you stomp your foot sharply|...wait|stamp your feet/)
					if (result =~ /...wait/)
						pause '1s'
						fput "stomp"
					elsif (result =~ /stamp your feet/)
						fput "incant 909 channel"
					end
				end
				if (Spell[912].affordable? && $useCallwind && !(target_npc.name =~ /tsark/))
					fput "incant 912"
					waitcastrt?
				end
				if (Spell[917].affordable? && $useEarthen)
					if (target_npc.name =~ /tsark|elemental|fire giant/)
						fput "incant 917 COLD"
						waitcastrt?
					else 
						fput "incant 917"
						waitcastrt?			
					end
				end
				$combatbegin = 0
			
			elsif (percentmana <= 35 && (!checkspell "symbol of mana cooldown") && $useVoln)
				fput "sym mana"

			elsif (Spell[$primaryBolt].affordable? && Spell[$secondaryBolt].affordable?)				
				if !(target_npc.status =~ /gone/) && !(target_npc.status =~ /dead/)
					selectSpell = (target_npc.name =~ /tsark|elemental|fire giant/)  ? $secondaryBolt : $primaryBolt
					fput "stance off" if (!(checkstance =~ /offensive/) && !(selectSpell =~ /519|502|413|415/))
					fput "stance guard" if (!(checkstance =~ /guard/) && (selectSpell =~ /519|502|413|415/))
					fput "incant #{selectSpell}"
					fput "stance guard" if (!(checkstance =~ /guard/) && !$useRapidFire)				
				end

			else
				fput "mana pulse"
	
			end	
			
			if (target_npc.status =~ /dead/)
				fput "dismiss"
				until !(target_npc.status =~ /dead/)
				end
			end
		
		end		
		$exitScript = 1 if (dead? && $exitOnDeath)
		fput "Stance def"
		
	end	
	pause '1s'
	
end



# Collect loot

def collectloot
	
	fput "open my package"
	result = dothistimeout("empty my package into my #{Vars.lootsack}", 5, /is closed|nothing will fit|falls in quite nicely\?/)
	if result =~ /nothing will fit/
		echo 'Your Loot sack is full!'
		kill_script ('arenawizard')
	elsif result =~ /is closed/
		fput "open my #{Vars.lootsack}"
	else		
		waitrt?
		fput "drop package"
		pause '1s'
		fput "get ##{$heldItem}" if $heldItem != 0
	end

end



# Do resting

def restuntilnext

	if $restingScript != "" && !$firstRun
		start_script $restingScript
		wait_while {running? $restingScript}
	end
	until (percentmind <= $useRestPct.to_i) || !$useRest
		kill_script ('arenawizard') if $exitScript == 1
		echo "*** Waiting for mind to clear  ***"
		pause '15s'
	end
	$firstRun = false

end



# Hook to check for user input to end script

DownstreamHook.add('arenaExit', action)
before_dying { 
	DownstreamHook.remove('arenaExit');
}



# Main Loop

if checkroom =~ /Duskruin Arena, Sands Approach/
	
else
	echo 'Walking to Duskruin Arena, Sands Approach'
	start_script 'go2', ['23780']
	wait_while { running? 'go2' }
end

loop {
	
	if checkroom =~ /Duskruin Arena, Niveous Chamber/
		until (!muckled? && !waitrt? && !waitcastrt?)
			pause '1s'
		end
		fput "stand" if (!standing?)
	end
			
	if (checkleft =~ /package/) || (checkright =~ /package/)
		collectloot
	
	elsif checkroom =~ /Duskruin Arena, Dueling Sands/
		startcombat
		
	elsif $exitScript == 1
		kill_script ('arenawizard')
			
	elsif !(checkroom =~ /Duskruin Arena, Sands Approach/)
		start_script 'go2', ['23780']
		wait_while { running? 'go2' }

	elsif checkroom =~ /Duskruin Arena, Sands Approach/
		restuntilnext
		if !(checkroom =~ /Duskruin Arena, Sands Approach/)
			start_script 'go2', ['23780']
			wait_while { running? 'go2' }
		end
		$praycounter = 0
		start
				
	else
		echo "*** Something went so very wrong! ***"
		kill_script ('arenawizard')
	
	end

}