=begin
  errand.lic

  Waits for an experience pulse, then ;go2's the room you want, so you can
  stay at the top of those lumnis leaderboards.

  Usage:

  ;errand 13038
  ;errand bank
  ;errand saved_target

  Author: Gnomad
  Version: 0.5

  0.1: Initial release.
  0.5: Added help.
       Added argument parsing. All ;errand arguments will be stripped. All other 
       arguments will be passed along to ;go2, in case you need it to tell you to stomp all over corpses while
       you're going to get more gems.
       Errand now does not quit until ;go2 is finished. You can override this new behavior with --fast_quit.

=end

legacy_behavior = false
go2_command = ""

for var in script.vars[1..-1]
	case var
	when /^--fast_quit/
		legacy_behavior = true
	else
		go2_command.concat "#{var} "
	end
end

go2_command.rstrip!

if go2_command =~ /help/ || go2_command == ""
	help_msg = "\n"
	help_msg.concat "  #{$lich_char}#{script.name} is a simple script that helps you maximize your experience pulses.\n\n"
	help_msg.concat "  It is made to be run on a (super)node. #{$lich_char}#{script.name} waits until it senses an experience pulse,\n"
	help_msg.concat "  then uses #{$lich_char}go2 to run there. You can then do whatever you need to do in a 2(ish)-minute\n"
	help_msg.concat "  window before the next experience pulse.\n\n"
	# help_msg.concat "Or, if you're like me, you can zone out and take your next pulse at the bank anyway, negating the whole point of this script.\n"
    help_msg.concat "  #{$lich_char}#{script.name} does not exit until #{$lich_char}go2 has finished, making it easier to use as part of\n"
    help_msg.concat "  a script that runs a suite of tasks.\n\n"
    help_msg.concat "   Usage:\n\n"
    help_msg.concat "  #{$lich_char}#{script.name} <room>                You can use any commands #{$lich_char}go2 supports.\n\n"
    help_msg.concat "  #{$lich_char}#{script.name} <room> --fast_quit    #{$lich_char}#{script.name} quits when go2 starts (legacy behavior)\n"
    help_msg.concat "  #{$lich_char}#{script.name} help                  This message.\n\n"
	respond help_msg
	exit
end

exper = XMLData.next_level_text

wait_while { XMLData.next_level_text == exper }

if legacy_behavior
	Script.start('go2', go2_command)
else
	Script.run('go2', go2_command)
end
