=begin

	mechbowreload.lic
	
	Reloads mechanical crossbows, with some smart checks for safety.
	The script is meant to be used as an "active hunting script" within bigshot.
	
	author: Aramund
	game: Gemstone
	tags: hunting, mechanical-crossbow
	version: 0.1
	
	CHANGELOG
	v0.2 (2019-05-26)
		- Works only when uncocked, but noisly!
	v0.1 (2019-05-15)
		- untested WIP

=end

silence_me

UserVars.mbr ||= {}
UserVars.mbr[:ammo_type]  = "bolt"  if UserVars.mbr[:ammo_type].nil?
UserVars.mbr[:quiver]     = "cloak"  if UserVars.mbr[:ammo_type].nil?
#UserVars.mbr[:weapon]     = "crossbow" if UserVars.mbr[:weapon].nil?

safe = proc{
	!(GameObj.npcs.any? {|s| s.type =~ /aggressive npc/ and s.status !~ /dead/})
}

# Returns the number of slots left in your crossbow 
bolts_left = proc{
	fput "look at my #{GameObj.left_hand}"
	bolts = matchfindword "There are ? bolts loaded", "There is ? bolt loaded"
	if bolts.eql? "no"
		bolts = "0"
	elsif bolts.eql? "one"
		bolts = "1"
	end
	bolts.to_i
}

reload = proc{ |bolts|
	echo "#{bolts}"
	while bolts < 5
		sleep 0.1
		waitrt?
		fput "get 1 #{UserVars.mbr[:ammo_type]} from #{UserVars.mbr[:quiver]}"
		while line = get
			if line =~ /^Get what\?$/
				echo "Out of ammo, Please restock."
				Script.pause('mechbowreload')
			elsif line =~ /^You get|^You remove/
				break
			end
		end
			
		sleep 0.1
		fput "load #{GameObj.left_hand}"
		while line = get
			if line =~ /^You flip open the stock of your .+? and load .+? into it\./
				ammo += 1
				break
			elsif line =~ /^But your .+? can only hold up to .+?\!$/
				ammo = ammo_max
				fput "stow right" until !checkright
				break
			elsif line =~ /^You must be holding something to load into your .+?\.$/
				echo "Cannot find your ammo, Please restock."
				Script.pause('mechbowreload')
			end
		end
		bolts = bolts_left.call
	end
}



loop {
	closed = dothistimeout "look in my #{GameObj.left_hand}", 1, /That is closed./
	if !closed
		bolts = bolts_left.call
		if bolts <= 0 or bolts < 5 and safe.call
			waitrt?
			reload.call(bolts)
		end
	end
	pause 1
}

exit