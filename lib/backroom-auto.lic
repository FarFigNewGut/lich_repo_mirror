=begin

	See this script in action at: https://www.youtube.com/watch?v=59dV50TDmaE

	This script will get you backroom access to any shop in the game AUTOMATICALLY! Simply start it in any shop you want to gain backroom access to and it will scan the entire shop to find the cheapest item to buy.
	Once the cheapest item is found the script will inform you of the estimated cost of gaining backroom access, asking you to confirm if the price is okay. Once you confirm the script will even run to the bank
	to withdraw silvers if necessary.

	The script will then buy only as many items are needed to get you backroom access to that shop. Once you have gained backroom access the script will inform you of how many items it bought and how much silver it spent.

	Script will exit if it reaches 150 items bought, regardless if you received backroom access by then. This is the upper limit it will buy, script will only buy as many items required to get you backroom access.

	The script will dispose of purchased items in a trash container in the shop if there is one. If there is no trash container the script will simply drop all items it buys.

	Start gaining backroom access today!
	

	Author:  Tgo01
	Version:  5

=end

silence_me

number = 0
silence = nil
silence_silver_check = nil
highest_order_number = 1
number_1 = nil
number_2 = nil
trash = nil
lowest_price = 100000
cheapest_order_number = nil
total_cheapest_cost = nil
total_highest_cost = nil
current_task = nil
total_silvers_spent = nil
done_looking = nil
has_backroom_access = nil
this_room = nil

silence = proc{
	started = false
	hook_proc = proc { |s|
		if started
			if s =~ /<prompt/
				DownstreamHook.remove('silence')
				done_looking = true
				nil
			else
				nil
			end
		elsif s =~ /You ask about the price of|Sold for|As you place .* you feel pleased with yourself at having cleaned up the surrounding area\.|You drop .*\.|Catalog|<clearStream/
			started = true
			nil
		else
			s
		end
	}
	DownstreamHook.add('silence', hook_proc)
	if current_task == "find cheapest price"
		fput "order #{number}"
		while line = get
			if (line =~ /(\d+) silvers?/) || (line =~ /drop the price to (\d+)/)
				if (lowest_price > $1.to_i)	
					(lowest_price = $1.to_i)
					(cheapest_order_number = number)
				end
			elsif line =~ /There is no merchant here to order anything from\./
				echo "No merchant found here. Exiting."
				exit
			elsif line =~ /You may CUSTOMIZE your selection|You may order a QUANTITY of this item|no such item/
				break
			end
		end
	elsif current_task == "order"
		fput "order #{cheapest_order_number}"
	elsif current_task == "buy"
		fput "buy"
		while line = get
			if line =~ /Looks like you might buckle/
				echo "You are too encumbered to finish this. Please lighten your load and run script again."
				exit
			elsif line =~ /hands you/
				break
			elsif line =~ /There is nobody here to buy anything from\./
				echo "You are no longer in the room we started in. Exiting."
				exit
			end
		end
	elsif current_task == "trash"
		if (trash)
			(fput "put right in #{trash}")
		else
			(fput "drop right") if (checkright)
		end
	elsif current_task == "find how many items"
		fput "order"
		while line = get
			if line =~ /(\d+).*\s{2} (\d+)/
				number_1 = $1.to_i
				number_2 = $2.to_i
				(highest_order_number = number_1) if (number_1 > highest_order_number)
				(highest_order_number = number_2) if (number_2 > highest_order_number)
			elsif line =~ /(\d+)/
				(highest_order_number = number_1) if (number_1 > highest_order_number)
			elsif line =~ /Backroom/i
				has_backroom_access = true
			elsif line =~ /You can APPRAISE\, INSPECT or DESCRIBE any item by number\, ORDER by number to get pricing and/
				break
			end
		end
	elsif current_task == "check for backroom access"
			fput "order"
			while line = get
			if line =~ /Backroom/i
				has_backroom_access = true
			elsif line =~ /You can APPRAISE\, INSPECT or DESCRIBE any item by number\, ORDER by number to get pricing and/
				break
			end
		end
	end
	wait_until { done_looking }
}

silence_silver_check = proc{
	action = proc { |server_string|
		if server_string =~ /You have no silver coins with you\.|You have but one coin with you\.|You have \d+ coins with you\./
			DownstreamHook.remove("#{script.name}_silence_silver_check")
			nil
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}_silence_silver_check", action)
	fput "wealth"
	while line = get
		if line =~ /You have no silver coins with you\.|You have but one coin with you\./
			if (current_task == "post bank check")
				echo "You don't have enough silver to continue. Earn more silver and try again!"
				exit
			elsif (current_task == "pre bank check")
				echo "You do not have enough silvers on you, I'll head to the bank and get some."
				sleep 1
				current_task = "need bank"
				break				
			end
		elsif line =~ /You have (\d+) coins with you\./
			if (current_task == "post bank check")
				if total_highest_cost > $1.to_i
					echo "You don't have enough silver to continue. Earn more silver and try again!"
					exit
				else
					break
				end
			elsif (current_task == "pre bank check")
				if total_highest_cost > $1.to_i
					echo "You do not have enough silvers on you, I'll head to the bank and get some."
					sleep 1
					current_task = "need bank"
					break
				else
					echo "Excellent, you have enough silvers. Let's get started."
					break
				end
			end
		end
	end
}

before_dying { DownstreamHook.remove("#{script.name}_silence");DownstreamHook.remove("#{script.name}_silence_silver_check") }

####################
this_room = Room.current.id
fput "unhide" if invisible?
empty_right_hand
empty_left_hand
current_task = "find how many items"
silence.call
if has_backroom_access
	echo "You already have backroom access at this shop."
	exit
end
echo "I am scanning the shop to find the cheapest item to buy. This may take a few seconds, I'll let you know when I'm done."
current_task = "find cheapest price"
loop{
	number += 1
	if (this_room != Room.current.id) && (this_room)
			echo "You are no longer in the room we started in. Exiting."
			exit
	end
	silence.call
	break if (number >= highest_order_number)
}
total_cheapest_cost = (lowest_price * 50)
total_highest_cost = (lowest_price * 150)
echo "Cheapest item costs #{lowest_price} silvers which is order number #{cheapest_order_number}"
echo "This process can require buying between 50 and 150 items."
echo "To gain backroom access to this shop could cost between #{total_cheapest_cost} and #{total_highest_cost} silvers."
echo "If you wish to proceed type NOD. Otherwise close this script by typing ;kill backroom-auto"
while line = get
	if line =~ /You nod\.|You nod\, but no one sees you do so\./
		current_task = "pre bank check"
		silence_silver_check.call
		if current_task == "need bank"
			start_script 'go2', [ 'bank', '--disable-confirm' ]
			wait_while { running?('go2') }
			fput "unhide" if invisible?
			fput "depo all"
			fput "withdraw #{total_highest_cost} silvers"
		end
		current_task = "post bank check"
		silence_silver_check.call
		if (Room.current.id != this_room) && (this_room)
			start_script 'go2', [ this_room ]
			wait_while { running?('go2') }
		end
		empty_right_hand
		empty_left_hand
		trash = GameObj.loot.find{ |item| item.name =~ /crate|barrel|wastebarrel|casket|bin|receptacle|basket/ }
		number = 0
		echo "I will now start buying items. Please do not move during this process, I will inform you when I am finished."
		loop{
			if (this_room != Room.current.id) && (this_room)
				echo "You are no longer in the room we started in. Exiting."
				exit
			end
			fput "unhide" if invisible?
			current_task = "check for backroom access"
			done_looking = nil
			silence.call
			if (has_backroom_access)
				total_silvers_spent = (lowest_price * number)
				echo "You now have backroom access!"
				echo "I bought #{number} items and spent #{total_silvers_spent} silvers."
				exit
			end
			number += 1
			current_task = "order"
			done_looking = nil
			silence.call
			current_task = "buy"
			done_looking = nil
			silence.call
			current_task = "trash"
			done_looking = nil
			silence.call
			if number >= 150
				total_silvers_spent = (lowest_price * number)
				echo "I have bought #{number} items and spent #{total_silvers_spent} silvers."
				echo "Either this shop doesn't have a backroom or it requires purchasing a lot of items. Run script again if you wish to try some more."
				exit
			end
		}
	end
end
		