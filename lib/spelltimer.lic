=begin
	A little script to track how long your spells lasted.
	When a spell drops, it will tell you the total duration.
	
	-Drafix
=end
if script.vars[1] == 'clear'
	CharSettings['spelldown'] = nil
	CharSettings['duration'] = nil
	exit
end

spell_up_msgs_re = /^#{Spell.upmsgs.join('$|^')}$/o
#spell_dn_msgs_re = /^#{Spell.dnmsgs.join('$|^')}$/o
CharSettings['spelldown'] ||= []
CharSettings['duration'] ||= {}
CharSettings['timequit'] ||= Time.now
timerested = Time.now - CharSettings['timequit']
CharSettings['duration'].each{|key,value|
	CharSettings['duration'][key] = value + timerested
}
echo CharSettings['spelldown']
Thread.new{loop {CharSettings['timequit'] = Time.now; sleep 1}}
while line = get
	if line =~ spell_up_msgs_re
		spell = Spell.list.find { |spell| line =~ /^#{spell.msgup}$/ }
		next unless CharSettings['duration'][spell.num].nil?
		CharSettings['duration'][spell.num] = Time.now
		CharSettings['spelldown'] << spell.msgdn
	elsif line =~ /^#{CharSettings['spelldown'].join('$|^')}$/
		spell = Spell.list.find { |spell| line =~ /^#{spell.msgdn}$/ }
		CharSettings['spelldown'].delete(spell.msgdn)
		duration = Time.now - CharSettings['duration'][spell.num]
		hours = (duration / 3600).to_i
		minutes = (duration / 60 - hours * 60).to_i
		seconds = (duration - 60 * minutes - 3600 * hours).to_i
		respond "[ (#{spell.num}) #{spell.name} Ended. #{hours}h:#{'%02d' %minutes}m:#{'%02d' %seconds}s. ]"
		CharSettings['duration'].delete(spell.num)
	end
end