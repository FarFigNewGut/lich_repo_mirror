=begin
      author: NotAramund
        name: infuse
        game: gemstone
        tags: scroll infusion, infuse, unlock, runestone
    requires: Lich > 5.4.0
     version: 0.2


Infuse!
	
    This script will automatically unlock and infuse scrolls for you! 

	The script always uses the quiss'fyn rune, and always attempts to fully unlock the scroll. 
	
    You must first define your infuse sack, where all infuse components & scrolls will be stored:
	
		;vars set infusesack=<container name>
		
	Other assumptions:
		- You have silvers in your local bank
		- You can read all scrolls
	
    Once you have the variables set, you can activate the script in the following ways:
	
		;infuse
			- Fully unlock & infuse the scroll in your right hand
	
		;infuse_scroll unlock 
			- Fully unlock the scroll in your right hand
		
		;infuse_scroll infuse
			- Fully infuse an unlocked scroll in your right hand. This does not check whether the scroll has been unlocked.
    
		;infuse scroll rune <rune name>
			- Creates the rune of your choice
		
	I adapted Ashraam's infuse_scroll.lic to create this script. I had the following goals in mind:
		- Create a no-fuss way to fully unlock scrolls for my Thaumaturgy Tome
		- Separate out the pieces of that process in case someone needs them individually
		
	UPCOMING
		- Add command for odeir'cos waving
	
=end

# Globals
$scroll_id = -1

# Make the rune_name rune
#
# Preconditions:
# 	- Scroll in right hand
def make_rune (rune_name)
	return_room = Room.current.id
	
	order = lambda do |item_name|
		echo "#{item_name}"
		orderlist = dothis "order", /#{item_name}/
		orderlist = orderlist.split('   ')
		orderlist = orderlist.each.find{|item| item.include? "#{item_name}"}
		ordernum = orderlist.scan(/\d+/).first
		fput "order #{ordernum}"
		fput "buy"
	end
	
	# Withdraw money
	start_script('go2',['bank'])
	wait_while {running?('go2')}
	have_money = dothistimeout "withdraw 20000 silver", 1, /20,000 silvers/
	if !have_money
		echo "You don't have enough money for runestones!"
		exit
	end
	
	# It's just easier to withdraw money and go to the alchemist for this step
	start_script('go2',['alchemist'])
	wait_while {running?('go2')}

	fput "get my brush in my #{UserVars.infusesack}"
	brush_state = dothistimeout "look at my brush",1, /covered in|clean|dried|dry/
	echo "#{brush_state}"
	
	# Clean brush
	if brush_state =~ /dried|dry/
		find_cup = dothistimeout "get cup in my #{UserVars.infusesack}", 1, /You remove|You get|You grab/
		order.("cup") if !find_cup
		fput "dip brush in my cup"
		fput "put cup in my #{UserVars.infusesack}"
	end
	
	# Dip ink
	if brush_state =~ /clean|dried|dry/
		find_ink = dothistimeout "get ink in my #{UserVars.infusesack}", 1, /You remove|You get|You grab/
		if !find_ink
			# Why do they do this to us??
			if checkarea "icemule"
				order.("bottle")
			else
				order.("ink")
			end
		end
		fput "dip brush in my ink"
		fput "put ink in my #{UserVars.infusesack}"	
	end
	
	# Order the runestone
	order.("runestone")
	
	# Draw rune
	draw = dothistimeout "draw #{rune_name} rune on runestone",1, /cleaned off first|will need ink|Roundtime/
	if !draw.include? 'Roundtime'
		echo "Something went wrong"
		exit
	end

	waitrt?
	fput "put brush in my #{UserVars.infusesack}"
	
	start_script('go2',['bank'])
	wait_while{running?('go2')}
	fput "deposit all"
	start_script('go2',[return_room])
	wait_while{running?('go2')}
end	

# Find the rune_name rune in your infusesack, or make it.
#
# Preconditions:
#	- Scroll in right hand
def find_rune(rune_name)
	find_rune = dothis "rummage in my #{UserVars.infusesack} runestone #{rune_name}", /drawn on it|can't seem to locate/
	if find_rune.include? "can't seem to locate"
		fput "put right in my #{UserVars.infusesack}"
		fput "stow all"
		make_rune(rune_name)
		fput "get ##{$scroll_id}"
		fput "swap"
		return true
	elsif find_rune.include? "drawn on it"
		return true
	else
		return false
	end
end

# Unlock all spells on the scroll in your right hand
#
# Preconditions:
#	- Scroll in right hand
def unlock_spells
	find_rune("quiss'fyn")
	loop do
		waved = dothistimeout "wave left at my #{GameObj.right_hand}", 1, /nothing|somehow been altered/
		waitrt?
		waitcastrt?
		break if waved.include? 'nothing'
		find_rune("quiss'fyn") if waved.include? 'disintegrates'
	end
	echo "Scroll locked, or fully charged."
end

# Fully infuse all unlocked spells on the scroll in your right hand
def infuse
	find_rune("ag'loenar")
	infusescroll = "#" + GameObj.right_hand.id
	Spell[714].cast(infusescroll)
	waitcastrt?
	
	loop do
		wait_until { mana > 20 }
		infuse_line = dothistimeout "infuse my #{GameObj.right_hand}", 1, /glows dimly for a moment|mana dissipates|You are not prepared to infuse that/
		waitcastrt?
		
		if (infuse_line.include? 'grows cold') || (infuse_line.include? 'not prepared to infuse')
			echo "Scroll locked!!"
			break
		elsif infuse_line.include? 'mana dissipates'
			echo "Scroll fully infused!"
			break
		elsif infuse_line.include? 'cracks slightly and then shatters'
			find_rune("ag'loenar")
		elsif infuse_line.include? 'You strain to harness'
			echo "You appear to be struggling with infusing this scroll, if you want to continue nod within the next 10 seconds"
			continue = matchtimeout 10, "You nod"
			break if !continue
		end
	end
end

# Check that you're holding a scroll in your right hand & set scroll_id
def check_for_scroll
	if !GameObj.right_hand || !(GameObj.right_hand.noun =~ /scroll|parchment|palimpset|paper|papyrus|vellum/)
		echo "No scroll to unlock!  Make sure you have a scroll in your right hand."
		exit
	end
	$scroll_id = GameObj.right_hand.id
end


# Validate arguments
if UserVars.infusesack
	if UserVars.infusesack.length < 3
		echo "You must define an infusesack - ;vars set infusesack = <container name>"
		exit
	end
else	
	echo "You must define an infusesack - ;vars set infusesack = <container name>"
	exit
end

# Main
if Script.current.vars.length == 0
	check_for_scroll
	unlock_spells
	infuse
	fput "put right in my #{UserVars.infusesack}"
	
elsif script.vars[1] == 'unlock'
	check_for_scroll
	unlock_spells

elsif script.vars[1] == 'infuse'
	check_for_scroll
	infuse

elsif script.vars[1] == 'rune'
	if Script.current.vars.length != 2
		echo "Usage: ;infuse_scroll rune <rune_name>"
		exit
	end
	
	make_rune(Script.current.vars[1])
elsif script.vars[1] == 'check'
	find_rune("odeir'cos")
	fput "wave left at my ##{GameObj.right_hand.id}"
elsif script.vars[1] == 'help'
	respond "First, set your <infusesack>: "
	respond "    ;vars set infusesack=<container name>"
	respond ""
	respond "USAGE:"
	respond "    ;infuse_scroll [unlock|infuse|rune <rune name>]"
	respond ""
	respond "    ;infuse                    - Unlock & infuse scroll in your right hand"
	respond "    ;infuse unlock             - Unlock the scroll in your right hand"
	respond "    ;infuse infuse             - Infuse scroll in your right hand"
	respond "    ;infuse rune <rune name>   - Make a runestone with rune <rune name>"
	respond ""
	exit
end

fput "put left in my #{UserVars.infusesack}"