=begin 

author: Sethius

Date: 07/14/2024
Contributors: Sethius
Version: 1.0.0
Description:  Calculates Paladin's +bonus for Battle Standard (1620)


Skill Formula
    Level: +1 per level
    Paladin Spell Ranks: +2 per rank up to level, +1 per rank above level ("up to level" is based on 1x spell training and thus a level 50 paladin with 100 ranks will have 52 ranks at +2 and 48 ranks at +1)
    Wisdom: +1 per stat bonus
    Influence: +1 per stat bonus
    Spiritual Mana Control: +1 per rank
    Magic Item Use: +1.5 per rank
    Arcane Symbols: +1.5 per rank
    Shrine Bonus: +20 for matching CONVERT exactly, +10 for same CONVERT pantheon (bonuses do not stack)
    Being wounded and not at maximum spirit will hinder attempts

https://gswiki.play.net/Battle_Standard_(1620)

=end

	elementalmanacontrol = 0
	mentalmanacontrol = 0
	bardranks = 0
	intuition = 0
	
	level = 0
	classranks = 0	
	wisdom = 0
	influence = 0
	spiritualManaControl = 0
	magicitemuse = 0
	arcanesymbols = 0	
	shrineBonus = 20
	
	profName = "Paladin"
	bonusLocationType = "Shrine"
	spellName = "Battle Standard (1620)"
	suffusedType = "Unknown"
	tierPrefix = "P"
	
	skillsLines = Lich::Util.quiet_command("skills", /your current skill/i, /Further information can be found/i, include_end = false, timeout = 1, silent = true) 	
	skillsLines.each {|line| 

	    if line =~ /^  Arcane Symbols\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
        	arcanesymbols = $1.to_i
    	elsif line =~ /^  Magic Item Use\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
	        magicitemuse = $1.to_i
	    elsif line =~ /^  Elemental Mana Control\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
        	elementalmanacontrol = $1.to_i
		elsif line =~ /^  Mental Mana Control\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
			mentalmanacontrol = $1.to_i			
		elsif line =~ /Spirit Mana Control\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)/
			spiritualManaControl = $1.to_i						
    	elsif line =~ /\w*Bard\.*\|(?:\s+)(\d+)$/
	        bardranks = $1.to_i
    	elsif line =~ /\w*#{profName}\.*\|(?:\s+)(\d+)$/
	        classranks = $1.to_i
    	end	
	}

	infoLines = Lich::Util.quiet_command("info", /Name/i, /Mana/i, include_end = false, timeout = 1, silent = true) 	
	infoLines.each {|line| 
	    if line =~ /Gender: (?:\w+)(?:\s+)Age: (?:[\d,]+)(?:\s+)Expr: (?:[\d,]+)(?:\s+)Level:(?:\s+)(\d+)/
        	level = $1.to_i
    	elsif line =~ /Influence \(INF\):(?:\s+)(?:\d+) \((?:\d+|-\d+)\)(?:\s+)\.\.\.(?:\s+)(?:\d+) \((\d+|-\d+)\)/
	        influence = $1.to_i
	    elsif line =~ /Intuition \(INT\):(?:\s+)(?:\d+) \((?:\d+|-\d+)\)(?:\s+)\.\.\.(?:\s+)(?:\d+) \((\d+|-\d+)\)/
        	intuition = $1.to_i
	    elsif line =~ /Wisdom \(WIS\):(?:\s+)(?:\d+) \((?:\d+|-\d+)\)(?:\s+)\.\.\.(?:\s+)(?:\d+) \((\d+|-\d+)\)/
        	wisdom = $1.to_i			
    	end
	}

    weekly_resource = nil
    total_resource = nil
    suffused = nil
	
    res = Lich::Util.quiet_command_xml("resource", /^Health: /)
    res.each { |line|
      line = line.gsub('<pushBold/>', '').gsub('<popBold/>', '')
      if line =~ /([\d,]+)\/50,000 \(Weekly\)\s+([\d,]+)\/200,000 \(Total\)$/
        weekly_resource = $1
        total_resource = $2
		
        weekly_resource = weekly_resource.gsub(",", "").to_i
        total_resource = total_resource.gsub(",", "").to_i
		
      elsif line =~ /Suffused (.+): ([\d,]+)$/
        suffusedType = $1
		suffused = $2.gsub(",", "").to_i
      end
    }

		
	
	spellRankBonus = (classranks > (level + 1) ? (level + 1)*2 + (classranks - (level + 1)) : classranks * 2)
	magicitemuseRanks = magicitemuse * 1.5
	arcanesymbolsRanks = arcanesymbols * 1.5
	
	paladinBattleStandardBonus = level + spellRankBonus + wisdom + influence + spiritualManaControl + magicitemuseRanks + arcanesymbolsRanks + 20
	paladinBattleStandardSuffusedMaxBonus = paladinBattleStandardBonus + suffused
	
	respond ""
	respond "     #{spellName} Success Formula"
	respond "     ---------------------------"
	respond "       #{(level).to_s.rjust(3)} : Level"
	respond "     + #{(spellRankBonus).to_s.rjust(3)} : #{profName} Spells (+2 per rank up to level, +1 per rank above level)"
	respond "     + #{(wisdom).to_s.rjust(3)} : Wisdom Bonus"
	respond "     + #{(influence).to_s.rjust(3)} : Influence Bonus"

	respond "     + #{((spiritualManaControl)).to_s.rjust(3)} : Spirit Mana Control ranks"
	respond "     + #{((magicitemuseRanks)).to_s.rjust(3)} : MIU ranks (+1.5 per rank)"
	respond "     + #{((arcanesymbolsRanks)).to_s.rjust(3)} : Arcane Symbols ranks (+1.5 per rank)"
	respond "     +  #{shrineBonus} : #{bonusLocationType} Bonus (+20 for matching CONVERT exactly, +10 for same CONVERT pantheon)"
	respond "     ==========================="
	respond "     #{spellName} Total Bonus: #{paladinBattleStandardBonus.to_i}"
	respond "     #{spellName} Total Bonus with suffused #{suffusedType}: #{paladinBattleStandardSuffusedMaxBonus.to_i}"
	respond ""
	respond ""
	respond "     #{spellName} Casting Requirements:"
	respond ""	
	respond "         Tier        Difficulty    Bonus Needed for 100%       #{suffusedType} Required"
	respond "          #{tierPrefix}1             150               250                        50,000       "
    respond "          #{tierPrefix}2             225               325                        75,000       "
    respond "          #{tierPrefix}3             300               400                        100,000      "
    respond "          #{tierPrefix}4             375               475                        125,000      "
    respond "          #{tierPrefix}5             450               550                        150,000      "
    respond "          #{tierPrefix}6             525               625                        200,000      "

	difficulties = [250, 325, 400, 575, 550, 625]
	
	maxUnsuffusedTier = 0
	maxSuffusedTier = 0
	
	difficulties.each{|difficulty|
	
		if(difficulty < paladinBattleStandardBonus)
			maxUnsuffusedTier += 1
		end
				
		if(difficulty < paladinBattleStandardSuffusedMaxBonus)
			maxSuffusedTier += 1		
		end
	}
	
	
	respond ""
	respond "     Right now:"
	respond "         The max #{spellName} tier you can cast without suffusion is: #{(maxUnsuffusedTier == 0) ? "NONE" : "#{tierPrefix}#{maxUnsuffusedTier}"}"
	respond "         The max #{spellName} tier you can cast with suffusion is: #{(maxSuffusedTier == 0) ? "NONE" : "#{tierPrefix}#{maxSuffusedTier}"}"
	respond ""
	
	tiers = [1,2,3,4,5,6]
	tiers.each{|tier|
		if(maxSuffusedTier < tier)
			missingSuffuse = difficulties[tier-1] - paladinBattleStandardSuffusedMaxBonus;
			missingWeeks = (missingSuffuse / 25.0).ceil
			respond "         To make an #{tierPrefix}#{tier} cast, you need #{missingSuffuse.to_i.to_s.rjust(3)} suffused #{suffusedType} (#{missingWeeks} weeks)"
		end	
	}
	
	respond ""
	respond ""
	