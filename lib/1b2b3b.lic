
read = ["palimp", "scroll"]
save_spell = ""
temp_save = ""
leftover_spell = ""
temp_leftover = ""
line = ""
allscrolls = []
temp_allscrolls = []

scrolls = /\((906|102|207|209|215|219|303|307|310|313|314|315|318|503|507|508|509|511|513|601|602|611|613|618|620|712|905|911|913|1109|1119|1204|1208|1215|1216|1220|1601|1609|1610|1611|1612|1616|1701|1712|1720)\)/

read.each do |obj|
    reading_scroll = true
    fput "buy #{obj}"
    waitcastrt?
    fput "pre 704"
    fput "cast at my #{obj}"
    while (line = get)
        if line =~ /insubstantial and appears lighter/
            fput "drop #{obj}"
            carry_on = "yes"
            break
        elsif line =~ /resists/
            fput "put #{obj} in my pack"
            #may need to shift gemvalue
            carry_on = "no"
            break
        end
    end

    if carry_on == "yes"
        fput "read my #{obj}"

        while line=get
            if line =~ /On the/

                break
            end
        end

        while(reading_scroll)
            line = matchtimeout 1, "\\(", "unreadable"
            if line =~ scrolls

                temp_save = $1
                if save_spell.empty?
                    save_spell = temp_save
                else
                    save_spell = save_spell + ", " + temp_save
                end
            elsif line =~ /\((\d+)\)/

                temp_leftover = $1

                if leftover_spell.empty?
                    leftover_spell = temp_leftover

                elsif 
                    leftover_spell = leftover_spell + ", " + temp_leftover

                end
            else
                reading_scroll = false
            end
        end

    end

    temp_allscrolls.push(obj).push(GameObj.left_hand).push(save_spell).push(leftover_spell).push("gemvalue")
    allscrolls.push(temp_allscrolls)

    fput "put #{obj} in my lea harn"
    temp_allscrolls.clear
    save_spell.clear
    leftover_spell.clear
end

#this isn't reporting out correctly
allscrolls.each do |obj|
    echo obj
end






