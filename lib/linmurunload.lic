=begin

    author:anonymoose420

=end

Settings["leader"] = "Linmur" #if Settings["leader"] == nil
Settings["characters"] = ["Linmur"] #if Settings["characters"] == nil
CharSettings["containers"] = ["backpack", "cloak"] #if CharSettings["containers"] == nil
CharSettings["restroom"] = "8859" #if Settings["restroom"] == nil

CharSettings["containers"] = ["pack", "cloak"] if Char.name =~ /Linmur/

loots  = {}

Skins = /(antlers|appendage|blood-stained bark|beard|bone|branch|canine|fungal cap|carapace|claw|crest|cutting|ear|eyeball|eye|fang|feathers|feather|finger|fin|firethorn|fur|gizzard|heart|hide|hoof|horn|horseshoe|incisor|jawbone|jaw|knuckle|leaf|leg|mandible|mane|nail|nose|opal|paw|pelt|pincer|plume|rattle|sail|scale|scalp|scraping|sheepskin|shell|shinbone|shroud|skin|skull|snout|spine|stem|stinger|tail|tailfeather|tailspike|talon|tentacle|thorn|thumb|toe|tongue|tooth|tusk|whisker|wing)(\.|,| and)/
Pawns = /(?<pawn>\w+ gold ring|gold coin|iron filings|vellum|palimpsest|paper|kirtle|bodice|kerchief|pestle|deathstone granules|white flask|crystal amulet|gold coin|(black|blue|white) crystal|granite triangle|scroll|small statue|(iron|silver) wand|wand|(drake|feras) [a-z\-]*|moonstone cube|quartz orb|(antique|steel|copper|silver) lockpick)(\.|,| and)/
Collects = /(?<collect>statuette|figurine|ruby shard|ethereal orb|piece of eight|(smooth|polished) stone|rough moonstone|cloudy glass|cloudy soulstone|(blue|gold|iron|silver|icy blue) flakes)(\.|,| and)/
Consignment = /(?<cons>((s|t)')?ayanad crystal|troll tooth|corked crystalline globe|elemental core|blue mote of essence|essence of (fire|air|water|earth)|(blue) essence shard)(\.|,| and)/
Junks = /(?<junk>piece of iron|horseshoe|(bent|rusty|dented|scratched|shiny|tarnished|corroded|polished|chipped) (ring|brick|doorknob|coin|medallion|anklet|bracelet|nail|cup|fork|spoon)|tree bark|smooth stone|cloth|cupcake|muffin|bone|doughnut|tart|cookie|swathe|fork|spoon|quiver|socks|harness|scabbard|moth-eaten [a-zA-Z ]*)(\.|,| and)/
Gems = /(?<gem>figurine|(?!heavy quartz )orb|horn|miniature|baton|sculpture|statuette|statue|figurine|earring|ring|armband|bracer|flask|rod|stickpin|medallion|band|necklace|neckchain|earcuff|bracelet|barrette|buckle|platter|urn|jug|pitcher|flagon|chalice|pin|torc|clasp|sceptre|pendant|ewer|bowl|goblet|headband|stein|crown|talisman|brooch|tiara|circlet)(\.|,| and)/
Boxes = /(?<box>coffer|trunk|strongbox|chest|box)(\.|,)/
Notes = /(?<note>note|scrip|chit)/

Excludes = /EXCLUDENOTHING/

checkNote = proc {
    if checkleft =~ Notes || checkright =~ Notes
        fput "stow #{$~[:note]}"
    end
}

for container in CharSettings["containers"]
    loots[container] = ""
    until loots[container] =~ /In the .* ?#{container} you see|There is nothing in there/
        loots[container] = fput "look in my #{container}"
        sleep 0.1
    end
end

until checkleft == nil and checkright == nil
    fput "push my swordbelt"
end

left = checkleft
right = checkright

if checkleft 
    lefthand = GameObj.left_hand
    fput "put ##{lefthand.id} in my #{Lich.lootsack}"
end
if checkright
    righthand = GameObj.right_hand
    fput "put ##{righthand.id} in my #{Lich.lootsack}"
end

for container in CharSettings["containers"]
    if loots[container] =~ Collects
        Script.run "go2", "collectibles"
        while loots[container] =~ Collects
            collect = $~[:collect].to_s
            collect = "piece" if collect =~ /piece of eight/
            collect = "icy flakes" if collect =~ /icy blue flakes/
            multifput "get my #{collect} from my #{container}", "deposit my #{collect}"
            if checkright == nil
                loots[container].slice! collect
            else
                fput "stow my #{collect}"
            end
            sleep 0.1
        end
    end
end


for container in CharSettings["containers"]
    if loots[container] =~ Skins
        Script.run "go2", "furrier"
        multifput "remove my #{container}", "sell my #{container}", "wear my #{container}"
        checkNote.call()
        Script.run "foreach", "skin in #{container}; get; sell"
        sleep 0.1
    end
end

for container in CharSettings["containers"]
    loots[container] = ""
    until loots[container] =~ /In the .* ?#{container} you see|There is nothing in there/
        loots[container] = fput "look in my #{container}"
        sleep 0.1
    end
end

for container in CharSettings["containers"]
    if loots[container] =~ Junks
        while loots[container] =~ Junks
            junk = $~[:junk].to_s
            multifput "get my #{junk} from my #{container}", "put my #{junk} in barrel", "drop my #{junk}"
            loots[container].slice! junk
            sleep 0.1
        end
    end
end

boxes = false
for container in CharSettings["containers"]
    if loots[container] =~ Boxes
        boxes = true
    end
end
unless boxes
    disk = fput "look in #{Char.name} disk" 
    boxes = true if disk =~ Boxes
end

if boxes
    if checkspell "Loot Boost" 
        Script.run "poolparty", "deposit"
    else
        Script.run "poolparty"
    end
end


for container in CharSettings["containers"]
    loots[container] = ""
    until loots[container] =~ /In the .* ?#{container} you see|There is nothing in there/
        loots[container] = fput "look in my #{container}"
        sleep 0.1
    end
end

for container in CharSettings["containers"]
    if loots[container] =~ Collects
        Script.run "go2", "collectibles"
        while loots[container] =~ Collects
            collect = $~[:collect].to_s
            collect = "piece" if collect =~ /piece of eight/
            collect = "icy flakes" if collect =~ /icy blue flakes/
            multifput "get my #{collect} from my #{container}", "deposit my #{collect}"
            loots[container].slice! collect
            sleep 0.1
        end
    end
end

for container in CharSettings["containers"]
    if loots[container] =~ Junks
        while loots[container] =~ Junks
            junk = $~[:junk].to_s
            multifput "get my #{junk} from my #{container}", "put my #{junk} in barrel", "drop my #{junk}"
            loots[container].slice! junk
            sleep 0.1
        end
    end
end

#unless Char.name =~ /Levocus/
    for container in CharSettings["containers"]
        if loots[container] =~ Consignment
            Script.run "go2", "consignment"
            while loots[container] =~ Consignment
                cons = $~[:cons]
                loots[container].slice! cons
                if cons =~ /mote of essence/
                    cons = "essence"
                elsif cons =~ /corked crystalline globe/
                    cons = "crystal globe"
                elsif cons =~ /blue essence shard/
                    cons = "blue shard"
                end
                multifput "get my #{cons} from my #{container}", "sell my #{cons}"
                sleep 0.1
            end
        end
    end
#end


for container in CharSettings["containers"]
    if loots[container] =~ Pawns
        Script.run "go2", "pawnshop"
        while loots[container] =~ Pawns
            pawn = $~[:pawn].to_s
            loots[container].slice! pawn
            pawn = "ring" if pawn =~ /gold ring/
            pawn = "filings" if cons =~ /filings/
            multifput "get my #{pawn} from my #{container}", "sell my #{pawn}"
            checkNote.call()
            sleep 0.1
        end
    end
end

Script.run "go2", "gemshop"
for container in CharSettings["containers"]
    multifput "remove my #{container}", "sell my #{container}", "wear my #{container}"
    checkNote.call()
    if loots[container] =~ Gems
        while loots[container] =~ Gems
            gem =  $~[:gem].to_s
            multifput "get my #{gem} from my #{container}", "sell my #{gem}"
            checkNote.call()
            loots[container ].slice! gem
        end
    end
end

#Script.run "sloot", "sell"
#pause
Script.run "go2", "bank"
pause

if GameObj.npcs.any? { |npc| npc.name =~ /Hurshal/}
    coins = dothis "wealth", /You have (?<coins>\S+) (silver )?coins with you/
    if coins =~ /You have (?<coins>\S+) (silver )?coins with you/
        numcoins = $~[:coins]
        numcoins.slice! ","
        numcoins = numcoins.to_i
        fput "give banker #{numcoins.to_s}"
    end
    Script.run "foreach", "note in backpack; get; give noun to banker"
else
    put "deposit all"
end


fput "get ##{righthand.id}" if !righthand.nil?
fput "get ##{lefthand.id}" if !lefthand.nil?

until checkleft == nil and checkright == nil
    fput "push my swordbelt"
end

Script.run "go2", "#{CharSettings["restroom"]}"


pause rand(6)
if Char.name == Settings["leader"]
    for character in Settings["characters"]
        fput "hold #{character}" unless character == Settings["leader"]
    end
else
    fput "join #{Settings["leader"]}"
end