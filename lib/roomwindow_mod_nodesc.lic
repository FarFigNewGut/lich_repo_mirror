=begin
  This script intercepts downstream XML destined for the Room window and removes
  the room description by replacing the entire
    <compDef id='room desc'> ... </compDef>
  block with an empty tag.

  Additionally, if the @show_waytos option is enabled, the script uses a polling thread
  with a debounce mechanism to monitor room changes. When a new room is detected, the script
  waits until the room id remains stable for a defined threshold (0.2 seconds) before retrieving
  and pushing the current room's wayto information (via Room.current.wayto) to the Room window,
  using:
      Lich::Messaging.stream_window(formatted, "room")
  
  Use the command `toggle_waytos` to enable/disable the room wayto output.
  
  ;e toggle_waytos
  (Default is disabled.)
  
  author: Phocosoen, ChatGPT
  tags: filter, room, window, description, wayto, debounce
=end

unless defined?(script)
  echo "Your version of Lich is too old for this script."
  exit
end

# Default setting: room wayto output is disabled.
@show_waytos = false

# Toggle function: call "toggle_waytos" from the command line to enable/disable the room wayto output.
def toggle_waytos
  @show_waytos = !@show_waytos
  echo "Room wayto info is now #{@show_waytos ? 'enabled' : 'disabled'}."
end

# Request that Lich passes downstream XML to our hook.
script.want_downstream_xml = true

# Downstream hook: Remove the room description from the Room window.
DownstreamHook.add('filter_room_desc_only', proc { |data|
  # Remove the room description block.
  new_data = data.gsub(/<compDef id=['"]room desc['"]>.*?<\/compDef>/m, "<compDef id='room desc'></compDef>")
  new_data
})

echo "Room description filter active: Room descriptions are removed."

# Debounce polling thread to update room wayto info when the room is stable.
$last_room_id = nil
$stable_since = nil
Thread.new do
  loop do
    if defined?(Room) && Room.current
      begin
        current_id = Room.current.id rescue nil
      rescue Exception
        current_id = nil
      end

      if current_id && current_id != $last_room_id
        # New room detected; record the time.
        $last_room_id = current_id
        $stable_since = Time.now
      elsif current_id && $stable_since && (Time.now - $stable_since >= 0.2)
        # The room has remained stable for 0.2 seconds.
        if @show_waytos && Room.current.wayto
          formatted = Room.current.wayto.map { |num, cmd| "#{num} -> #{cmd}" }.join("\n")
          if formatted && !formatted.empty?
            Lich::Messaging.stream_window(formatted, "room")
          end
        end
        # Once updated, wait a bit longer before checking again (to avoid repeat updates).
        $stable_since = Time.now + 1
      end
    end
    sleep 0.05
  end
end

echo "Room wayto updater active: Debounce polling is running; room wayto info is #{@show_waytos ? 'enabled' : 'disabled'}."
