$TITLE = "IdleACTion: v. (1.0.0)"
$ia = self
		  $get_vBox = proc {
        if Gtk.check_version(3,0,0).nil?
          Gtk::Box.new(:vertical)
        else
          Gtk::VBox.new(false, 0)
        end
      }

=begin
--------------------------------------------------------------------------
	IdleACTion Version: 1.0.1 (October 25, 2025)
	
	   Usage: 
	
	   ;idleaction setup                       Opens the setup window
	
	   This is a customizable idle ACTion script, you can enter up to 100 different custom ACT commands. 
	   At every defined interval the script will select one randomly and perform it. 
	   Enjoy 
	
	   ~Peggyanne 
	 PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them.
	 
	 Change Log:
	 
	         October 25, 2025 - Initial Release.
	         October 29, 2025 - Fixed Issue With Punctuation.
			
=end

def ia_help_display
	respond "------------------------------------------------------------------------------"
	respond "   IdleACTion Version: 1.0.1"
	respond ""
	respond "   Usage: "
	respond ""
	respond "   ;idleaction setup                       Opens the setup window"
	respond ""
	respond "   This is a customizable idle ACTion script, you can enter up to 100 different custom ACT commands."
	respond "   At every defined interval the script will select one randomly and perform it."
	respond "   Enjoy "
	respond ""
	respond "   ~Peggyanne "
	respond " PS: feel free to send me any bugs via discord Bait#4376 and I'll try my best to fix them. "
	respond ""
	respond "Changelog:"
	respond ""
	respond "           October 25, 2025 - Initial Release."
	respond "           October 29, 2025 - Fixed Issue With Punctuation."
	respond ""
end

  def set_value(key, clean, default)
    if (!UserVars.idleaction[key].nil? && UserVars.idleaction[key] !~ /^\s*$/)
      cleaned = clean_value(clean, UserVars.idleaction[key])
      instance_variable_set("@#{key.upcase}", cleaned)
    else
      instance_variable_set("@#{key.upcase}", default)
    end
  end
	  
def self.iasetup
	@theme_state = Lich.track_dark_mode if defined? Lich.track_dark_mode
    Gtk.queue do
      @get_vBox = proc {
        if Gtk.check_version(3,0,0).nil?
          Gtk::Box.new(:vertical)
        else
          Gtk::VBox.new(false, 0)
        end
      }
	  @IA_WINDOW = Gtk::Window.new
      @IA_WINDOW.title = $TITLE
      @IA_WINDOW.set_icon(@default_icon)
      @IA_WINDOW.set_border_width(10)
      @IA_WINDOW.keep_above = true
	  
		if Gtk.check_version(3,0,0).nil? && (@theme_state == 'off' or @theme_state.nil?)
			grey = Gdk::RGBA::parse("#d3d3d3")
			@OP_WINDOW.override_background_color(:normal, grey)
		end

      @IA_BOX = @get_vBox.call
      @IA_BOX.set_border_width(5)
      @IA_WINDOW.add(@IA_BOX)

      @IA_NOTEBOOK = Gtk::Notebook.new
      @IA_NOTEBOOK.set_show_border(true)
	  if Gtk.check_version(3,0,0).nil? && (@theme_state == 'off' or @theme_state.nil?)
		@IA_NOTEBOOK.override_background_color(:normal, grey)
	  end
      @IA_BOX.add(@IA_NOTEBOOK)
      @IA_ENTRY = Hash.new # For mapping entries to variables
      @IA_TABLE_SIZE = Hash.new # For mapping table sizes

  end
  
	Gtk.queue do
      tab_names = %w[
        1
		2
		3
		4
		5
		6
		7
		8
		9
		10
      ]
	  
     tab_names.each.with_index(1) do |name, val|
        new_table = Gtk::Table.new(10, 4, true).tap do |table|
          table.row_spacings = 1
          table.column_spacings = 1
        end

        new_box = if Gtk.check_version(3,0,0).nil?
          Gtk::Box.new(:vertical)
        else
          Gtk::VBox.new(false, 0)
        end

        if Gtk.check_version(3,0,0).nil?
          new_box.pack_start(new_table, expand: false, fill: false, padding: 0)
        else
          new_box.pack_start(new_table, false, false, 0)
        end

        @IA_NOTEBOOK.append_page(new_box, Gtk::Label.new(name))

        instance_variable_set("@IA_TABLE#{val}", new_table)
        instance_variable_set("@IA_VERTICAL_BOX#{val}", new_box)
      end
end

def self.add_label_entry(table, label, variable, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 0, 1, size, size + 1)

    entry = Gtk::Entry.new
    entry.text = UserVars.idleaction[variable].to_s
    entry.set_width_request(150)
    table.attach(entry, 1, 2, size, size + 1)

    @IA_ENTRY[variable] = entry
    @IA_TABLE_SIZE[table] += 1 if newrow
  end

def self.add_label_entry2(table, label, variable, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 2, 3, size, size + 1)

    entry = Gtk::Entry.new
    entry.text = UserVars.idleaction[variable].to_s
    entry.set_width_request(150)
    table.attach(entry, 3, 4, size, size + 1)

    @IA_ENTRY[variable] = entry
    @IA_TABLE_SIZE[table] += 1 if newrow
end  

def self.add_label_entry3(table, label, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 0, 1, size, size + 1)

    @IA_TABLE_SIZE[table] += 1 if newrow
end  

def self.add_label_entry4(table, label, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 2, 3, size, size + 1)

    @IA_TABLE_SIZE[table] += 1 if newrow
end 

def self.add_label_entry5(table, label, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 4, 5, size, size + 1)

    @IA_TABLE_SIZE[table] += 1 if newrow
end 

def self.add_label_entry6(table, label, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 1, 2, size, size + 1)

    @IA_TABLE_SIZE[table] += 1 if newrow
end 

def self.add_label_entry7(table, label, variable, newrow = false)
    size = @IA_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 0, 0, 0, 0
    align.set_padding(4, 1, 1, 4)
    align.add(label)
    table.attach(align, 0, 1, size, size + 1)

    entry = Gtk::Entry.new
    entry.text = UserVars.idleaction[variable].to_s
    entry.set_width_request(150)
    table.attach(entry, 1, 3, size, size + 1)

    @IA_ENTRY[variable] = entry
    @IA_TABLE_SIZE[table] += 1 if newrow
  end

    def self.add_dropdown(table, dropdown, variable, options, newrow = false)
      size = @IA_TABLE_SIZE[table] || 0

      label = Gtk::Label.new(dropdown)
      dropdown = if Gtk.check_version(3,0,0).nil?
        Gtk::ComboBoxText.new
      else
        Gtk::ComboBox.new
      end

      options.split(',').each { |s| dropdown.append_text(s) }
      if UserVars.idleaction[variable].nil?
        dropdown.set_active(0)
      else
        if UserVars.idleaction[variable].to_s != "Fixnum" && UserVars.idleaction[variable].to_s != "Integer"
          UserVars.idleaction[variable]
        end
        dropdown.set_active(UserVars.idleaction[variable])
      end
      align = Gtk::Alignment.new 0, 0, 0, 0
      align2 = Gtk::Alignment.new 0, 0, 1, 0
      align.set_padding(4, 0, 3, 4)
      align2.set_padding(0, 0, 0, 0)
      align.add(label)
      align2.add(dropdown)
      table.attach(align, 0, 1, size, size + 1)
      table.attach(align2, 1, 2, size, size + 1)
      @IA_ENTRY[variable] = dropdown
      @IA_TABLE_SIZE[table] += 1 if newrow
    end

def self.add_dropdown2(table, dropdown, variable, options, newrow = false)
      size = @IA_TABLE_SIZE[table] || 0

      label = Gtk::Label.new(dropdown)
      dropdown = if Gtk.check_version(3,0,0).nil?
        Gtk::ComboBoxText.new
      else
        Gtk::ComboBox.new
      end

      options.split(',').each { |s| dropdown.append_text(s) }
      if UserVars.idleaction[variable].nil?
        dropdown.set_active(0)
      else
        if UserVars.idleaction[variable].to_s != "Fixnum" && UserVars.idleaction[variable].to_s != "Integer"
          UserVars.idleaction[variable]
        end
        dropdown.set_active(UserVars.idleaction[variable])
      end
      align = Gtk::Alignment.new 0, 0, 0, 0
      align2 = Gtk::Alignment.new 0, 0, 1, 0
      align.set_padding(4, 0, 3, 4)
      align2.set_padding(0, 0, 0, 0)
      align.add(label)
      align2.add(dropdown)
      table.attach(align, 2, 3, size, size + 1)
      table.attach(align2, 3, 4, size, size + 1)
      @IA_ENTRY[variable] = dropdown
      @IA_TABLE_SIZE[table] += 1 if newrow
    end

      def self.add_text_area(vbox, label, variable)
      # Grab value for a manual check since we can't rely on a version of Ruby with safe operators
      current_value = UserVars.idleaction[variable]

      entry = Gtk::TextView.new
      entry.buffer.text = current_value ? current_value.gsub("||","\n") : ""

      swin = Gtk::ScrolledWindow.new
      swin.border_width = 5
      swin.add(entry)
      swin.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS)

      frame = Gtk::Frame.new(label)
      frame.add(swin)

      vbox.pack_start_defaults(frame)

      @IA_ENTRY[variable] = entry
    end
  Gtk.queue do
    @IA_ENTRY = Hash.new
	add_label_entry(@IA_TABLE1, "Idle Timer: (Default 120 seconds)", 'seconds', true)
	add_label_entry7(@IA_TABLE1, "Action:", 'message_1', true)
	add_label_entry7(@IA_TABLE1, "Action:", 'message_2', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_3', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_4', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_5', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_6', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_7', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_8', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_9', true) 
	add_label_entry7(@IA_TABLE1, "Action:", 'message_10', true)
	add_label_entry7(@IA_TABLE2, "Action:", 'message_11', true)
	add_label_entry7(@IA_TABLE2, "Action:", 'message_12', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_13', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_14', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_15', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_16', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_17', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_18', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_19', true) 
	add_label_entry7(@IA_TABLE2, "Action:", 'message_20', true)
	add_label_entry7(@IA_TABLE3, "Action:", 'message_21', true)
	add_label_entry7(@IA_TABLE3, "Action:", 'message_22', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_23', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_24', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_25', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_26', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_27', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_28', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_29', true) 
	add_label_entry7(@IA_TABLE3, "Action:", 'message_30', true)
	add_label_entry7(@IA_TABLE4, "Action:", 'message_30', true)
	add_label_entry7(@IA_TABLE4, "Action:", 'message_31', true)
	add_label_entry7(@IA_TABLE4, "Action:", 'message_32', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_33', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_34', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_35', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_36', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_37', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_38', true) 
	add_label_entry7(@IA_TABLE4, "Action:", 'message_39', true)
	add_label_entry7(@IA_TABLE5, "Action:", 'message_40', true)
	add_label_entry7(@IA_TABLE5, "Action:", 'message_41', true)
	add_label_entry7(@IA_TABLE5, "Action:", 'message_42', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_43', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_44', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_45', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_46', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_47', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_48', true) 
	add_label_entry7(@IA_TABLE5, "Action:", 'message_49', true)
	add_label_entry7(@IA_TABLE6, "Action:", 'message_50', true)
	add_label_entry7(@IA_TABLE6, "Action:", 'message_51', true)
	add_label_entry7(@IA_TABLE6, "Action:", 'message_52', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_53', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_54', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_55', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_56', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_57', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_58', true) 
	add_label_entry7(@IA_TABLE6, "Action:", 'message_59', true)
	add_label_entry7(@IA_TABLE7, "Action:", 'message_60', true)
	add_label_entry7(@IA_TABLE7, "Action:", 'message_61', true)
	add_label_entry7(@IA_TABLE7, "Action:", 'message_62', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_63', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_64', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_65', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_66', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_67', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_68', true) 
	add_label_entry7(@IA_TABLE7, "Action:", 'message_69', true)
	add_label_entry7(@IA_TABLE8, "Action:", 'message_70', true)
	add_label_entry7(@IA_TABLE8, "Action:", 'message_71', true)
	add_label_entry7(@IA_TABLE8, "Action:", 'message_72', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_73', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_74', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_75', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_76', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_77', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_78', true) 
	add_label_entry7(@IA_TABLE8, "Action:", 'message_79', true)
	add_label_entry7(@IA_TABLE9, "Action:", 'message_80', true)
	add_label_entry7(@IA_TABLE9, "Action:", 'message_81', true)
	add_label_entry7(@IA_TABLE9, "Action:", 'message_82', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_83', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_84', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_85', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_86', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_87', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_88', true) 
	add_label_entry7(@IA_TABLE9, "Action:", 'message_89', true)
	add_label_entry7(@IA_TABLE10, "Action:", 'message_90', true)
	add_label_entry7(@IA_TABLE10, "Action:", 'message_91', true)
	add_label_entry7(@IA_TABLE10, "Action:", 'message_92', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_93', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_94', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_95', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_96', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_97', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_98', true) 
	add_label_entry7(@IA_TABLE10, "Action:", 'message_99', true)
	add_label_entry7(@IA_TABLE10, "Action:", 'message_100', true)
end
  
    def self.add_checkbox(table, x_pos, label, variable, newrow = false, default = false)
      size = @IA_TABLE_SIZE[table] || 0
      checkbox = Gtk::CheckButton.new label
      value = UserVars.idleaction[variable] || default
      checkbox.active = value
      table.attach(checkbox, x_pos, x_pos + 1, size, size + 1)
      @IA_ENTRY[variable] = checkbox
      @IA_TABLE_SIZE[table] += 1 if newrow
    end
	
  Gtk.queue do
    @IA_WINDOW.signal_connect("delete_event") {
      @IA_SETUP_COMPLETED = true
    }
  end

  Gtk.queue do 
	
    @IA_WINDOW.show_all
  end

  @IA_SETUP_COMPLETED = false
  until(@IA_SETUP_COMPLETED)
    sleep(0.5)
  end

    UserVars.idleaction ||= Hash.new
    @IA_ENTRY.keys.each do |key|
      echo "#{key} - #{@IA_ENTRY[key].to_s}" if $ia_debug
      if @IA_ENTRY[key].to_s =~ /CheckButton/
        value = @IA_ENTRY[key].active?
        UserVars.idleaction[key] = @IA_ENTRY[key].active?
      elsif @IA_ENTRY[key].to_s =~ /ComboBox/
        UserVars.idleaction[key] = @IA_ENTRY[key].active
      elsif @IA_ENTRY[key].to_s =~ /TextView/
        # Store these with double pipes so we don't mess up any supplied expressions
        UserVars.idleaction[key] = @IA_ENTRY[key].buffer.text.gsub("\n","||")
      else
        if key == 'wounded_eval'
          UserVars.idleaction[key] = @IA_ENTRY[key].text
        else
          UserVars.idleaction[key] = @IA_ENTRY[key].text.strip
        end
      end
    end
    UserVars.save

  Gtk.queue do
    @IA_WINDOW.destroy
 end
end

def perform_idle_action
	$idle_randomizer = rand(1-100)
	waitrt?
	waitcastrt?
	if ($idle_randomizer == 1) && (!UserVars.idleaction["message_1"].empty?)
		do_client "act #{UserVars.idleaction["message_1"]}"
	elsif ($idle_randomizer == 2) && (!UserVars.idleaction["message_2"].empty?)
		do_client "act #{UserVars.idleaction["message_2"]}"
	elsif ($idle_randomizer == 3) && (!UserVars.idleaction["message_3"].empty?)
		do_client "act #{UserVars.idleaction["message_3"]}"
	elsif ($idle_randomizer == 4) && (!UserVars.idleaction["message_4"].empty?)
		do_client "act #{UserVars.idleaction["message_4"]}"
	elsif ($idle_randomizer == 5) && (!UserVars.idleaction["message_5"].empty?)
		do_client "act #{UserVars.idleaction["message_5"]}"
	elsif ($idle_randomizer == 6) && (!UserVars.idleaction["message_6"].empty?)
		do_client "act #{UserVars.idleaction["message_6"]}"
	elsif ($idle_randomizer == 7) && (!UserVars.idleaction["message_7"].empty?)
		do_client "act #{UserVars.idleaction["message_7"]}"
	elsif ($idle_randomizer == 8) && (!UserVars.idleaction["message_8"].empty?)
		do_client "act #{UserVars.idleaction["message_8"]}"
	elsif ($idle_randomizer == 9) && (!UserVars.idleaction["message_9"].empty?)
		do_client "act #{UserVars.idleaction["message_9"]}"
	elsif ($idle_randomizer == 10) && (!UserVars.idleaction["message_10"].empty?)
		do_client "act #{UserVars.idleaction["message_10"]}"
	elsif ($idle_randomizer == 11) && (!UserVars.idleaction["message_11"].empty?)
		do_client "act #{UserVars.idleaction["message_11"]}"
	elsif ($idle_randomizer == 12) && (!UserVars.idleaction["message_12"].empty?)
		do_client "act #{UserVars.idleaction["message_12"]}"
	elsif ($idle_randomizer == 13) && (!UserVars.idleaction["message_13"].empty?)
		do_client "act #{UserVars.idleaction["message_13"]}"
	elsif ($idle_randomizer == 14) && (!UserVars.idleaction["message_14"].empty?)
		do_client "act #{UserVars.idleaction["message_14"]}"
	elsif ($idle_randomizer == 15) && (!UserVars.idleaction["message_15"].empty?)
		do_client "act #{UserVars.idleaction["message_15"]}"
	elsif ($idle_randomizer == 16) && (!UserVars.idleaction["message_16"].empty?)
		do_client "act #{UserVars.idleaction["message_16"]}"
	elsif ($idle_randomizer == 17) && (!UserVars.idleaction["message_17"].empty?)
		do_client "act #{UserVars.idleaction["message_17"]}"
	elsif ($idle_randomizer == 18) && (!UserVars.idleaction["message_18"].empty?)
		do_client "act #{UserVars.idleaction["message_18"]}"
	elsif ($idle_randomizer == 19) && (!UserVars.idleaction["message_19"].empty?)
		do_client "act #{UserVars.idleaction["message_19"]}"
	elsif ($idle_randomizer == 20) && (!UserVars.idleaction["message_20"].empty?)
		do_client "act #{UserVars.idleaction["message_20"]}"
	elsif ($idle_randomizer == 21) && (!UserVars.idleaction["message_21"].empty?)
		do_client "act #{UserVars.idleaction["message_21"]}"
	elsif ($idle_randomizer == 22) && (!UserVars.idleaction["message_22"].empty?)
		do_client "act #{UserVars.idleaction["message_22"]}"
	elsif ($idle_randomizer == 23) && (!UserVars.idleaction["message_23"].empty?)
		do_client "act #{UserVars.idleaction["message_23"]}"
	elsif ($idle_randomizer == 24) && (!UserVars.idleaction["message_24"].empty?)
		do_client "act #{UserVars.idleaction["message_24"]}"
	elsif ($idle_randomizer == 25) && (!UserVars.idleaction["message_25"].empty?)
		do_client "act #{UserVars.idleaction["message_25"]}"
	elsif ($idle_randomizer == 26) && (!UserVars.idleaction["message_26"].empty?)
		do_client "act #{UserVars.idleaction["message_26"]}"
	elsif ($idle_randomizer == 27) && (!UserVars.idleaction["message_27"].empty?)
		do_client "act #{UserVars.idleaction["message_27"]}"
	elsif ($idle_randomizer == 28) && (!UserVars.idleaction["message_28"].empty?)
		do_client "act #{UserVars.idleaction["message_28"]}"
	elsif ($idle_randomizer == 29) && (!UserVars.idleaction["message_29"].empty?)
		do_client "act #{UserVars.idleaction["message_29"]}"
	elsif ($idle_randomizer == 30) && (!UserVars.idleaction["message_30"].empty?)
		do_client "act #{UserVars.idleaction["message_30"]}"
	elsif ($idle_randomizer == 31) && (!UserVars.idleaction["message_31"].empty?)
		do_client "act #{UserVars.idleaction["message_31"]}"
	elsif ($idle_randomizer == 32) && (!UserVars.idleaction["message_32"].empty?)
		do_client "act #{UserVars.idleaction["message_32"]}"
	elsif ($idle_randomizer == 33) && (!UserVars.idleaction["message_33"].empty?)
		do_client "act #{UserVars.idleaction["message_33"]}"
	elsif ($idle_randomizer == 34) && (!UserVars.idleaction["message_34"].empty?)
		do_client "act #{UserVars.idleaction["message_34"]}"
	elsif ($idle_randomizer == 35) && (!UserVars.idleaction["message_35"].empty?)
		do_client "act #{UserVars.idleaction["message_35"]}"
	elsif ($idle_randomizer == 36) && (!UserVars.idleaction["message_36"].empty?)
		do_client "act #{UserVars.idleaction["message_36"]}"
	elsif ($idle_randomizer == 37) && (!UserVars.idleaction["message_37"].empty?)
		do_client "act #{UserVars.idleaction["message_37"]}"
	elsif ($idle_randomizer == 38) && (!UserVars.idleaction["message_38"].empty?)
		do_client "act #{UserVars.idleaction["message_38"]}"
	elsif ($idle_randomizer == 39) && (!UserVars.idleaction["message_39"].empty?)
		do_client "act #{UserVars.idleaction["message_39"]}"
	elsif ($idle_randomizer == 40) && (!UserVars.idleaction["message_40"].empty?)
		do_client "act #{UserVars.idleaction["message_40"]}"
	elsif ($idle_randomizer == 41) && (!UserVars.idleaction["message_41"].empty?)
		do_client "act #{UserVars.idleaction["message_41"]}"
	elsif ($idle_randomizer == 42) && (!UserVars.idleaction["message_42"].empty?)
		do_client "act #{UserVars.idleaction["message_42"]}"
	elsif ($idle_randomizer == 43) && (!UserVars.idleaction["message_43"].empty?)
		do_client "act #{UserVars.idleaction["message_43"]}"
	elsif ($idle_randomizer == 44) && (!UserVars.idleaction["message_44"].empty?)
		do_client "act #{UserVars.idleaction["message_44"]}"
	elsif ($idle_randomizer == 45) && (!UserVars.idleaction["message_45"].empty?)
		do_client "act #{UserVars.idleaction["message_45"]}"
	elsif ($idle_randomizer == 46) && (!UserVars.idleaction["message_46"].empty?)
		do_client "act #{UserVars.idleaction["message_46"]}"
	elsif ($idle_randomizer == 47) && (!UserVars.idleaction["message_47"].empty?)
		do_client "act #{UserVars.idleaction["message_47"]}"
	elsif ($idle_randomizer == 48) && (!UserVars.idleaction["message_48"].empty?)
		do_client "act #{UserVars.idleaction["message_48"]}"
	elsif ($idle_randomizer == 49) && (!UserVars.idleaction["message_49"].empty?)
		do_client "act #{UserVars.idleaction["message_49"]}"
	elsif ($idle_randomizer == 50) && (!UserVars.idleaction["message_50"].empty?)
		do_client "act #{UserVars.idleaction["message_50"]}"
	elsif ($idle_randomizer == 51) && (!UserVars.idleaction["message_51"].empty?)
		do_client "act #{UserVars.idleaction["message_51"]}"
	elsif ($idle_randomizer == 52) && (!UserVars.idleaction["message_52"].empty?)
		do_client "act #{UserVars.idleaction["message_52"]}"
	elsif ($idle_randomizer == 53) && (!UserVars.idleaction["message_53"].empty?)
		do_client "act #{UserVars.idleaction["message_53"]}"
	elsif ($idle_randomizer == 54) && (!UserVars.idleaction["message_54"].empty?)
		do_client "act #{UserVars.idleaction["message_54"]}"
	elsif ($idle_randomizer == 55) && (!UserVars.idleaction["message_55"].empty?)
		do_client "act #{UserVars.idleaction["message_55"]}"
	elsif ($idle_randomizer == 56) && (!UserVars.idleaction["message_56"].empty?)
		do_client "act #{UserVars.idleaction["message_56"]}"
	elsif ($idle_randomizer == 57) && (!UserVars.idleaction["message_57"].empty?)
		do_client "act #{UserVars.idleaction["message_57"]}"
	elsif ($idle_randomizer == 58) && (!UserVars.idleaction["message_58"].empty?)
		do_client "act #{UserVars.idleaction["message_58"]}"
	elsif ($idle_randomizer == 59) && (!UserVars.idleaction["message_59"].empty?)
		do_client "act #{UserVars.idleaction["message_59"]}"
	elsif ($idle_randomizer == 60) && (!UserVars.idleaction["message_60"].empty?)
		do_client "act #{UserVars.idleaction["message_60"]}"
	elsif ($idle_randomizer == 61) && (!UserVars.idleaction["message_61"].empty?)
		do_client "act #{UserVars.idleaction["message_61"]}"
	elsif ($idle_randomizer == 62) && (!UserVars.idleaction["message_62"].empty?)
		do_client "act #{UserVars.idleaction["message_62"]}"
	elsif ($idle_randomizer == 63) && (!UserVars.idleaction["message_63"].empty?)
		do_client "act #{UserVars.idleaction["message_63"]}"
	elsif ($idle_randomizer == 64) && (!UserVars.idleaction["message_64"].empty?)
		do_client "act #{UserVars.idleaction["message_64"]}"
	elsif ($idle_randomizer == 65) && (!UserVars.idleaction["message_65"].empty?)
		do_client "act #{UserVars.idleaction["message_65"]}"
	elsif ($idle_randomizer == 66) && (!UserVars.idleaction["message_66"].empty?)
		do_client "act #{UserVars.idleaction["message_66"]}"
	elsif ($idle_randomizer == 67) && (!UserVars.idleaction["message_67"].empty?)
		do_client "act #{UserVars.idleaction["message_67"]}"
	elsif ($idle_randomizer == 68) && (!UserVars.idleaction["message_68"].empty?)
		do_client "act #{UserVars.idleaction["message_68"]}"
	elsif ($idle_randomizer == 69) && (!UserVars.idleaction["message_69"].empty?)
		do_client "act #{UserVars.idleaction["message_69"]}"
	elsif ($idle_randomizer == 70) && (!UserVars.idleaction["message_70"].empty?)
		do_client "act #{UserVars.idleaction["message_70"]}"
	elsif ($idle_randomizer == 71) && (!UserVars.idleaction["message_71"].empty?)
		do_client "act #{UserVars.idleaction["message_71"]}"
	elsif ($idle_randomizer == 72) && (!UserVars.idleaction["message_72"].empty?)
		do_client "act #{UserVars.idleaction["message_72"]}"
	elsif ($idle_randomizer == 73) && (!UserVars.idleaction["message_73"].empty?)
		do_client "act #{UserVars.idleaction["message_73"]}"
	elsif ($idle_randomizer == 74) && (!UserVars.idleaction["message_74"].empty?)
		do_client "act #{UserVars.idleaction["message_74"]}"
	elsif ($idle_randomizer == 75) && (!UserVars.idleaction["message_75"].empty?)
		do_client "act #{UserVars.idleaction["message_75"]}"
	elsif ($idle_randomizer == 76) && (!UserVars.idleaction["message_76"].empty?)
		do_client "act #{UserVars.idleaction["message_76"]}"
	elsif ($idle_randomizer == 77) && (!UserVars.idleaction["message_77"].empty?)
		do_client "act #{UserVars.idleaction["message_77"]}"
	elsif ($idle_randomizer == 78) && (!UserVars.idleaction["message_78"].empty?)
		do_client "act #{UserVars.idleaction["message_78"]}"
	elsif ($idle_randomizer == 79) && (!UserVars.idleaction["message_79"].empty?)
		do_client "act #{UserVars.idleaction["message_79"]}"
	elsif ($idle_randomizer == 80) && (!UserVars.idleaction["message_80"].empty?)
		do_client "act #{UserVars.idleaction["message_80"]}"
	elsif ($idle_randomizer == 81) && (!UserVars.idleaction["message_81"].empty?)
		do_client "act #{UserVars.idleaction["message_81"]}"
	elsif ($idle_randomizer == 82) && (!UserVars.idleaction["message_82"].empty?)
		do_client "act #{UserVars.idleaction["message_82"]}"
	elsif ($idle_randomizer == 83) && (!UserVars.idleaction["message_83"].empty?)
		do_client "act #{UserVars.idleaction["message_83"]}"
	elsif ($idle_randomizer == 84) && (!UserVars.idleaction["message_84"].empty?)
		do_client "act #{UserVars.idleaction["message_84"]}"
	elsif ($idle_randomizer == 85) && (!UserVars.idleaction["message_85"].empty?)
		do_client "act #{UserVars.idleaction["message_85"]}"
	elsif ($idle_randomizer == 86) && (!UserVars.idleaction["message_86"].empty?)
		do_client "act #{UserVars.idleaction["message_86"]}"
	elsif ($idle_randomizer == 87) && (!UserVars.idleaction["message_87"].empty?)
		do_client "act #{UserVars.idleaction["message_87"]}"
	elsif ($idle_randomizer == 88) && (!UserVars.idleaction["message_88"].empty?)
		do_client "act #{UserVars.idleaction["message_88"]}"
	elsif ($idle_randomizer == 89) && (!UserVars.idleaction["message_89"].empty?)
		do_client "act #{UserVars.idleaction["message_89"]}"
	elsif ($idle_randomizer == 90) && (!UserVars.idleaction["message_90"].empty?)
		do_client "act #{UserVars.idleaction["message_90"]}"
	elsif ($idle_randomizer == 91) && (!UserVars.idleaction["message_91"].empty?)
		do_client "act #{UserVars.idleaction["message_91"]}"
	elsif ($idle_randomizer == 92) && (!UserVars.idleaction["message_92"].empty?)
		do_client "act #{UserVars.idleaction["message_92"]}"
	elsif ($idle_randomizer == 93) && (!UserVars.idleaction["message_93"].empty?)
		do_client "act #{UserVars.idleaction["message_93"]}"
	elsif ($idle_randomizer == 94) && (!UserVars.idleaction["message_94"].empty?)
		do_client "act #{UserVars.idleaction["message_94"]}"
	elsif ($idle_randomizer == 95) && (!UserVars.idleaction["message_95"].empty?)
		do_client "act #{UserVars.idleaction["message_95"]}"
	elsif ($idle_randomizer == 96) && (!UserVars.idleaction["message_96"].empty?)
		do_client "act #{UserVars.idleaction["message_96"]}"
	elsif ($idle_randomizer == 97) && (!UserVars.idleaction["message_97"].empty?)
		do_client "act #{UserVars.idleaction["message_97"]}"
	elsif ($idle_randomizer == 98) && (!UserVars.idleaction["message_98"].empty?)
		do_client "act #{UserVars.idleaction["message_98"]}"
	elsif ($idle_randomizer == 99) && (!UserVars.idleaction["message_99"].empty?)
		do_client "act #{UserVars.idleaction["message_99"]}"
	elsif ($idle_randomizer == 100) && (!UserVars.idleaction["message_100"].empty?)
		do_client "act #{UserVars.idleaction["message_100"]}"
	else
		perform_idle_action
	end
end 
	

if (script.vars[1] =~ /setup/i)
	self.iasetup()
	exit
elsif script.vars[1] == '?'
	ia_help_display
	exit
elsif script.vars[1] == 'help'
	ia_help_display
	exit
end

if UserVars.idleaction["seconds"].nil?
	UserVars.idleaction["seconds"] = 120
end
loop {
pause UserVars.idleaction["seconds"].to_i
perform_idle_action}