=begin

	Adds profession titles after people's names when you LOOK in a room. For example "Bob" would show up as "Bob (Cleric)", if the script has already recognized Bob as being a cleric.

	Here are commands to use while the script is running:

	To add someone with a title you specify type: ;title add name title
	Title can be anything you want and as many words as you like.

	To remove someone type: ;title remove name

	To scan WHO list for new people needing titles type: ;title scan
	Note: This does a WHO for every profession and adds people's titles if the script doesn't already know their title.

	To remove all titles from everyone and start with a clean slate type: ;title reset all

	To hide a particular profession from showing type: ;title hide profession_name
	Note you must type the full profession name, capitalization doesn't matter. Script will still track people's professions even if you set that profession to hidden.

	To show a previously hidden profession again type: ;title show profession_name
	Note again you must type full profession name and capitalization doesn't matter.
	To list professions currently being hidden type: ;title list

	To show shortened profession titles type: ;title short

	To highlight the names of a particular class in MONSTER BOLD type ;title bold profession_name
	Only one profession can be highlighted at a time. Type ;title bold clear to have no profession bolded.

	Kill the script to stop showing titles.
	
	Changelog:
	Version 15: Fixed bug with script showing same names multiple times when a profession was hidden.
	Version 15: Cleaned up help menu so it should be easier to read.
	Version 16: Bug fix.
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################

	Author: Dreaven
	Version: 16

=end

CharSettings['player_professions'] = Hash.new unless CharSettings['player_professions']
CharSettings['professions_not_to_show'] = Array.new unless CharSettings['professions_not_to_show']
professions_not_to_show = CharSettings['professions_not_to_show']
CharSettings['use_shortened_profession_names'] = nil unless CharSettings['use_shortened_profession_names']
use_shortened_profession_names = CharSettings['use_shortened_profession_names']
CharSettings['profession_to_bold'] = nil unless CharSettings['profession_to_bold']
profession_to_bold = CharSettings['profession_to_bold']
script_professions = Hash.new
display_professions = nil
skip_this_person = nil
pc_name = nil
characters = nil
full_name = nil
pre_status = nil
post_status = nil
name = nil
scan_room = nil
players_added = nil
title = nil
all_list = nil
number_of_players_added = 0
gather_all_profession_info = nil
list_of_all_professions = [ "Bard", "Cleric", "Empath", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Warrior", "Wizard" ]
checking_current_profession = nil
squelch_who = nil

toggle_upstream

squelch_who = proc{
	started = false
	hook_proc = proc { |s|
		if started
			if s =~ /<prompt/
				DownstreamHook.remove('squelch-who')
				nil
			elsif s =~ /<output/
				s
			else
				nil
			end
		elsif s =~ /^Brave Adventurers Questing:/
			started = true
			nil
		else
			s
		end
	}
	DownstreamHook.add('squelch-who', hook_proc)
}

gather_all_profession_info = proc{
	squelch_who.call
	silence_me
	fput "who profession #{checking_current_profession}"
	silence_me
	all_list = nil
	while (line = get)
		if (line =~ /Brave Adventurers Questing\:/)
			while (line = get)
				all_list += "#{line} " unless (line =~ /Total\:|^\[.*?\]\-[A-z]+\:|^\[server\]\: "/)
				break if (line =~ /Total\:/)
			end
			break
		end
	end
}


scan_room = proc{
	players_added = nil
	number_of_players_added = 0
	_respond
	_respond "##########################################################################"
	_respond "I am scanning all players currently online, this might take a few seconds."
	_respond "##########################################################################"
	_respond
	list_of_all_professions = [ "Bard", "Cleric", "Empath", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Warrior", "Wizard" ]
	loop{
		break if list_of_all_professions.length == 0
		checking_current_profession = "#{list_of_all_professions.at(0)}"
		list_of_all_professions.delete_at(0)
		gather_all_profession_info.call
		all_list = all_list.split(" ")
		all_list.each { |name|
			unless CharSettings['player_professions'].include?(name)
				players_added += "#{name} (#{checking_current_profession})\n"
				CharSettings['player_professions'].store(name, "#{checking_current_profession}")
				number_of_players_added += 1	
			end
		}
	}
	if players_added == nil
		_respond
		_respond "######################"
		_respond "No players were added."
		_respond "######################"
		_respond
	else
		_respond
		_respond "##################################################"
		_respond "The following players and their titles were added:"
		_respond "#{players_added}"
		if number_of_players_added == 1
			_respond "#{number_of_players_added} player added."
		else
			_respond "#{number_of_players_added} players added."
		end
		_respond "##################################################"
		_respond
	end
}

display_professions = proc{
	action = proc { |server_string|
		if server_string =~ /^Also here\:|^\<component id\=\'room players\'\>Also here\:/
			pc_name = nil
			characters = server_string.split(", ")
			characters.each{ |pc|
				if pc =~ /(.*)(\<a exist\=\".*\" noun\=\"(.*)\"\>.*\<\/a\>)(.*)/
					pre_status = $1
					full_name = $2
					name = $3
					post_status = $4
					if script_professions.include?("#{name}")
						title = script_professions.fetch("#{name}")
						if !professions_not_to_show.include?(title)
							if (use_shortened_profession_names) && (title =~ /^(Bard|Cleric|Empath|Monk|Paladin|Ranger|Rogue|Sorcerer|Warrior|Wizard)$/i)
								title = title[0...3]
								profession_to_bold = profession_to_bold[0...3]
							end
							if profession_to_bold == title
								pc_name += "#{pre_status}#{monsterbold_start}#{full_name}#{monsterbold_end} (#{title})#{post_status}, "
							else
								pc_name += "#{pre_status}#{full_name} (#{title})#{post_status}, "
							end
						else
							pc_name += "#{pc}, "
						end
					else
						pc_name += "#{pc}, "
					end
				end
			}
			server_string = "#{pc_name}".chop.chop + "\n"
		else
			server_string
		end
	}
		DownstreamHook.add("#{script.name}_display_professions", action)
		script_professions = CharSettings['player_professions']
}

display_professions.call

before_dying { DownstreamHook.remove("#{script.name}_display_professions") }
	
script_name = script.name.dup

loop{
	command = upstream_get
	if (command =~ /#{$lich_char}#{script_name} add ([a-zA-Z]+) (.*)/)
		name = $1.capitalize
		CharSettings['player_professions'].store("#{name}", "#{$2}")
		DownstreamHook.remove("#{script.name}_display_professions")
		display_professions.call
		_respond
		_respond "#{monsterbold_start}#{name} has been added with the title of #{$2}#{monsterbold_end}\n"
		_respond
	elsif (command =~ /#{$lich_char}#{script_name} remove ([a-zA-Z]+)/)
		name = $1.capitalize
		CharSettings['player_professions'].delete("#{name}")
		DownstreamHook.remove("#{script.name}_display_professions")
		display_professions.call
		_respond
		_respond "#{monsterbold_start}#{name} has been removed from the list.#{monsterbold_end}\n"
		_respond
	elsif (command =~ /#{$lich_char}#{script_name} reset all/)
		CharSettings['player_professions'] = Hash.new
		DownstreamHook.remove("#{script.name}_display_professions")
		display_professions.call
		_respond
		_respond "#{monsterbold_start}All titles have been removed.#{monsterbold_end}\n"
		_respond
	elsif (command =~ /#{$lich_char}#{script_name} scan/)
		scan_room.call
		DownstreamHook.remove("#{script.name}_display_professions")
		display_professions.call
	elsif (command =~ /#{$lich_char}#{script_name} hide (.*)/)
		name = $1.capitalize
		if name !~ /^(Bard|Cleric|Empath|Monk|Paladin|Ranger|Rogue|Sorcerer|Warrior|Wizard)$/i
			_respond
			_respond "#{monsterbold_start}You must type full profession name to hide a particular profession. Capitalization does not matter.#{monsterbold_end}\n"
			_respond
		else
			if CharSettings['professions_not_to_show'].include?(name)
				_respond
				_respond "#{monsterbold_start}#{name} is already being hidden.#{monsterbold_end}\n"
				_respond
			else
				CharSettings['professions_not_to_show'].push(name)
				professions_not_to_show = CharSettings['professions_not_to_show']
				_respond
				_respond "#{monsterbold_start}#{name} profession is now hidden.#{monsterbold_end}\n"
				_respond
			end
		end
	elsif (command =~ /#{$lich_char}#{script_name} show (.*)/)
		name = $1.capitalize
		if name !~ /^(Bard|Cleric|Empath|Monk|Paladin|Ranger|Rogue|Sorcerer|Warrior|Wizard)$/i
			_respond
			_respond "#{monsterbold_start}You must type full profession name to hide a particular profession. Capitalization does not matter.#{monsterbold_end}\n"
			_respond
		else
			if !CharSettings['professions_not_to_show'].include?(name)
				_respond
				_respond "#{monsterbold_start}#{name} is already being shown.#{monsterbold_end}\n"
				_respond
			else
				CharSettings['professions_not_to_show'].delete(name)
				professions_not_to_show = CharSettings['professions_not_to_show']
				_respond
				_respond "#{monsterbold_start}#{name} profession will now be shown.#{monsterbold_end}\n"
				_respond
			end
		end
	elsif (command =~ /#{$lich_char}#{script_name} list/)
		if CharSettings['professions_not_to_show'].length == 0
			_respond
			_respond "#{monsterbold_start}No professions are being hidden.#{monsterbold_end}\n"
			_respond
		else
			_respond
			_respond "#{monsterbold_start}Professions being hidden: #{CharSettings['professions_not_to_show']}#{monsterbold_end}\n"
			_respond
		end
	elsif (command =~ /#{$lich_char}#{script_name} short/)
		CharSettings['use_shortened_profession_names'] = true
		use_shortened_profession_names = CharSettings['use_shortened_profession_names']
		_respond
		_respond "#{monsterbold_start}Profession titles will now be shortened.#{monsterbold_end}\n"
		_respond
	elsif (command =~ /#{$lich_char}#{script_name} long/)
		CharSettings['use_shortened_profession_names'] = nil
		use_shortened_profession_names = CharSettings['use_shortened_profession_names']
		_respond
		_respond "#{monsterbold_start}Profession titles will now be full length.#{monsterbold_end}\n"
		_respond
	elsif (command =~ /#{$lich_char}#{script_name} bold (.*)/)
		name = $1.capitalize
		if name == "Clear"
			CharSettings['profession_to_bold'] = nil
			profession_to_bold = CharSettings['profession_to_bold']
			_respond
			_respond "#{monsterbold_start}No professions are being bolded now.#{monsterbold_end}\n"
			_respond
		else
			if name !~ /^(Bard|Cleric|Empath|Monk|Paladin|Ranger|Rogue|Sorcerer|Warrior|Wizard)$/i
				_respond
				_respond "#{monsterbold_start}You must type full profession name to bold a particular profession. Capitalization does not matter.#{monsterbold_end}\n"
				_respond
			else
				if CharSettings['profession_to_bold'] == name
					_respond
					_respond "#{monsterbold_start}#{name} is already being bolded.#{monsterbold_end}\n"
					_respond
				else
					CharSettings['profession_to_bold'] = name
					profession_to_bold = CharSettings['profession_to_bold']
					_respond
					_respond "#{monsterbold_start}#{name} profession will now be bolded.#{monsterbold_end}\n"
					_respond
				end
			end
		end
	elsif (command =~ /#{$lich_char}#{script_name}/) || (command =~ /#{$lich_char}#{script_name} help/)
		5.times{ _respond "#{monsterbold_start}#######################################################################{monsterbold_end}\n" }
		_respond
		_respond "To add someone with a title you specify type: ;title add name title"
		_respond "Title can be anything you want and as many words as you like."
		_respond "\n"
		_respond "To remove someone type: ;title remove name"
		_respond "\n"
		_respond "To scan WHO list for new people needing titles type: ;title scan"
		_respond "Note: This does a WHO for every profession and adds people's titles if the script doesn't already know their title."
		_respond "\n"
		_respond "To remove all titles from everyone and start with a clean slate type: ;title reset all"
		_respond "\n"
		_respond "To hide a particular profession from showing type: ;title hide profession_name"
		_respond "Note you must type the full profession name, capitalization doesn't matter. Script will still track people's professions even if you set that profession to hidden."
		_respond "\n"
		_respond "To show a previously hidden profession again type: ;title show profession_name"
		_respond "Note again you must type full profession name and capitalization doesn't matter."
		_respond "To list professions currently being hidden type: ;title list"
		_respond "\n"
		_respond "To show shortened profession titles type: ;title short"
		_respond "\n"
		_respond "To show full profession titles type: ;title long"
		_respond "\n"
		_respond "To highlight the names of a particular class in MONSTER BOLD type ;title bold profession_name"
		_respond "Only one profession can be highlighted at a time. Type ;title bold clear to have no profession bolded."
		_respond
		5.times{ _respond "#{monsterbold_start}#######################################################################{monsterbold_end}\n" }
	end
}