=begin
  This is a simple script to scan all your containers for booklets and count the number of vouchers remaining.
  Once it is finished counting, it will provide an approximate amount of bloodscrip you will earn from your remaining vouchers.
  
  Don't run it in a busy room or it may not be accurate.

  author: Phocosoen, ChatGPT
  tags: duskruin, booklet, voucher, count
  
=end

total_vouchers = 0

begin
  echo "Scanning inventory and containers for booklets..."

  # Collect booklets from inventory
  booklets = GameObj.inv.select { |obj| obj.noun == "booklet" }

  # Collect booklets from containers properly
  GameObj.containers.each do |container|
    items = container[1]  # Container contents (Array)

    next unless items.is_a?(Array)  # Ensure it's an array of objects
    booklets += items.select { |item| item.noun == "booklet" }
  end

  if booklets.empty?
    echo "No booklets found."
    exit
  end

  # Process each booklet
  booklets.each do |booklet|
    fput "look ##{booklet.id}"  # Use ID to directly target each booklet
    sleep 0.1  # Small delay to ensure output is captured correctly
    line = get

    # Extract the first number before "of # stamped vouchers remaining"
    if line =~ /(\d+)\s+of\s+\d+\s+stamped vouchers remaining/
      vouchers = $1.to_i
      total_vouchers += vouchers
    else
      echo "Warning: Could not read voucher count for Booklet ID: #{booklet.id}."
    end
  end

  # Calculate total Bloodscrip earnings
  estimated_bloodscrip = total_vouchers * 300

  echo "-----------------------------------"
  echo "Total vouchers remaining: #{total_vouchers}"
  echo "Approximate Bloodscrip earnings: #{estimated_bloodscrip} BS"
  echo "-----------------------------------"

rescue Interrupt
  echo "Script interrupted by user. Exiting safely."

rescue StandardError => e
  echo "An error occurred: #{e.message}"
  echo "Stack trace: #{e.backtrace.join("\n")}"

ensure
  echo "Script stopped. To restart, use: ;countbooklets"
end
