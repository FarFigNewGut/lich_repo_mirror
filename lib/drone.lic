=begin

	This script is a part of the borg system.
	
	;repo info borg for more information.


	author: Selema
	game: Any
	tags: remote, utility
	version: 2.0

=end       
require 'drb/drb'

unless Script.exists?('queen')
  echo "You do not have the queen script.  queen.lic is required for the borg hive to function."
  echo "Downloading now"
  echo "You should really read the readme with ;repo info drone.lic"
  do_client(";repository download queen.lic")
  wait_while { running?('repository') }
end

unless Script.exists?('borg.lic') || Script.exists?('borg.rb')
  echo "You do not have the Borg script.  drone.lic is required for the borg hive to function."
  echo "Downloading now"
   echo "You should really read the readme with ;repo info drone.lic"
  do_client(";repository download borg.lic")
  wait_while { running?('repository') }
end



DRb.start_service
$commands = DRbObject.new_with_uri('druby://localhost:4435')
respond "We are the borg.  Resistance is futile.  Lower your shields and surrender your ships."

#me = Char.name
#lme = me.downcase
donewalls = []
donecommands = []

debug = false
id = nil
ttl = nil
command = nil

def is_me(character)
	character == Char.name.downcase
end

loop do

  #Find any commands for us
  $commands.each{|cmd| 

  id = cmd.split[1]
  
  #Who are we for?
  character = cmd.split[2].downcase
  respond "character #{character}" if debug
  #make a copy
  command = cmd
  respond "command #{command}" if debug
  #make it into an array
  commandarray = cmd.split
  
  #Remove extra data
  3.times{commandarray.shift}
  #Turn it back into a string
  command = commandarray.join(' ')

  everyonelse = (character.chr === '!')

  if is_me(character)
  #if command is for me, do it and remove it from the queue.
	  $commands.delete(cmd)
	  respond id if debug
	  if !donecommands.include?(id)
		respond "Duplicate not detected" if debug
		respond donecommands if debug
		respond id if debug
		#this is a check to prevent us from executing commands twice if removing a command from the command
		#queue takes too long
		donecommands.push(id)
		do_client "#{command}"
		pause 0.2
		if donecommands.length > 15
			#array cleanup
			donecommands.shift
		end
	elsif donecommands.include?(id)
		respond "Duplicate command detected" if debug
		echo donecommands if debug
	end
  elsif (character == "1" && $borg1) || (character == "2" && $borg2) || (character == "3" && $borg3)
	if !donewalls.include?(id) && !donecommands.include?(id)

		respond "Command: #{command}" if debug
		respond "Donewalls: #{donewalls}" if debug
		respond "We did not process this" if debug
		do_client "#{command}"
		respond donewalls if debug
		donewalls.push(id)
		donecommands.push(id)
		respond donewalls if debug 
		donewalls.shift if donewalls.length > 15
		respond donewalls if debug
	  else
	  respond "donewalls #{donewalls}" if debug
	  end
  
  elsif character == "wall" || (everyonelse && !is_me(character.gsub('!', '')))
  #if command is for everyone...

      if !donewalls.include?(id) && !donecommands.include?(id)

		respond "Command: #{command}" if debug
		respond "Donewalls: #{donewalls}" if debug
		respond "We did not process this" if debug
		do_client "#{command}"
		respond donewalls if debug
		donewalls.push(id)
		donecommands.push(id)
		respond donewalls if debug 
		donewalls.shift if donewalls.length > 15
		respond donewalls if debug
	  else
	  respond "donewalls #{donewalls}" if debug
	  end


  end
$commands = DRbObject.new_with_uri('druby://localhost:4435')
}

pause 0.2  
end

