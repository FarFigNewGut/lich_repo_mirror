#!/usr/bin/env ruby
# All this does is wait for the 'YOU HAVE BEEN IDLE TOO LONG' message (waitfor is case insensitive), send a 'look' to the game, and echo a timestamp.
def anon_hook(prefix = '')
  now = Time.now
  "Foreach::#{prefix}-#{now.tv_sec}.#{now.tv_usec}-#{Random.rand(10000)}"
end

def mask_output(start_pattern, end_pattern = /<prompt/, include_end = true)
  filter = false
  name = anon_hook
  DownstreamHook.add(name, proc {|xml|
    if filter
      if xml =~ end_pattern
        DownstreamHook.remove(name)
        filter = false
        next(include_end ? nil : xml)
      else
        next(nil)
      end
    elsif xml =~ start_pattern
      filter = true
      next(nil)
    else
      xml
    end
  })
  return name
end

def quiet_command(command, start_pattern, end_pattern = /<prompt/, include_end = true, timeout=5)
  hook = mask_output(start_pattern, end_pattern, include_end)
  silence_me
  xml = dothistimeout(command, timeout, start_pattern)
  silence_me
  unless xml
    DownstreamHook.remove(hook)
    return nil
  end

  result = [xml]
  while true
    xml = get
    if xml =~ end_pattern
      result << xml if include_end
      return result
    end
    result << xml
  end
end

#hide_me
silence_me
setpriority(-2)
n = 0
while true
  status_tags
  keepalive_data = quiet_command(
                ("time"),
                /Today is/,
            )
  status_tags
sleep 250
#fput "time"

end
