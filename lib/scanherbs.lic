=begin
	Herb Scanner
	author: Zangow
	Usage:  ;scanherbs <container>
	Searches through container to see what herbs are missing
=end
unless script.vars[1]
	respond ";scanherbs <container>"
	exit
end
container = script.vars[1]
needed = []

injuryMap = [
	["Blood Loss", "acantha leaf", "iceberry tart", "bloody krolvin"],
	["Limb Minor", "ambrominas leaf", "dabbings family tart", "lost dogwater"],
	["Limb Bleeder", "ephlox moss", "frog's bone porr", "golden goose"],
	["Limb Minor Scar", "cactacae spine", "elk fat gel", "bearded ladies"],
	["Limb Major Scar", "calamia fruit", "walrus blubber", "mad mutt frothy"],
	["Limb Missing", "sovyn clove", "ptarmigan feather", "captn' pegleg"],

	["Chest Minor", "basal moss", "tundra grass", "mama dwarf's"],
	["Chest Bleeder", "pothinir grass", "musk ox tart", "aged schooner"],
	["Chest Minor Scar", "talneo", "rock lizard potion", "gert's homemade"],
	["Chest Major Scar", "wingstem", "earthworm potion", "wort's winter"],
	["Missing Eye", "bur-clover potion", "starfish potion", "volcano vision"],

	["Head Minor", "rose-marrow", "elk horn potion", "semak's smooth"],
	["Head Bleeder", "aloeas stem", "ram's bladder", "dark swampwater"],
	["Head Minor Scar", "haphip root", "sparrowhawk pie", "agrak's amber"],
	["Head Major Scar", "brostheras", "polar bear fat soup", "reaper's red"],

	["Twitching", "wolifrew lichen", "leaftoe's lichen tart", "orc's head"],
	["Convulsions", "bolmara", "snowflake elixir", "kenar's dropjaw"],
	["Slurred Speech", "torban leaf", "ma leaftoe's special", "miner's muddy"],
	["Spasms", "woth flower", "flower shaped tart", "dacra's dream"]
]

injuryMap.each { |injury|
   addit = true
   GameObj[container].contents.each{|s|
		landing = Regexp.escape(injury[1])
		icemule = Regexp.escape(injury[2])
		teras = Regexp.escape(injury[3])
		if s.name =~ /#{landing}/#{icemule}/#{teras}/;
			addit = false
		end;
   }

   if addit;		
		needed.push(injury)
   end;
}

if needed.length() == 0;
	respond "No herbs are needed!"
	exit;
end;

respond "=============================================================="
respond "    Required Herbs based on the contents of '#{container}'"
respond "=============================================================="
needed.each { |n|
	respond "#{n[0]} : #{n[1]}, #{n[2]}, #{n[3]}"
}