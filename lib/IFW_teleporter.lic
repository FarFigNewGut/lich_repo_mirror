=begin
	Mist Harbor teleporter item script, by Gibreficul.
	Script for finding and using your IFW teleporter.
	UPDATED!  	Recieved a new "output" possibility, and added it.
				Fixed CharSettings bug.

	NOTES:
		Character must be wearing their teleporter for the script's first run to be successful.
		Thereafter, the script has the ability to locate your teleporter in an open container if it is not worn.
		Script runs silently, attempting to squelch any spam it would generate.
		This squelch is removed on script termination, however while the script is running, some wanted game lines may be blocked.
# Author: Gibreficul
# Category: travel, utility
# Tags: Mist Harbor, IFW, FWI, preme, teleporter
=end
silence_me
quiet_exit
action = proc{|server_string|
	if server_string.strip.length == 0
		nil
		next
	end
	case server_string
	when /surrounded.*?light|You see nothing unusual|does not work here|can't turn that/
		nil
	else
		server_string
	end
}
before_dying{DownstreamHook.remove('teleporter')}
DownstreamHook.add('teleporter', action)
CharSettings['ifw'] ||= Hash.new
@trinket = CharSettings['ifw']
if @trinket.empty?
	GameObj.inv.each{|thing|
		x = false
		fput "look ##{thing.id}"
		x = matchtimeout(1, "surrounded", "nothing")
		if x =~ /surrounded/
			if x =~ /scintillating|waxing/
				@trinket['ifw'] = thing.name
				CharSettings['ifw'] = @trinket
				break
			end
		end
	}
	if @trinket['ifw'] == nil
		respond "YOU DO NOT SEEM TO BE WEARING YOUR IFW TELEPORTER, #{script.name} exiting."
		exit
	end
end
result = false
if GameObj.inv.find{|thing| thing.name == @trinket['ifw']}
	messaged = false
	until result =~ /scintillating/
		fput "look ##{GameObj.inv.find{|thing| thing.name == @trinket['ifw']}.id}"
		result = matchtimeout(3, "light\.$")
		if result =~ /waxing/
			respond "Teleporter is recharging, script will keep checking until it is ready." unless messaged
			messaged = true
			result = false
			sleep 5
		elsif result =~ /scintillating/i
		else
			respond "Error with teleporter, clearing settings, restarting the script may solve the problem."
			CharSettings.delete('ifw')
			exit
		end
	end
	fput "turn ##{GameObj.inv.find{|thing| thing.name == @trinket['ifw']}.id}"
	x = false
	x = matchtimeout(1, "You can't turn that", "Obvious", "That does not work here.", "seems to stick when you turn your")
	if x =~ /can't turn that/
		CharSettings['ifw'] = nil
		if @trinket['ifw'] =~ /s$/
			respond "If your #{@trinket['ifw']} are your IFW teleporter, you're no longer preme, sorry for your luck."
		else
			respond "If your #{@trinket['ifw']} is your IFW teleporter, you're no longer preme, sorry for your luck."
		end
	elsif x =~ /does not work/
		respond "Teleporter does not work from your current location."
	elsif x =~ /seems to stick when you turn your/
		respond "You seem to be broken, and probably need to seek the attention of a GameMaster."
	end
else
	GameObj.inv.each{|thing|
		x = thing.contents.find{|telep| telep.name == @trinket['ifw']}.id || false
		next if x == 4
		break if x
	}
	x = false if x == 4
	if x
		fput "_drag ##{x} wear"
		wait_until{GameObj.inv.find{|wear| wear.id == x}}
		messaged = false
		until result =~ /scintillating/
			fput "look ##{GameObj.inv.find{|thing| thing.name == @trinket['ifw']}.id}"
			result = matchtimeout(3, "light\.$")
			if result =~ /waxing/
				respond "Teleporter is recharging, script will keep checking until it is ready." unless messaged
				messaged = true
				result = false
				sleep 5
			elsif result =~ /scintillating/i
			else
				respond "Error with teleporter, clearing settings, restarting the script may solve the problem."
				CharSettings['ifw'] = nil
				exit
			end
		end
		fput "turn ##{GameObj.inv.find{|thing| thing.name == @trinket['ifw']}.id}"
		x = false
		x = matchtimeout(1, "You can't turn that", "Obvious", "That does not work here.", "seems to stick when you turn your")
		if x =~ /can't turn that/
			CharSettings['ifw'] = nil
			if @trinket['ifw'] =~ /s$/
				respond "If your #{@trinket['ifw']} are your IFW teleporter, you're no longer preme, sorry for your luck."
			else
				respond "If your #{@trinket['ifw']} is your IFW teleporter, you're no longer preme, sorry for your luck."
			end
		elsif x =~ /does not work/
			respond "Teleporter does not work from your current location."
		elsif x =~ /seems to stick when you turn your/
			respond "You seem to be broken, and probably need to seek the attention of a GameMaster."
		end
	else
		respond "Teleporter not found:  Please restart the script if you feel this is an error."
		CharSettings['ifw'] = nil
	end
end
