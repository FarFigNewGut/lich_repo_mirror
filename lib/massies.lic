=begin

This script is designed primarily for those who would like to be helpful and cast mass spells, but do not feel comfortable, or want to, coordinating all the notifications, and keeping track of time, and so forth.
It will auto detect if you are able to cast any mass spells (611, 911, 419) and advertise accordingly.
You many enter a variable when you start it, if you do, it will advertise that location as where you are casting.
If you DO NOT want to advertise outside the room you are in, DO NOT use a variable.

EX: ;massies TSC
The script would now chat on prime, and on the local thoughtnet if active, that you are casting in TSC.
If no variable is entered, it will only advertise in the local room, and not on the thoughtnet or lich.
it will not chat on the local thoughtnet if you are not a member of COL, GOS, or are wearing a crystal amulet.
By default, the 30 second warning will not announce on thoughtnet or lnet, simply remove the # before the lines if you wish to enable this.

You must enter the variable as one word, so for example don't use "The Small Park", as an example.
Find a way to abbreviate it into one word, or just shorten it to "Park".

You will need to trust this script in order for it to function correctly. ;trust massies
Failure to do so will cause it to hang up.  This is due to the functionality of auto advertising on lnet.

You may also modify the tones, and messages that are spoken to your taste.  To do this, simply edit the script to reflect your tastes in that regard.

v 1.0 by Stonmel
Tags: spellup, mass, massies, blur, guard, color, spell

Please contact me if you find any bugs in this script, or wish to help with code or ideas to improve it!


Desired future features
Ability to receive info from other players and advert additional mass spells added by them
Better workaround for getting thoughtnet active for non COL or GOS
multicast support
Clean up the script
=end

#Note on desired future features.
#At this time there is no plan to implement many of the features, as I am not well versed enough to known how to do so.  
#If someone has an idea on how to do so, and can provide me with some example code or point me to it, I will take a look at it and go from there.
#Outside that, any other suggestions, or any bugfixes, I do not plan to update this script again.




#Default channel to announce on is Prime.  You can change this to whatever channel you want to announce on.  If you do not wish to announce on lich, set it to nil. like the variables below.
send_channel = 'Prime'

Loc = nil
Blur_cycle = nil
Guard_cycle = nil
Color_cycle = nil


#This calculates how many casts are needed to ensure a four hour and ten minute duration.
if (Spell[911].known? and Spell[419].known?)
	#Casting Blurs and Guards!"
	Blur_cycle = ((250/(20 + Spells.wizard)).to_i + 1)
	Guard_cycle = ((250/(20 + Spells.minorelemental)).to_i + 1)
elsif (Spell[911].known?)
	#echo "Casting Blurs!"
	Blur_cycle = ((250/(20 + Spells.wizard)).to_i + 1)
elsif (Spell[419].known?)
	#echo "Casting Guards!"
	Guard_cycle = ((250/(20 + Spells.minorelemental)).to_i + 1)
elsif (Spell[611].known?)
	#echo "Casting Colors"
	Color_cycle = ((250/(20 + Spells.ranger)).to_i + 1)
else
	echo "You do not appear to know any mass cast spells (611, 911, 419).  If this is not the case, please check that infomon is running, and type skill and spell all, and run this again."
	exit
end

fput "Group open"
	
if (variable[0])
	Loc = variable[0]
	#echo Loc
end


#This checks to see if the thoughtnet is active, and if not, activate it.
if (Loc != nil)
	if (!Spell[9703].active? and !Spell[9906].active?)
		if (Spell[9703].known? and Spell[9703].affordable?)
			Spell[9703].cast
		elsif (Spell[9906].known? and Spell[9906].affordable?)
			Spell[9906].cast
		else
			fput "rub my crystal amulet"
		end
	end
end

pause 1


if (Blur_cycle != nil and Guard_cycle == nil)
	fput "'=pronounce :loud Casting Blurs in two minutes! Please add Guards and Colors if you can!"
	LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Blurs in two minutes at #{Loc}, Room Number: #{Room.current.id}!  Please add Guards and Colors if you can!") if (send_channel != nil and Loc != nil)
	fput "think Casting Blurs in two minutes at #{Loc}!  Please add Guards and Colors if you can!" if (Loc != nil)
elsif (Guard_cycle != nil and Blur_cycle == nil)
	fput "'=pronounce :loud Casting Guards in two minutes! Please add Blurs and Colors if you can!"
	LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Guards in two minutes at #{Loc}, Room Number: #{Room.current.id}!  Please add Blurs and Colors if you can!") if (send_channel != nil and Loc != nil and Loc != nil)
	fput "think Casting Guards in two minutes at #{Loc}!  Please add Blurs and Colors if you can!" if (Loc != nil)
elsif (Guard_cycle != nil and Blur_cycle != nil)
	fput "'=pronounce :loud Casting Blurs and Guards in two minutes! Please add Colors if you can!"
	LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Blurs and Guards in two minutes at #{Loc}, Room Number: #{Room.current.id}!  Please add Colors if you can!") if (send_channel != nil and Loc != nil and Loc != nil)
	fput "think Casting Blurs and Guards in two minutes at #{Loc}!  Please add Colors if you can!" if (Loc != nil)
elsif (Color_cycle != nil)
	fput "'=pronounce :loud Casting Colors in two minutes! Please add Blurs and Guards if you can!"
	LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Colors in two minutes at #{Loc}, Room Number: #{Room.current.id}!  Please add Blurs and Guards if you can!") if (send_channel != nil and Loc != nil and Loc != nil)
	fput "think Casting Colors in two minutes at #{Loc}!  Please add Blurs and Guards if you can!" if (Loc != nil)
else
	echo "It shouldn't be possible to get here, if this displays, something is really messed up!"
	exit
end

pause 90

if (Blur_cycle != nil and Guard_cycle == nil)
	fput "'=inform :loud Casting Blurs in 30 seconds! Please add Guards and Colors if you can!"
	#LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Blurs in 30 seconds at #{Loc}, Room Number: #{Room.current.id}!  Please add Guards and Colors if you can! Last call!") if (send_channel != nil and Loc != nil)
	#fput "think Casting Blurs in 30 seconds at #{Loc}!  Please add Guards and Colors if you can! Last call!" if (Loc != nil)
elsif (Guard_cycle != nil and Blur_cycle == nil)
	fput "'=inform :loud Casting Guards in 30 seconds! Please add Blurs and Colors if you can!"
	#LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Guards in 30 seconds at #{Loc}, Room Number: #{Room.current.id}!  Please add Blurs and Colors if you can! Last call!") if (send_channel != nil and Loc != nil)
	#fput "think Casting Guards in 30 seconds at #{Loc}!  Please add Blurs and Colors if you can! Last call!" if (Loc != nil)
elsif (Guard_cycle != nil and Blur_cycle != nil)
	fput "'=inform :loud Casting Blurs and Guards in 30 seconds! Please add Colors if you can!"
	#LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Blurs and Guards in 30 seconds at #{Loc}, Room Number: #{Room.current.id}!  Please add Colors if you can! Last call!") if (send_channel != nil and Loc != nil)
	#fput "think Casting Blurs and Guards in 30 seconds at #{Loc}!  Please add Colors if you can! Last call!" if (Loc != nil)
elsif (Color_cycle != nil)
	fput "'=inform :loud Casting Colors in 30 seconds! Please add Blurs and Guards if you can!"
	#LNet.send_message(attr={'type'=>'channel', 'channel'=>send_channel}, "Casting Colors in 30 seconds at #{Loc}, Room Number: #{Room.current.id}!  Please add Blurs and Guards if you can! Last call!") if (send_channel != nil and Loc != nil)
	#fput "think Casting Colors in 30 seconds at #{Loc}!  Please add Blurs and Guards if you can! Last call!" if (Loc != nil)
else
	echo "It shouldn't be possible to get here, if this displays, something is really messed up!"
	exit
end


pause 20

if (Blur_cycle != nil or Guard_cycle != nil or Color_cycle != nil)
	fput "recite Casting in 10 seconds, be joined!  Last call!"
end

pause 10


#Below sections cast the appropriate mass spell that you know.  If you do not have enough mana to finish the cycle, it will pause a few seconds and yell at you to get more mana.  Once you have the mana to continue, it will resume casting.
if (Blur_cycle != nil)
	loop do
		if (Spell[911].affordable?)
			Spell[911].cast
			Blur_cycle -= 1
			waitcastrt?
		else
			echo "You need more mana to continue, ask for it or use an ability!"
			pause 3
		end
		break if (Blur_cycle == 0)
	end
end

if (Guard_cycle != nil)
	loop do
		if (Spell[419].affordable?)
			Spell[419].cast
			Guard_cycle -= 1
			waitcastrt?
		else
			echo "You need more mana to continue, ask for it or use an ability!"
			pause 3
		end
		break if (Guard_cycle == 0)
	end
end

if (Color_cycle != nil)
	loop do
		if (Spell[611].affordable?)
			Spell[611].cast
			Color_cycle -= 1
			waitcastrt?
		else
			echo "You need more mana to continue, ask for it or use an ability!"
			pause 3
		end
		break if (Color_cycle == 0)
	end
end


#The script will now wait until you unpause it to disband the group, in the event others are casting mass spells still, or if you wish to add additional casts manually for those who joined late.
fput "recite that should be four hours!  Stay safe!"
echo "You are done casting.  use ;u to unpause this script when everyone else is done casting and you are ready to disband the group!"
pause_script
pause 1
fput "disband group"
fput "group open"
exit





