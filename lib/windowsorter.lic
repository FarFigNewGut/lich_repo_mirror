=begin
	It will sort the contents of your inventory windows just like ;sorter does, but by noun, then name
	Removes name of bag from inside the inventory box as well
	Removes a|an|some from front of the item name

	Hazado22@play.net or Hazado on Lnet

# Name: Inventory Window Sorter
# Author: Hazado
# Category: utility
# Tags: sorter, inventory, windows
# Version: 3.01
=end

action = proc { |server_string|
	if server_string =~ /(<container.*inv>|<exposeContainer.*inv>|<clearContainer.*inv>).*/
		bar = $1
	end
	if bar =~ /exist="(.*?)"/
		bar_id = $1
		if bar =~ /id=\"stow\"/
			bar_id = "stow"
		end
		if bar =~ /(<exposeContainer .*>|<container.*>|<clearContainer.*>)(<inv.*a>:<\/inv><inv.*<\/inv>)(<exposeContainer .*>|<container.*>|<clearContainer.*>)(<inv.*a>:<\/inv><inv.*<\/inv>)/
			if $4 =~ /exist="(.*?)"/
				bar_id_two = $1
			end
		elsif bar =~ /(<exposeContainer .*>|<container.*>|<clearContainer.*>)(<inv.*a>:<\/inv><inv.*<\/inv>)/
			bar_id_two = nil
		end
		bar_contents = Hash.new
		server_string.scan(/<inv id='(?:stow|-?\d+)'> (?:a|an|some|nothing|).*?(?:\/a>)?<\/inv>/).each{|s|
			s.to_s[/.*?id=\'(-?\d+|stow)\'>(?:.*? <a exist=\"(-?\d+)\" noun=\"(.*?)\">(.*?<\/a>.*)|( nothing)).*<\/inv>/]
			stow_id = $1
			if !$5.nil?
				item_id = nil
				noun = nil
				name = $5.sub(/^some /,'')
			else
				item_id = $2
				noun = $3
				name = $4.sub(/^some /,'')
			end
			bar_contents[stow_id] ||= Hash.new
			if name =~ /^a crystalline flask containing/
				name.sub!(/^a crystalline flask containing /, '')
			else
				name.sub!(/containing (.*)$/) { "(#{$1})" }
			end
			if bar_contents[stow_id][name].nil?
				bar_contents[stow_id][name] = Hash.new
				bar_contents[stow_id][name]['id'] = item_id
				bar_contents[stow_id][name]['noun'] = noun
				bar_contents[stow_id][name]['count'] = 1
			else
				bar_contents[stow_id][name]['count'] += 1
			end
		}
		if bar_contents[bar_id].any?{|s| s[0] == " nothing"} && bar_contents[bar_id].count > 1
			bar_contents[bar_id].delete(" nothing")
		end
		if !bar_contents[bar_id].nil?
			replace = ""
			bar_contents[bar_id].sort { |a,b| ([a[1]["noun"],a[0]] <=>  [b[1]["noun"],b[0]]) }.each{|s|
				if s[1]["id"].nil?
					replace += "<inv id='#{bar_id}'>  nothing</inv>"
				elsif s[1]["count"].to_i == 1
					replace += "<inv id='#{bar_id}'>  <a exist=\"#{s[1]["id"]}\" noun=\"#{s[1]["noun"]}\">#{s[0]}</inv>"
				else
					replace += "<inv id='#{bar_id}'>  <a exist=\"#{s[1]["id"]}\" noun=\"#{s[1]["noun"]}\">#{s[0]} (#{s[1]["count"]})</inv>"
				end
			}
			if server_string =~ /<clearContainer id="stow"/ && server_string =~ /<clearContainer id="\d+"/
				server_string.sub!(/<inv id=\'#{bar_id}\'>.*<\/a><\/inv>(?=<clearContainer id=)/,replace) if replace != ""
			else
				server_string.sub!(/<inv id=\'#{bar_id}\'>(?:.*<\/a>.*|.*nothing)<\/inv>/,replace) if replace != ""
			end
		end
		if bar_contents[bar_id_two].any?{|s| s[0] == " nothing"} && bar_contents[bar_id_two].count > 1
			bar_contents[bar_id_two].delete(" nothing")
		end
		if !bar_contents[bar_id_two].nil?
			replace = ""
			bar_contents[bar_id_two].sort { |a,b| ([a[1]["noun"],a[0]] <=>  [b[1]["noun"],b[0]]) }.each{|s|
				if s[1]["id"].nil?
					replace += "<inv id='#{bar_id_two}'>  nothing</inv>"
				elsif s[1]["count"].to_i == 1
					replace += "<inv id='#{bar_id_two}'>  <a exist=\"#{s[1]["id"]}\" noun=\"#{s[1]["noun"]}\">#{s[0]}</inv>"
				else
					replace += "<inv id='#{bar_id_two}'>  <a exist=\"#{s[1]["id"]}\" noun=\"#{s[1]["noun"]}\">#{s[0]} (#{s[1]["count"]})</inv>"
				end
			}
			server_string.sub!(/<inv id=\'#{bar_id_two}\'>(?:.*<\/a>.*|.*nothing)<\/inv>/,replace) if replace != ""
		end
	end
	server_string
}
DownstreamHook.remove("#{script.name}")
DownstreamHook.add("#{script.name}", action)