=begin
  Outputs uids for given lich ids 
  
  For a single id:
    ;lichid_to_uid 228
  
  For a given list:
    ;lichid_to_uid 228, 240
  
  For a given range:
    ;lichid_to_uid 228..240 
  

          author: Xanlin (Xanlin#4407 on discord)
            game: GS
            tags: map, uid
        required: Lich >= 4.6.4
         version: 0

=end
if Script.current.vars.empty? or Script.current.vars[0] =~ /help|\?/
  respond "
  Outputs uids for given lich ids 
  
  For a single id:
    ;#{Script.current.name} 228
  
  For a given list:
    ;#{Script.current.name} 228, 240
  
  For a given range:
    ;#{Script.current.name} 228..240 
    "
  exit
elsif Script.current.vars[0] =~ /^\d+$/
  room_num = Script.current.vars[0] =~ /^\-?\d+$/ ? Script.current.vars[1].to_i : Room.current.id
  room_list = [room_num]
elsif Script.current.vars[0] =~ /^\(?(\d+)\.\.+(\d+)\)?$/
  room_range_start = [$1.to_i,$2.to_i].min
  room_range_end   = [$1.to_i,$2.to_i].max
  room_list = (room_range_start..room_range_end).to_a
elsif Script.current.vars[0] =~ /^\d+ *, */
  room_list = Script.current.vars[0].split(/ *, */).map(&:to_i)
end

uids = []
room_list.each { |id|
  respond "No uid found for #{id} #{Map[id].title.first}" if Map[id].uid.empty?
  respond "Multiple uids found for #{id}, output includes all #{Map[id].uid.size} uids: #{Map[id].uid.join(", ")}" if Map[id].uid.size > 1
  Map[id].uid.each {|u| uids << u}
}
if uids.empty?
  respond "No uids found for input."
else
  respond "lich ids: #{room_list.join(', ')}"
  respond "uids: #{uids.join(', ')}"
end
