=begin
	**Version 2.0 fixes ;ink odds and ;ink self to be accurate (there was a typo!)
	Master Tattooist Alfryd is uploading because Elkiros forgot his repo password!
***********************************************************************************	

    Monk Tattoo Inkweek Assistance
    Handy script to assist with ink info
	
    SYNTAX - ;inkweeks <OPTION>
	
    OPTION Selections Include:
CHART 	    - Prints off monk spunk cost chart for each tier
CHANCE	    - Description Of Test Cast Readouts And Chance To Succeed
ODDS      - Prints Off Chart Of Your Chances To Succeed At Tattooing OTHER PEOPLE For Each Tattoo Circle
SELF      - Prints Off Chart Of Your Chances To Succeed At Tattooing YOURSELF For Each Tattoo Circle
INFO      - Prints Off Information About Last Time The Tattoo List Was Updated
LIST      - Prints FULL LIST Of Mundane Tattoos Available To Be Done By Monks (Long Screen Roll)
LOCATIONS - List of Possible Tattoo Locations & Clothing/Armor coverage for each spot
REFRESH   - updates the tattoo list (Long Screen Roll)
ROLLS 	    - Numeric Values For Roll Descriptions
SEARCH    - searches the list of tattoos for matching terms
CALC 	     - calculate cost for a tattoo project from tier x to y
               ;inkweeks calc [starting tier] [ending tier]
					 
     author: Elkiros (based off of ElanthiaOnline's ;tears script)
       name: ink
       tags: ink, monk spunk, inkweeks, ink weeks, monk tattoo, enhancive tattoo, mystic tattoo
    version: 

    changelog:
        1.0 (2020-06-12)
            Initial release
        2.0 (2020-06-13)
            Added CHANCE, LOCATIONS, and ROLLS options
        3.0 (2020-06-14)
            Added LIST, SEARCH, INFO, and REFRESH functionality from ;tattoolist
            Thanks to Cinite, whose outstanding code I absolutely stole for those functions
        3.1 (2020-07-02)
            Changed "Locations" chart to reflect in-game update
        3.2 (2020-07-31)
            Added ODDS & SELF functionality from ;mysticalc
            Thanks to Kaldonis, whose outstanding code I shamelessly stole for those functions
		3.3 (2020-12-09)
			Fixed odds and self! There was a typo that caused a line break in the middle of the calculations, so it missed stuff!

=end

ink_cost = ["50000", "75000", "100000", "125000", "150000"]
WEEK = 50000.0
PAD = 91

#Arrays of Roll Results and Descriptions [33, 82]-Needed [40, 6]-Roll
r_need = [["97% (Will only fail on a fumble.)", "You can only fail if you are horribly unlucky.                                    "],
		  ["90%-96% Chance                   ", "You should be able to tattoo it easily enough, barring bad luck.                 "],
		  ["75%-89% Chance                   ", "The odds are on your side to successfully complete the tattoo.               "],
		  ["55%-74% Chance                   ", "You are more likely than not to succeed on your cast, but you will need some luck."],
		  ["35%-54% Chance                   ", "This tattoo will be difficult, but possible.                                 "],
		  ["15%-34% Chance                   ", "This tattoo will be very difficult.                                          "],
		  ["2%-14% Chance                    ", "That this tattoo will be nearly impossible.                                  "],
		  ["1% Chance (Roll 100)             ", "You will likely need a miracle to complete this tattoo.                      "],
		  ["Only rolling over 100 has a shot.", "This tattoo is completely beyond your abilities.                             "]]

r_result = [["You make an outstanding attempt!        ", "90+   "],
			["You make an excellent attempt!          ", "80+   "],
			["You make a good attempt!                ", "70+   "],
			["You make a decent attempt.              ", "60+   "],
			["You make an okay attempt.               ", "50+   "],
			["You make a passable attempt.            ", "40+   "],
			["You make a questionable attempt.        ", "30+   "],
			["You make a poor attempt!                ", "20+   "],
			["You make a very poor attempt!           ", "10+   "],
			["You make a horribly poor attempt!       ", "2+    "],
			["You make an astoundingly inept attempt! ", "1     "],
			["Something doesn't seem right...         ", "Fumble"]]
			
r_location = [["Head    ", "Covered by helms/hats                                 |"],
			["Ear     ", "Will always be visible                                |"],
			["Neck    ", "Will always be visible                                |"],
			["Back    ", "Covered by armor/shirts, cloaks, backpacks, gambesons |"],
			["Shoulder", "Covered by armor/shirts and cloaks                    |"],
			["Chest   ", "Covered by armor/shirts, aprons, gambesons            |"],
			["Arm     ", "Covered by arm greaves                                |"],
			["Wrist   ", "Will always be visible                                |"],
			["Finger  ", "Covered by gloves 	                                    |"],
			["Waist   ", "Covered by belts                                      |"],
			["Thigh   ", "Covered by pants and skirts                           |"],
			["Leg     ", "Covered by greaves                                    |"],
			["Ankle   ", "Covered by socks                                      |"],
			["Foot    ", "Covered by boots, socks                               |"]]
			

buff_length = $_SERVERBUFFER_.length

@@start_message = "List of flash tattoos available"
@@end_message = "You have reached the end of the flash tattoo menu"
@@cont_message = "Type TATTOO MENU again in the next minute to display the next group of flash tattoos"

@@tats = CharSettings.to_hash
@@tats['list'] = {} if !@@tats.key? 'list'

#example line:
# 856) a pair of red-inked claw marks

def get_page()
	page = dothistimeout "tattoo menu", 3, /#{@@end_message}|#{@@cont_message}/
	if page =~ /#{@@end_message}/
		return true
	else
		return false
	end
end

def read_page()
	$_SERVERBUFFER_.reverse.each { |b|	
		break if b =~ /#{@@start_message}/
		if b =~ /(\d+)\) (.*)$/
			@@tats['list'][$1.to_s] = $2.strip
		end	
	}
	@@tats['updated'] = Time.now()
end

def get_all_tats()
	until get_page()
		read_page()
	end
	read_page()
end

def search_tats(search_reg)
	if (!search_reg or search_reg.nil? or search_reg.empty? or search_reg == '')
		echo "Search doesn't look right."
	else
		results = @@tats['list'].select { |n,t| t =~ /#{search_reg}/i }
		results.sort_by { |n,t| n.to_i }.each{ |n,t|
			_respond "#{monsterbold_start}#{n})#{monsterbold_end} #{t}"
		}
	end
end

def get_info()
	echo "Last updated: #{@@tats['updated']}"
	echo "Tattoos listed: #{@@tats['list'].length}"
end			

def rowout(msg_arr, mbold = false)
        out = '| '
        msg_arr.each { |m|
                out += '%-12.12s | ' % m
        }
        if mbold == true
                _respond "#{monsterbold_start}#{out}#{monsterbold_end}"
        else
                _respond out
        end
end

def do_calc(ink_cost)
	starting_tier = variable[2].to_i
	if variable[3] and variable[3].to_i <= 5
		ending_tier = variable[3].to_i
	elsif not variable[3] or variable[3].to_i > 5
		ending_tier = 5
	end
	if ending_tier <= starting_tier
		_respond "Ending tier must be greater than starting tier"
		_respond ";ink calc [starting tier] [ending tier]"
		exit
	end

	_respond "Calculating ink needed to enhance a tattoo from tier #{starting_tier} to tier #{ending_tier}"
	_respond ""

	_respond "-" * PAD
	headers = ['Start', 'End', 'Cost (Motes)', 'Cost (wks)', 'Total(Motes)', 'Total (wks)']
	rowout(headers, true)
	_respond "-" * PAD

	current_tier = starting_tier
	running_total_jui = 0
	while current_tier < ending_tier
		if current_tier < 0
			step_cost = 0
		else
			step_cost = ink_cost[current_tier].to_i
		end
		running_total_jui += step_cost
		response_array = [current_tier, 
                                  current_tier + 1, 
                                  step_cost, 
                                  (step_cost / WEEK).round(2), 
                                  running_total_jui, 
                                  (running_total_jui / WEEK).round(2)]
		rowout(response_array)
		current_tier += 1
	end
	_respond "-" * PAD	
end

if variable[0].nil?
	respond "You need to give an option. See below:"
	respond ""
	respond "   ;inkweeks chart - Prints Off Monk Spunk and InkWeeks Cost Chart For Each Tier"
	respond "   ;inkweeks chance - Description Of Test Cast Readouts And Chance To Succeed"
	respond "   ;inkweeks odds - Prints Off Chart Of Your Chances To Succeed At Tattooing OTHER PEOPLE For Each Tattoo Circle"
	respond "   ;inkweeks self - Prints Off Chart Of Your Chances To Succeed At Tattooing YOURSELF For Each Tattoo Circle"	
	respond "   ;inkweeks info - Prints Off Information About Last Time The Tattoo List Was Updated"
	respond "   ;inkweeks list - Prints FULL LIST Of Mundane Tattoos Available To Be Done By Monks (Long Screen Roll)"
	respond "   ;inkweeks locations - List of Possible Tattoo Locations & Clothing/Armor Coverage For Each Spot"
	respond "   ;inkweeks refresh - updates the tattoo list (Long Screen Roll)"
	respond "         ^^^If the LIST or SEARCH options don't work, do this and try again"
	respond "   ;inkweeks rolls - Numeric Values For Roll Descriptions"
	respond "   ;inkweeks search [Search String, Regex Supported] - searches the list of tattoos for matching terms"
	respond "         ^^^EXAMPLES:"
	respond "        ;inkweeks search wolf"
	respond "           will search for the term wolf"
	respond "        ;inkweeks search wolf|howling"
	respond "           will search for the terms wolf OR howling"
	respond "        ;inkweeks search wolf|howling|blue dragon"
	respond "           search for wolf OR howling OR blue dragon"
	respond "        ;inkweeks search ithzir|black (dragon|demon)"
	respond "           search for any tattoo with Ithzir, or any tattoo with a black dragon OR a black demon"
	respond "   ;inkweeks calc [Starting Tier] [Ending Tier]"
    respond "         ^^^Prints A Chart Of Cost (in Motes and Weeks) For Enhancing A Tattoo From Starting Tier To Ending Tier"
	respond ""
elsif variable[0] =~ /help/
	respond "To use this script, run:"
	respond ""
	respond "   ;inkweeks chart - Prints Off Monk Spunk and InkWeeks Cost Chart For Each Tier"
	respond "   ;inkweeks chance - Description Of Test Cast Readouts And Chance To Succeed"
	respond "   ;inkweeks odds - Prints Off Chart Of Your Chances To Succeed At Tattooing OTHER PEOPLE For Each Tattoo Circle"
	respond "   ;inkweeks self - Prints Off Chart Of Your Chances To Succeed At Tattooing YOURSELF For Each Tattoo Circle"	
	respond "   ;inkweeks info - Prints Off Information About Last Time The Tattoo List Was Updated"
	respond "   ;inkweeks list - Prints FULL LIST Of Mundane Tattoos Available To Be Done By Monks (Long Screen Roll)"
	respond "   ;inkweeks locations - List of Possible Tattoo Locations & Clothing/Armor Coverage For Each Spot"
	respond "   ;inkweeks refresh - updates the tattoo list (Long Screen Roll)"
	respond "         ^^^If the LIST or SEARCH options don't work, do this and try again"
	respond "   ;inkweeks rolls - Numeric Values For Roll Descriptions"
	respond "   ;inkweeks search [Search String, Regex Supported] - searches the list of tattoos for matching terms"
	respond "         ^^^EXAMPLES:"
	respond "        ;inkweeks search wolf"
	respond "           will search for the term wolf"
	respond "        ;inkweeks search wolf|howling"
	respond "           will search for the terms wolf OR howling"
	respond "        ;inkweeks search wolf|howling|blue dragon"
	respond "           search for wolf OR howling OR blue dragon"
	respond "        ;inkweeks search ithzir|black (dragon|demon)"
	respond "           search for any tattoo with Ithzir, or any tattoo with a black dragon OR a black demon"
	respond "   ;inkweeks calc [Starting Tier] [Ending Tier]"
    respond "         ^^^Prints A Chart Of Cost (in Motes and Weeks) For Enhancing A Tattoo From Starting Tier To Ending Tier"
	respond ""
	
	exit
elsif variable[0] =~ /calc/
	do_calc(ink_cost)
	exit
elsif variable[0] =~ /chart/
	respond "ink needed to do a single tier"
	respond ""
	ink_cost.each_index { |ink|
		respond "Tier #{ink.to_s.rjust(2, " ")} -> Tier #{(ink+1).to_s.rjust(2, " ")} - #{ink_cost[ink].rjust(5, " ")} motes"
	}
	respond ""
elsif script.vars[0] =~ /chance/
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	respond "|                                  Description Of Test CASTs And Chance To Succeed                                        |"
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	respond "| Chance To Get A Successful CHANNEL |                       Messaging On Test CAST                                       |"
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	r_need.each{|rchan, rmes|
	respond "| #{rchan}  | #{rmes} |"}
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /rolls/
	respond "|-------------------------------------------------------|"
	respond "|          Numeric Values For Roll Descriptions         |"
	respond "|-------------------------------------------------------|"
	respond "|          Roll Result Description         | Roll Value |"
	respond "|-------------------------------------------------------|"
	r_result.each{|rdesc, rval|
	respond "| #{rdesc} |    #{rval}  |"}
	respond "|-------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /locations/
	respond "|--------------------------------------------------------------------|"
	respond "|      Tattoo Locations & Clothing/Armor Coverage                    |"
	respond "|--------------------------------------------------------------------|"
	respond "|Location |  		Clothing/Armor Coverage                                 |"
	respond "|--------------------------------------------------------------------|"
	r_location.each{|rloca, rcover|
	respond "| #{rloca}|    #{rcover}"}
	respond "|--------------------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /list/
	search_tats('.')
elsif script.vars[0] =~ /stat|info/
	get_info()
elsif script.vars[0] =~ /search/
	search_tats(script.vars[2..-1].join(" "))
elsif script.vars[0] =~ /refresh/ or @@tats['updated_at'] < Time.now() - 2592000 or @@tats['list'].empty?
	get_all_tats()
	_respond "#{monsterbold_start}The tattoo list has been cached locally#{monsterbold_end}"
	_respond "#{monsterbold_start}The script won't spam the list again unless you tell it to refresh the local copy of the list, or 30 days have passed#{monsterbold_end}"
	_respond "#{monsterbold_start}for more usage info: ;tattoolist help#{monsterbold_end}"
	get_info()
	elsif variable[0] =~ /odds/
		tier = 5
		showall = true
		percent = Array.new(6)
		i = 1
		while i < 6 do
			percent[i] = (Char.level + (2*Stats.enhanced_dex[1]) + (2*Stats.enhanced_dis[1]) + (0.75*Skills.physicalfitness) + (0.5*Skills.firstaid) + (2*(Spells.minormental+Spells.minorspiritual)) + Skills.arcanesymbols + Skills.mmc + Skills.smc + Skills.to_bonus(Skills.mltelepathy) - (100*i))
			if percent[i] > 100
				percent[i] = 100
			elsif percent[i] < 0
				percent[i] = 0
		end
		if i == tier.to_i
			result = percent[i]
		end
		i +=1
		end

		if showall
			output =      "*************************\n"
			output.concat "ODDS TO MYSTIC TATTOO OTHER PEOPLE\n"
			output.concat "     T1:  #{percent[1]}%\n"
			output.concat "     T2:  #{percent[2]}%\n"
			output.concat "     T3:  #{percent[3]}%\n"
			output.concat "     T4:  #{percent[4]}%\n"
			output.concat "     T5:  #{percent[5]}%\n"
			output.concat "*************************\n"
			respond output
		else
			echo "Your Tier #{tier} Mystic Tattoo odds are #{result}%"
		end
	exit
	elsif variable[0] =~ /self/
		tier = 5
		showall = true
		percent = Array.new(6)
		i = 1
		while i < 6 do
			percent[i] = (Char.level + 2*Stats.enhanced_dex[1] + 2*Stats.enhanced_dis[1] + 0.75*Skills.physicalfitness + 0.5*Skills.firstaid + 2*(Spells.minormental+Spells.minorspiritual) + Skills.arcanesymbols + Skills.mmc + Skills.smc + Skills.to_bonus(Skills.mltransformation) - 100*i)
			if percent[i] > 100
				percent[i] = 100
			elsif percent[i] < 0
				percent[i] = 0
		end
		if i == tier.to_i
			result = percent[i]
		end
		i +=1
		end

		if showall
			output =      "*************************\n"
			output.concat "ODDS TO MYSTIC TATTOO YOURSELF\n"
			output.concat "     T1:  #{percent[1]}%\n"
			output.concat "     T2:  #{percent[2]}%\n"
			output.concat "     T3:  #{percent[3]}%\n"
			output.concat "     T4:  #{percent[4]}%\n"
			output.concat "     T5:  #{percent[5]}%\n"
			output.concat "*************************\n"
			respond output
		else
			echo "Your Tier #{tier} Mystic Tattoo odds are #{result}%"
		end
	exit
else
	respond "   ;inkweeks chart - Prints Off Monk Spunk and InkWeeks Cost Chart For Each Tier"
	respond "   ;inkweeks chance - Description Of Test Cast Readouts And Chance To Succeed"
	respond "   ;inkweeks odds - Prints Off Chart Of Your Chances To Succeed At Tattooing OTHER PEOPLE For Each Tattoo Circle"
	respond "   ;inkweeks self - Prints Off Chart Of Your Chances To Succeed At Tattooing YOURSELF For Each Tattoo Circle"	
	respond "   ;inkweeks info - Prints Off Information About Last Time The Tattoo List Was Updated"
	respond "   ;inkweeks list - Prints FULL LIST Of Mundane Tattoos Available To Be Done By Monks (Long Screen Roll)"
	respond "   ;inkweeks locations - List of Possible Tattoo Locations & Clothing/Armor Coverage For Each Spot"
	respond "   ;inkweeks refresh - updates the tattoo list (Long Screen Roll)"
	respond "         ^^^If the LIST or SEARCH options don't work, do this and try again"
	respond "   ;inkweeks rolls - Numeric Values For Roll Descriptions"
	respond "   ;inkweeks search [Search String, Regex Supported] - searches the list of tattoos for matching terms"
	respond "         ^^^EXAMPLES:"
	respond "        ;inkweeks search wolf"
	respond "           will search for the term wolf"
	respond "        ;inkweeks search wolf|howling"
	respond "           will search for the terms wolf OR howling"
	respond "        ;inkweeks search wolf|howling|blue dragon"
	respond "           search for wolf OR howling OR blue dragon"
	respond "        ;inkweeks search ithzir|black (dragon|demon)"
	respond "           search for any tattoo with Ithzir, or any tattoo with a black dragon OR a black demon"
	respond "   ;inkweeks calc [Starting Tier] [Ending Tier]"
    respond "         ^^^Prints A Chart Of Cost (in Motes and Weeks) For Enhancing A Tattoo From Starting Tier To Ending Tier"
	respond ""
	exit
end
