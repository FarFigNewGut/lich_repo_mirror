=begin

Script       Ironslab_m.lic
Author       WilliamW1979, updated by Maze
Date         7/19/21
Purpose      To make 4 iron slabs in the Kobold Mines near WL.

Update History

1.0 Updated version created off of Ironslab by WilliamW1979

=end

class IRON

	attr_accessor :container

	def initialize
		if (UserVars.lootsack.nil?)
			@container.nil?
			respond
			respond
			respond "Please set lootsack using: ;vars set lootsack=<container>"
			respond
			respond
			exit
		else
			@container = UserVars.lootsack
		end
		
	end

	def command
		if variable[1].nil?
			run
		elsif "charcoal".include?(variable[1])
			charcoal
		elsif "oil".include?(variable[1])
			oil
		elsif "ore".include?(variable[1])
			iron_ore
		elsif "slab".include?(variable[1])
			create_slab
		elsif "check".include?(variable[1])
			iron_check
		else
			respond
			respond
			respond "Basic script to process iron ore in Kobold Mines."
			respond "Updated to use UserVars and a few other tweaks."
			respond "Basic means no error handling. Assumes crucible is clear,"
			respond "   eyesight is not tired, and enough container space"
			respond
			respond "   -Commands-                          -Description-"
			respond ";ironslab_m charcoal                  create charcoal"
			respond ";ironslab_m oil                       search for oil"
			respond ";ironslab_m ore                       search for 4 ores"
			respond ";ironslab_m slab                      go through process of creating the slab"
			respond ";ironslab_m check                     Checks the casting pit for iron"
			respond ";ironslab_m                           Does them all!"
			respond
		end
	end

	def iron_check
		Script.run('go2','8013')
		if player_check
			respond
			respond
			respond "Pausing, someone is here ;unpause to continue"
			respond
			respond
			fput ";pause"
		end
		castpit = dothistimeout "look in casting pit", 3, /heavy slab of iron|There is nothing in there/
		if castpit =~ /heavy slab of iron/
			respond
			respond "Iron already in the casting pit!"
			respond
			exit
		else
			respond
			respond "No iron in the casting pit."
			respond
		end
	end

	def run
		iron_check
		charcoal
		oil
		iron_ore
		create_slab
	end

	def player_check
		if GameObj.pcs.nil?
			return false
		end
		return true
	end

	def charcoal
		start_script 'go2', ["7998"]
		wait_while{running?("go2")}
		fput "stow all"
		if player_check
			respond
			respond
			respond "Pausing, someone is here ;unpause to continue"
			respond
			respond
			fput ";pause"
		end
		fput "Get charcoal"
		unless GameObj.right_hand.noun == "charcoal"
			while true
				fput "get wood"
				if GameObj.right_hand.noun == "tinder"
					fput "Put tinder in burner"
					break
				end
				fput "put #{GameObj.right_hand.noun} in burner"
			end
			while true
				fput "get wood"
				if GameObj.right_hand.noun == "log"
					fput "Put log in burner"
					break
				end
				fput "put #{GameObj.right_hand.noun} in burner"
			end
			while true
				fput "get wood"
				if GameObj.right_hand.noun == "stick" and GameObj.left_hand.noun == "stick"
					fput "rub stick"
					break
				elsif GameObj.right_hand.noun == "stick"
					fput "swap"
				else
					fput "put #{GameObj.right_hand.noun} in burner"
				end
			end
			waitfor "burner rapidly cools off"
			fput "get charcoal"
		end
		multifput "open my #{@container}", "put charcoal in my #{@container}", "close my #{@container}"
	end

	def oil
		start_script 'go2', ["8009"]
		wait_while{running?("go2")}
		while GameObj.right_hand.name == "Empty"
			fput "search"
			if GameObj.loot.any? { |o| o.name == 'filthy flask of oil'}
				fput "get oil"
			end
		end
		multifput "open my #{@container}", "put oil in my #{@container}", "close my #{@container}"
	end

	def iron_ore
		start_script 'go2', ["8017"]
		wait_while{running?("go2")}
		iron = 0
		while iron < 4
			while GameObj.right_hand.name == "Empty"
				fput "search workface"
				sleep 0.2
				waitrt?
				if GameObj.loot.any? {|o| o.name == 'some iron ore'}
					iron += 1
					fput "get ore"
				end
			end
			multifput "open my #{@container}", "put ore in my #{@container}", "close my #{@container}"
		end
	end

	def create_slab
		start_script 'go2', ["8013"]
		wait_while{running?("go2")}
		if player_check
			respond
			respond
			respond "Pausing, someone is here ;unpause to continue"
			respond
			respond
			fput ";pause"
		end
		fill_crucible
		close_valve
		oil_machine
		pull_chain_bellows
		open_valve
		pull_chain_bellows
		pull_chain_bellows
		start_script 'go2', ["8013"]
		wait_while{running?("go2")}
		result = waitfor "it should be safe to handle", "ruined"
		if result.include?("ruined")
			respond
			respond
			respond "Something went horribly wrong!"
			respond
			respond
			return
		end
		fput "open #{@container}"
		multifput "get iron from casting pit", "put iron in my #{container}"
		multifput "get iron from casting pit", "put iron in my #{container}"
		multifput "get iron from casting pit", "put iron in my #{container}"
		multifput "get iron from casting pit", "put iron in my #{container}"
		fput "close #{@container}"
	end

	def fill_crucible
		fput "open my #{@container}"
		multifput "get my charcoal", "put my charcoal in crucible"
		multifput "get my ore", "put my ore in crucible"
		multifput "get my ore", "put my ore in crucible"
		multifput "get my ore", "put my ore in crucible"
		multifput "get my ore", "put my ore in crucible"
	end

	def close_valve
		start_script 'go2', ["8013"]
		wait_while{running?("go2")}
		fput "turn valve"
		result = waitfor "closes", "thin trickle"
		if result.include?("thin trickle")
			fput "turn valve"
		end
	end

	def open_valve
		start_script 'go2', ["8013"]
		wait_while{running?("go2")}
		fput "turn valve"
		result = waitfor "closes", ""
		if result.include?("closes")
			fput "turn valve"
		end
	end

	def pull_chain_bellows
		start_script 'go2', ["8014"]
		wait_while{running?("go2")}
		fput "pull chain"
		waitrt
		fput "pull bellows"
		waitrt
	end

	def oil_machine
		start_script 'go2', ["8014"]
		wait_while{running?("go2")}
		fput "get my oil"
		fput "pour oil in drums"
		fput "close my #{@container}"
	end
end


iron = IRON.new
iron.command