silence_me

=begin
Automates the use of premium teleportation and chronomage travel. Handles the minutia of dealing with tickets and orbs, so you don't have to. Intended to simplify inter-realm travel between teras/landing/elven nations but works with all the towns that have these services.

If you set your capsulesack variable (eg. ;Vars set capsulesack=cloak), it'll attempt to use your capsule first, if you have one. 

Example uses:

;fly to teras
;fly landing
;fly zul
;fly illistim

It'll understand pretty much any abbreviation of any city you want to go to, but here's a list of them just in case:

Wehnimer's Landing: weh lan wl
Solhaven: sol sh sanctum
River's Rest: rr riv rest river
Zul Logoth: zul log zl
Ta'Illistim: illi ili dais tail elven nat otf ti en
Ta'Vaalor: tav val valor vaalor tv
Cysaegir: cys nowhere
Kharam-Dzu: teras kha dzu kd nel
Icemule Trace: ice mule trace it cold snow
Kraken's Fall: kraken krak kraak fall pirate ship

If you want to go ASAP and try to use the premium teleportation first, include "fast" as part of your command. 
Eg.
;fly to weh fast
or
;fly fast to weh

author: Ryjex
=end

Script.run('repository', "set-updatable fly.lic")

if script.vars[1] == "help"
	Script.start("repo","info fly.lic");
	exit
end

fast = !(script.vars[0] =~ /fast/).nil?

def num(str)
	return str.delete(',').to_i
end

def silvers
	Vars.function.push(__method__.to_s)
	number = 0
	search = /^You have ([\d,]+) coins with you\.|^You have no silver coins with you\./
	result = dothistimeout "wealth quiet", 6, search
	number = num($1) if result =~ /^You have ([\d,]+) coins with you\./
	number
end

def checkpremium
	hook_proc = proc { |server_string|
		if server_string =~ /\www\.play\.net|-------------------------------------------------------------/
			DownstreamHook.remove('check_premium')
			nil
		elsif server_string =~ /^\s*------------|  /i
			nil
		else
			server_string
		end
	}
	clear
	DownstreamHook.add('check_premium', hook_proc)
	put "premium start"
	prem = false
	while (line = get)
		if line =~ /PREMIUM INFORMATION/
			prem=true
			break
		elsif line =~ /You are not currently a Premium subscriber/
			prem=false
			break
		end
	end
	prem
end

# Where are we going?
# Wehnimer's Landing, Solhaven, River's Rest, Zul Logoth, Ta'Illistim, Ta'Vaalor, Cysaegir, Kharam-Dzu and Icemule Trace.

dest = script.vars[0]
dest = dest.gsub("to ", "")
dest = dest.gsub(" fast", "")
dir = ""

if dest =~ /Wehnimer's Landing|weh|lan|wl/i
	dest = "Wehnimer's Landing"
	dir = "w"
elsif dest =~ /Krak|kraak|fall|pirate|ship|kf/i 
	dest = "Kraken's Fall"
	dir = "down"
elsif dest =~ /Solhaven|sol|sh|sanctum/i
	dest = "Solhaven" 
	dir = "sw"
elsif dest =~ /River's Rest|rr|riv|rest|river/i
	dest = "River's Rest"
	dir = "nw"
elsif dest =~ /Zul Logoth|zul|log|zl/i
	dest = "Zul Logoth" 
	dir = "se"
elsif dest =~ /Ta'Illistim|illi|ili|dais|tail|elven|nat|otf|ti|^en/i
	dest = "Ta'Illistim" 
	dir = "ne"
elsif dest =~ /Ta'Vaalor|tav|val|valor|vaalor|tv/i
	dest = "Ta'Vaalor" 
	dir = "e"
elsif dest =~ /Cysaegir|cys|nowhere/i
	dest = "Cysaegir" 
	dir = nil
elsif dest =~ /Kharam-Dzu|teras|kha|dzu|kd|nel/i
	dest = "Kharam-Dzu"
	dir = "s"
elsif dest =~ /Icemule Trace|ice|mule|trace|it|cold|snow/i
	dest = "Icemule Trace"
	dir = "n"
else
	echo "Hmmm... not sure where you're headed, please clarify destination..."
	exit
end

echo dest

# Where are we?

Script.run("go2","bank",:quiet => true)
fput "unhide" if invisible?
teleroom = 0
chronoroom = 0
chronoseller = "clerk"
located = ""

if Room.current.id == 3672	# FWI
	echo "Can't fly from FWI!"
	exit
elsif Room.current.id == 400 	
	located = "Wehnimer's Landing" 
	teleroom = 20736
	chronoroom = 8635
	chronoseller = "clerk"
elsif Room.current.id == 5710
	located = "Solhaven"
	teleroom = 20720
	chronoroom = 14359
	chronoseller = "agent"
elsif Room.current.id == 10911	
	located = "River's Rest"
	teleroom = 20768
	chronoroom = 26180
	chronoseller = "scallywag"
elsif Room.current.id == 9472
	located = "Zul Logoth"
	teleroom = 20688
	chronoroom = 9551
	chronoseller = "dwarf"
elsif Room.current.id == 11
	located = "Ta'Illistim"
	teleroom = 20699
	chronoroom = 1276
	chronoseller = "attendant"
elsif Room.current.id.to_s =~ /13938|10325/
	located = "Ta'Vaalor"
	teleroom = 20709
	chronoroom = 13779
	chronoseller = "clerk"
elsif Room.current.id == 4686
	located = "Cysaegir"
	teleroom = 0
	chronoroom = 17155
	chronoseller = "woman"
elsif Room.current.id == 1838
	located = "Kharam-Dzu"
	teleroom = 20779
	chronoroom = 12791
	chronoseller = "guard"
elsif Room.current.id == 3370
	located = "Icemule Trace"
	teleroom = 20759
	chronoroom = 15619
	chronoseller = "halfling"
elsif Room.current.id == 28870
	located = "Kraken's Fall"
	teleroom = 28989
	chronoroom = 28967
	chronoseller = "agent"
else
	echo "Not sure where we are... are we too far from a major town?"
	exit
end

if dest == located
	echo "We're already in #{located}!"
	exit
end

samezone = false



fput "stow right" if !checkright.nil?
fput "stow left" if !checkleft.nil?

Vars.capsulesack = Vars.inv if !Vars.inv.nil?
if !!Vars.capsulesack && (!fast || teleroom == 0) && dest !~ /Kraken's Fall/
	result = dothistimeout "get my capsule from my #{Vars.capsulesack}", 5, /Get what|You remove a/
	if result =~ /You remove a/
		correctchamber = false
		until correctchamber do
			result = dothistimeout "turn my capsule", 5, /setting the active chamber to/
			correctchamber = true if result =~ /#{dest}/
		end
		dothistimeout "push my capsule", 5, /is ejected from the|chamber is empty/
		fput "put capsule in my #{Vars.capsulesack}"
		if (checkleft == "sphere" or checkright == "sphere")
			Script.run("go2","#{chronoroom}",:quiet => true)
			fput "read my sphere"
			echo "awaiting departure . . .   "
			exit
		end
	end
end

startsilvers = silvers
premium = checkpremium

if startsilvers < 100000
	fput "unhide" if hidden? || invisible?
	fput "withdraw #{100000-startsilvers} sil"
end
if silvers < 100000
	if premium
		echo "Not enough money in local bank, let's go check FWI bank."
		startroom = Room.current.id
		Script.run("go2","3672",:quiet => true)
		if Room.current.id != 3672
			echo "You should fix your go2 settings to be able to go2 to and from FWI."
			exit
		end
		fput "unhide" if hidden? || invisible?
		fput "withdraw #{100000-startsilvers} sil"
		Script.run("go2","#{startroom}",:quiet => true)
		if silvers < 100000
			echo "My apologies, #{Char.name}, but poor people can't fly!"
			exit
		end
	else
		echo "My apologies, #{Char.name}, but poor people can't fly!"
		exit
	end
end



# First, let's see when is the next chrono departure
#Script.run("go2","chronomage",:quiet => true)
#fastdeparture = dothistimeout "ask #{chronoseller} about departure", 2, /The next distant departure will be in less than a minute|in 1 minute|in 2 minutes|in 3 minutes|in 4 minutes/
#if fastdeparture == false

# Let's try teleporter 
echo teleroom
if premium && teleroom > 0 && dest != "Cysaegir" 
	Script.run("go2","#{teleroom}",:quiet => true)
	fput "stow right" if !(checkleft.nil? || checkright.nil?)
	fput "buy ticket"
	fput "buy ticket"
	pause 1
	#"You'll have to wait until next month to travel"
	if (checkleft == "ticket" || checkright == "ticket")
		# leftover = silvers-startsilvers
		# if leftover > 1000
			# Script.run("go2","bank",:quiet => true)
			# fput "deposit #{leftover} sil"
			# Script.run("go2","#{teleroom}",:quiet => true)
		# end
		fput "go portal"
		fput "#{dir}"
		fput "go portal"
		pause 1
		Script.run("go2","town",:quiet => true)
		echo "Welcome to #{dest}!"
		exit
	end
end

# I guess let's go via chronomage

Script.run("go2","chronomage",:quiet => true)
fput "stow right" if !(checkleft.nil? || checkright.nil?)

fput "ask #{chronoseller} for #{dest}"
fput "ask #{chronoseller} for #{dest}"
pause 1
if (checkleft == "orb" || checkright == "orb")
	# leftover = silvers-startsilvers
	# if leftover > 1000
		# Script.run("go2","bank",:quiet => true)
		# fput "deposit #{leftover} sil"
		# Script.run("go2","#{chronoroom}",:quiet => true)
	# end
	Script.run("go2","#{chronoroom}",:quiet => true)
	fput "read my orb"
	echo "awaiting departure . . .   "
end