silence_me

=begin
Automates the use of premium teleportation and chronomage travel by handling the minutia of dealing with tickets and orbs.

Example uses:

;fly teras
;fly landing
;fly zul
;fly illistim

Since premium teleportation is instant, by default it will try to use the premium teleportation first before looking for your chronomage orbs capsule. If you want, you can force it to use the chronomage travel instead by adding "chrono" as part of your command. 

Eg.
;fly chrono teras

Destination abbreviations:

Wehnimer's Landing: landing weh lan wl
Kharam-Dzu: teras kha dzu kd nel nelemar
Ta'Illistim: illi ili dais tail elven nat otf ti en
Solhaven: sol sh sanctum sos
River's Rest: rr riv rest river
Zul Logoth: zul log zl
Ta'Vaalor: tav val valor vaalor tv
Cysaegir: cys nowhere
Icemule Trace: ice mule trace it rift scatter cold snow
Kraken's Fall: kraken krak kraak fall atoll pirate ship 

You can also optionally specify a container where to stash your capsule after use:

;vars set capsulesack="cloak"

author: Ryjex
=end

Script.run('repository', "set-updatable fly.lic")

if script.vars[1] == "help"
	Script.start("repo","info fly.lic");
	exit
end

chrono = !(script.vars[0] =~ /chrono/i).nil?

def num(str)
	return str.delete(',').to_i
end


def silvers
	number = 0
	search = /^You have ([\d,]+) coins with you\.|^You have no silver coins with you\./
	result = dothistimeout "wealth quiet", 6, search
	number = num($1) if result =~ /^You have ([\d,]+) coins with you\./
	number
end

def check_premium
	clear
	DownstreamHook.add('check_premium', proc { |server_string|
		if server_string =~ /\www\.play\.net|-------------------------------------------------------------/
			DownstreamHook.remove('check_premium')
			nil
		elsif server_string =~ /^[ \s]|      |^\s*$/
			nil
		else
			server_string
		end
	})
	prem = false
	search = /PREMIUM INFORMATION|You are not currently a Premium subscriber/
	result = dothistimeout "premium start", 6, search
	prem = true if result =~ /PREMIUM INFORMATION/
	prem
end

$starting_silvers = silvers
$premium = check_premium

def goto_bank
	tr
	if $premium
		Script.run("go2","3672",:quiet => true)
		if Room.current.id != 3672
			echo "Can't walk to fwi bank to get silvers for travel. You should fix your go2 --fwi-trinket settings to be able to go2 to and from FWI."
			exit
		end
	else
		Script.run("go2","bank",:quiet => true)
	end
end

def get_silvers
	goto_bank
	if $starting_silvers < 100000
		fput "unhide" if hidden? || invisible?
		fput "withdraw #{100000-$starting_silvers} sil"
	end
	if silvers < 100000
		echo "My apologies, #{Char.name}, but poor people can't fly!"
		exit
	end
end

# Where are we going?
# Wehnimer's Landing, Solhaven, River's Rest, Zul Logoth, Ta'Illistim, Ta'Vaalor, Cysaegir, Kharam-Dzu and Icemule Trace.

dest = script.vars[0]
dest = dest.gsub("to ", "")
dest = dest.gsub(" chrono", "")
dir = ""

if dest =~ /Wehnimer's Landing|weh|lan|wl/i
	dest = "Wehnimer's Landing"
	dir = "w"
elsif dest =~ /Krak|kraak|fall|pirate|ship|kf|atoll|kraken/i 
	dest = "Kraken's Fall"
	dir = "down"
elsif dest =~ /Solhaven|sol|sh|sanctum|sos/i
	dest = "Solhaven" 
	dir = "sw"
elsif dest =~ /River's Rest|rr|riv|rest|river/i
	dest = "River's Rest"
	dir = "nw"
elsif dest =~ /Zul Logoth|zul|log|zl/i
	dest = "Zul Logoth" 
	dir = "se"
elsif dest =~ /Ta'Illistim|illi|ili|dais|tail|elven|nat|otf|ti|^en/i
	dest = "Ta'Illistim" 
	dir = "ne"
elsif dest =~ /Ta'Vaalor|tav|val|valor|vaalor|tv/i
	dest = "Ta'Vaalor" 
	dir = "e"
elsif dest =~ /Cysaegir|cys|nowhere/i
	dest = "Cysaegir" 
	dir = nil
elsif dest =~ /Kharam-Dzu|teras|kha|dzu|kd|nel/i
	dest = "Kharam-Dzu"
	dir = "s"
elsif dest =~ /Icemule Trace|ice|mule|trace|it|cold|snow|rift|scatter/i
	dest = "Icemule Trace"
	dir = "n"
else
	echo "Hmmm... not sure where you're headed, please clarify destination..."
	exit
end



echo "Flying to #{dest}..."

# Where are we?

Script.run("go2","bank",:quiet => true)
fput "unhide" if invisible?
teleroom = 0
chronoroom = 0
chronoseller = "clerk"
located = ""

if Room.current.id == 3672	# FWI
	echo "Can't fly from FWI!"
	exit
elsif Room.current.id == 400 	
	located = "Wehnimer's Landing" 
	teleroom = 20736
	chronoroom = 8635
	chronoseller = "clerk"
elsif Room.current.id == 5710
	located = "Solhaven"
	teleroom = 20720
	chronoroom = 14359
	chronoseller = "agent"
elsif Room.current.id == 10911	
	located = "River's Rest"
	teleroom = 20768
	chronoroom = 26180
	chronoseller = "scallywag"
elsif Room.current.id == 9472
	located = "Zul Logoth"
	teleroom = 20688
	chronoroom = 9551
	chronoseller = "dwarf"
elsif Room.current.id == 11
	located = "Ta'Illistim"
	teleroom = 20699
	chronoroom = 1276
	chronoseller = "attendant"
elsif Room.current.id.to_s =~ /13938|10325/
	located = "Ta'Vaalor"
	teleroom = 20709
	chronoroom = 13779
	chronoseller = "clerk"
elsif Room.current.id == 4686
	located = "Cysaegir"
	teleroom = 0
	chronoroom = 17155
	chronoseller = "woman"
elsif Room.current.id == 1838
	located = "Kharam-Dzu"
	teleroom = 20779
	chronoroom = 12791
	chronoseller = "guard"
elsif Room.current.id == 3370
	located = "Icemule Trace"
	teleroom = 20759
	chronoroom = 15619
	chronoseller = "halfling"
elsif Room.current.id == 28870
	located = "Kraken's Fall"
	teleroom = 28989
	chronoroom = 28967
	chronoseller = "agent"
else
	echo "Not sure where we are... are we too far from a major town?"
	exit
end

if dest == located
	echo "We're already in #{located}!"
	exit
end

samezone = false

# First, let's see when is the next chrono departure
#Script.run("go2","chronomage",:quiet => true)
#fastdeparture = dothistimeout "ask #{chronoseller} about departure", 2, /The next distant departure will be in less than a minute|in 1 minute|in 2 minutes|in 3 minutes|in 4 minutes/
#if fastdeparture == false

# Let's try teleporter 

if $premium && teleroom > 0 && !chrono
	get_silvers
	Script.run("go2","#{teleroom}",:quiet => true)
	fput "stow right" if !(checkleft.nil? || checkright.nil?)
	fput "buy ticket"
	fput "buy ticket"
	pause 1
	#"You'll have to wait until next month to travel"
	if (checkleft == "ticket" || checkright == "ticket")
		# leftover = silvers-$starting_silvers
		# if leftover > 1000
			# Script.run("go2","bank",:quiet => true)
			# fput "deposit #{leftover} sil"
			# Script.run("go2","#{teleroom}",:quiet => true)
		# end
		fput "go portal"
		fput "#{dir}"
		fput "go portal"
		pause 1
		Script.run("go2","town",:quiet => true)
		echo "Welcome to #{dest}!"
		exit
	end
end


# I guess let's go via chronomage

fput "stow right" if !checkright.nil?
fput "stow left" if !checkleft.nil?

if chrono || teleroom == 0
	result = dothistimeout "get my capsule", 5, /Get what|You remove a/
	if result =~ /You remove a/
		correctchamber = false
		until correctchamber do
			result = dothistimeout "turn my capsule", 5, /setting the active chamber to/
			correctchamber = true if result =~ /#{dest}/
		end
		dothistimeout "push my capsule", 5, /is ejected from the|chamber is empty/
		Vars.capsulesack = "pack" if Char.name =~ /Brute/
		fput "put capsule in #{Vars.capsulesack}"
		if (checkleft == "sphere" || checkright == "sphere")
			Script.run("go2","#{chronoroom}",:quiet => true)
			fput "read my sphere"
			echo "awaiting departure . . .   "
			exit
		end
	end
end


get_silvers
Script.run("go2","chronomage",:quiet => true)
fput "stow right" if !(checkleft.nil? || checkright.nil?)

fput "ask #{chronoseller} for #{dest}"
fput "ask #{chronoseller} for #{dest}"
pause 1
if (checkleft == "orb" || checkright == "orb")
	# leftover = silvers-$starting_silvers
	# if leftover > 1000
		# Script.run("go2","bank",:quiet => true)
		# fput "deposit #{leftover} sil"
		# Script.run("go2","#{chronoroom}",:quiet => true)
	# end
	Script.run("go2","#{chronoroom}",:quiet => true)
	fput "read my orb"
	echo "awaiting departure . . .   "
end