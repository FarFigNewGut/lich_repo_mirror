=begin
	
  Script: wanddupe
  Author: Caithris
  Creation Date: 2/20/2013
  Description: Down dirty wand duplication

=end

if script.vars[0].nil?
	respond "Please enter a place to stow duped wands."
	respond "example:"
	respond ";wanddupe \"wand harness\""
	respond ""
	exit
elsif script.vars[0] =~ /help/
	respond "wanddupe. Duplicate your wands"
	respond ""
	respond "Usage: ;wanddupe <duped wand container>"
	respond ""
	exit
end
	if UserVars.wandsack.nil? or UserVars.wandsack.empty?
			echo 'error: wandsack is not set. (;set change wandsack <container name>)'
		exit
	end

detect = Spell[405]
dupe = Spell[918]

empty_hands
GameObj.inv.find {|sack| 
	if sack.name=~/#{UserVars.wandsack}/ then 
		sack.contents.each{|wand| 
			if wand.type=="wand"  then 
				fput "get ##{wand.id}"; 
				unless detect.affordable? then
					echo "Waiting for mana...."
					wait_while {!detect.affordable?}
				end
				fput "prep 405"
				detectoutput = dothis "cast ##{wand.id}", /^You sense/
				pause 3
				if detectoutput =~ /no charges/ then
					fput "stow ##{wand.id}"
				elsif detectoutput =~ /is not well suited for duplicating/ then
					fput "put ##{wand.id} in my #{script.vars[1]}"
				else
					unless dupe.affordable? then
						echo "Waiting for mana...."
						wait_while {!dupe.affordable?}
					end
					fput "prep 918"
					dupeoutput= dothis "cast ##{wand.id}", /feeling a little lighter|disappears into a puff of smoke/
					pause 3
					if dupeoutput =~ /feeling a little lighter/ then
						fput "put left in my #{script.vars[1]}"
						fput "put right in my #{script.vars[1]}"
					end
				end
			end
		}
	end
}



fill_hands