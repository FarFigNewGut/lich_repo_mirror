=begin
  UnlearnForFixSkills.lic
  
  Unlearn all damn things so you can fixskill without carpel tunnel!!!
  
  ;unlearn asc
  ;unlearn cman
  ;unlearn shield
  ;unlearn armor
  ;unlearn all

        author: Nisugi
  contributors: Nisugi
          game: Gemstone
          tags: training, fixskill, ascension, combat maneuvers, shield, armor
       version: 1.0

  Change Log:
  v1.0 (2023-09-16)
    - Initial Release
=end


module UnlearnForFixskills

  def self.unlearn_asc
    Lich::Messaging.msg("bold", "Unlearning Ascension.")
    known_asc = {}
    result = Lich::Util.issue_command("asc info", /your Ascension Abilities are as follows:/)
    result.each { |line|
      case line
      when /[^<]+<d cmd='ascensi HELP \w+'>(\w+)<\/d>\s+(\d+)\/\d+\s+<d cmd='ascensi LIST \w+'>\w+<\/d>\s+\w+\s+\w+/
        known_asc[$1] = $2
      end
    }
    known_asc.each { |asc, rank| Script.run("multi","#{rank}, asc unlearn #{asc}, asc unlearn confirm")}
  end

  def self.unlearn_cman
    Lich::Messaging.msg("bold", "Unlearning Combat Maneuvers.")
    known_cman = {}
    result = Lich::Util.issue_command("cman info", /your Combat Maneuvers are as follows:/)
    result.each { |line|
      case line
      when /[^<]+<d cmd='cman HELP \w+'>(\w+)<\/d>\s+(\d+)\/\d+\s+<d cmd='cman LIST \w+'>\w+<\/d>/
        known_cman[$1] = $2
      end
    }
    known_cman.each { |cman, rank| Script.run("multi","#{rank}, cman unlearn #{cman}, cman unlearn confirm")}
  end

  def self.unlearn_shield
    Lich::Messaging.msg("bold", "Unlearning Shield Specializations.")
    known_shield = {}
    result = Lich::Util.issue_command("shield info", /your Shield Specializations are as follows:/)
    result.each { |line|
      case line
      when /[^<]+<d cmd='shield HELP \w+'>(\w+)<\/d>\s+(\d+)\/\d+\s+<d cmd='shield LIST \w+'>\w+<\/d>/
        known_shield[$1] = $2
      end
    }
    known_shield.each { |shield, rank| Script.run("multi","#{rank}, shield unlearn #{shield}, shield unlearn confirm")}
  end

  def self.unlearn_armor
    Lich::Messaging.msg("bold", "Unlearning Armor Specializations.")
    known_armor = {}
    result = Lich::Util.issue_command("armor info", /your Shield Specializations are as follows:/)
    result.each { |line|
      case line
      when /[^<]+<d cmd='armor HELP \w+'>(\w+)<\/d>\s+(\d+)\/\d+\s+<d cmd='armor LIST \w+'>\w+<\/d>/
        known_armor[$1] = $2
      end
    }
    known_armor.each { |armor, rank| Script.run("multi","#{rank}, armor unlearn #{armor}, armor unlearn confirm")}
  end

  if Script.current.vars[0].to_s =~ /^all$/
    Lich::Messaging.msg("bold", "You have chosen to unlearn all.")
    Lich::Messaging.msg("bold", ";unpause to continue or ;kill to abort.")
    Script.pause(Script.current.name)
    UnlearnForFixskills.unlearn_asc
    UnlearnForFixskills.unlearn_cman
    UnlearnForFixskills.unlearn_shield
    UnlearnForFixskills.unlearn_armor
    Lich::Messaging.msg("bold", "Finished unlearning.")
    exit
  elsif Script.current.vars[0].to_s =~ /^asc$/
    Lich::Messaging.msg("bold", "You have chosen to unlearn Ascension.")
    Lich::Messaging.msg("bold", ";unpause to continue or ;kill to abort.")
    Script.pause(Script.current.name)
    UnlearnForFixskills.unlearn_asc
    Lich::Messaging.msg("bold", "Finished unlearning.")
    exit
  elsif Script.current.vars[0].to_s =~ /^cman$/
    Lich::Messaging.msg("bold", "You have chosen to unlearn Combat Maneuvers.")
    Lich::Messaging.msg("bold", ";unpause to continue or ;kill to abort.")
    Script.pause(Script.current.name)
    UnlearnForFixskills.unlearn_cman
    Lich::Messaging.msg("bold", "Finished unlearning.")
    exit
  elsif Script.current.vars[0].to_s =~ /^shield$/
    Lich::Messaging.msg("bold", "You have chosen to unlearn Shield Specializations.")
    Lich::Messaging.msg("bold", ";unpause to continue or ;kill to abort.")
    Script.pause(Script.current.name)
    UnlearnForFixskills.unlearn_shield
    Lich::Messaging.msg("bold", "Finished unlearning.")
    exit
  elsif Script.current.vars[0].to_s =~ /^armor$/
    Lich::Messaging.msg("bold", "You have chosen to unlearn Armor Apecializations.")
    Lich::Messaging.msg("bold", ";unpause to continue or ;kill to abort.")
    Script.pause(Script.current.name)
    UnlearnForFixskills.unlearn_armor
    Lich::Messaging.msg("bold", "Finished unlearning.")
    exit
  else
    puts("Please specify an option and try again.")
    puts(";#{Script.current.name} all    - untrain ascension, cman, shield, and armor points")
    puts(";#{Script.current.name} asc    - untrain ascension points only")
    puts(";#{Script.current.name} cman   - untrain cman points only")
    puts(";#{Script.current.name} shield - untrain shield points only")
    puts(";#{Script.current.name} armor  - untrain armor points only")
    exit
  end

end