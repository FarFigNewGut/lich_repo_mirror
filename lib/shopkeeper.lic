class Shopkeeper
  UPDATER   = "update-playershops"
  MINUTE    = 60
  DOWN_TIME = MINUTE * 60 ## Seconds
  INVIS     = Spell[916]
  ##
  ## makes sure the wizard is invisible always
  ##
  HIDER = Thread.new do
    loop do
      wait_while do
        Script.running?(UPDATER)
      end
      invisible
      sleep 1
    end
  end

  def self.invisible
    if INVIS.known? and INVIS.affordable? and (INVIS.timeleft < 10)
      INVIS.cast  
    end
  end
  ##
  ## all things before starting all runs
  ##
  def self.setup
    fput "skills full"
  end
  ##
  ## cleanup from a single run
  ## of UPDATER 
  ##
  def self.teardown
    wait_while do
      Script.running?("repository")
    end
  end
  ##
  ## main event loop
  ##
  ## 1. runs UPDATER
  ## 2. hibernates
  ##
  def self.run
    loop do
      Script.run(UPDATER)
      teardown
      hibernate
    end
  end
  ##
  ## waits the number of seconds in DOWN_TIME
  ##
  def self.hibernate
    sleep DOWN_TIME
  end
  ##
  ## ensures we start running in a mapped room
  ##
  def self.find_mapped_room
    walk while Room.current.nil?
  end
  ##
  ## makes sure we destroy all dangling threads
  ##
  before_dying do
    Script.kill(UPDATER) if Script.running?(UPDATER)
    HIDER.kill.join
  end
  ##
  ## hide character on login
  ##
  Shopkeeper.invisible
  ##
  ## allow other things to load
  ##
  sleep 5
  ##
  ## run setup things
  ##
  Shopkeeper.setup
  ##
  ## during network partitions it's possible to logout
  ## in a non-recoverable state for ;update-playershops
  ## so we must recover that first
  ##
  Shopkeeper.find_mapped_room
  ##
  ## run our keeper
  ##
  Shopkeeper.run
end