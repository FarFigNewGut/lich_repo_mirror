


$jar_array = Array.new
$gem_jar_array = Array.new
$gem_name_array = Array.new
match_pattern = nil
@deplural = Hash.new
@deplural["teeth"] = "tooth"
@deplural["motes"] = "mote" 
@deplural["pieces"] = "piece" 
@deplural["shards"] = "shard" 
@deplural["globes"] = "globe" 
$container = "backpack"
$container = "cloak" if XMLData.name == "Jadiana" ||  XMLData.name == "Ravenfiery"
fput "open my cloak" if XMLData.name == "Jadiana"
$container = "haversack" if XMLData.name == "Schultz"
$container = "pack" if XMLData.name == "Chulo"



def checkforjars
  found=nil
  #echo $container
  GameObj.inv.each{|a| found=a if a.name.include? $container}
  #echo found
  found.contents.each{|a| ($jar_array << a) if (a.type == "jar") }
end

def deplural(str) 
  str = str.strip =~ /^(containing )?(.*?)(ies|(?<=onyx)es|(?<=z)es|(?<!mos)s)?$/ ? "#{$2}#{$3 == 'ies' ? 'y' : ''}" : str;
  str.gsub(/\b(#{@deplural.keys.join("|")})\b/,@deplural); 
end

def depearl(dp_str)
  dp_str_pattern =/^\s*[A-Za-z]+\s(?<name>.*)?/i
  dp_str_polished_pattern = /polished (?<name>.*)?/i
  dp_pearl_pattern = /small|tiny|medium|large|faceted/
  dp_piece_pattern = /piece of (?<name>.*)?/
  dp_pieces_pattern = /pieces of (?<name>.*)?/
  dp_uncut_pattern = /diamonds|emeralds|rubies/
  dp_gemname = nil
  if (dp_str.include?("pearl")) && (dp_pearl_pattern.match(dp_str))
    dp_gemname  = (dp_str_pattern.match(dp_str))[:name]
  elsif dp_str.include?("polished")
    dp_gemname  = (dp_str_polished_pattern.match(dp_str))[:name]
  elsif dp_str.include?("some") 
    dp_gemname  = (dp_str_pattern.match(dp_str))[:name]
  elsif dp_str.include?("piece of") 
    dp_gemname  = (dp_piece_pattern.match(dp_str))[:name]
  elsif dp_str.include?("pieces of") 
    dp_gemname  = (dp_pieces_pattern.match(dp_str))[:name]
  elsif	(dp_str.include?("faceted") && dp_uncut_pattern.match(dp_str))
	dp_gemname = dp_str.gsub("faceted","uncut")
  elsif (dp_str.include?("faceted"))
	dp_gemname = dp_str.gsub("faceted ","")
  else
    dp_gemname = dp_str
  end
  return dp_gemname
end

def dicoverjargems
	checkforjars
	#$jar_array.select{|a| a.after_name.include? "containing"}.each{|a| echo "#{a.name} #{a.after_name}"}
	echo $jar_array
	$jar_array.select{|a| a.after_name.include? "containing"}.each{|a| $gem_jar_array << a}
	echo $gem_jar_array
	$gem_jar_array.select{|a| 
		if jargemcount(a.id) > 9
			$gem_name_array << deplural(depearl(a.after_name.gsub("containing ","")))
		end
	}
end

def jargemcount(jgc_id)
	jgc_store = fput("look in ##{jgc_id}");
	jgc_count = jgc_store.match(/\syou see (?<qty>.*) portion/)[:qty].to_i
	jgc_count
end

def silvers
	clear
	DownstreamHook.add('check_silvers', proc { |server_string|
		if server_string =~ /^\s*Name\:|^\s*Gender\:|^\s*Normal \(Bonus\)|^\s*Strength \(STR\)\:|^\s*Constitution \(CON\)\:|^\s*Dexterity \(DEX\)\:|^\s*Agility \(AGI\)\:|^\s*Discipline \(DIS\)\:|^\s*Aura \(AUR\)\:|^\s*Logic \(LOG\)\:|^\s*Intuition \(INT\)\:|^\s*Wisdom \(WIS\)\:|^\s*Influence \(INF\)\:|^\s*$|^\s*Ascended/
			nil
		elsif server_string =~ /^\s*Mana\:\s+\-?[0-9]+\s+Silver\:/
			DownstreamHook.remove('check_silvers')
			nil
		else
			server_string
		end
	})
	number = 0
	search = /(?<=Silver\: )(?<name>.*)/
	result = dothistimeout "info", 6 ,search
	number=result.match(search)[:name].gsub(",","")
    number
end

if script.vars.include?("output")
	dicoverjargems
	match_pattern = $gem_name_array.join('|')
	echo match_pattern

	#The gem dealer takes the faceted diamond, gives it a careful examination and and says, "I don't have that much spare silver, I will have to give you a bank note for it."  He then hands you a Wehnimer's promissory note for 20,305 silvers, minus a small 42 silver surcharge.
else
	if checkmind == "saturated"
		echo "Saturated!"
		exit
	end
	dicoverjargems
	match_pattern = $gem_name_array.join('|')
	if match_pattern == ""
		echo "No gems!"
		exit
	end
	echo match_pattern

	currentroom = Room.current.id

	storeboost = dothis "boost bounty",/You already have an active Bounty Boost|You do not have any Bounty Boosts to redeem|You have activated a Bounty Boost/
	if storeboost.include? "You do not have any Bounty Boosts to redeem"
		exit
	end
	#You already have an active Bounty Boost.
	#You do not have any Bounty Boosts to redeem.
	#[You have activated a Bounty Boost.  You will be able to get a different Adventurer's Guild task every 5 seconds until you either successfully complete one, share it, or 1 hour passes.]
	fput "gird"
	Script.run("go2","3785")
  fput "sheath"
	if XMLData.bounty_task != "You are not currently assigned a task."
		fput "ask taskmaster for remov"
		fput "ask taskmaster for remov"
	end


	fput "ask taskmaster for bounty"

	while line = get
		if line =~ /gem dealer/
			Script.run("go2","1776")
			store = dothis("ask dealer about bounty",/You can SELL them to me as you find them./)
			echo store
			echo match_pattern
			echo !/#{match_pattern}/.match(store).nil?
			if !/#{match_pattern}/.match(store).nil?
				gembountypattern = /^.* customers requesting.(an|a|some).(?<gem>.*?)\..* You have been tasked to retrieve.(?<qty>.*?).of them\./
				result = (XMLData.bounty_task).match(gembountypattern)
				echo result[:gem]
				echo result[:qty]
				dothis  "rummage in #{$container} ingredient #{result[:gem]}",/You rummage through the/
				pause
				(1..result[:qty].to_i).each{|a| 
					dothis "shake my bottle",/^You give your/
					pause
					if GameObj.right_hand.type == "gem" && GameObj.right_hand.name == result[:gem]
						sellresults = dothis "sell #{GameObj.right_hand.noun}",/gives it a careful examination/
					elsif GameObj.left_hand.type == "gem"  && GameObj.left_hand.name == result[:gem]
						sellresults = dothis "sell #{GameObj.left_hand.noun}",/gives it a careful examination/
					else
						sellresults = dothis "sell #{result[:gem].gsub('uncut','faceted')}",/gives it a careful examination/
					end
					#sellresults = dothis "sell #{result[:gem].gsub('uncut','faceted')}",/gives it a careful examination/
					price_pattern = /(?<price>[\d,]+) silver/
					ppm_data = price_pattern.match(sellresults)
					echo result[:gem]
					echo ppm_data[:price].gsub(",","").to_i
					if CharSettings[result[:gem] + "_price"].nil?
						CharSettings[result[:gem] + "_price"] = ppm_data[:price].gsub(",","").to_i
					else
						CharSettings[result[:gem] + "_price"] = CharSettings[result[:gem] + "_price"] + ppm_data[:price].gsub(",","").to_i
					end
					echo CharSettings[result[:gem] + "_price"]
					if CharSettings[result[:gem] + "_count"].nil?
						CharSettings[result[:gem] + "_count"] = 1
					else
						CharSettings[result[:gem] + "_count"] = CharSettings[result[:gem] + "_count"]  + 1
					end
					echo CharSettings[result[:gem] + "_count"]
					pause
					 if !(GameObj.left_hand.name == "Empty")
						dothis "put left in my #{$container}",/You put|You are not holding anything in your left hand/
					 end
				}
				dothis "put right in my #{$container}",/You put/
				if CharSettings["bounty_count"].nil?
					CharSettings["bounty_count"] = 1
				else
					CharSettings["bounty_count"] = 1 + CharSettings["bounty_count"]
				end
				if checkmind != "saturated"
					Script.run("go2","3785")
					fput "ask taskmaster for bounty"
					fput "gird"
					Script.run("go2","#{currentroom}")
					fput "sheath"
					sendsilvers = silvers
					if !(sendsilvers == "0")
						if (!GameObj.pcs.find{|a| a.name == "Forlifor"}.nil?)
							fput "give forlifor #{sendsilvers} silver"
						elsif (!GameObj.pcs.find{|a| a.name == "Marjoram"}.nil?)
							fput "give Marjoram #{sendsilvers} silver"
						end
						_respond "<pushBold/> ************************************************ <popBold/>"
						_respond "<pushBold/> Total Bounties) --->  #{CharSettings["bounty_count"]}<popBold/>"
						_respond "<pushBold/> ************************************************ <popBold/>"
						if (!GameObj.pcs.find{|a| a.name == "Ensayn"}.nil?) && (XMLData.name == "Jadiana")
							fput "snuggle ensayn"
						end
						fput "join forlifor"
						fput "close my cloak" if XMLData.name == "Jadiana"
						
						break
					end
				else
					fput "gird"
					Script.run("go2","#{currentroom}")
					fput "sheath"
					_respond "<pushBold/> ************************************************ <popBold/>"
					_respond "<pushBold/> Total Bounties) --->  #{CharSettings["bounty_count"]}<popBold/>"
					_respond "<pushBold/> ************************************************ <popBold/>"
					if (!GameObj.pcs.find{|a| a.name == "Ensayn"}.nil?) && (XMLData.name == "Jadiana")
						fput "snuggle ensayn"
					end
					fput "join forlifor"
					fput "close my cloak" if XMLData.name == "Jadiana"
					break
				end
			else	
				Script.run("go2","3785")
				echo "Refusing this bounty ..."
				  sleep 0.2
				  fput "ask taskmaster for remov"
				  fput "ask taskmaster for remov"
				  sleep 5
				  fput "ask taskmaster for bounty"
			end
		elsif line =~/Hmm, I've got a task here from the town|got a special mission for you/
			Script.run("go2","3785")
			echo "Refusing this bounty ..."
			  sleep 0.2
			  fput "ask taskmaster for remov"
			  fput "ask taskmaster for remov"
			  sleep 5
			  fput "ask taskmaster for bounty"
		end
	end
end

