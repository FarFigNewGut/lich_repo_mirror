=begin
  This turns EVERY container you are wearing into a jarsack for jarserve.
  Calls the vars script for each worn container to set the jarsack setting.
          author: Xanlin (Xanlin#4407 on discord)
            game: GS
            tags: jarserve
        required: Lich >= 4.6.4
         version: 1
=end
#------------------------------------------------------------------------------#
# script settings
#------------------------------------------------------------------------------#
@script                     = script;
@script.want_downstream     = false;
@script.want_downstream_xml = true;
#------------------------------------------------------------------------------#
# quiet_command by LostRanger, modded a bit by Xanlin
#------------------------------------------------------------------------------#
@script_name = script.name;
def self.anon_hook(prefix = '');now = Time.now;"#{@script_name}::#{prefix}-#{now.tv_sec}.#{now.tv_usec}-#{Random.rand(10000)}";end;
def self.cleanup; [DownstreamHook, UpstreamHook].each{|provider| provider.list.find_all{|name| name.start_with?("#{@script_name}::")}.each{|name| provider.remove(name)};  };end;
def self.quiet_command(command, start_pattern, quiet = true, end_pattern = /^(?:<popBold\/>)?<prompt/, include_end = true, timeout=5)result = [];name   = self.anon_hook;filter = false;begin;Timeout::timeout(timeout, Interrupt) {DownstreamHook.add(name, proc {|xml|if filter;if xml =~ end_pattern;DownstreamHook.remove(name);filter = false;else;next(nil) if quiet;xml if !quiet;end;elsif xml =~ start_pattern;filter = true;next(nil) if quiet;xml if !quiet;else;next(nil) if xml.strip.length == 0;xml;end;});fput command;until (xml = get) =~ start_pattern; end;result << xml.rstrip;until (xml = get) =~ end_pattern;result << xml.rstrip;end;if include_end;result << xml.rstrip;end;};rescue Interrupt;DownstreamHook.remove(name);nil;end;return result;end;
#------------------------------------------------------------------------------#
# get list of containers, put them into array @containers, for each, add setting
#------------------------------------------------------------------------------#
@debug = true;
@quiet = false;
@container_list_pattern = /<a exist="(?<id>\d+)" noun="(?<noun>[^"]+)">(?<name>[^<]+)</;
@containers = [];
#------------------------------------------------------------------------------#
# calling quiet_command to get the "inventory container" output
#------------------------------------------------------------------------------#
command       = "inventory container";
start_pattern = /^You are wearing|^You are holding/;
quiet         = @quiet;
end_pattern   = /^(<popBold\/>)?<prompt/;
include_end   = false;
timeout       = 5;
data          =  quiet_command(command, start_pattern, quiet, end_pattern, include_end, timeout);
data.join("\n").split(",").each { |d| 
  m = @container_list_pattern.match(d);
  if m;
    @containers.push(m[:name]);
  end;
};
echo "@containers: #{@containers}" if @debug;
@containers.each_with_index { |c,i|
  ordinal = "";
  ordinal = i + 1 if i > 0;
  set = "set jarsack#{ordinal}=#{c}";
  echo set if @debug;
  Script.run('vars',set);
};
#------------------------------------------------------------------------------#