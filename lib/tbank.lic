=begin
  Script that tracks silvers and bounty points gained throughout each day
  
  Usage: Run script, it idles in background tracking deposits / withdraws and BP gains
         It appends to the verb bank account to show your gains for the day.
         Resets daily at midnight.
         For stats while running do ;force tbank stats

        author: elanthia-online
  contributors: Dantax, Tysong
          game: Gemstone
          name: tbank
          tags: bank, loot cap, silver
       version: 1.0.1

  Version Control:
    Major_change.feature_addition.bugfix

  v1.0.1 (2022-08-08)
    Added HW note detection.

  v1.0.0 (2022-05-31)
    Initial release - port of script from Dantax
    Converted to using CharSettings (need to migrate to json/yaml/sequel)
  
=end

if script.vars[1] =~ /reset/i
  CharSettings['bank_history'] = nil
  CharSettings['bounty_history'] = nil
  exit
end

time = Time.new
CharSettings['bank_history'] = Hash.new if CharSettings['bank_history'].nil?
CharSettings['bounty_history'] = Hash.new if CharSettings['bounty_history'].nil?

if CharSettings['bank_history'][Time.now.to_date.to_s].nil?
  CharSettings['bank_history'][Time.now.to_date.to_s] = 0
  CharSettings['bounty_history'][Time.now.to_date.to_s] = 0
end

bank_regex = Regexp.union(
  /Very well, a withdrawal of ([\d,]+) silver/,
  /That's a total of ([\d,]+) silver/,
  /That's ([\d,]+) (?:silver|silvers) to your account/,
  /scrip for ([\d,]+) silvers, with a ([\d,]+) silver fee for the scrip/,
  /I have a bill of ([\d,]+) silvers presented by your creditors/,
  /teller carefully records the transaction, (?:and then )?hands you ([\d,]+) silver/,
  /You deposit ([\d,]+) (?:silver|silvers) into your account/,
  /You deposit your (?:note|scrip|chit) worth ([\d,]+) into your account/,
  /teller scribbles the transaction into a book and hands you ([\d,]+) (?:silver|silvers)/,
  /You hand your notes to the teller, who glances over each one and scribbles the amounts in a book.  She says, "They add up to ([\d,]+) (?:silver|silvers)/,
  /You hand over your notes to the teller, who nods, carefully recording each amount.  She says, "That's a total of ([\d,]+) (?:silver|silvers)/,
)


if script.vars[1] =~ /stats/i
  current_month = 0
  old_month = Hash.new
  previous_year = 0
  previous_month = 0
  total_months = 0
  respond "--------------------------"
  CharSettings['bank_history'].sort.each { |b|
    if DateTime.parse(b[0]) < DateTime.parse("#{Time.now.year}-#{Time.now.month}-#{1}")
      year_month = "#{DateTime.parse(b[0]).year}-#{DateTime.parse(b[0]).month.to_s.rjust(2, "0")}"
      if old_month.empty?
        old_month[year_month] = 0
      end
      if year_month == "#{DateTime.parse(b[0]).year}-#{DateTime.parse(b[0]).month.to_s.rjust(2, "0")}"
        old_month[year_month] += b[1]
        total_months += b[1]
      end
    end
  }

  unless old_month.empty?
    respond "Previous Month Totals"
    old_month.each { |p|
      respond "#{p[0]} Total:  #{p[1].to_s.reverse.scan(/.{1,3}/).join(',').reverse}" if p[1] > 0
    }  
    respond "--------------------------"
  end
  respond "Current Month Totals"
  CharSettings['bank_history'].sort.each { |b|
    unless DateTime.parse(b[0]) < DateTime.parse("#{Time.now.year}-#{Time.now.month}-#{1}")
      respond "#{b[0]}:     #{b[1].to_s.reverse.scan(/.{1,3}/).join(',').reverse}" if b[1] > 0
      current_month += b[1]
    end
  }
  respond "#{Time.now.year}-#{Time.now.month.to_s.rjust(2, "0")} Total:  #{current_month.to_s.reverse.scan(/.{1,3}/).join(',').reverse}"
  respond "--------------------------"
  respond "Combined Total: #{(current_month+total_months).to_s.reverse.scan(/.{1,3}/).join(',').reverse}"
  respond "--------------------------"
  respond ""
  exit
end

while line = get
  if line =~ bank_regex
    withdraws = $1.delete(',').to_i + $4.delete(',').to_i + $5.delete(',').to_i + $6.delete(',').to_i + $7.delete(',').to_i + $10.delete(',').to_i
    deposits = $2.delete(',').to_i + $3.delete(',').to_i + $8.delete(',').to_i + $9.delete(',').to_i + $11.delete(',').to_i

    if withdraws != 0
      echo "Recorded withdrawal of: #{withdraws}"
    end

    if deposits != 0
      echo "Recorded deposits of: #{deposits}"
    end

    CharSettings['bank_history'][Time.now.to_date.to_s] += deposits - withdraws
    echo "New balance for the day: #{CharSettings['bank_history'][Time.now.to_date.to_s]}"

  elsif line =~ /\[You have earned ([\d,]+) bounty points/
    CharSettings['bounty_history'][Time.now.to_date.to_s] += $1.delete(',').to_i
    echo "Bounty points for the day: #{CharSettings['bounty_history'][Time.now.to_date.to_s]} [Worth about #{CharSettings['bounty_history'][Time.now.to_date.to_s] * 25} silvers"

  elsif line =~ /inter-town bank transfer options? available/
    respond "Silvers gained for the day: #{CharSettings['bank_history'][Time.now.to_date.to_s]}", "Bounty points for the day: #{CharSettings['bounty_history'][Time.now.to_date.to_s]} [Worth about #{CharSettings['bounty_history'][Time.now.to_date.to_s] * 25} silvers]"
    respond ""
    respond "Total: #{CharSettings['bank_history'][Time.now.to_date.to_s] + CharSettings['bounty_history'][Time.now.to_date.to_s] * 25} silvers"
    respond ""
  end
  
end