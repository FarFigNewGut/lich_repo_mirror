=begin

Combines moonshard pieces until you complete the moon or you run out of pieces to combine.
Doesn't combine pieces for Makiri, because its super rare

Checks your lootsack for shards so ;var set lootsack=NameGoesHere

Just start the script with the name of the moon or what number moon you want to combine for
Liabo - 1
Lornon - 2
Tilaok - 3

# Name: MoonshardBundle
# Author: Hazado
# Categories: Utility
# Tags: Duskruin
# Version: 1.00
=end

if script.vars[0] =~ /Liabo|1|one/i
	fput "stow all"
	while true
		if GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /unstable white sphere/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /thin platinum strip/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /unstable white sphere/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /thin platinum strip/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		elsif GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /irregular white cluster/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /white dreamstone sliver/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /irregular white cluster/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /white dreamstone sliver/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		elsif GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /jagged white sunstone shard/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /broken white opal sphere/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /jagged white sunstone shard/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /broken white opal sphere/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		else
			exit
		end
	end
elsif script.vars[0] =~ /Lornon|2|two/i
	fput "stow all"
	while true
		if GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /unstable dark grey sphere/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /thin iron strip/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /unstable dark grey sphere/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /thin iron strip/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		elsif GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /irregular dark grey cluster/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /coarse grey moonstone shard/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /irregular dark grey cluster/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /coarse grey moonstone shard/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		elsif GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /black opal fragment/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /blood red garnet chunk/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /black opal fragment/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /blood red garnet chunk/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		else
			exit
		end
	end
elsif script.vars[0] =~ /Tilaok|3|three/i
	fput "stow all"
	while true
		if GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /unstable fire-hued sphere/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /thin kakore strip/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /unstable fire-hued sphere/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /thin kakore strip/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		elsif GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /irregular fire-hued cluster/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /splintered fire agate shard/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /irregular fire-hued cluster/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /splintered fire agate shard/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		elsif GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /cracked ur-barath stone/} && GameObj[Vars.lootsack].contents.any? {|s| s.name =~ /broken fire opal chunk/}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /cracked ur-barath stone/;fput "get ##{s.id}";break;end;}
			GameObj[Vars.lootsack].contents.each {|s| if s.name =~ /broken fire opal chunk/;multifput "get ##{s.id}","bundle","bundle";break;end;}
			fput "stow all"
		else
			exit
		end
	end
end