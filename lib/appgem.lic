#a script to appraise your gems if they are in a full 50 count jar.
#feel free to change all instances of 50 to 20 so it will look in 20 count jars
# expects 3 containers, but you can use the same container multiple times, if interested

if script.vars[1] && script.vars[2] && script.vars[3]
    @container = script.vars[1]
    @container2 = script.vars[2]
    @container3 = script.vars[3]
else
    echo("Set the container variables - need three: ;appgem (container1) (container2) (container3)")
    exit
end
 
fput"put stow ##{GameObj.right_hand.id}" if GameObj.right_hand.id
fput"put stow ##{GameObj.left_hand.id}" if GameObj.left_hand.id
fput"look in my #{@container}"
 
GameObj[@container].contents.each{|i|
    if i.name =~ /jar|beaker|bottle/ && i.type =~ /jar/
        fput"get ##{i.id}"
        wait_until{GameObj.right_hand.id}
        fput "look in ##{GameObj.right_hand.id}"
        result = waitfor "50 portions", "empty", "nothing", "half", "fairly", "nearly", "becoming"
        if(result =~ /50 portions/)
            50.times{
                fput "shake ##{GameObj.right_hand.id}"
                wait_until{GameObj.left_hand.id}
                @gem = #{GameObj.left_hand.noun}
                fput "appraise ##{GameObj.left_hand.id}"
                fput "put ##{GameObj.left_hand.id} in #{@container2}"
            }
            50.times{
                fput "get #{@gem} from #{@container2}"
                fput "put #{@gem} in ##{GameObj.right_hand.id}"
            }
            fput "put ##{GameObj.right_hand.id} in #{@container3}"
        else
            fput "put ##{GameObj.right_hand.id} in #{@container3}"
        end
    end
}