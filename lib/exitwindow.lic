=begin
  This script creates a dedicated window to display room exit information in real time.
  Features:
  - Continuously updates with the current rooms exits.
  - Displays clickable exits for navigation.
  - Uses consistent window formatting.

author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, paths, navigation 

=end

hide_me

# Open the room info window using Wrayth's dynamic dialog.
puts("<closeDialog id='Exits'/><openDialog type='dynamic' id='Exits' title='Exits' target='Exits' scroll='manual' location='main' justify='3' height='100' width='100' resident='true'><dialogData id='Exits'></dialogData></openDialog>")

@last_room_id = nil

# Build and push the room exit list to the window.
def push_room_info_to_window(room_exits)
  output = "<dialogData id='Exits' clear='t'>"
#  if room_exits.empty?
#    output += "<label id='none' value='No Obvious Exits' justify='center' top='5' left='0' align='center' />"
#  else
    output += "<label id='total' value='Exits: #{room_exits.size}' />"
    room_exits.each_with_index do |exit, index|
      output += "<link id='room_exit_#{index}' value='#{exit}' cmd='go #{exit.downcase}' echo='go #{exit.downcase}' justify='bottom' left='0' top='#{20 * (index + 1)}' />"
    end
#  end
  output += "</dialogData>"
  puts(output)
end

# Extract exits from the room's paths.
def extract_exits_from_paths(paths)
  room_exits = []
  paths.each do |path|
    if path =~ /Obvious (?:paths|exits):\s*(.*)/i
      exits = $1.strip.split(/,\s*/).map(&:capitalize)
      room_exits.concat(exits)
    end
  end
  room_exits
end

def update_room_info
  room_exits = extract_exits_from_paths(Room.current.paths)
  push_room_info_to_window(room_exits)
end

# Main update loop.
loop do
  if @last_room_id != Room.current.id
    update_room_info
    @last_room_id = Room.current.id
  end
  sleep 0.025
end

echo "Dedicated Room Info Window is active."
