=begin
  This script creates a dedicated window to display room exit information in real time.
  Features:
  - Continuously updates with the current room's exits.
  - Displays clickable exits for both standard and Lich exits.
  - Uses consistent window formatting.
  - Supports `;go2` navigation for Lich exits.
  - Added meta tag trash containers.

author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, paths, navigation 

=end

hide_me

# Extract trash container using the meta tag method
def extract_trash_containers
  if (match = Room.current.tags.find { |t| t =~ /meta:trashcan:(.*)/ })
    [Regexp.last_match(1)]  # Extracts the trashcan name
  else
    []
  end
end

# Push exit and trash container data to the ExitWindow
def push_room_info_to_window(standard_exits, lich_exits, trash_containers)
  output = "<dialogData id='Exits' clear='t'>"

  # Standard exits
  if standard_exits.any?
    output += "<label id='total' value='Exits: #{standard_exits.size}' left='0' top='0' />"
    
    standard_exits.each_with_index do |exit, index|
      output += "<link id='room_exit_#{index}' value='#{exit}' cmd='go #{exit.downcase}' echo='go #{exit.downcase}' left='0' top='#{18 * (index + 1)}' />"
    end
  end

  # Dynamically position Lich exits AFTER all standard exits
  lich_exits_start = 23 * (standard_exits.size + 1)

  # Lich exits header
  if lich_exits.any?
    output += "<label id='lich_exits' value='Lich Exits: #{lich_exits.size}' left='0' top='#{lich_exits_start}' />"
    base_top = lich_exits_start + 20

    lich_exits.each_with_index do |lich_exit, index|
      output += "<link id='lich_exit_#{index}' value='#{lich_exit[:cmd]}' cmd='#{lich_exit[:cmd]}' echo='#{lich_exit[:cmd]}' left='0' top='#{base_top}' font='normal' />"
      base_top += 18
    end
  end

  # Dynamically position Trash Containers AFTER all exits
  trash_containers_start = lich_exits_start + (lich_exits.any? ? (20 * (lich_exits.size + 1)) : 0)

  if trash_containers.any?
    output += "<label id='trash_containers' value='Trash Containers: #{trash_containers.size}' left='0' top='#{trash_containers_start}' />"
    base_top = trash_containers_start + 20

    trash_containers.each_with_index do |trash, index|
      output += "<label id='trash_#{index}' value='#{trash}' left='0' top='#{base_top}' font='small' />"
      base_top += 18
    end
  end

  output += "</dialogData>"
  puts(output)
end

# Update room exit and trash container information
def update_room_info
  standard_exits = extract_exits_from_paths(Room.current.paths)
  lich_exits = extract_lich_exits(Room.current.id)
  trash_containers = extract_trash_containers

  push_room_info_to_window(standard_exits, lich_exits, trash_containers)
end

# Main update loop
loop do
  if @last_room_id != Room.current.id
    update_room_info
    @last_room_id = Room.current.id
  end
  sleep 0.025
end

echo "Dedicated Room Info Window is active."

