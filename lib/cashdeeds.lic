=begin

cashdeeds.lic
usage   ;cashdeeds
        ;cashdeeds 3

    author: Gwrawr (stayrange)
        name: cashdeeds
        tags: deeds, silvers, deed, coins
        version: 1.1
=end

getFavor = proc { |costs, i|
    fput "go tapestry"
    fput "ring chime with mallet"
    fput "ring chime with mallet"
    fput "kneel"
    fput "drop #{costs[i-1]} silvers"
    fput "ring chime with mallet"
    fput "out"
}


map = { "landing" => [400, 4044] }
city = "landing"


if variable[1]
    times = variable[1].to_i
	if times > 10
        echo "Not so fast moneybags"
        exit
    elsif times < 1
        echo "..."
        exit
    end
else
    times = 1
end

deeds = 0
fput "exp"
loop do
    line = get
    if line =~ /Deeds: (?<deeds>\d*)/
        deeds = $~[:deeds].to_i
        break
    end
end

cost = 0
costs = []
total = 0
i = 0
while i < times
    echo "deeds is #{deeds}"
    cost = ((Stats.level * 100) + ((deeds+i) * (Math.sqrt((deeds+i)*(9.0/10)) * 100))).to_i
    costs << cost
    total = total + cost
    i = i + 1
end

echo
echo "You currently have #{deeds} deeds."
echo "Total Cost For One Deed in Coin: #{cost}"
echo "Total Cost For All Deeds in Coin: #{total}"
echo "Total Breakdown of Costs: #{costs}" 
echo "Proceed? (Yes or No)"

echo
toggle_upstream
loop do
    line = upstream_get
    echo line
    case line
        when /Y|y/
            toggle_upstream
            break
        when /N|n/
            toggle_upstream
            exit
    end
end

start_script 'go2', [ "bank" ]
wait_while{running?('go2')}
if Room.current.id == map[city][0]
    fput "withdraw #{total} coin"
end
pause
start_script 'go2', [ "4044" ]
wait_while{running?('go2')}

if Room.current.id == map[city][1]
    i = 0
    while i < times
        getFavor.call(costs, i)
        i = i + 1
    end
end
