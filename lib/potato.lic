=begin
	# Author: Tsalinx
	# Categories: utility
	# Tags: potato, quee, utility
	# Version: 0.2

Treat your potato right. Run potato.lic at least twice a day!

- It will check your potato's status and try to do whatever it demands.
- Requires betazzherb.lic to find herbs for you.
- Bury: the location list is based on proximity to WL
- Bury: locations are still being found; those that aren't very convenient for WL are currently disabled but will suggest a room number
- Bury: if you don't want the script to do this part, you can set it to false in the UserVars

Send feedback to jeffee83 on Discord!

  v0.2 (2023-10-29)
    -Switched to UserVars so users don't have to edit their variables in the script
  v0.1 (2023-10-29)
    -Initial Release
=end

parched = false
bored = false
famished = false
playloc = nil

	UserVars.Potato ||= {}
	UserVars.Potato[:drinknoun] = nil if UserVars.Potato[:drinknoun].nil?
	UserVars.Potato[:food] = nil if UserVars.Potato[:food].nil?
	UserVars.Potato[:foodnoun] = nil if UserVars.Potato[:foodnoun].nil?
	UserVars.Potato[:potatosack] = nil if UserVars.Potato[:potatosack].nil?
	UserVars.Potato[:buryit] = true if UserVars.Potato[:buryit].nil?

if UserVars.Potato[:drinknoun].nil? || UserVars.Potato[:food].nil? || UserVars.Potato[:foodnoun].nil? || script.vars[1] =~ /help|setup/
	respond 'Please set up your variables by entering these commands below (just edit the last part)!

;e echo UserVars.Potato[:drinknoun] = "coffee"  <--- change to the noun for your preferred potato drink
;e echo UserVars.Potato[:food] = "stalk of celery"  <--- full name of herb as required by betazzherb.lic
;e echo UserVars.Potato[:foodnoun] = "celery"  <--- just the noun here
;e echo UserVars.Potato[:potatosack] = "cloak"  <--- change this to your potato container OR leave it blank to WEAR your potato instead
;e echo UserVars.Potato[:buryit] = false  <--- set this to false if you do not want the script to PLAY with your potato for you
	'
	exit
end

getpotato = proc {
	fput "remove my potato"
	fput "get my potato"
}

stowpotato = proc {
	if UserVars.Potato[:potatosack].nil?
		fput "wear my potato"
	else
		fput "put my potato in my UserVars.Potato[:potatosack]"
	end
}

playtime = proc {
	starting_room_id = Room.current.id
	waitrt?
	fput "stow all"
	fput "gird"
	Script.run("go2", "#{playloc}")
	fput "stow all"
	fput "get my potato"
	fput "bury my potato"
	sleep 5
	waitrt?
	stowpotato.call
	fput "gird"
	Script.run("go2", "#{starting_room_id}")
	fput "stow all"
}

fput "stow all"
getpotato.call
fput "look my potato"
potato = matchwait("bumpy little body")
if potato =~ /overjoyed/
	getpotato.call
	fput "infuse my potato"
	stowpotato.call
	echo "Your potato is as happy as it's gonna get!"
	exit
end
if potato =~ /looks parched/
	parched = true
end
if potato =~ /looks bored/
	bored = true
end
if potato =~ /looks famished/
	famished = true
end
if bored == false && UserVars.Potato[:buryit] == true
	fput "listen my potato"
	listening = matchwait("to your ear and hear the faint whisper")
	if listening =~ /I still want to play/
	bored = true
	end
	sleep 2
	waitrt?
end
	
if parched == false && bored == false && famished == false
	fput "infuse my potato"
	stowpotato.call
	fput "look my potato"
	echo "Your potato doesn't demand your attention...for now."
	exit
end

fput "infuse my potato"

if famished == true
	Script.run("betazzherb", "#{UserVars.Potato[:food]} 1")
	fput "get #{UserVars.Potato[:foodnoun]}"
	fput "feed my potato"
	sleep 2
end

if parched == false && bored == false
	waitrt?
	stowpotato.call
	fput "look my potato"
	echo "Your potato has been satisfied...for now."
	exit
end

if parched == true
	waitrt?
	fput "get my #{UserVars.Potato[:drinknoun]}"
	fput "pour my #{UserVars.Potato[:drinknoun]} in my potato"
	sleep 2
	waitrt?
	fput "stow my #{UserVars.Potato[:drinknoun]}"
end

if bored == false
	waitrt?
	stowpotato.call
	fput "look my potato"
	echo "Your potato has been satisfied...for now."
	exit
else
	waitrt?
	if listening =~ /arid and temperate/
		playloc = "1106"
		echo "The locksmehr trail (1106) is beyond my scope!"
		exit
	elsif listening =~ /arid/
		playloc = "7905"
	elsif listening =~ /barren/
		playloc = "5101"
		echo "we can find a place closer than Solhaven (5101), right?"
		exit
	elsif listening =~ /cave/
		playloc = "6395"
	elsif listening =~ /cold and damp/
		playloc = "5369"
		echo "we can find a place closer than Solhaven (5369), right?"
		exit
	elsif listening =~ /beach/
		playloc = "3863"
	elsif listening =~ /cold and dry/
		playloc = "2573"
	elsif listening =~ /coniferous/
		playloc = "14878"
	elsif listening =~ /deciduous/
		playloc = "1217"
	elsif listening =~ /dirt/
		playloc = "6798"
	elsif listening =~ /fresh water/
		playloc = "6706"
	elsif listening =~ /garden/
		playloc = "288"
	elsif listening =~ /grassy/
		playloc = "1418"
		echo "we can find a place closer than Solhaven (1418), right?"
		exit
	elsif listening =~ /hill/
		playloc = "1293"
	elsif listening =~ /hot and damp/
		playloc = "1224"
		echo "we can find a place closer than Vipershroud (1224), right?"
		exit
	elsif listening =~ /humid/
		playloc = "4190"
	elsif listening =~ /icy/
		playloc = "2558"
	elsif listening =~ /jungle/
		playloc = "16279"
		echo "I'll let you take him to RR!"
		exit
	elsif listening =~ /mountain/
		playloc = "2559"
	elsif listening =~ /rough/
		playloc = "495"
	elsif listening =~ /salt water/
		playloc = "5101"
		echo "don't make me pay for a boat ride on FWI (5101)..."
		exit
	elsif listening =~ /sand/
		playloc = "413"
	elsif listening =~ /snowy/
		playloc = "2557"
		echo "we can find a place closer than the Icemule Trail (2557), right?"
		exit
	elsif listening =~ /temperate/
		playloc = "420"
	elsif listening =~ /wet/
		playloc = "1286"
	end
	if UserVars.Potato[:buryit] == false
		echo "Your potato wants to be played with but you told me not to do that for you. Here's the best room number I know for that location: #{playloc}. Bye!"
		stowpotato.call
		fput "look my potato"
		exit
	else
		playtime.call
	end
	stowpotato.call
	fput "look my potato"
	echo "Your potato has been satisfied...for now."
end

#The potato appears to be alive, having two eyes and a mouth on its bumpy little body.  Its skin taking on an amber hue and it appears it was last fed a wild carrot.  The potato looks full of energy and indifferent.  It looks #parched.  It looks famished.  Quee has awarded you 1,000 experience over the course of your friendship.  Blue fire radiates from the potato.