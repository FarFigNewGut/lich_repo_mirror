=begin
	# Author: Tsalinx
	# Categories: utility
	# Tags: potato, quee, utility
	# Version: 0.6

Treat your potato right. Run potato.lic at least twice a day!

- This script can now handle new (puzzle in progress) potatoes and old needy potatoes (puzzle completed).
- It will check your potato's status and try to do whatever it demands (infuse/feed/drink/play).
- Puzzle-not-completed-potatoes do not give a status so it will just try to do whatever the current puzzle step requires.
- You can set UserVars in game to tell it what to give your potato to drink and what to forage/feed it.
- Requires betazzherb.lic and/or foreach.lic to handle your potato food.
- BURY:
    - the location list is based on proximity to WL
    - locations are still being found; those that aren't very convenient for WL are currently disabled but will suggest a room number
    - if you don't want the script to do this part, you can set it to false in the UserVars
    - please note: this script will stow everything, GIRD, and then take you out into the wilds to play! Be alert!

Send feedback to jeffee83 on Discord!
  v0.6 (2023-11-08)
    -Will now use foreach.lic to find your food in your inventory and skip the foraging step if not needed
  v0.5 (2023-11-07)
    -Added some support for pre-puzzle-completion potatoes...in testing! Send me bugs/errors please.
  v0.4 (2023-11-05)
    -Added new BURY locations
    -Will now cast 213/1011 before BURY
    -Bug fixes, improvements
  v0.3 (2023-10-31)
    -Now recognizes full energy, full happiness, or both and acts accordingly
  v0.2 (2023-10-29)
    -Switched to UserVars so users don't have to edit their variables in the script
  v0.1 (2023-10-29)
    -Initial Release
=end

parched = false
bored = false
famished = false
playloc = nil
playloc2 = nil
listening = nil

	UserVars.Potato ||= {}
	UserVars.Potato[:drinknoun] = nil if UserVars.Potato[:drinknoun].nil?
	UserVars.Potato[:food] = nil if UserVars.Potato[:food].nil?
	UserVars.Potato[:foodnoun] = nil if UserVars.Potato[:foodnoun].nil?
	UserVars.Potato[:potatosack] = nil if UserVars.Potato[:potatosack].nil?
	UserVars.Potato[:buryit] = true if UserVars.Potato[:buryit].nil?

if UserVars.Potato[:drinknoun].nil? || UserVars.Potato[:food].nil? || UserVars.Potato[:foodnoun].nil? || script.vars[1] =~ /help|setup/
	respond 'Please set up your variables by entering these commands below (just edit the last part)!
[REQUIRED]
;e echo UserVars.Potato[:drinknoun] = "coffee"  <--- change to the noun for your preferred potato drink
;e echo UserVars.Potato[:food] = "stalk of celery"  <--- full name of herb as required by betazzherb.lic
;e echo UserVars.Potato[:foodnoun] = "celery"  <--- just the noun here
[OPTIONAL]
;e echo UserVars.Potato[:potatosack] = "cloak"  <--- change this to your potato container OR leave it blank to WEAR your potato instead (wear only works for completed potatoes)
;e echo UserVars.Potato[:potatosack] = false <--- this setting will stop trying to WEAR your potato and use your potatosack instead
;e echo UserVars.Potato[:buryit] = false  <--- set this to false if you do not want the script to travel and BURY the potato for you
	'
	exit
end

getpotato = proc {
	fput "remove my potato"
	fput "get my potato"
}

stowpotato = proc {
	if UserVars.Potato[:potatosack].nil? || UserVars.Potato[:potatosack] = false
		fput "wear my potato"
	else
		fput "put my potato in my #{UserVars.Potato[:potatosack]}"
	end
}

listentothepotato = proc {
	fput "listen my potato"
	listening = matchwait("to your ear and hear the faint whisper")
	sleep 2
	waitrt?
}

playtime = proc {
	starting_room_id = Room.current.id
	fput "stow all"
	fput "gird"
	Script.run("go2", "#{playloc}")
	Spell[213].cast if Char.prof =~ /Empath|Cleric/ && Spell[213].affordable?
	Spell[1011].cast if Char.prof =~ /Bard/ && Spell[1011].affordable? && !Spell[1011].active?
	fput "renew 1011" if Char.prof =~ /Bard/ && Spell[1011].affordable? && Spell[1011].active?
	fput "stow all"
	fput "get my potato"
	fput "bury my potato"
	sleep 5
	waitrt?
	stowpotato.call
	fput "gird"
	Script.run("go2", "#{starting_room_id}")
	fput "stow all"
}
#a fresh potato The potato is just your simple root vegetable.  It looks cooked.
#initial infuse The potato is just your simple root vegetable.  It looks to have gained some vitality.  It looks cooked.
#ready for druid The potato is just your simple root vegetable....with a lifeless face.  It sounds like it's whispering something very faintly.
#after after druid The potato appears to be alive.  Its small face looks around with a blank expression.  It looks dehydrated.
#after hydration The potato appears to be alive.  Its small face looks around with a blank expression.  It looks hydrated, its skin taking on a midnight blue hue, but it is quite malnourished.
#after feeding The potato appears to be alive.  Its small face looks around with a blank expression.  It looks hydrated, its skin taking on a midnight blue hue, and full of nutrients, but quite bored.
#complete: The potato appears to be alive, having two eyes and a mouth on its bumpy little body.  Its skin taking on an amber hue and it appears it was last fed a wild carrot.  The potato has been infused one time and looks indifferent.  It looks parched.  Quee has awarded you 2,000 experience over the course of your friendship.  Blue fire radiates from the potato.
fput "stow all"
getpotato.call
fput "infuse my potato"
fput "look my potato"
potato = matchwait("simple root vegetable","potato appears to be alive")
if potato =~ /lifeless face/
	stowpotato.call
	echo "Your potato is ready for the druid! You need to take it to 27088 (East of the spine) and PRAY to it"
	exit
end
if potato =~ /simple root vegetable/
	stowpotato.call
	echo "You need to INFUSE the potato every 15 hours until it's full - then you can bring it to the druid to start the next step!"
	exit
end
if potato =~ /overjoyed/ && potato =~ /potato looks full of energy/
	stowpotato.call
	echo "Your potato is fully happy and infused - time to PET it to get your 500 EXP!"
	exit
end
if potato =~ /overjoyed/
	stowpotato.call
	echo "Your potato is as happy as it's gonna get!"
	echo "(This means you've already reached 100% happiness and will get the full 500 EXP from PET - you just need to keep INFUSE-ing until it's ready!)"
	exit
end
if potato =~ /looks parched|dehydrated/
	parched = true
end
if potato =~ /looks bored|quite bored/
	bored = true
end
if potato =~ /looks famished|quite malnourished/
	famished = true
end
if bored == false
	listentothepotato.call
	if listening =~ /I still want to play/
		bored = true
	end
end
	
if parched == false && bored == false && famished == false
	stowpotato.call
	echo "Your potato doesn't demand your attention...for now."
	exit
end

if famished == true
	Script.run("foreach", "first 1 q=#{UserVars.Potato[:food]} in inv;get item")
	Script.run("betazzherb", "#{UserVars.Potato[:food]} 1") unless checkright =~ /#{UserVars.Potato[:foodnoun]}/ || checkleft =~ /#{UserVars.Potato[:foodnoun]}/
	fput "get #{UserVars.Potato[:foodnoun]}" unless checkright =~ /#{UserVars.Potato[:foodnoun]}/ || checkleft =~ /#{UserVars.Potato[:foodnoun]}/
	fput "feed my potato"
	sleep 2
	waitrt?
end

if parched == false && bored == false
	stowpotato.call
	fput "look my potato"
	echo "Your potato has been satisfied...for now."
	exit
end

if parched == true
	fput "get my #{UserVars.Potato[:drinknoun]}"
	fput "pour my #{UserVars.Potato[:drinknoun]} in my potato"
	sleep 2
	waitrt?
	fput "stow my #{UserVars.Potato[:drinknoun]}"
end

if bored == false
	stowpotato.call
	fput "look my potato"
	echo "Your potato has been satisfied...for now."
	exit
else
	listentothepotato.call if listening == nil
	if listening =~ /arid and temperate/
		playloc = "1106"
		stowpotato.call
		echo "The locksmehr trail (1106) is beyond my scope! Please let me know if you find somewhere better..."
		exit
	elsif listening =~ /arid/
		playloc = "7905"
	elsif listening =~ /barren/
		playloc = "1198"
	elsif listening =~ /cave/
		playloc = "6395"
	elsif listening =~ /cold and damp/
		playloc = "503"
	elsif listening =~ /beach/
		playloc = "3863"
	elsif listening =~ /cold and dry/
		playloc = "2573"
	elsif listening =~ /coniferous/
		playloc = "14878"
	elsif listening =~ /deciduous/
		playloc = "1217"
	elsif listening =~ /dirt/
		playloc = "6798"
	elsif listening =~ /freshwater/
		playloc = "6706"
	elsif listening =~ /garden/
		playloc = "288"
	elsif listening =~ /grassland/
		playloc = "436"
	elsif listening =~ /hill/
		playloc = "1293"
	elsif listening =~ /hot and damp/
		playloc = "1224"
		stowpotato.call
		echo "I'll let you take him to Vipershroud (1224)!"
		exit
	elsif listening =~ /humid/
		playloc = "4190"
	elsif listening =~ /icy/
		playloc = "2558"
	elsif listening =~ /jungle/
		playloc = "16279(RR)"
		playloc2 = "20898(FWI)"
		stowpotato.call
		echo "I'll let you take him to RR (16279) or FWI (20898)!"
		exit
	elsif listening =~ /mountain/
		playloc = "2559"
	elsif listening =~ /rough/
		playloc = "495"
	elsif listening =~ /salt water/
		playloc = "32579"
	elsif listening =~ /sand/
		playloc = "413"
	elsif listening =~ /snowy/
		playloc = "2557"
	elsif listening =~ /temperate/
		playloc = "420"
	elsif listening =~ /wet|moist/
		playloc = "1286"
	elsif listening =~ /somewhere else later/
		#on cooldown messaging You hold your potato to your ear and hear the faint whisper, "Thanks for playing with me earlier.  I'll want to go somewhere else later."
		stowpotato.call
		echo "Your potato may be quite bored, but you have to wait at least 12 hours to play with it again!"
		exit
	else
		stowpotato.call
		echo "This play request is either new or unknown - please report it to me on Discord so I can add it!: jeffee83"
		exit
	end
	if UserVars.Potato[:buryit] == false
		stowpotato.call
		fput "look my potato"
		echo "Your potato wants to be played with but you told me not to do that for you. Here's the best room number(s) I know for that location: #{playloc} #{playloc2} Bye!"
		exit
	else
		playtime.call
	end
	stowpotato.call
	fput "look my potato"
	echo "Your potato has been satisfied...for now."
end