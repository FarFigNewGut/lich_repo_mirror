=begin
    enhdetect.lic: A script for detecting changes in current INVENTORY ENHANCIVE TOTAL output

    Useful for doing a quick detection of an item's enhancives.
      Step 1 - ;enhdetect base
      Step 2 - hold/wear item to test and ;enhdetect change

    Please see ;enhdetect help for additional informaiton.

             author: elanthia-online
       contributors: Tysong
               game: Gemstone
               tags: enhancives
            version: 1.0.0

  1.0.0 (2024-07-24)
    - initial release
=end

module EnhDetect
  require 'terminal-table'

  @inv_enh_total_regex = /(?<ability>[\w\s-]+ (?:Ranks|Bonus|Circle|Mana|Health|Spirit|Stamina|Recovery|\((?:STR|CON|DEX|AGI|DIS|AUR|LOG|INT|WIS|INF)\))):[\s]+(?<amount>\d+)\/\d+/
  @inv_enh_total_start = /(?:Spell Ranks|Stats|Skills|Resources|Self Knowledge Spells):|No enhancive item bonuses found\./
  @inv_enh_total_end = /For more details, see INVENTORY ENHANCIVE TOTALS DETAILS\.|No enhancive item bonuses found\./

  def self.get_totals
    enhancive_totals = {}
    results = Lich::Util.issue_command('inventory enhancive total', @inv_enh_total_start, @inv_enh_total_end, timeout: 3, include_end: false, silent: true, usexml: false, quiet: true)
    results.each { |result|
      if (enhancive = result.match(@inv_enh_total_regex).named_captures)
        enhancive_totals[enhancive['ability'].strip] = enhancive['amount'].to_i
      end
    }
    return enhancive_totals
  end

  def self.calc
    if CharSettings['change'] == CharSettings['base']
      echo "no difference between base and change!"
      return
    end
    table = Terminal::Table.new(:headings => ['Ability', 'Original', 'New', 'Change'])
    CharSettings['change'].each { |k, v|
      if CharSettings['base'][k].nil?
        table.add_row([k, 0, v, v])
      elsif v != CharSettings['base'][k]
        table.add_row([k, CharSettings['base'][k], v, v - CharSettings['base'][k]])
      end
    }
    respond table
  end

  def self.help
    echo "Useful for doing a quick detection of an item's enhancives."
    echo "  Step 1 - ;enhdetect base"
    echo "  Step 2 - hold/wear item to test and ;enhdetect change"
    echo ""
    echo " ;enhdetect base      - store current enhancive totals as your BASE"
    echo " ;enhdetect change    - used with a new enhancive worn/held to calculate the change from BASE"
    echo " ;enhdetect list      - show output of both BASE and CHANGE for troubleshooting"
    echo " ;enhdetect calc      - reshow difference of BASE from CHANGE"
    exit
  end

  def self.list(type: "both")
    table = Terminal::Table.new(:headings => ['Ability', 'Current'])
    if type =~ /both|base/
      table.add_row([{ :value => "Base", :colspan => 2 }])
      table.add_row(:separator)
      CharSettings['base'].each { |k, v| table.add_row([k, v]) }
      table.add_row(:separator) if type == 'both'
    end
    if type =~ /both|change/
      table.add_row([{ :value => "Change", :colspan => 2 }])
      table.add_row(:separator)
      CharSettings['change'].each { |k, v| table.add_row([k, v]) }
    end
    respond table
  end

  def self.main
    case Script.current.vars[1].downcase
    when 'base'
      CharSettings['base'] = self.get_totals
      self.list(type: "base")
    when 'change'
      CharSettings['change'] = self.get_totals
      self.calc
    when 'list'
      self.list
    when 'calc'
      self.calc
    else
      self.help
    end
  end
end

EnhDetect.main
