=begin
author: JFTActual
=end

require 'net/http'

before_dying {
    puts("<closeDialog id='MetaStone'/>")
}

Bounties = {}
BountiesA = Array.new
Buttons = [
    {
        'id' => 'AGTask',
        'value' => 'Report AG Task',
        'cmd' => ';ms atask'
    },
    {
        'id' => 'SoTask',
        'value' => 'Report Society Task',
        'cmd' => ';ms stask'
    },
    {
        'id' => 'Mind',
        'value' => 'Report Mind',
        'cmd' => ';ms mind'
    },
    {
        'id' => 'Att',
        'value' => 'Attack',
        'cmd' => 'att'
    },
    {
        'id' => 'Loot',
        'value' => 'Loot',
        'cmd' => 'loot'
    },
    {
        'id' => 'Go2AG',
        'value' => 'Go2AG',
        'cmd' => ';go2 ag'
    },
    {
        'id' => 'RemTask',
        'value' => 'RemTask',
        'cmd' => ';ms rtask'
    },
    {
        'id' => 'GetTask',
        'value' => 'GetTask',
        'cmd' => ';ms gtask'
    },
    {
        'id' => 'ShareTask',
        'value' => 'ShareTask',
        'cmd' => ';ms share'
    },
    {
        'id' => 'Go2SN',
        'value' => 'Go2SN',
        'cmd' => ';go2 sn'
    },
    {
        'id' => 'AskGUARD',
        'value' => 'AskGUARD',
        'cmd' => 'ask guard about bounty'
    },
    {
        'id' => 'Refresh',
        'value' => 'Refresh',
        'cmd' => ';ms'
    },
    {
        'id' => 'GroupHealth',
        'value' => 'GroupHealth',
        'cmd' => ';ms ghealth'
    },
    {
        'id' => 'test',
        'value' => 'test',
        'cmd' => ';ms test'
    }
]

width = 150
top = 0
puts("<closeDialog id='MetaStone'/><openDialog type='dynamic' id='MetaStone' title='MetaStone' target='MetaStone' location='main' height='1000' resident='true'><dialogData id='MetaStone'></dialogData></openDialog>")
finalstring = "<dialogData id='MetaStone' clear='t'>"
Buttons.each { |button|
    id = button['id']
    value = button['value']
    cmd = button['cmd']
    finalstring += "<cmdButton id='#{id}' value='#{value}' justify='1' anchor_top='top' cmd='#{cmd}' top='#{top}' left='1' echo='#{cmd}' tooltip='#{cmd}' width='#{width}'/>"
    top += 20
}

def post(v1)
    postData = Net::HTTP.post_form(URI.parse('http://maker.ifttt.com/trigger/test/with/key/9SUrnvqC3QzylpNUWtW6x'), {'value1'=>v1})
    # postData = Net::HTTP.post_form(URI.parse('https://gshivemind-d27c7.firebaseio.com/'), {'value1'=>'wooo'})

    puts postData.body
end

def readBounty(rawBounty,name)
    bounty = bountywidth = kill = killjustify = killheight = killwidth = bestiary = kill2 = location = locationanchortop = locationtop = height = go2 = escort = go2escort = justify = width = go2herb = go2alt = go2altwidth = bountyalt = go2bountyalt = bountyaltwidth = child = childwidth = guard2width = guard2 = bestiaryparse = gem = gem_number = nil
    bounty_task = "The healer in Wehnimer's Landing, Surtey Akrash, is working on a concoction that requires a handful of raspberries found on the old Mine Road near Wehnimer's Landing.  These samples must be in pristine condition.  You have been tasked to retrieve 7 samples."
    if rawBounty =~ /A local divinist has had visions of the child fleeing from (?:a|an) (.*?) (?:in|on|near|between|under) (?:the )?(.*?)(?:\s(near|between|under)|\.)/
        bounty = "Rescue Child Task"
        bountywidth = "189"
        kill = "Kill: "
        bestiary = "#{$1}"
        location = "Location: "
        go2 = "#{$2}"
        justify = "4"
        killjustify = "4"
        locationtop = "20"
        locationanchortop = "Task"
    elsif rawBounty =~ /^You have been tasked to retrieve (.*?) for .*\.  You can SKIN them off the corpse of (?:a|an) (.*?) or /
        bounty = "Skinning Task"
        bountywidth = "189"
        kill = "Kill: "
        bestiary = "#{$2}"
        location = "Sell #{$1}"
        justify = "0"
        width = "189"
        killjustify = "4"
        height = "40"
        locationtop = "20"
        locationanchortop = "Task"
    elsif rawBounty =~ /received orders from multiple customers requesting (?:a|an|some) (.*?)\..*?You have been tasked to retrieve (\d*) (?:more )?of them\..*?You can SELL/
        bounty = "Gem Task"
        bountywidth = "189"
        kill = "Gem: "
        gem = "#{$1}"
        location = "Sell: #{$2}"
        gem_number = "#{$2}"
        justify = "0"
        width = "189"
        killjustify = "4"
        killheight = "40"
        locationanchortop = "Task"
        #The healer in Wehnimer's Landing, Surtey Akrash, is working on a concoction that requires a handful of raspberries found on the old Mine Road near Wehnimer's Landing.  These samples must be in pristine condition.  You have been tasked to retrieve 7 samples.
    elsif rawBounty =~ /concoction that requires (?:a |an )?(.*?) found (?:in|on|near) (?:the )?(.*?)(?:\s(?:near|between|under).*\.|\.).*These samples must be in pristine condition\.\s+You have been tasked to retrieve (\d+) (?:more )?samples?\./
        bounty = "Foraging Task"
        bountywidth = "189"
        kill = "Need: #{$3}"
        go2herb = "#{$1}"
        location = "Found: "
        go2 = "#{$2}"
        justify = "4"
        killjustify = "4"
        locationanchortop = "Task"
        locationtop = "5"
        #You have been tasked to help XXX suppress bandit activity on Gyldemar Road near Ta'Illistim.  You need to kill 24 of them to complete your task.
        #You have been tasked to help XXX suppress bandit activity in the Pinefar forests near Icemule Trace.  You need to kill 9 more of them to complete your task.
    elsif rawBounty =~ /You have been tasked to.*suppress bandit activity (?:in|on|near) (?:the )?(.*?)(?: near| between| under|\.).*You need to kill (.*?) (?:more )?of them to complete your task\./
        bounty = "Bandit Task"
        bountywidth = "189"
        kill = "Kill: #{$2} Bandits"
        location = "Found: "
        go2 = "#{$1}"
        justify = "4"
        locationanchortop = "Task"
        locationtop = "20"
        #You have been tasked to help XXX rescue a missing child by suppressing Arachne priest activity in the Spider Temple near Wehnimer's Landing during the rescue attempt.  You need to kill 23 of them to complete your task.
    elsif rawBounty =~ /You have been tasked to.*suppress(?:ing)? (.*?) activity (?:in|on|near) (?:the )?(.*?)(?:\s?(?:near|between|under).*\.|\.).*You need to kill (\d+) (?:more )?of them to complete your task\./
        bounty = "Killing Task"
        bountywidth = "189"
        kill = "Kill: #{$3} "
        bestiary = "#{$1}"
        location = "Found: "
        justify = "4"
        go2 = "#{$2}"
        killjustify = "4"
        locationanchortop = "Task"
        locationtop = "20"
    elsif rawBounty =~ /You have been tasked to hunt down and kill a particularly dangerous (.*?) that has established a territory (?:in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under).*\.|\.).*You can/
        bounty = "Dangerous Creature Task"
        bountywidth = "189"
        kill = "Kill: "
        bestiary = "#{$1}"
        location = "Found: "
        go2 = "#{$2}"
        justify = "4"
        killjustify = "4"
        locationanchortop = "Task"
        locationtop = "20"
    elsif rawBounty =~ /You have been tasked to hunt down and kill a particularly dangerous (.*?) that has established a territory (?:in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under).*\.|\.)\s+ You have provoked/
        bounty = "Dangerous Creature Found"
        bountywidth = "189"
        kill = "Kill: "
        bestiary = "#{$1}"
        location = "Found: "
        go2 = "#{$2}"
        justify = "4"
        killjustify = "4"
        locationanchortop = "Task"
        locationtop = "20"
        #You have been tasked to recover a dragonfire emerald earring that an unfortunate citizen lost after being attacked by a greater spider in the crystal caves near Wehnimer's Landing.  The heirloom can be identified by the initials IM engraved upon it.  SEARCH the area until you find it.
        #You have been tasked to recover a topaz-studded pewter hair pin that an unfortunate citizen lost after being attacked by a mountain lion in Stone Valley near Wehnimer's Landing.  The heirloom can be identified by the initials UU engraved upon it.  SEARCH the area until you find it.
    elsif rawBounty =~ /You have been tasked to recover (.*?) that an unfortunate citizen lost after being attacked by (?:a|an) (.*?) (in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under)|\.).*The heirloom can be identified by the (.*?) engraved upon it\..*?SEARCH the area until you find it\./
        bounty = "Search for Heirloom"
        bountywidth = "189"
        kill = "Find #{$1} with #{$5}"
        kill2 = "Found near "
        bestiaryalt = "#{$2}"
        location = "Found #{$3} "
        go2 = "#{$4}"
        justify = "0"
        killjustify = "0"
        killwidth = "189"
        killheight = "30"
        locationanchortop = "Task"
        locationtop = "20"
        #You have been tasked to recover a mithril skull-tipped rod that an unfortunate citizen lost after being attacked by an Ithzir initiate in Old Ta'Faendryl.  The heirloom can be identified by the initials SM engraved upon it. Hunt down the creature and LOOT the item from its corpse.
        #You have been tasked to recover a filigreed ruby ring that an unfortunate citizen lost after being attacked by a swamp troll in the Central Caravansary between Wehnimer's Landing and Solhaven.  The heirloom can be identified by the initials FX engraved upon it.  Hunt down the creature and LOOT the item from its corpse.
    elsif rawBounty =~ /You have been tasked to recover (.*) that an unfortunate citizen lost after being attacked by (?:a|an) (.*?) (?:in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under).*\.|\.).*?The heirloom can be identified by the (.*?) engraved upon it\..*?Hunt down the creature and LOOT the item from its corpse\./
        bounty = "Loot Heirloom"
        bountywidth = "189"
        kill = "Kill: "
        bestiary = "#{$2}"
        kill2 = "Location: "
        go2alt = "#{$3}"
        location = "Loot #{$1} with #{$4}"
        justify = "0"
        height = "40"
        width = "189"
        killjustify = "4"
        locationanchortop = "Task2"
    elsif rawBounty =~ /A certain client has hired us to provide a protective escort on .* upcoming journey\..*?Go to the .* and WAIT for .* to meet you there\..*?You must guarantee .* safety to (.*) as soon as you can, being ready for any dangers that the two of you may face\./
        bounty = "Escort Task"
        bountywidth = "189"
        justify = "4"
        escortplace = $1
        escortplace = escortplace.gsub(/\'/, '&apos;')
        escort = "Escort to #{escortplace}"
        locationanchortop = "BountyName"
        locationtop = "20"
        width = "189"
    elsif rawBounty =~ /You are not currently assigned a task\./
        bountyalt = "No task currently"
        go2bountyalt = "advguild"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /You have succeeded in your task and can return to the Adventurer\'s Guild to receive your reward\./
        bountyalt = "Turn in task at AG"
        go2bountyalt = "advguild"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /It appears that a local resident urgently needs our help in some matter|It appears they have .* problem they\'d like you to solve|It appears they need your help in tracking down some kind of lost heirloom\./
        bountyalt = "Visit Guard for task"
        bountyaltwidth = "189"
        locationtop = "25"
        go2bountyalt = "advguard"
        guard2 = "Alternate location for Guard"
        guard2width = "189"
    elsif rawBounty =~ /The local furrier .* has an order to fill and wants our help\..*?Head over there and see what you can do\./
        bountyalt = "Visit Furrier for task"
        go2bountyalt = "furrier"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /The local healer, .*, has asked for our aid\..*?Head over there and see what you can do\./
        bountyalt = "Visit Healer for task"
        go2bountyalt = "npchealer"
        bountyaltwidth = "189"
        locationtop = "35"
        #Illistim version of Herbalist task
    elsif rawBounty =~ /The local herbalist.s ass.*, has asked for our aid\..*?Head over there and see what you can do\./
        bountyalt = "Visit Herbalist for task"
        go2bountyalt = "640"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /The local herbalist.*, has asked for our aid\..*?Head over there and see what you can do\./
        bountyalt = "Visit Herbalist for task"
        go2bountyalt = "herbalist"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /The local alchemist, .*, has asked for our aid\..*?Head over there and see what you can do\./
        bountyalt = "Visit Alchemist for task"
        go2bountyalt = "alchemist"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /The local gem dealer, .*, has an order to fill and wants our help\..*?Head over there and see what you can do\./
        bountyalt = "Visit Gem Dealer for task"
        go2bountyalt = "gemshop"
        bountyaltwidth = "189"
        locationtop = "35"
    elsif rawBounty =~ /You succeeded in your task and should report back to|You have located the heirloom/
        bountyalt = "Return to Guard"
        bountyaltwidth = "189"
        go2bountyalt = "advguard"
        guard2 = "Alternate location for Guard"
        guard2width = "189"
        locationtop = "25"
    elsif rawBounty =~ /You have made contact with the child/
        child = "Return Child to Guard"
        childwidth = "189"
        locationtop = "35"
    elsif rawBounty =~/The child you were tasked to rescue is gone and your task is failed\.|You have failed in your task\.  Return to the Adventurer's Guild for further instructions\./
        bountyalt = "Failed Bounty"
        go2bountyalt = "advguild"
        bountyaltwidth = "189"
        locationtop = "35"
    else
        bounty = "Unknown bounty"
        bountywidth = "189"
        kill = "Type BOUNTY and send to"
        killwidth = "189"
        location = "Hazado22@play.net"
        locationanchortop = "Task"
        width = "189"
    end
    bounty					= bounty.gsub(/'/, '&apos;')
    kill					= kill.gsub(/'/, '&apos;')
    bestiary				= bestiary.gsub(/'/, '&apos;')
    kill2					= kill2.gsub(/'/, '&apos;')
    location				= location.gsub(/'/, '&apos;')
    go2 					= go2.gsub(/'/, '&apos;')
    escort					= escort.gsub(/'/, '&apos;')
    go2escort				= go2escort.gsub(/'/, '&apos;')
    go2herb					= go2herb.gsub(/'/, '&apos;')
    go2alt					= go2alt.gsub(/'/, '&apos;')
    bountyalt				= bountyalt.gsub(/'/, '&apos;')
    go2bountyalt			= go2bountyalt.gsub(/'/, '&apos;')
    child					= child.gsub(/'/, '&apos;')
    guard2					= guard2.gsub(/'/, '&apos;')
    gem						= gem.gsub(/'/, '&apos;')
    if bestiary
        bestiaryparse = bestiary.gsub(/ /, '_')
    else
        bestiaryparse = bestiaryalt.gsub(/ /, '_')
    end
    endCap = ''
    if bounty != nil
        conciseString += name + "(" + bounty + ")\n"
    end
    if bountyalt != nil
        conciseString += bountyalt + "\n"
    end
    if guard2 != nil
        conciseString += guard2 + "\n"
    end
    if child != nil
        conciseString += child + "\n"
    end
    if kill != nil
        endCap += kill
        conciseString += kill
    end
    if gem != nil
        conciseString += gem + "\n"
    end
    if bestiary != nil
        endCap += bestiary + " | "
        conciseString += bestiary + "\n"
    end
    if bestiaryalt != nil
        conciseString += bestiaryalt + "\n"
    end
    if kill2 != nil
        endCap += kill2
        conciseString += kill2
    end
    if go2alt != nil
        endCap += go2alt
        conciseString += go2alt + "\n"
    end
    if go2escort != nil
        conciseString += go2escort + "\n"
    end
    if go2herb != nil
        endCap += " " + go2herb + "   "#+ "\n"
        conciseString += go2herb + "\n"
    end
    if location != nil
        endCap += location
        conciseString += "Desc: " + location
    end
    if escort != nil
        conciseString += escort + "\n"
    end
    if go2 != nil
        endCap += go2
        conciseString += go2 + "\n"
    end
    if(bounty.nil?)
        short = name + ' | ' + bountyalt
    else
        short = name + ' | ' + bounty + ' | ' +  endCap

    end
    return({
        'short' => short,
        'type' => bounty,
        'desc' => location,
        'raw' => conciseString
    })
end

def currentGroup
    done  = false
    group = Array.new

    action = proc { |server_string|
        if server_string.strip.length == 0
            nil
            next
        end

        if server_string =~ /^<a exist="-\d+" noun="(.*)">(?:.*)<\/a> is the leader of your group\./

            group.push($1)
            nil

        elsif server_string =~ /^<a exist="-\d+" noun="(.*)">(?:.*)<\/a> is also a member of your group\./
            group.push($1)
            nil

        elsif server_string =~ /^<a exist="-\d+" noun="(.*)">(?:.*)<\/a> is following you\./
            group.push($1.to_s)
            nil

        elsif server_string =~ /Your group status is currently/
            nil

        elsif server_string =~ /You are not currently in a group/
            nil

        elsif server_string =~ /<prompt/
            done = true
            DownstreamHook.remove('Group_hook')
            server_string

        elsif server_string =~ /GROUP HELP/
            done = true
            DownstreamHook.remove('Group_hook')
            nil

        else
            server_string
        end
    }

    DownstreamHook.add('Group_hook', action)
    silence_me unless undo_silence = silence_me
    put 'group'
    silence_me if undo_silence
    wait_until { done }
    return(group);
end

# Who's in the group
group = currentGroup()
group.push(XMLData.name)


names = [
        "Coat",
        "Raewynn",
        "Dyanae",
        "Klvothe",
        "Tservin"
    ]

def go2(room)
	waitrt?
	return if Room.current.id == room

	start_script("go2", [ "#{room}", '_disable_confirm_' ]);
	wait_while{running?("go2")}
end

# def refresh(width,top,group,finalstring)
#     group.each { |name|
#         bounty = LNet.get_data(name, 'bounty')
#         pBounty = readBounty(bounty,name)
#         id = name + "Bounty"
#         BountiesA.push(pBounty['raw'])
#         finalstring += "<label id='#{id}' style='color: red' value='#{pBounty['short']}' justify='1' anchor_top='top' top='#{top}' left='1' height='1000' width='#{width}'/>"
#         top += 70
#     }
#     respond BountiesA
# end

# sleep 1
# refresh(width,top,group,finalstring)
group.each { |name|
    bounty = LNet.get_data(name, 'bounty')
    pBounty = readBounty(bounty,name)
    id = name + "Bounty"
    BountiesA.push(pBounty['raw'])
    finalstring += "<label id='#{id}' style='color: red' value='#{pBounty['short']}' justify='1' anchor_top='top' top='#{top}' left='1' height='1000' width='#{width}'/>"
    top += 70
}
# respond BountiesA

# if (variable[1].nil?)
#     names = [
#         "Coat",
#         "Raewynn",
#         "Dyanae",
#         "Klvothe",
#         "Tservin"
#     ]
#
#     names.each { |name|
#         room = LNet.get_data(name, 'locate')
#         room_num = room_num = Map.list.find { |r| r.title.include?(room['title']) and r.desc.include?(room['description']) and r.paths.include?(room['exits']) }.id
#         room_id = room_num.to_s
#         unless room == false
#             #respond room
#             res_string = name + ': ' + room['title'] + '(' + room_id + ')'
#             respond res_string
#             #fput "say #{res_string}"
#         end
#         #(room_id or 'noid') + ' - ' + room['title']
#     }
#     respond check_mind
#     respond bounty?
#     fput "whisper group My mind feels #{check_mind}"
#     fput "whisper group #{bounty?}"
#     respond checkarea
#
#
#     #room = LNet.get_data('Raew', 'locate')
#     #room_num = room_num = Map.list.find { |r| r.title.include?(room['title']) and r.desc.include?(room['description']) and r.paths.include?(room['exits']) }.id
#     #room_id = room_num.to_s
#     #respond room_id
#     #send_to_script("lnet","locate Raew").id
#     #sleep 3
#     #respond Room.current
#
#     #respond "weee"
#
#
# end

if (variable[1])
    if(variable[1] == "drop")
        respond "It worked! #{variable[1]}"
    end
    if(variable[1] == "stask")
        fput "whisper group #{Society.task}"
        fput "whisper group My mind feels #{check_mind}"
    end
    if(variable[1] == "atask")
        fput "whisper group #{bounty?}"
        fput "whisper group My mind feels #{check_mind}"
    end
    if(variable[1] == "rtask")
        fput "ask task about remove"
        fput "ask task about remove"
    end
    if(variable[1] == "ntask")
        fput "ask task about task"
        fput "ask task about task"
        fput "whisper group Society - #{Society.task}"
        fput "whisper group Adventure - #{bounty?}"
    end
    if(variable[1] == "dgtask")
        fput "ask task about remove"
        fput "ask task about remove"
        fput "ask task about task"
    end
    if(variable[1] == "loot")
        respond GameObj.dead
        #respond GameObj.dead
    end
    if(variable[1] == "mind")
        fput "whisper group My mind feels #{check_mind}. #{XMLData.next_level_text}."
    end
    if(variable[1] == "gtask")
        fput "ask task about task"
        fput "ask task about task"
    end
    if(variable[1] == "atasks")
        fput "whisper group Adventure: #{bounty?}"
        fput "whisper group Society: #{Society.task}"
        fput "whisper group My mind feels #{check_mind}"
        send_to_script("lnet","chat :NineTwelve #{bounty?}")
        post(bounty?)
    end
    if(variable[1] == "share")
        names.each { |name|
            fput "ask task about add #{name}"
        }
      unless(variable[2].nil?)
        fput "group leader #{variable[2]}"
      end
    end
    if(variable[1] == "test")
        respond "Friends: "
        respond names
        respond ''
        respond "Group: "
        respond group
        respond ''
    end
    if(variable[1] == "ghealth")
        group.each { |name|
            unless name === XMLData.name
                health = LNet.get_data(name, 'health')
                respond "==== #{name} ===="
                respond "Health: #{health['health']}/#{health['max_health']}"#("HP: " + health['health'] + "/" + health['max_health'])
                respond "Spirit: #{health['spirit']}/#{health['max_spirit']}"#("HP: " + health['health'] + "/" + health['max_health'])
                respond "Stamina: #{health['stamina']}/#{health['max_stamina']}"#("HP: " + health['health'] + "/" + health['max_health'])
                respond ""
            end

        }
    end



end

finalstring += "</dialogData>"
puts(finalstring)

exit







#respond "Unable to find location #{variable[1]} in target list"
