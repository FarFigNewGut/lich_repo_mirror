=begin
  This script creates a dedicated window to display all signature verbs available to the player.
  Features:
  - Automatically parses the output of the SIGNATURE command.
  - Displays a clickable list of all signature verbs that provides SIGNATURE VIEW information for a preview of each verb.
  - Tags verbs that require a player target with (T).
  - Populates a dynamic Wrayth window with consistent formatting.
  - Exits automatically after the signature list is fully processed.

author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, signature, emotes

=end

no_kill_all
setpriority(-1)

puts("<closeDialog id='SignatureWindow'/><openDialog type='dynamic' id='SignatureWindow' title='Signature Verbs' target='SignatureWindow' scroll='auto' location='main' justify='3' height='300' resident='true'><dialogData id='SignatureWindow'></dialogData></openDialog>")

WINDOW_ID = 'SignatureWindow'
HOOK_ID = 'signaturewindow_hook'
CMD_QUEUE = Queue.new

@signature_verbs = {}
@current_verb = nil

# Parse game output
DownstreamHook.add(HOOK_ID, proc { |line|
  if line =~ /<d cmd="signature view ([^"]+)">([^<]+)<\/d>\s+(player|none)/i
    verb = $1.strip
    label = $2.strip
    target_type = $3.strip.downcase

    label += " (T)" if target_type == "player"

unless @signature_verbs.key?(verb)
  @signature_verbs[verb] = { label: label, description: nil, target: target_type }
  @total_verbs_expected += 1
  CMD_QUEUE.push(:update)
end

  end
  line
})


# Render window output
def render_signature_window
  output = "<dialogData id='#{WINDOW_ID}' clear='t'>"
  top = 0

  output += "<label id='header' value='Click on verb for preview.' justify='left' left='0' top='#{top}' />"
  top += 25

  @signature_verbs.keys.sort.each_with_index do |verb, i|
    info = @signature_verbs[verb]
    output += "<link id='verb_#{i}' value='#{info[:label]}' cmd='signature view #{verb}' echo='signature view #{verb}' justify='left' left='0' top='#{top}' />"
    top += 20
    if info[:description]
      desc = info[:description].gsub("'", "&apos;")
      output += "<label id='desc_#{i}' value='#{desc}' justify='left' left='10' top='#{top}' />"
      top += 20
    end
  end

  output += "</dialogData>"
  puts(output)
end

# Start with a signature command to populate
$_CLIENT.send("signature")

echo "Signature Window script active. Parsing signature verbs..."

fput "signature"

loop do
  if !CMD_QUEUE.empty?
    CMD_QUEUE.pop
    render_signature_window
  end
  break if @signature_verbs.size == @total_verbs_expected && @total_verbs_expected > 0
  sleep 0.1
end

DownstreamHook.remove(HOOK_ID)
echo "Signature Window population complete."
exit

