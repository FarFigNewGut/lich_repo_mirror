=begin

  Searches the Simucoin store or launches a Simucoin store page

  for usage info:
    ;simucoin help

   author: Lieo
     game: Gemstone
     tags: simucoin
  version: 1.2.0

  changelog:
    1.2
        - fix opening website cross platform
    1.1
        - do a better search than the Simucoin site
    1.0
        - initial release
=end

require 'net/https'
require 'uri'

class Simucoin
    def initialize(args)
        @base_url = "https://store.play.net"
        @search_url = "#{@base_url}/Store/Purchase/gs?filter=ALL"
        @visit_url = "#{@base_url}/Store/PurchaseItem"
        @script_name = 'simucoin'
        @args = args
        parse_args
    end
  
    def get_results(term)
        url = "#{@search_url}"
        uri = URI.parse(url)
        http = Net::HTTP.new(uri.host, uri.port)
        http.use_ssl = true
    
        req = Net::HTTP::Get.new(uri.request_uri)
        begin
            resp = http.request(req)
        rescue StandardError
            # Bummer
        end
        echo "There was an error searching the Simucoin store." unless resp.is_a? Net::HTTPSuccess
        parse_results(resp.body, term)
    end

    def parse_results(body, search)
        terms = search.downcase.split " "

        reg = /normal_item_name[\S\s]*?href=".+\/([0-9]+)\?gameCode=GS">(.*?)<\/a>[\S\s]*?<span style="vertical-align:middle">([0-9,]+)<\/span>/

        all = body.scan(reg).map { |r|
            { :name => r[1], :cost => r[2], :id => r[0] }
        }
        
        all.select { |r|
            terms.all? { |term| r[:name].downcase.include? term }
        }.sort_by { |r| r[:name] }
    end
  
    def print_results(results)
        if results.count > 0
            results.each { |result|
                _respond "    #{result[:name]} (#{result[:cost]}) - `;#{@script_name} launch #{result[:id]}` to buy"
            }
        else
            _respond "    Nothing found"
        end
    end
  
    def search_store
        search = @args[2..].join(" ")
        results = get_results search
        _respond "**************************"
        _respond "Searching Simucoin store for '#{search}'"
        print_results results
        _respond "**************************"
    end

    def launch_store
        id = @args[2]
        url = "#{@visit_url}/#{id}?gameCode=GS"
        if RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/
            system "start #{url}"
        elsif RbConfig::CONFIG['host_os'] =~ /darwin/
            system "open #{url}"
        elsif RbConfig::CONFIG['host_os'] =~ /linux|bsd/
            system "xdg-open #{url}"
        end
    end
  
    def parse_args
        if @args.count < 3 || @args[1].downcase == 'help'
            _respond 'usage:'
            respond "    ;#{@script_name} search <term> - Search the Simucoin store for a term"
            respond "    ;#{@script_name} launch <id> - Goes to the purchase page for that item"
            exit
        elsif @args[1].downcase == 'search'
            search_store
        elsif @args[1].downcase == 'launch'
            launch_store
        end
    end
end
  
Simucoin.new(script.vars)
