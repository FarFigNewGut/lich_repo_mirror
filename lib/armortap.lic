=begin
 
Code borrowed from ;tap and modified to adjust armor.
 
Syntax
    ;armortap help
    ;armortap armorspec <support/reinforcement/stealth/evasion/casting/fluidity>
   
Author: Genstealer w/ parts of code borrowed from Trysalis
 
=end
 
CharSettings['armorspec'] ||= 'support'
pronestatus = nil
 
if script.vars[1] =~ /^armorspec$/
    CharSettings['armorspec'] = script.vars[2]
    respond "You have specified #{CharSettings["armorspec"]} as your specialization to use when tapped"
    respond "You can change this setting by typing ;armortap armorspec <support/reinforcement/stealth/evasion/casting/fluidity>"
    respond
    exit
elsif script.vars[1] =~ /^help$/
    respond "Setup your armor adjustment by typing:  "
    respond
    respond ";#{script.name} armorspec <support/reinforcement/stealth/evasion/casting/fluidity>"
    respond
    respond "Then just run ;armortap"
    respond
    exit
end
 
REMOVEARMOR = " Your armor is already adjusted! If you would like ARMOR #{CharSettings['armorspec']}, please remove your armor and tap me again!"
 
while line = get
    if line =~ /^([A-Z][a-z]+) taps you lightly on the shoulder./
        target = $1
        pronestatus = nil
        pronestatus = "kneel" if checkkneeling
        pronestatus = "sit" if checksitting
		fput "stand" if pronestatus
        result = dothistimeout "armor #{CharSettings['armorspec']} " + target, 2, /round(time)?|already been adjusted/i
        if result =~ /round(time)?/i
            nil
        elsif result =~ /already been adjusted/
            fput "whisper " + target + REMOVEARMOR
        end
        fput "#{pronestatus}" if pronestatus
    end
end