=begin

Loots your winnings package after DR.
RECALLs the item and asks you if you want to pawn it, or not.

=end

if checkleft !~ /package/ && checkright !~ /package/
    echo "Please hold the package in one of your hands."
    exit
end

if checkleft =~ /package/
    package = GameObj.left_hand
    held_item = GameObj.right_hand.id
else
    package = GameObj.right_hand
    held_item = GameObj.left_hand.id
end

lootsack = UserVars.lootsack ? GameObj.inv.find { |i| i.name =~ /#{UserVars.lootsack}/ } : "stow"
fput "stow ##{held_item}" if held_item

stow = Proc.new { |obj|
    if obj.name =~ /bloodscrip/ && !pouch.nil?
        put "put ##{obj.id} in ##{pouch.id}" if !pouch.nil?
    else
        envelope = obj.id if obj.name =~ /envelope/
        put "stow ##{obj.id}" if lootsack == "stow"
        put "put ##{obj.id} in ##{lootsack.id}" if lootsack != stow
    end
}

fput "open ##{package.id}"
sleep 0.2
if package.contents.nil?
    fput "look in ##{package.id}"
    sleep 0.2
end

$LootedItems = []
package.contents.each{ |i|
    put "get ##{i.id}"
    fput "recall ##{i.id}"
    if Room.current.title[0] =~ /Table/
        fput "drop ##{i.id}"
    else
        fput "stow ##{i.id}"
    end

    $LootedItems.push(i)
    sleep 0.2
}

fput "drop package"

fput "get ##{held_item}" if held_item

multiple_items = $LootedItems.length > 1
if multiple_items
    puts "<pushBold\/>You may type the following in the next 60 seconds:<popBold\/>"
    $LootedItems.each_index { |i|
        respond "<pushBold\/>\"sell #{i+1}\" to sell #{$LootedItems[i].name}<popBold\/>"
    }
    puts "<pushBold\/>\"sell all\" to sell all of these at the nearest pawn<popBold\/>"
elsif $LootedItems.length == 1
    puts "<pushBold\/>You may type SELL in the next 60 seconds to sell #{$LootedItems[0].name} at the nearest pawn.<popBold\/>"
end

before_dying {
    UpstreamHook.remove("lootpackage") if UpstreamHook.list.include?("lootpackage")
}

response_seen = false
to_sell = -2  #-2 for no sell, -1 for sell all, 0 for first item, 1 for second item, and so forth
UpstreamHook.add("lootpackage", proc { |s|
    if multiple_items && s =~ /sell (\d)/i
        puts "<pushBold\/>We will sell #{$LootedItems[$1.to_i.name]}.<popBold\/>"
        puts "<pushBold\/>Kill me in within 3 seconds if you change your mind.<popBold\/>"
        sleep 4
        to_sell = $1.to_i - 1
        response_seen = true
    elsif multiple_items && s =~ /sell all/i
        puts "<pushBold\/>We will sell #{$LootedItems.map{ |i| i.name }.join(', ')}.<popBold\/>"
        puts "<pushBold\/>Kill me in within 3 seconds if you change your mind.<popBold\/>"
        sleep 4
        to_sell = -1
        response_seen = true
    elsif !multiple_items && s =~ /sell/i
        puts "<pushBold\/>We will sell #{$LootedItems[0].name}."
        puts "<pushBold\/>Kill me in within 3 seconds if you change your mind.<popBold\/>"
        sleep 4
        to_sell = 0
        response_seen = true
    else
        s
    end

})

time = 0
while time < 60 && !response_seen
    sleep 1
    time +=1 
end
UpstreamHook.remove("lootpackage") if UpstreamHook.list.include?("lootpackage")

exit if to_sell == -2

#clear hands
prev_left = GameObj.left_hand.id
prev_right = GameObj.right_hand.id
fput "stow left" unless prev_left.nil?
fput "stow right" unless prev_right.nil?

prev_room = Room.current.id
prev_duskruin = Room.current.location =~ /Duskruin|Bloodriven/
prev_duskruin_entry = -1

if to_sell >= 0
    item = $LootedItems[to_sell]
    fput "get ##{item.id}"
elsif to_sell == -1
    $LootedItems.each { |i| 
        fput "get ##{item.id}"
        fput "stow ##{item.id}"
    }
end

if prev_duskruin
    start_script 'go2', [26905]
    wait_while { running? 'go2' }
    fput "go wagon"
    sleep 2
    prev_duskruin_entry = Room.current.id
end

start_script 'go2', ['pawnshop']
wait_while { running? 'go2' }

if to_sell >= 0
    fput "sell ##{item.id}"
    sleep 3
    fput "sell ##{item.id}" if checkleft =~ /#{item.noun}/ || checkright =~ /#{item.noun}/
elsif to_sell == -1
    $LootedItems.each { |i| 
        fput "get ##{item.id}"
        fput "sell ##{item.id}"
        sleep 3
        if checkleft =~ /#{item.noun}/ || checkright =~ /#{item.noun}/
            fput "sell ##{item.id}" 
            fput "stow note"
        end
    }   
end

start_script 'go2', ['bank']
wait_while { running? 'go2' }
fput "deposit all"

if prev_duskruin
    start_script 'go2', [prev_duskruin_entry]
    wait_while { running? 'go2' }
    fput "quest transport duskruin"
    fput "quest transport duskruin"
end

start_script 'go2', [prev_room]
wait_while { running? 'go2' }

fput "get ##{prev_right}" if prev_right
fput "get ##{prev_left}" if prev_left
