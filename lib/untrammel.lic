=begin
--------------------------------------------------------------------------------
 Title : Untrammel
 Date : 08/20/2012
 Author : Oweodry

 Use :
  ;untrammel

 Details :
  Always-on script for untrammeling room webs and webbed PCs. Features
  - Casts 209, 906, 417, 119 if known (only 209 will be cast on PCs)
  - Uses untrammel dust (fine opaline dust) otherwise
  - Pauses some scripts while casting/tossing (hard-coded variables)

 Notes :
  - Requires imbedsack (for untrammel dust) ;settings add imbedsack <container>
  - Best used as a hunting script (rather than as a favorite)
  - No support or future updates are guranteed
  - My scripts: http://forum.gsplayers.com/showthread.php?73663

 Updates :
  - 08/05/2012 Released
  - 08/20/2012 Updated with more spells (copied from Subzero's webkill.lic)
  - 08/20/2012 Stowing dust (doh!), script pausing

 Thanks :
  - Subzero (see update on 08/20/2012)

--------------------------------------------------------------------------------
=end

# Imbedsack failsafe
if !Lich.imbedsack
	echo "### You must set an imbedsack first:"
	echo "###   ;settings add imbedsack <sack>"
	exit
end

# List of spells that will dispell webs
web_dispellers = [209,906,417,119]

# List of scripts you may want to pause (add whatever you like)
pause_scripts = ["fire","bigshot","bsattack","loot","perception"]

# Routine to toss untrammel dust
def toss_and_stow(untdust,roomweb)
	multifput "get ##{untdust.id}","toss ##{untdust.id} at ##{roomweb.id}"; pause 0.25
	if GameObj.right_hand.noun =~ /dust/i or GameObj.left_hand.noun =~ /dust/i
		multifput "put ##{untdust.id} in my #{Lich.imbedsack}","close my #{Lich.imbedsack}"
	end
end

loop {

	# Wait for a web to show up
	wait_until { GameObj.loot.find { |obj| obj.noun == "web" } or GameObj.pcs.find { |pc| pc.status =~ /web/i } }
	echo "###               ###"
	echo "### WEB DETECTED! ###"
	echo "###               ###"
	waitrt?; waitcastrt?

	# Pause a few scripts of interest
	Script.running.each { |script|
		if pause_scripts.include?("#{script}") or script =~ /exec/i
			pause_script(script)
		end
	}

	# Find target of web
	if roomweb = GameObj.pcs.find { |pc| pc.status =~ /web/i } then webbedpc = true
	elsif roomweb = GameObj.loot.find { |obj| obj.noun == "web" } then webbedpc = false
	else echo "### False alarm?"
	end

	# Use 209 if known and a PC is webbed
	if webbedpc and Spell[209].known? and !roomweb.nil?
		cast(209,"##{roomweb.id}"); waitweb=false
	# Use any spell if it's a room web
	elsif !webbedpc and (webspell = web_dispellers.find { |spell| Spell[spell].known? and Spell[spell].affordable? }) and !roomweb.nil?
		cast(webspell,"##{roomweb.id}");waitweb=false
	# Use untrammel dust otherwise
	elsif !roomweb.nil?
		# Find dust
		fput "open my #{Lich.imbedsack}"
		if GameObj[Lich.imbedsack].contents.nil? then fput "look in my #{Lich.imbedsack}"; end
		if untdust = GameObj[Lich.imbedsack].contents.find { |obj| obj.name =~ /fine opaline dust/i }
			waitweb=false
			# No need to stow
			if !checkright or !checkleft then toss_and_stow(untdust,roomweb)
			else
				# Stow weapon/wand/scroll if possible
				if stowitem = [GameObj.right_hand,GameObj.left_hand].find { |obj| obj.type =~ /wand|scroll|weapon/i }
					multifput "open my #{Lich.lootsack}","put ##{stowitem.id} in my #{Lich.lootsack}"
					toss_and_stow(untdust,roomweb)
					multifput "get ##{stowitem.id}","close my #{Lich.lootsack}"
				# Otherwise, empty hands
				else
					empty_hands
					toss_and_stow(untdust,roomweb)
					fill_hands
				end
			end
		# Couldn't find dust
		else echo "### No untrammel dust"; waitweb=true
		end
	# Could theoretically happen
	else echo "### Error!"
	end

	# Failsafe against looped notification
	if waitweb == true
		echo "### Unable to dispell web!"
		wait_until { !GameObj.loot.any? { |obj| obj.noun == "web" } }
	end

	# Unpause a few scripts of interest
	Script.running.each { |script|
		if pause_scripts.include?("#{script}") or script =~ /exec/i
			unpause_script(script)
		end
	}

	# Runaway protection
	pause 1

}
