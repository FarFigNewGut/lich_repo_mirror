=begin
  This script creates a dedicated window to display hazards in real time.
  Features:
  - Continuously updates with hazards found in the room.
  - Displays hazards (black voids, clouds, ghostly rifts, vines, webs) in a standardized format.
  - Automatically removes hazards that disappear.
  - Uses consistent window formatting.

author: Phocosoen, ChatGPT
tags: wrayth, frontend, mod, window, hazards, voids, rifts, clouds, vines, webs
  
=end

hide_me

# Open the hazard window using Wrayth's dynamic dialog.
puts("<closeDialog id='HazardWindow'/><openDialog type='dynamic' id='HazardWindow' title='Hazards' target='HazardWindow' scroll='manual' location='main' justify='3' height='100' resident='true'><dialogData id='HazardWindow'></dialogData></openDialog>")

@last_hazards = []

# Build and push the hazard list to the window.
def push_hazards_to_window(hazards)
  output = "<dialogData id='HazardWindow' clear='t'>"
#  if GameObj.loot.all? { |loot| loot.noun !~ /black void|cloud|mist|spiraling ghostly rift|vine|web/i }
#    output += "<label id='none' value='No Hazards' justify='center' top='5' align='center' valign='middle' />"
#  else
    output += "<label id='total' value='Hazards: #{hazards.size}' fontSize='32' />"
    hazards.each_with_index do |hazard, index|
      hazard_name = hazard.name
      output += "<label id='hazard_#{index}' value='#{hazard_name}' justify='bottom' left='0' top='#{20 * (index + 1)}' fontSize='32' />"
    end
#  end
  output += "</dialogData>"
  puts(output)
end

# Main update loop.
loop do
  current_hazards = GameObj.loot.reject { |obj| obj.noun !~ /(black void|cloud|mist|spiraling ghostly rift|vine|web)/i }
  if current_hazards != @last_hazards
    @last_hazards = current_hazards
    push_hazards_to_window(current_hazards)
  end
  sleep 0.025
end

echo "Dedicated Hazard Window is active."
