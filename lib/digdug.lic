=begin
	
	This script digs for you at DR.
	
	Commands are:
	
	;digdug - to see help menu
	;digdug dig - to dig
	;digdug sell - to sell designated items to archaeologist
	;digdug trash - to throw away designated items in the bin
	;digdug stats - to display your overall stats
	;digdug reset - to reset your overall stats
	;digdug list - to list what the items you find digging are
	
	Script will squelch almost all common lines found while digging (other people digging, finding stuff, etc), script also keeps track of how long you have been running the script for this session and in total, how many items and which items you have found, and keeps a running total with an easy to read display showing how many items left you want to find, which items you have found, time digging, etc.
	
	By defualt the script is set to sell all pendant pieces except the rare golvern segment and the four-ringed metal pendant. It only sells items when you do ;digdug sell at the archaeologist. 
	
	Also by default the script will automatically throw away all fluff items and all alter fodder items. It doesn't throw anything else away by default.
	
	These settings can be changed by opening up the script and editing these two variables:
	items_to_sell
	trash_items
	
	These variables are found near the top of the script.
	
	Read the instructions above each variable for how to set them.
	
	Download it today and get to digging!
	
	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Author: Dreaven
	Version: 2

=end

#For below: Enter the names of items you want to sell to the archaeologist, each item separated by a |
#Be sure to leave the opening (^ and ending )$
items_to_sell = /^(jagged white sunstone shard|broken white opal sphere|white dreamstone sliver|thin platinum strip|black opal fragment|blood red garnet chunk|coarse grey moonstone shard|thin iron strip|cracked ur-barath stone|broken fire opal chunk|splintered fire agate shard|thin kakore strip|carved ur-barath totem|sharp golden topaz shard)$/
#####################################################################################################################################
#For below: Enter the names of items you want to throw away, each item separated by a |
#This will automatically trash items found in boxes while you're digging or if you start script by doing ;digdug trash. This only works in the area where you're digging because it's hard coded to put items in the bin.
#Be sure to leave the opening (^ and ending )$
trash_items = /^(woven flax and linen rag|enormous gold nose ring|stamped golden coin|uncut shard of alexandrite|rigid chunk of balenite|scorched branch of fireleaf|cracked branch of glowbark|heavy iron boar hide|rough-edged branch of illthorn|fragment of forest jade|small ingot of laje|large bolt of plumille|thin bar of rhimar|thin branch of sephwir|fused pile of vaalin|small hunk of veniom|twisted branch of wyrwood)$/
#####################################################################################################################################

CharSettings['items_found_during_all_dig'] = Hash.new unless CharSettings['items_found_during_all_dig']
CharSettings['items_found'] = 0 unless CharSettings['items_found']
CharSettings['seconds_digging'] = 0 unless CharSettings['seconds_digging']
CharSettings['number_of_dig_attempts'] = 0 unless CharSettings['number_of_dig_attempts']

CharSettings['information_has_been_read'] = nil unless CharSettings['information_has_been_read']
items_found_during_this_dig = Hash.new
items_found = 0
number_of_dig_attempts= 0
display_post_stats = nil
start_time = nil

@digdig_sack = GameObj.inv.find{ |i| i.noun == UserVars.digdig_sack }
if UserVars.digdig_sack2
	@digdig_sack2 = GameObj.inv.find{ |i| i.noun == UserVars.digdig_sack2 }
	both_sacks = [ @digdig_sack, @digdig_sack2 ]
else
	both_sacks = [ @digdig_sack ]
end

silence = proc {
	action = proc { |server_string|
		if server_string.strip.length == 0
			nil
			next
		end
		if server_string =~ /To use the .*\, just DIG in the area it is intended for and you could find some buried treasure\!|The creator has also provided the following information\:|This particular .* can be used .* times before it will break\.|begins pulling at the .*\, loosening the lid that has sealed the|tries to empty the contents of|and sense that the item is largely free from merchant alteration restrictions\.|You begin to dig with your .*\, slamming into the rocky terrain\.|With the lid loosened\, .* grasps the side of .* and pries it open\, destroying the lid in the process\.|Plumes of dust continue to spew from the .*\!|digs in with .*\, hurling the rocky material aside\.|hits something hard in the rocky terrain with .*\.|pulls .* from the rocky terrain\.|lifts the lid on .* and sets .* aside\.|You put .* in your .*|You remove .* from in your .*\.|Roundtime\: \d+ sec\.|removes .* from in .*\.|put .* in .*\.|begins to dig with .*\, slamming into the rocky terrain\.|opens the lid on .*\, its hinges creaking noisily\.|digs in with .*\, hurling the rocky material aside\.|You continue to dig with your .*\, hurling the rocky material aside\.|grabs .* off of .* from inside .*.|grabs .* from inside the .*\.|just arrived\.|just went .*\.|You hit something hard in the rocky terrain with your .*\.|You reach down and pull .* from the rocky terrain\.|In the .*\:|Total items\:|You grab .* from inside the .*\.|but nothing comes out\.|As you place .* into .* you feel pleased with yourself at having cleaned up the surrounding area\.|You notice .* moving stealthily .*\.|vanishes into the depths of .*\.|.* dissolves into motes of .* light that flow .*\.|A foul\-smelling liquid oozes out from inside the .*\!|You open the lid on your .*\, its hinges creaking noisily\.|hits something hard in the rocky terrain\, causing .* to break\.  .* tosses the .* aside\.|Maggots squirm out of the .* and onto the floor\.|stalks in\, framed by a shifting\, sourceless .* glow\.|You lift the lid on your .* and set it aside\.|You don\'t see a way to open the .*\; it\'s sealed shut\.  Perhaps try to PRY it open\.|You begin pulling at the .*\, loosening the lid that has sealed the .* shut\.|With the lid loosened\, you grasp the side of the .* and pry it open\, destroying the lid in the process\.|The .* is already opened\.|Inside the .* rests the skeletal remains of .*\.  On the .* you see .*\.|You are not holding anything in your .* hand\.|just arrived\, striding along\.|opens the lid on .*\, locking the hinges in place to prop the lid up safely\.|strolls .*\, leaving a fading trail of .* footprints behind\./
			nil			
		else
			server_string
		end
	}
	DownstreamHook.add("#{script.name}_silence", action)
}


before_dying { 
	DownstreamHook.remove("#{script.name}_silence") 
	if display_post_stats
		CharSettings['seconds_digging'] += (Time.now - start_time).truncate
		digdig_display_overall_stats
	end
}

@digdig_text_to_display = Array.new

def digdig_display_message
	_respond
	longest_string = 0
	@digdig_text_to_display.each{ |i| longest_string = (i.length + 12) if (i.length + 12) > longest_string }
	header_and_border = nil
	longest_string.times{ header_and_border += "#" }
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	@digdig_text_to_display.each{ |i| 
		spaces_needed_length = longest_string - (i.length + 7)
		spaces_needed_text = nil
		spaces_needed_length.times { spaces_needed_text += " " }
		_respond "#{monsterbold_start}#     #{i}#{monsterbold_end}#{spaces_needed_text}#{monsterbold_start}##{monsterbold_end}\n"
	}
	_respond "#{monsterbold_start}#{header_and_border}#{monsterbold_end}\n"
	_respond
	@digdig_text_to_display = Array.new
end

def digdig_archaeologist_not_in_this_room
		@digdig_text_to_display.push("The archaeologist isn't in this room.")
		@digdig_text_to_display.push("He typically hangs out in these Lich rooms:")
		@digdig_text_to_display.push("26093, 26092, 24549, 24547, 24548")
		digdig_display_message
		exit
end

def digdig_display_overall_stats
	@digdig_text_to_display.push("You have been digging for a total of #{CharSettings['seconds_digging']} seconds.")
	@digdig_text_to_display.push("You have dug #{CharSettings['number_of_dig_attempts']} times and found #{CharSettings['items_found']} boxes.")
	if CharSettings['items_found'] > 0
		@digdig_text_to_display.push("You are averaging 1 box every #{(CharSettings['number_of_dig_attempts']/ CharSettings['items_found']).truncate} digs/every #{CharSettings['seconds_digging'] / CharSettings['items_found']} seconds.")
		@digdig_text_to_display.push("Items found in all digs:")
		@digdig_text_to_display.push("------------------------------")
		CharSettings['items_found_during_all_dig'].each{ |key,value| @digdig_text_to_display.push("#{key} x #{value}") }
	end
	digdig_display_message
end

def digdig_free_right_hand
	if checkright
		5.times{
			waitrt?
			fput "put ##{GameObj.right_hand.id} in ##{@digdig_sack.id}" if checkright
			break if checkright.nil?
			sleep 0.2
		}
		sleep 0.2
		if checkright && UserVars.digdig_sack2
			5.times{
				waitrt?
				fput "put ##{GameObj.right_hand.id} in ##{@digdig_sack2.id}" if checkright
				break if checkright.nil?
				sleep 0.2
			}
		end
		if checkright
			@digdig_text_to_display.push("Your sacks are full. Now exiting. Clean those sacks out and restart.")
			digdig_display_message
			exit
		end
	end
end

def digdig_free_lefthand
	if checkleft
		5.times{
			waitrt?
			fput "put ##{GameObj.left_hand.id} in ##{@digdig_sack.id}" if checkleft
			break if checkleft.nil?
			sleep 0.2
		}
		sleep 0.2
		if checkleft && UserVars.digdig_sack2
			5.times{
				waitrt?
				fput "put ##{GameObj.left_hand.id} in ##{@digdig_sack2.id}" if checkleft
				break if checkleft.nil?
				sleep 0.2
			}
		end
		if checkleft
			@digdig_text_to_display.push("Your sacks are full. Now exiting. Clean those sacks out and restart.")
			digdig_display_message
			exit
		end
	end
end

if UserVars.digdig_sack.nil?
	@digdig_text_to_display.push("You must set which container you want to store items and sell items from.")
	@digdig_text_to_display.push("Example if you set this to \"cloak\" the script will stow items in your cloak and sell items in your cloak.")
	@digdig_text_to_display.push("To set do: ;vars set digdig_sack=example")
	@digdig_text_to_display.push("\"example\" being the noun of whichever container you want.")
	@digdig_text_to_display.push("Careful if you have two containers with the same noun.")
	@digdig_text_to_display.push("You can also set an overflow cloak which will also have items stowed to and sold from.")
	@digdig_text_to_display.push("That is: ;vars set digdig_sack2=example")
	digdig_display_message
	exit
end

if UserVars.digdig_amount.nil?
	@digdig_text_to_display.push("You must set how many boxes you want to find before the script exits.")
	@digdig_text_to_display.push("To set do: ;vars set digdig_amount=50")
	@digdig_text_to_display.push("50 can be however many you want.")
	@digdig_text_to_display.push("For example if this is set to 50 then the script will automatically exit after finding 50 boxes.")
	@digdig_text_to_display.push("The script also exits if you run out of pickaxes or room in your containers")
	@digdig_text_to_display.push("So you can set this to 1000 to keep digging until eitehr of those things happen.")
	digdig_display_message
	exit
end

if CharSettings['information_has_been_read'].nil?
	CharSettings['information_has_been_read'] = true
	@digdig_text_to_display.push("By defualt the script is set to sell all pendant pieces except the rare golvern segment")
	@digdig_text_to_display.push("and the four-ringed metal pendant. It only sells items when you do ;digdug sell at the archaeologist.")
	@digdig_text_to_display.push("Also by default the script will automatically throw away all fluff items")
	@digdig_text_to_display.push("and all alter fodder items. It doesn't throw anything else away by default.")
	@digdig_text_to_display.push("These settings can be changed by opening up the script and editing these two variables:")
	@digdig_text_to_display.push("items_to_sell")
	@digdig_text_to_display.push("trash_items")
	@digdig_text_to_display.push("These variables are found near the top of the script.")
	@digdig_text_to_display.push("Read the instructions above each variable for how to set them.")
	@digdig_text_to_display.push("This is the last time you will see these instruction messages. I promise!")
	digdig_display_message
	exit
end

digdig_free_right_hand
digdig_free_lefthand
wait_until{ checkright.nil? && checkleft.nil? }

if script.vars[1] =~ /sell/i
	digdig_archaeologist_not_in_this_room if !checknpcs.include?("archaeologist")
	both_sacks.each{ |container|
		container.contents.each{ |i|
			digdig_free_right_hand
			digdig_free_lefthand
			if i.name =~ items_to_sell
				fput "get ##{i.id}"
				wait_until { checkright }
				2.times{ fput "give ##{i.id} to archaeologist" }
			end
			digdig_archaeologist_not_in_this_room if !checknpcs.include?("archaeologist")
			20.times{
				break if checkright.nil? && checkleft.nil?
				sleep 0.1
			}
		}
	}
	50.times{ echo "ALL FINISHED!" }
elsif script.vars[1] =~ /dig/i
	silence.call
	silence_me
	fput "get my pickaxe"
	sleep 1
	start_time = Time.now
	loop{
		break if checkright.nil?
		loop{
			waitrt?
			result = dothistimeout "analyze my pickaxe", 2, /This particular pickaxe can be used (\d+) times? before it will break\.|This particular pickaxe can only be used once/
			if result =~ /This particular pickaxe can be used (\d+) times? before it will break\./
				@digdig_remaining_uses_on_pickaxe = $1.to_i
				break
			elsif result =~ /This particular pickaxe can only be used once/
				@digdig_remaining_uses_on_pickaxe = 1
				break
			end
		}	
		loop{
			waitrt?
			result = dothistimeout "dig", 2, /Roundtime\:|You can\'t dig here\./
			if result =~ /Roundtime\:/
				break
			elsif result =~ /You can\'t dig here\./
				@digdig_text_to_display.push("You can't dig in this room.")
				@digdig_text_to_display.push("Do the following to get to the area where you can dig:")
				@digdig_text_to_display.push(";go2 smithy (wait until ;go2 stops), go stair, north, go tunnel")
				@digdig_text_to_display.push("Then start the script again.")
				digdig_display_message
				exit
			end
		}
		waitrt?
		sleep 0.2
		if checkleft
			items_found += 1
			CharSettings['items_found'] += 1
			waitrt?
			loop{
				waitrt?
				digdig_free_right_hand
				result = dothistimeout "open my #{checkleft}", 5, /Perhaps try to PRY it open|You (open|lift) the lid|That is already open/
				if result =~ /Perhaps try to PRY it open/
					loop{
						waitrt?
						result = dothistimeout "pry my #{checkleft}", 5, /Roundtime|is already opened/
						if result =~ /Roundtime/
							nil
						elsif result =~ /is already opened/
							break
						end
					}
					break
				elsif result =~ /You (open|lift) the lid|That is already open/
					break
				end
			}
			loop{
				waitrt?
				if checkleft =~ /coffin|casket|sarcophagus/
					fput "look in my #{checkleft}"
					while line = get
						if line =~ /On the skeleton you see an? (.* ([a-zA-Z]+))\.  The/
							waitrt?
							items_found_during_this_dig[$1] += 1
							CharSettings['items_found_during_all_dig'][$1] += 1
							fput "get #{$2} from my #{checkleft}"
							20.times{
								sleep 0.1
								break if checkright
							}
							digdig_free_right_hand
							break
						end
					end
				else
					box_container = GameObj.left_hand
					20.times{
						fput "look in ##{box_container.id}"
						break if box_container.contents
						sleep 0.1
					}
					if box_container.contents
						box_container.contents.each{ |item|
							items_found_during_this_dig[item.name] += 1
							CharSettings['items_found_during_all_dig'][item.name] += 1
							fput "get ##{item.id}"
							if item.name =~ trash_items
								fput "put ##{item.id} in bin"
							else
								20.times{
									sleep 0.1
									break if checkright
								}
								digdig_free_right_hand
							end
						}
					end
				end
				result = dothistimeout "empty my #{checkleft} into my #{UserVars.digdig_sack}", 5, /everything falls in quite nicely|but nothing comes out/
				break if result =~ /everything falls in quite nicely|but nothing comes out/
				waitrt?
				sleep 0.1
			}
			loop{
				waitrt?
				result = dothistimeout "put #{checkleft} in bin", 5, /you feel pleased with yourself/
				break if result =~ /you feel pleased with yourself/
				sleep 0.1
			}
			20.times{
				waitrt?
				fput "get my pickaxe"
				sleep 0.2
				break if checkright =~ /pickaxe/
			}
		end
		waitrt?
		sleep 0.2
		number_of_dig_attempts += 1
		CharSettings['number_of_dig_attempts'] += 1
		@digdig_text_to_display.push("Number of uses remaining on this pickaxe: #{@digdig_remaining_uses_on_pickaxe}")
		@digdig_text_to_display.push("Number of digs remaining:                 #{UserVars.digdig_amount.to_i - items_found}")
		@digdig_text_to_display.push("You have been digging for #{(Time.now - start_time).truncate} seconds.")
		@digdig_text_to_display.push("You have dug #{number_of_dig_attempts} times and found #{items_found} boxes.")
		if items_found > 0
			@digdig_text_to_display.push("You are averaging 1 box every #{(number_of_dig_attempts/ items_found).truncate} digs/every #{(Time.now - start_time).truncate / items_found} seconds.")
			@digdig_text_to_display.push("Items found this dig:")
			@digdig_text_to_display.push("------------------------------")
			items_found_during_this_dig.each{ |key,value| @digdig_text_to_display.push("#{key} x #{value}") }
		end
		digdig_display_message
		digdig_free_lefthand
		display_post_stats = true
		if items_found >= UserVars.digdig_amount.to_i
			@digdig_text_to_display.push("Found #{items_found} items! Now exiting.")
			digdig_display_message
			digdig_free_right_hand
			exit
		end
	}
elsif script.vars[1] =~ /trash/i
	both_sacks.each{ |container|
		container.contents.each{ |i|
			digdig_free_right_hand
			digdig_free_lefthand
			if i.name =~ trash_items
				fput "get ##{i.id}"
				wait_until { checkright }
				fput "put ##{i.id} in bin"
			end
		}
	}
	50.times{ echo "ALL FINISHED!" }
elsif script.vars[1] =~ /stats/i
	digdig_display_overall_stats
elsif script.vars[1] =~ /reset/i
	CharSettings['items_found_during_all_dig'] = Hash.new
	CharSettings['items_found'] = 0
	CharSettings['seconds_digging'] = 0
	CharSettings['number_of_dig_attempts'] = 0
	@digdig_text_to_display.push("Your stats have been reset.")
	digdig_display_message
elsif script.vars[1] =~ /list/i
	@digdig_text_to_display.push("VERY RARE PIECES! DO NOT THROW AWAY:")
	@digdig_text_to_display.push("reticulated crystal-edged golvern segment")
	@digdig_text_to_display.push("four-ringed metal pendant")
	@digdig_text_to_display.push("-------------------------------------------")
	@digdig_text_to_display.push("Pendant pieces. These can be given to the archaeologist for bloodscrip:")
	@digdig_text_to_display.push("jagged white sunstone shard")
	@digdig_text_to_display.push("broken white opal sphere")
	@digdig_text_to_display.push("white dreamstone sliver")
	@digdig_text_to_display.push("thin platinum strip")
	@digdig_text_to_display.push("black opal fragment")
	@digdig_text_to_display.push("blood red garnet chunk")
	@digdig_text_to_display.push("coarse grey moonstone shard")
	@digdig_text_to_display.push("thin iron strip")
	@digdig_text_to_display.push("cracked ur-barath stone")
	@digdig_text_to_display.push("broken fire opal chunk")
	@digdig_text_to_display.push("splintered fire agate shard")
	@digdig_text_to_display.push("thin kakore strip")
	@digdig_text_to_display.push("lopsided golden moonstone sphere")
	@digdig_text_to_display.push("sharp golden topaz shard")
	@digdig_text_to_display.push("golden glimaerstone nugget")
	@digdig_text_to_display.push("-------------------------------------------")
	@digdig_text_to_display.push("SimuCoins Store items:")
	@digdig_text_to_display.push("blue feather-shaped charm")
	@digdig_text_to_display.push("enruned gold ring")
	@digdig_text_to_display.push("Adventurer's Guild voucher pack")
	@digdig_text_to_display.push("-------------------------------------------")
	@digdig_text_to_display.push("Alter Fodder:")
	@digdig_text_to_display.push("uncut shard of alexandrite")
	@digdig_text_to_display.push("rigid chunk of balenite")
	@digdig_text_to_display.push("scorched branch of fireleaf")
	@digdig_text_to_display.push("cracked branch of glowbark")
	@digdig_text_to_display.push("heavy iron boar hide")
	@digdig_text_to_display.push("rough-edged branch of illthorn")
	@digdig_text_to_display.push("fragment of forest jade")
	@digdig_text_to_display.push("small ingot of laje")
	@digdig_text_to_display.push("large bolt of plumille")
	@digdig_text_to_display.push("thin bar of rhimar")
	@digdig_text_to_display.push("thin branch of sephwir")
	@digdig_text_to_display.push("fused pile of vaalin")
	@digdig_text_to_display.push("small hunk of veniom")
	@digdig_text_to_display.push("twisted branch of wyrwood")
	@digdig_text_to_display.push("-------------------------------------------")
	@digdig_text_to_display.push("Fluff:")
	@digdig_text_to_display.push("stamped golden coin")
	@digdig_text_to_display.push("enormous gold nose ring")
	@digdig_text_to_display.push("woven flax and linen rag")
	@digdig_text_to_display.push("-------------------------------------------")
	digdig_display_message
else
	@digdig_text_to_display.push("How to use script:")
	@digdig_text_to_display.push(";digdug dig - to dig")
	@digdig_text_to_display.push(";digdug sell - to sell designated items to archaeologist")
	@digdig_text_to_display.push(";digdug trash - to throw away designated items in the bin")
	@digdig_text_to_display.push(";digdug stats - to display your overall stats")
	@digdig_text_to_display.push(";digdug reset - to reset your overall stats")
	@digdig_text_to_display.push(";digdug list - to list what the items you find digging are")
	digdig_display_message
end