=begin
  It makes you a MINIBAR!
  Combines health, mana, stamina, spirit, experience, mind, stance, encumbrance and wound data into one bar!

  Wound brevity can be toggled by changing $brief_wound - This will only display highest wound severity
  Bounties can be toggled by changing $bounties

  Based on UberBar and UberBounty... heavily.

  Note: The level displayed in the title bar only updates when the game is relaunched. It's a long story...

  Find me on Discord for any issues. Thanks as always to the folx in the #scripting channel for all the help!

  author: Nesmeor
  name: minibar
  tags: utility, sidebar, stormfront
  version: 0.1.1

  Changelog:
  0.1.1 - (5/16/2021)
    - Name cleanup
  0.1.0 - (05/16/2021)
    - Added bounty functionality
  0.0.2 - (05/15/2021)
    - Performance tuning
  0.0.1 - (05/15/2021)
    - Initial version

=end

$brief_wound = false
$bounties = true

if $SAFE > 0
  echo "error: This script needs to be trusted to work. (;trust #{script.name.downcase})"
  exit
end

if $frontend != "stormfront"
  respond ""
  respond " Thank you for your interest in MiniBar"
  respond " This version is specific to the Stormfront frontend"
  respond " Closing now"
  respond ""
  exit
end

wait_while { XMLData.next_level_text !~ /(experience|until next level)/ or !XMLData.next_level_value.integer? }
''
no_kill_all
no_pause_all
hide_me
debug = false

xpnFirstTime = 0
nowTime = Time.now - 1
xpnNLT = xpnCur = xpnOld = xpnCap = xpnValue = xpnText = xpnHour = xpnLast = xpnTotal = 0
oldRM = oldHP = oldMP = oldST = oldSP = oldXP = oldMD = oldSN = oldEN = oldIN = nil
capped = false
firstpulse = true
capped = true if Char.level == 100
buffx = 3
buffy = 3
sizebx = 186
sizerx = 90
sizey = 15

def update_bounty
  bounty = bountywidth = kill = killjustify = killheight = killwidth = bestiary = kill2 = location = locationanchortop = locationtop = height = go2 = escort = go2escort = justify = width = go2herb = go2alt = go2altwidth = bountyalt = go2bountyalt = bountyaltwidth = child = childwidth = guard2width = guard2 = bestiaryparse = gem = gem_number = nil
  bounty_task = "The healer in Wehnimer's Landing, Surtey Akrash, is working on a concoction that requires a handful of raspberries found on the old Mine Road near Wehnimer's Landing.  These samples must be in pristine condition.  You have been tasked to retrieve 7 samples."
  #You have been tasked to recover a topaz-studded pewter hair pin that an unfortunate citizen lost after being attacked by a mountain lion in Stone Valley.  The heirloom can be identified by the initials UU engraved upon it.  SEARCH the area until you find it.
  #You have been tasked to rescue the young runaway daughter of a local citizen.  A local divinist has had visions of the child fleeing from a wolfshade near the Temple of Love near Wehnimer's Landing.  Find the area where the child was last seen and clear out the creatures that have been tormenting her in order to bring her out of hiding.
  if XMLData.bounty_task =~ /A local divinist has had visions of the child fleeing from (?:a|an) (.*?) (?:in|on|near|between|under) (?:the )?(.*?)(?:\s(near|between|under)|\.)/
    bounty = "Rescue Child"
    bountywidth = "189"
    kill = nil
    bestiary = "#{$1}"
    location = "Loc: "
    go2 = "#{$2}"
    justify = "4"
    killjustify = "4"
    locationtop = "20"
    locationanchortop = "Task"
  elsif XMLData.bounty_task =~ /^You have been tasked to retrieve (.*?) for .*\.  You can SKIN them off the corpse of (?:a|an) (.*?) or /
    bounty = "Skinning"
    bountywidth = "189"
    kill = nil
    bestiary = "#{$2}"
    location = "Sell #{$1}"
    justify = "0"
    width = "189"
    killjustify = "4"
    height = "40"
    locationtop = "20"
    locationanchortop = "Task"
  elsif XMLData.bounty_task =~ /received orders from multiple customers requesting (?:a|an|some) (.*?)\..*?You have been tasked to retrieve (\d*) (?:more )?of them\..*?You can SELL/
    bounty = "Gems"
    bountywidth = "189"
    kill = "Gem: "
    gem = "#{$1}"
    location = "Sell: #{$2}"
    gem_number = "#{$2}"
    justify = "0"
    width = "189"
    killjustify = "4"
    killheight = "40"
    locationanchortop = "Task"
    #The healer in Wehnimer's Landing, Surtey Akrash, is working on a concoction that requires a handful of raspberries found on the old Mine Road near Wehnimer's Landing.  These samples must be in pristine condition.  You have been tasked to retrieve 7 samples.
  elsif XMLData.bounty_task =~ /concoction that requires (?:a|an|some) (.*?) found (?:in|on|near) (?:the )?(.*?)(?:\s(?:near|between|under).*\.|\.).*These samples must be in pristine condition\.\s+You have been tasked to retrieve (\d+) (?:more )?samples?\./
    bounty = "Foraging"
    bountywidth = "189"
    kill = "Need: #{$3}"
    go2herb = "#{$1}"
    location = "Loc: "
    go2 = "#{$2}"
    justify = "4"
    killjustify = "4"
    locationanchortop = "Task"
    locationtop = "5"
    #You have been tasked to help XXX suppress bandit activity on Gyldemar Road near Ta'Illistim.  You need to kill 24 of them to complete your task.
    #You have been tasked to help XXX suppress bandit activity in the Pinefar forests near Icemule Trace.  You need to kill 9 more of them to complete your task.
  elsif XMLData.bounty_task =~ /You have been tasked to.*suppress bandit activity (?:in|on|near) (?:the )?(.*?)(?: near| between| under|\.).*You need to kill (.*?) (?:more )?of them to complete your task\./
    bounty = "Bandit"
    bountywidth = "189"
    kill = "Tgt: #{$2} Bandits"
    location = "Loc: "
    go2 = "#{$1}"
    justify = "4"
    locationanchortop = "Task"
    locationtop = "20"
    #You have been tasked to help XXX rescue a missing child by suppressing Arachne priest activity in the Spider Temple near Wehnimer's Landing during the rescue attempt.  You need to kill 23 of them to complete your task.
  elsif XMLData.bounty_task =~ /You have been tasked to.*suppress(?:ing)? (.*?) activity (?:in|on|near) (?:the )?(.*?)(?:\s?(?:near|between|under).*\.|\.).*You need to kill (\d+) (?:more )?of them to complete your task\./
    bounty = "Killing"
    bountywidth = "189"
    kill = "Tgt: #{$3} "
    bestiary = "#{$1}"
    location = "Loc: "
    justify = "4"
    go2 = "#{$2}"
    killjustify = "4"
    locationanchortop = "Task"
    locationtop = "20"
  elsif XMLData.bounty_task =~ /You have been tasked to hunt down and kill a particularly dangerous (.*?) that has established a territory (?:in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under).*\.|\.).*You can/
    bounty = "Boss Monster"
    bountywidth = "189"
    kill = nil
    bestiary = "#{$1}"
    location = "Loc: "
    go2 = "#{$2}"
    justify = "4"
    killjustify = "4"
    locationanchortop = "Task"
    locationtop = "20"
  elsif XMLData.bounty_task =~ /You have been tasked to hunt down and kill a particularly dangerous (.*?) that has established a territory (?:in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under).*\.|\.)\s+ You have provoked/
    bounty = "Boss Found"
    bountywidth = "189"
    kill = nil
    bestiary = "#{$1}"
    location = "Loc: "
    go2 = "#{$2}"
    justify = "4"
    killjustify = "4"
    locationanchortop = "Task"
    locationtop = "20"
    #You have been tasked to recover a dragonfire emerald earring that an unfortunate citizen lost after being attacked by a greater spider in the crystal caves near Wehnimer's Landing.  The heirloom can be identified by the initials IM engraved upon it.  SEARCH the area until you find it.
    #You have been tasked to recover a topaz-studded pewter hair pin that an unfortunate citizen lost after being attacked by a mountain lion in Stone Valley near Wehnimer's Landing.  The heirloom can be identified by the initials UU engraved upon it.  SEARCH the area until you find it.
  elsif XMLData.bounty_task =~ /You have been tasked to recover (.*?) that an unfortunate citizen lost after being attacked by (?:a|an) (.*?) (in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under)|\.).*The heirloom can be identified by the (.*?) engraved upon it\..*?SEARCH the area until you find it\./
    bounty = "Heirloom Search"
    bountywidth = "189"
    kill = "Find #{$1} with #{$5}"
    kill2 = "Found near "
    bestiaryalt = "#{$2}"
    location = "Found #{$3} "
    go2 = "#{$4}"
    justify = "0"
    killjustify = "0"
    killwidth = "189"
    killheight = "30"
    locationanchortop = "Task"
    locationtop = "20"
    #You have been tasked to recover a mithril skull-tipped rod that an unfortunate citizen lost after being attacked by an Ithzir initiate in Old Ta'Faendryl.  The heirloom can be identified by the initials SM engraved upon it. Hunt down the creature and LOOT the item from its corpse.
    #You have been tasked to recover a filigreed ruby ring that an unfortunate citizen lost after being attacked by a swamp troll in the Central Caravansary between Wehnimer's Landing and Solhaven.  The heirloom can be identified by the initials FX engraved upon it.  Hunt down the creature and LOOT the item from its corpse.
  elsif XMLData.bounty_task =~ /You have been tasked to recover (.*) that an unfortunate citizen lost after being attacked by (?:a|an) (.*?) (?:in|on|near) (?:the )?(.*?)(?:\s(?:in|on|near|between|under).*\.|\.).*?The heirloom can be identified by the (.*?) engraved upon it\..*?Hunt down the creature and LOOT the item from its corpse\./
    bounty = "Heirloom Loot"
    bountywidth = "189"
    kill = nil
    bestiary = "#{$2}"
    kill2 = "Located: "
    go2alt = "#{$3}"
    location = "Loot #{$1} with #{$4}"
    justify = "0"
    height = "40"
    width = "189"
    killjustify = "4"
    locationanchortop = "Task2"
  elsif XMLData.bounty_task =~ /A certain client has hired us to provide a protective escort on .* upcoming journey\..*?Go to the .* and WAIT for .* to meet you there\..*?You must guarantee .* safety to (.*) as soon as you can, being ready for any dangers that the two of you may face\./
    bounty = "Escort"
    bountywidth = "189"
    justify = "4"
    escortplace = $1
    escortplace = escortplace.gsub(/\'/, '&apos;')
    escort = "Escort to #{escortplace}"
    locationanchortop = "BountyName"
    locationtop = "20"
    width = "189"
  elsif XMLData.bounty_task =~ /You are not currently assigned a task\./
    bountyalt = "No task"
    go2bountyalt = "advguild"
    bountyaltwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~ /You have succeeded in your task and can return to the Adventurer\'s Guild to receive your reward\./
    bountyalt = "Turn in task"
    go2bountyalt = "advguild"
    bountyaltwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~ /It appears that a local resident urgently needs our help in some matter|It appears they have .* problem they\'d like you to solve|It appears they need your help in tracking down some kind of lost heirloom\./
    bountyalt = "Visit Guard"
    bountyaltwidth = "189"
    locationtop = "25"
    go2bountyalt = "advguard"
    guard2 = "Alternate location for Guard"
    guard2width = "189"
  elsif XMLData.bounty_task =~ /The local furrier .* has an order to fill and wants our help\..*?Head over there and see what you can do\./
    bountyalt = "Visit Furrier"
    go2bountyalt = "furrier"
    bountyaltwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~ /The local healer, .*, has asked for our aid\..*?Head over there and see what you can do\./
    bountyalt = "Visit Healer"
    go2bountyalt = "npchealer"
    bountyaltwidth = "189"
    locationtop = "35"
  #Illistim version of Herbalist task
  elsif XMLData.bounty_task =~ /The local herbalist.s ass.*, has asked for our aid\..*?Head over there and see what you can do\./
    bountyalt = "Visit Herbalist"
    go2bountyalt = "640"
    bountyaltwidth = "189"
    locationtop = "35" 
  elsif XMLData.bounty_task =~ /The local herbalist.*, has asked for our aid\..*?Head over there and see what you can do\./
    bountyalt = "Visit Herbalist"
    go2bountyalt = "herbalist"
    bountyaltwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~ /The local alchemist, .*, has asked for our aid\..*?Head over there and see what you can do\./
    bountyalt = "Visit Alchemist"
    go2bountyalt = "alchemist"
    bountyaltwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~ /The local gem dealer, .*, has an order to fill and wants our help\..*?Head over there and see what you can do\./
    bountyalt = "Visit Gem Dealer"
    go2bountyalt = "gemshop"
    bountyaltwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~ /You succeeded in your task and should report back to|You have located the heirloom/
    bountyalt = "Return to Guard"
    bountyaltwidth = "189"
    go2bountyalt = "advguard"
    guard2 = "Alternate location for Guard"
    guard2width = "189"
    locationtop = "25"
  elsif XMLData.bounty_task =~ /You have made contact with the child/
    child = "Return Child"
    childwidth = "189"
    locationtop = "35"
  elsif XMLData.bounty_task =~/The child you were tasked to rescue is gone and your task is failed\.|You have failed in your task\.  Return to the Adventurer's Guild for further instructions\./
    bountyalt = "Failed Bounty"
    go2bountyalt = "advguild"
    bountyaltwidth = "189"
    locationtop = "35"
  else
    bounty = "Unknown bounty"
    bountywidth = "189"
    kill = "Type BOUNTY and send to"
    killwidth = "189"
    location = "Hazado22@play.net"
    locationanchortop = "Task"
    width = "189"
  end
  bounty          = bounty.gsub(/'/, '&apos;')
  kill          = kill.gsub(/'/, '&apos;')
  bestiary        = bestiary.gsub(/'/, '&apos;')
  kill2         = kill2.gsub(/'/, '&apos;')
  location        = location.gsub(/'/, '&apos;')
  go2           = go2.gsub(/'/, '&apos;')
  escort          = escort.gsub(/'/, '&apos;')
  go2escort       = go2escort.gsub(/'/, '&apos;')
  go2herb         = go2herb.gsub(/'/, '&apos;')
  go2alt          = go2alt.gsub(/'/, '&apos;')
  bountyalt       = bountyalt.gsub(/'/, '&apos;')
  go2bountyalt      = go2bountyalt.gsub(/'/, '&apos;')
  child         = child.gsub(/'/, '&apos;')
  guard2          = guard2.gsub(/'/, '&apos;')
  gem           = gem.gsub(/'/, '&apos;')
  if bestiary
    bestiaryparse = bestiary.gsub(/ /, '_')
  else
    bestiaryparse = bestiaryalt.gsub(/ /, '_')
  end



  finalstring = []
  if bounty != nil
    finalstring.append(bounty)
  end
  if bountyalt != nil
    finalstring.append(bountyalt)
  end
  if guard2 != nil
    finalstring.append(guard2)
  end
  if child != nil
    finalstring.append(child)
  end
  if bestiary != nil
    if kill != nil
    finalstring.append("#{kill} #{bestiary}")
    else
      finalstring.append("Tgt: #{bestiary}")
    end
  end
  if gem != nil
    finalstring.append(gem)
  end
  if bestiaryalt != nil
    finalstring.append(bestiaryalt)
  end
  if kill2 != nil
    finalstring.append(kill2)
  end
  if go2alt != nil
    finalstring.append(go2alt)
  end
  if go2escort != nil
    finalstring.append(go2escort)
  end
  if go2herb != nil
    if kill != nil
        finalstring.append("#{kill} #{go2herb}")
    else
        finalstring.append("Tgt: #{go2herb}")
    end
  end
  if location != nil
    if go2 != nil
      finalstring.append("#{location} #{go2}")
    else
      finalstring.append(location)
    end
  end
  if escort != nil
    finalstring.append(escort)
  end
  return finalstring
end

def shorten_area(label)
  if label == "nsys"
    return "nrv"
  elsif label == "leftArm"
    return "lArm"
  elsif label == "rightArm"
    return "rArm"
  elsif label == "leftLeg"
    return "lLeg"
  elsif label == "rightLeg"
    return "rLeg"
  elsif label == "rightFoot"
    return "rFt"
  elsif label == "leftFoot"
    return "lFt"
  elsif label == "rightHand"
    return "rHnd"
  elsif label == "leftHand"
    return "lHnd"
  elsif label == "rightEye"
    return "rEye"
  elsif label == "leftEye"
    return "lEye"
  elsif label == "head"
    return "head"
  elsif label == "back"
    return "back"
  elsif label == "neck"
    return "neck"
  elsif label == "chest"
    return "chest"    
  elsif label == "abdomen"
    return "abd"
  else
    echo "Error! Part not found!"
  end
end

def eval_injuries
  wounds = []
  scars = []
  areas = ["nsys","leftArm","rightArm","rightLeg","leftLeg","head","rightFoot","leftFoot","rightHand","leftHand","rightEye","leftEye","back","neck","chest","abdomen"]
  areas.each do |area|
    if eval("(Wounds.#{area})") >= 1
      wounds.push("#{shorten_area(area)} (#{eval("(Wounds.#{area})")})")
    end
    if eval("(Scars.#{area})") >= 1
      scars.push(shorten_area(area))
    end
  end
  output = []
  unless wounds == []
    output.push("Wounds: #{wounds.join(", ")}")
  end
  unless scars == []
    output.push("Scars: #{scars.join(", ")}")
  end
  unless output == []
    return output.join(" ")
  else
    return ""
  end
end

def wound_level
  level = 0
  areas = ["nsys","leftArm","rightArm","rightLeg","leftLeg","head","rightFoot","leftFoot","rightHand","leftHand","rightEye","leftEye","back","neck","chest","abdomen"]
  areas.each do |area|
    if eval("(Wounds.#{area})") > level
      level = eval("(Wounds.#{area})")
    end
  end
  if level > 0
    return "Wound level: #{level}"
  else
    return ""
  end
end

mblinebars  = "\"<image id='mbbars'   name='PanelBackground'    justify='4' anchor_top='top'   top='#{buffy}' left='0' height='0' width='0'/>\""
mblineheal  = "\"<skin id='mbheal' name='healthBar' controls='health'     anchor_top='mbbars'      top='#{buffy}' left='#{buffx+1}' width='0' height='#{sizey}'/><progressBar id='health'    value='\#{percenthealth}' text='\#{checkhealth}/\#{maxhealth}'  customText='t' anchor_top='mbbars' top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""
mblinemana  = "\"<skin id='mbmana' name='manaBar' controls='mana'         anchor_top='mbheal'     top='#{buffy}' left='#{buffx}' width='0' height='#{sizey}'/><progressBar id='mana'    value='\#{percentmana}'   text='\#{checkmana}/\#{maxmana}'  customText='t'  anchor_top='health' top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""
mblinestam  = "\"<skin id='mbstam' name='staminaBar' controls='stamina'   anchor_top='mbmana'     top='#{buffy}' left='#{buffx+1}' width='0' height='#{sizey}'/><progressBar id='stamina' value='\#{percentstamina}'  text='\#{checkstamina}/\#{maxstamina}'  customText='t' anchor_top='mana'   top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""
mblinespir  = "\"<skin id='mbspir' name='spiritBar' controls='spirit'     anchor_top='mbstam'     top='#{buffy}' left='#{buffx+1}' width='0' height='#{sizey}'/><progressBar id='spirit'    value='\#{percentspirit}' text='\#{checkspirit}/\#{maxspirit}'  customText='t' anchor_top='stamina'  top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""

mblinenext  = "\"<progressBar id='mbnext'	value='\#{xpnValue}'			text='\#{xpnText}' anchor_left='health' justify='4' anchor_top='top'	top='#{buffy+2}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""
mblinemind  = "\"<progressBar id='mbmind'	value='\#{XMLData.mind_value}'		text='Mind: \#{XMLData.mind_value}%' customText='t'	anchor_left='mana' anchor_top='mbnext'	top='#{buffy}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""
mblinestan  = "\"<progressBar id='mbstnc'	value='\#{XMLData.stance_value}'	text='Stance: \#{XMLData.stance_text[0...3]}'			anchor_left='stamina' anchor_top='mbmind'	top='#{buffy}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""
mblineencm  = "\"<progressBar id='mbencm'	value='\#{XMLData.encumbrance_value}'	text='Enc: \#{XMLData.encumbrance_value}'	anchor_left='spirit'	anchor_top='mbstnc'	top='#{buffy}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""

mblinehourl = "\"<label id='mbhour'   value='Avg/Hr:'     justify='4'  anchor_top='mbspir'  top='#{buffy}' left='#{buffx}' height='#{sizey}' width='#{sizerx/2}'/>\""
mblinelastl = "\"<label id='mblast'   value='Pulse:'      justify='4' anchor_left='mbhourv' anchor_top='mbencm' top='#{buffy}' left='#{buffx}' height='#{sizey}' width='#{sizerx/2}'/>\""
mblinehourv = "\"<label id='mbhourv'    value='\#{xpnHour}'   justify='6' anchor_left='mbhour'  anchor_top='mbspir'  top='#{buffy}' left='0' height='#{sizey}' width='#{sizerx/2}'/>\""
mblinelastv = "\"<label id='mblastv'    value='\#{xpnLast}'   justify='6' anchor_left='mblast'  anchor_top='mbencm'  top='#{buffy}' left='0' height='#{sizey}' width='#{sizerx/2}'/>\""

mblineinj = "\"<label id='mblineinj'    value='\#{injury}'   justify='6' anchor_top='mbhour'  top='#{buffy}' left='0'/>\""

openLines = [
  "<closeDialog id='MiniBar'/>",
  "<openDialog type='dynamic' id='MiniBar' title='#{Char.prof} Lvl: #{Char.level}' target='MiniBar' location='main' height='140' resident='f' autohide='f'>",
  "<dialogData id='MiniBar' clear='t'>",
]


tosend = openLines.join
openLines = [eval(mblinehourl), eval(mblinelastl), eval(mblinehourv), eval(mblinelastv), eval(mblinebars), eval(mblineheal), eval(mblinemana), eval(mblinestam), eval(mblinespir), eval(mblinenext), eval(mblinemind), eval(mblinestan), eval(mblineencm)]
tosend += openLines.join
tosend += "</dialogData></openDialog>"

puts(tosend)

before_dying {
  puts("<closeDialog id='MiniBar'/>")
}

injury = eval_injuries

loop {
  wait_while { oldHP == checkhealth and oldMP == checkmana and oldST == checkstamina and oldSP == checkspirit and oldXP == XMLData.next_level_text and oldMD == XMLData.mind_text and oldSN == XMLData.stance_text and oldEN == XMLData.encumbrance_text and oldIN == XMLData.injuries.to_s and (oldRM == Room.current.id or Time.now - nowTime < 1) }
  nowTime = Time.now
  doLines = "<dialogData id='MiniBar'>"
  
  if oldHP != checkhealth		then echo "updated health" if debug	; oldHP = checkhealth			; doLines += eval(mblineheal) end
  if oldMP != checkmana			then echo "updated mana" if debug	; oldMP = checkmana			; doLines += eval(mblinemana) end
  if oldST != checkstamina		then echo "updated stamina" if debug	; oldST = checkstamina			; doLines += eval(mblinestam) end
  if oldSP != checkspirit		then echo "updated spirit" if debug	; oldSP = checkspirit			; doLines += eval(mblinespir) end
  if oldMD != XMLData.mind_text		then echo "updated mind" if debug	; oldMD = XMLData.mind_text		; doLines += eval(mblinemind) end
  if oldSN != XMLData.stance_text	then echo "updated stance" if debug	; oldSN = XMLData.stance_text		; doLines += eval(mblinestan) end
  if oldEN != XMLData.encumbrance_value	then echo "updated encumbr" if debug	; oldEN = XMLData.encumbrance_value	; doLines += eval(mblineencm) end
  if oldXP != XMLData.next_level_text	then echo "updated next_level" if debug ; 
    xpnNLT = XMLData.next_level_text
    if xpnNLT =~ /( experience| until next level)/
      xpnCur = xpnNLT.delete(' experience').delete(' until next level').to_i
      xpnLast = xpnOld - xpnCur
      xpnLast *= -1 if xpnLast < 0
      xpnLast = 0 if xpnLast > 2499
    else
      xpnCur = 0
      xpnLast = 0
    end
    if firstpulse
      xpnFirstTime = Time.now - 1
      xpnTotal = 0
      xpnLast = 0
      firstpulse = false
    end
    if capped
      xpnCap = (xpnCur / 2500 + 1) * 2500 - xpnCur
      xpnValue = 100 - (xpnCap / 25)
      xpnText = "#{xpnCap} until TP"
    else
      xpnValue = XMLData.next_level_value.to_i
      xpnText = sprintf("TNL:%6s", xpnCur)
    end
    xpnTotal += xpnLast
    xpnHour = ((1.00 * xpnTotal) / ((nowTime - xpnFirstTime)/3600.00)).to_i
    xpnOld = xpnCur
    oldXP = XMLData.next_level_text
    doLines += eval(mblinehourv) + eval(mblinelastv) + eval(mblinenext)
  end
  if oldIN != XMLData.injuries.to_s
    echo "updated injuries" if debug
    if $brief_wound
      injury = wound_level
    else
      injury = eval_injuries
    end
    doLines += eval(mblineinj)
    oldIN = XMLData.injuries.to_s
  end
  if $bounties == true
    output = update_bounty
    count = 0
    output.each do | line |
      if count == 0
        doLines += eval("\"<label id='bounty#{count}'    value='Bnty: \#{line}'   justify='6' anchor_top='mblineinj'  top='#{buffy}' left='0'/>\"")
      else
        doLines += eval("\"<label id='bounty#{count}'    value='\#{line}'   justify='6' anchor_top='bounty#{count - 1}'  top='#{buffy}' left='0'/>\"")
      end
      count += 1
    end
  end
  doLines += "</dialogData>"
  puts(doLines) if doLines != "<dialogData id='MiniBar'></dialogData>"
  pause 0.5
}
