=begin
  It makes you a MINIBAR!
  Combines health, mana, stamina, spirit, experience, mind, stance, encumbrance and wound data into one bar!

  Wound brevity can be toggled by changing $brief_wound
  
  Based on MberBar... heavily.

  author: Nesmeor
  name: minibar
  tags: utility, sidebar, stormfront
  version: 0.0.2

  Changelog:
  0.0.2 - (05/15/2021)
    - Performance tuning
  0.0.1 - (05/15/2021)
    - Initial version

=end

$brief_wound = false

if $SAFE > 0
  echo "error: This script needs to be trusted to work. (;trust #{script.name.downcase})"
  exit
end

if $frontend != "stormfront"
  respond ""
  respond " Thank you for your interest in MiniBar"
  respond " This version is specific to the Stormfront frontend"
  respond " Closing now"
  respond ""
  exit
end

wait_while { XMLData.next_level_text !~ /(experience|until next level)/ or !XMLData.next_level_value.integer? }
''
no_kill_all
no_pause_all
hide_me
debug = false

xpnFirstTime = 0
nowTime = Time.now - 1
xpnNLT = xpnCur = xpnOld = xpnCap = xpnValue = xpnText = xpnHour = xpnLast = xpnTotal = 0
oldRM = oldHP = oldMP = oldST = oldSP = oldXP = oldMD = oldSN = oldEN = oldIN = nil
capped = false
firstpulse = true
capped = true if Char.level == 100
buffx = 3
buffy = 3
sizebx = 186
sizerx = 90
sizey = 15

def shorten_area(label)
  if label == "nsys"
    return "nrv"
  elsif label == "leftArm"
    return "lArm"
  elsif label == "rightArm"
    return "rArm"
  elsif label == "leftLeg"
    return "lLeg"
  elsif label == "rightLeg"
    return "rLeg"
  elsif label == "rightFoot"
    return "rFt"
  elsif label == "leftFoot"
    return "lFt"
  elsif label == "rightHand"
    return "rHnd"
  elsif label == "leftHand"
    return "lHnd"
  elsif label == "rightEye"
    return "rEye"
  elsif label == "leftEye"
    return "lEye"
  elsif label == "head"
    return "head"
  elsif label == "back"
    return "back"
  elsif label == "neck"
    return "neck"
  elsif label == "chest"
    return "chest"    
  elsif label == "abdomen"
    return "abd"
  else
    echo "Error! Part not found!"
  end
end

def eval_injuries
  wounds = []
  scars = []
  areas = ["nsys","leftArm","rightArm","rightLeg","leftLeg","head","rightFoot","leftFoot","rightHand","leftHand","rightEye","leftEye","back","neck","chest","abdomen"]
  areas.each do |area|
    if eval("(Wounds.#{area})") >= 1
      wounds.push("#{shorten_area(area)} (#{eval("(Wounds.#{area})")})")
    end
    if eval("(Scars.#{area})") >= 1
      scars.push(shorten_area(area))
    end
  end
  output = []
  unless wounds == []
    output.push("Wounds: #{wounds.join(", ")}")
  end
  unless scars == []
    output.push("Scars: #{scars.join(", ")}")
  end
  unless output == []
    return output.join(" ")
  else
    return ""
  end
end

def wound_level
  level = 0
  areas = ["nsys","leftArm","rightArm","rightLeg","leftLeg","head","rightFoot","leftFoot","rightHand","leftHand","rightEye","leftEye","back","neck","chest","abdomen"]
  areas.each do |area|
    if eval("(Wounds.#{area})") > level
      level = eval("(Wounds.#{area})")
    end
  end
  if level > 0
    return "Wound level: #{level}"
  else
    return ""
  end
end

mblinebars  = "\"<image id='mbbars'   name='PanelBackground'    justify='4' anchor_top='top'   top='#{buffy}' left='0' height='0' width='0'/>\""
mblineheal  = "\"<skin id='mbheal' name='healthBar' controls='health'     anchor_top='mbbars'      top='#{buffy}' left='#{buffx+1}' width='0' height='#{sizey}'/><progressBar id='health'    value='\#{percenthealth}' text='\#{checkhealth}/\#{maxhealth}'  customText='t' anchor_top='mbbars' top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""
mblinemana  = "\"<skin id='mbmana' name='manaBar' controls='mana'         anchor_top='mbheal'     top='#{buffy}' left='#{buffx}' width='0' height='#{sizey}'/><progressBar id='mana'    value='\#{percentmana}'   text='\#{checkmana}/\#{maxmana}'  customText='t'  anchor_top='health' top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""
mblinestam  = "\"<skin id='mbstam' name='staminaBar' controls='stamina'   anchor_top='mbmana'     top='#{buffy}' left='#{buffx+1}' width='0' height='#{sizey}'/><progressBar id='stamina' value='\#{percentstamina}'  text='\#{checkstamina}/\#{maxstamina}'  customText='t' anchor_top='mana'   top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""
mblinespir  = "\"<skin id='mbspir' name='spiritBar' controls='spirit'     anchor_top='mbstam'     top='#{buffy}' left='#{buffx+1}' width='0' height='#{sizey}'/><progressBar id='spirit'    value='\#{percentspirit}' text='\#{checkspirit}/\#{maxspirit}'  customText='t' anchor_top='stamina'  top='#{buffy}' left='#{buffx+1}' width='#{sizerx}' height='#{sizey}'/>\""

mblinenext  = "\"<progressBar id='mbnext'	value='\#{xpnValue}'			text='\#{xpnText}' anchor_left='health' justify='4' anchor_top='top'	top='#{buffy+2}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""
mblinemind  = "\"<progressBar id='mbmind'	value='\#{XMLData.mind_value}'		text='Mind: \#{XMLData.mind_value}%' customText='t'	anchor_left='mana' anchor_top='mbnext'	top='#{buffy}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""
mblinestan  = "\"<progressBar id='mbstnc'	value='\#{XMLData.stance_value}'	text='Stance: \#{XMLData.stance_text[0...3]}'			anchor_left='stamina' anchor_top='mbmind'	top='#{buffy}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""
mblineencm  = "\"<progressBar id='mbencm'	value='\#{XMLData.encumbrance_value}'	text='Enc: \#{XMLData.encumbrance_value}'	anchor_left='spirit'	anchor_top='mbstnc'	top='#{buffy}' left='#{buffx}' width='#{sizebx/2}' height='#{sizey}'/>\""

mblinehourl = "\"<label id='mbhour'   value='Avg/Hr:'     justify='4'  anchor_top='mbspir'  top='#{buffy}' left='#{buffx}' height='#{sizey}' width='#{sizerx/2}'/>\""
mblinelastl = "\"<label id='mblast'   value='Pulse:'      justify='4' anchor_left='mbhourv' anchor_top='mbencm' top='#{buffy}' left='#{buffx}' height='#{sizey}' width='#{sizerx/2}'/>\""
mblinehourv = "\"<label id='mbhourv'    value='\#{xpnHour}'   justify='6' anchor_left='mbhour'  anchor_top='mbspir'  top='#{buffy}' left='0' height='#{sizey}' width='#{sizerx/2}'/>\""
mblinelastv = "\"<label id='mblastv'    value='\#{xpnLast}'   justify='6' anchor_left='mblast'  anchor_top='mbencm'  top='#{buffy}' left='0' height='#{sizey}' width='#{sizerx/2}'/>\""

mblineinj = "\"<label id='mblineinj'    value='\#{injury}'   justify='6' anchor_top='mbhour'  top='#{buffy}' left='0'/>\""


openLines = [
  "<closeDialog id='MiniBar'/>",
  "<openDialog type='dynamic' id='MiniBar' title='#{Char.name} - #{Char.prof}' target='MiniBar' location='main' height='140' resident='f' autohide='f'>",
  "<dialogData id='MiniBar'>",
]


tosend = openLines.join
openLines = [eval(mblinehourl), eval(mblinelastl), eval(mblinehourv), eval(mblinelastv), eval(mblinebars), eval(mblineheal), eval(mblinemana), eval(mblinestam), eval(mblinespir), eval(mblinenext), eval(mblinemind), eval(mblinestan), eval(mblineencm)]
tosend += openLines.join
tosend += "</dialogData></openDialog>"

puts(tosend)

before_dying {
  puts("<closeDialog id='MiniBar'/>")
}

injury = eval_injuries

loop {
  wait_while { oldHP == checkhealth and oldMP == checkmana and oldST == checkstamina and oldSP == checkspirit and oldXP == XMLData.next_level_text and oldMD == XMLData.mind_text and oldSN == XMLData.stance_text and oldEN == XMLData.encumbrance_text and oldIN == XMLData.injuries.to_s and (oldRM == Room.current.id or Time.now - nowTime < 1) }
  nowTime = Time.now
  doLines = "<dialogData id='MiniBar'>"
  
  if oldHP != checkhealth		then echo "updated health" if debug	; oldHP = checkhealth			; doLines += eval(mblineheal) end
  if oldMP != checkmana			then echo "updated mana" if debug	; oldMP = checkmana			; doLines += eval(mblinemana) end
  if oldST != checkstamina		then echo "updated stamina" if debug	; oldST = checkstamina			; doLines += eval(mblinestam) end
  if oldSP != checkspirit		then echo "updated spirit" if debug	; oldSP = checkspirit			; doLines += eval(mblinespir) end
  if oldMD != XMLData.mind_text		then echo "updated mind" if debug	; oldMD = XMLData.mind_text		; doLines += eval(mblinemind) end
  if oldSN != XMLData.stance_text	then echo "updated stance" if debug	; oldSN = XMLData.stance_text		; doLines += eval(mblinestan) end
  if oldEN != XMLData.encumbrance_value	then echo "updated encumbr" if debug	; oldEN = XMLData.encumbrance_value	; doLines += eval(mblineencm) end
  if oldXP != XMLData.next_level_text	then echo "updated next_level" if debug ; 
    xpnNLT = XMLData.next_level_text
    if xpnNLT =~ /( experience| until next level)/
      xpnCur = xpnNLT.delete(' experience').delete(' until next level').to_i
      xpnLast = xpnOld - xpnCur
      xpnLast *= -1 if xpnLast < 0
      xpnLast = 0 if xpnLast > 2499
    else
      xpnCur = 0
      xpnLast = 0
    end
    if firstpulse
      xpnFirstTime = Time.now - 1
      xpnTotal = 0
      xpnLast = 0
      firstpulse = false
    end
    if capped
      xpnCap = (xpnCur / 2500 + 1) * 2500 - xpnCur
      xpnValue = 100 - (xpnCap / 25)
      xpnText = "#{xpnCap} until TP"
    else
      xpnValue = XMLData.next_level_value.to_i
      xpnText = sprintf("TNL:%6s", xpnCur)
    end
    xpnTotal += xpnLast
    xpnHour = ((1.00 * xpnTotal) / ((nowTime - xpnFirstTime)/3600.00)).to_i
    xpnOld = xpnCur
    oldXP = XMLData.next_level_text
    doLines += eval(mblinehourv) + eval(mblinelastv) + eval(mblinenext)
  end
  if oldIN != XMLData.injuries.to_s
    echo "updated injuries" if debug
    if $brief_wound
      injury = wound_level
    else
      injury = eval_injuries
    end
    doLines += eval(mblineinj)
    oldIN = XMLData.injuries.to_s
  end
  doLines += "</dialogData>"
  pause 0.5
  puts(doLines) if doLines != "<dialogData id='MiniBar'></dialogData>"
}
