=begin

	Plan out your character with this nifty little script!
	
	Script can tell you what your stats will look like at a certain level as well as how many PTPs and MTPs you'll have at that level.
	
	You can also plan how you want to train your character. Enter how many skill ranks you want per level for each skill you want and the script will tell you how many skill ranks you would have at a particular level and will tell you if you'll have enough training points at that level.
	
	So download today and get to planning!
	
	More features are planned for the future. Check out the "Planned Features" tab in the script for more information.

	########################################################
	Ways to contact me:
	In game: Dreaven
	Player's Corner: Tgo01
	Discord: Dreaven#6436
	Email: LordDreaven@gmail.com
	If you like my scripts feel free to send me a tip via Paypal at: LordDreaven@gmail.com
	########################################################
	
	Author: Dreaven
	Version: 3

=end

require 'gtk3'

@planner_cost_of_skills = {
	"Bard" => {
		"Two Weapon Combat" 		=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Armor Use" 				=> { "PTP" => 5,  "MTP" => 0,  "Max Ranks" => 2, },
		"Shield Use" 				=> { "PTP" => 5,  "MTP" => 0,  "Max Ranks" => 2, },
		"Combat Maneuvers" 			=> { "PTP" => 8,  "MTP" => 4,  "Max Ranks" => 2, },
		"Edged Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Blunt Weapons" 			=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Two-Handed Weapons" 		=> { "PTP" => 7,  "MTP" => 2,  "Max Ranks" => 2, },
		"Ranged Weapons" 			=> { "PTP" => 4,  "MTP" => 2,  "Max Ranks" => 2, },
		"Thrown Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Pole Arm Weapons" 			=> { "PTP" => 6,  "MTP" => 1,  "Max Ranks" => 2, },
		"Brawling" 					=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Ambush" 					=> { "PTP" => 4,  "MTP" => 4,  "Max Ranks" => 1, },
		"Multi-Opponent Combat" 	=> { "PTP" => 7,  "MTP" => 3,  "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 2, },
		"Dodging" 					=> { "PTP" => 6,  "MTP" => 6,  "Max Ranks" => 2, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 4,  "Max Ranks" => 2, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 4,  "Max Ranks" => 2, },
		"Spell Aiming" 				=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 2, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 17, "Max Ranks" => 2, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 18, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 2, },
		"Swimming" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 2, },
		"First Aid" 				=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
	},
	
	"Cleric" => {
		"Two Weapon Combat" 		=> { "PTP" => 9,  "MTP" => 9,  "Max Ranks" => 1, },
		"Armor Use" 				=> { "PTP" => 8,  "MTP" => 0,  "Max Ranks" => 1, },
		"Shield Use" 				=> { "PTP" => 13, "MTP" => 0,  "Max Ranks" => 1, },
		"Combat Maneuvers" 			=> { "PTP" => 10, "MTP" => 8,  "Max Ranks" => 1, },
		"Edged Weapons" 			=> { "PTP" => 6,  "MTP" => 1,  "Max Ranks" => 1, },
		"Blunt Weapons" 			=> { "PTP" => 6,  "MTP" => 1,  "Max Ranks" => 1, },
		"Two-Handed Weapons" 		=> { "PTP" => 10, "MTP" => 3,  "Max Ranks" => 1, },
		"Ranged Weapons" 			=> { "PTP" => 9,  "MTP" => 3,  "Max Ranks" => 1, },
		"Thrown Weapons" 			=> { "PTP" => 9,  "MTP" => 3,  "Max Ranks" => 1, },
		"Pole Arm Weapons" 			=> { "PTP" => 11, "MTP" => 3,  "Max Ranks" => 1, },
		"Brawling" 					=> { "PTP" => 6,  "MTP" => 1,  "Max Ranks" => 1, },
		"Ambush" 					=> { "PTP" => 12, "MTP" => 12, "Max Ranks" => 1, },
		"Multi-Opponent Combat" 	=> { "PTP" => 15, "MTP" => 8,  "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 8,  "MTP" => 0,  "Max Ranks" => 1, },
		"Dodging" 					=> { "PTP" => 20, "MTP" => 20, "Max Ranks" => 1, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Spell Aiming" 				=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 4,  "Max Ranks" => 3, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 3, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 3, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 10, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 6,  "Max Ranks" => 1, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 4,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 5,  "MTP" => 4,  "Max Ranks" => 1, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 1, },
		"Swimming" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 1, },
		"First Aid" 				=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 1, },
	},
	
	"Empath" => {
		"Two Weapon Combat" 		=> { "PTP" => 12, "MTP" => 12, "Max Ranks" => 1, },
		"Armor Use" 				=> { "PTP" => 15, "MTP" => 0,  "Max Ranks" => 1, },
		"Shield Use" 				=> { "PTP" => 13, "MTP" => 0,  "Max Ranks" => 1, },
		"Combat Maneuvers" 			=> { "PTP" => 12, "MTP" => 8,  "Max Ranks" => 1, },
		"Edged Weapons" 			=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 1, },
		"Blunt Weapons" 			=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 1, },
		"Two-Handed Weapons" 		=> { "PTP" => 13, "MTP" => 3,  "Max Ranks" => 1, },
		"Ranged Weapons" 			=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Thrown Weapons" 			=> { "PTP" => 9,  "MTP" => 3,  "Max Ranks" => 1, },
		"Pole Arm Weapons" 			=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Brawling" 					=> { "PTP" => 10, "MTP" => 2,  "Max Ranks" => 1, },
		"Ambush" 					=> { "PTP" => 15, "MTP" => 15, "Max Ranks" => 1, },
		"Multi-Opponent Combat" 	=> { "PTP" => 15, "MTP" => 10, "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 3, },
		"Dodging" 					=> { "PTP" => 20, "MTP" => 20, "Max Ranks" => 1, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Spell Aiming" 				=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 4,  "Max Ranks" => 3, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 3, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Survival" 					=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 6,  "Max Ranks" => 1, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 4,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 5,  "MTP" => 4,  "Max Ranks" => 1, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 1, },
		"Swimming" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 1, },
		"First Aid" 				=> { "PTP" => 1,  "MTP" => 0,  "Max Ranks" => 3, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 1, },
	},
	
	"Monk" => {
		"Two Weapon Combat" 		=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
		"Armor Use" 				=> { "PTP" => 10, "MTP" => 0,  "Max Ranks" => 2, },
		"Shield Use" 				=> { "PTP" => 8,  "MTP" => 0,  "Max Ranks" => 2, },
		"Combat Maneuvers" 			=> { "PTP" => 5,  "MTP" => 3,  "Max Ranks" => 2, },
		"Edged Weapons" 			=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Blunt Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Two-Handed Weapons" 		=> { "PTP" => 5,  "MTP" => 2,  "Max Ranks" => 2, },
		"Ranged Weapons" 			=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Thrown Weapons" 			=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Pole Arm Weapons" 			=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 2, },
		"Brawling" 					=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Ambush" 					=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Multi-Opponent Combat" 	=> { "PTP" => 5,  "MTP" => 2,  "Max Ranks" => 2, },
		"Physical Fitness" 			=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 3, },
		"Dodging" 					=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 3, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 1, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 7,  "Max Ranks" => 1, },
		"Spell Aiming" 				=> { "PTP" => 3,  "MTP" => 4,  "Max Ranks" => 1, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 1, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 38, "Max Ranks" => 1, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 40, "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 35, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 3,  "MTP" => 4,  "Max Ranks" => 2, },
		"Picking Locks" 			=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 1,  "MTP" => 0,  "Max Ranks" => 2, },
		"Swimming" 					=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 2, },
		"First Aid" 				=> { "PTP" => 1,  "MTP" => 2,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
	},
	
	"Paladin" => {
		"Two Weapon Combat" 		=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 2, },
		"Armor Use" 				=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 3, },
		"Shield Use" 				=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 2, },
		"Combat Maneuvers" 			=> { "PTP" => 5,  "MTP" => 4,  "Max Ranks" => 2, },
		"Edged Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Blunt Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Two-Handed Weapons" 		=> { "PTP" => 4,  "MTP" => 2,  "Max Ranks" => 2, },
		"Ranged Weapons" 			=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 2, },
		"Thrown Weapons" 			=> { "PTP" => 5,  "MTP" => 1,  "Max Ranks" => 2, },
		"Pole Arm Weapons" 			=> { "PTP" => 5,  "MTP" => 2,  "Max Ranks" => 2, },
		"Brawling" 					=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Ambush" 					=> { "PTP" => 4,  "MTP" => 5,  "Max Ranks" => 1, },
		"Multi-Opponent Combat" 	=> { "PTP" => 5,  "MTP" => 2,  "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 2, },
		"Dodging" 					=> { "PTP" => 5,  "MTP" => 3,  "Max Ranks" => 2, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Spell Aiming" 				=> { "PTP" => 4,  "MTP" => 2,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 2, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 17, "Max Ranks" => 2, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 10, "Max Ranks" => 2, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 18, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 5,  "Max Ranks" => 1, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 4,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 4,  "MTP" => 4,  "Max Ranks" => 1, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 2, },
		"Swimming" 					=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 2, },
		"First Aid" 				=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 4,  "MTP" => 4,  "Max Ranks" => 1, },
	},
	
	"Ranger" => {
		"Two Weapon Combat" 		=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Armor Use" 				=> { "PTP" => 5,  "MTP" => 0,  "Max Ranks" => 2, },
		"Shield Use" 				=> { "PTP" => 5,  "MTP" => 0,  "Max Ranks" => 2, },
		"Combat Maneuvers" 			=> { "PTP" => 6,  "MTP" => 4,  "Max Ranks" => 2, },
		"Edged Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Blunt Weapons" 			=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Two-Handed Weapons" 		=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 2, },
		"Ranged Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Thrown Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Pole Arm Weapons" 			=> { "PTP" => 7,  "MTP" => 2,  "Max Ranks" => 2, },
		"Brawling" 					=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Ambush" 					=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 2, },
		"Multi-Opponent Combat" 	=> { "PTP" => 10, "MTP" => 4,  "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 2, },
		"Dodging" 					=> { "PTP" => 7,  "MTP" => 5,  "Max Ranks" => 2, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Spell Aiming" 				=> { "PTP" => 4,  "MTP" => 1,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 2, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 5,  "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 17, "Max Ranks" => 2, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 10, "Max Ranks" => 1, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 18, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 3, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 4,  "Max Ranks" => 2, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 3,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 2, },
		"Swimming" 					=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 2, },
		"First Aid" 				=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 2,  "MTP" => 3,  "Max Ranks" => 1, },
	},
	
	"Rogue" => {
		"Two Weapon Combat" 		=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
		"Armor Use" 				=> { "PTP" => 5,  "MTP" => 0,  "Max Ranks" => 2, },
		"Shield Use" 				=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 2, },
		"Combat Maneuvers" 			=> { "PTP" => 4,  "MTP" => 4,  "Max Ranks" => 2, },
		"Edged Weapons" 			=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Blunt Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Two-Handed Weapons" 		=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 2, },
		"Ranged Weapons" 			=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Thrown Weapons" 			=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Pole Arm Weapons" 			=> { "PTP" => 7,  "MTP" => 2,  "Max Ranks" => 2, },
		"Brawling" 					=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Ambush" 					=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Multi-Opponent Combat" 	=> { "PTP" => 10, "MTP" => 3,  "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 2, },
		"Dodging" 					=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 3, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 7,  "Max Ranks" => 1, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 1, },
		"Spell Aiming" 				=> { "PTP" => 4,  "MTP" => 5,  "Max Ranks" => 1, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 9,  "Max Ranks" => 1, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 10, "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 10, "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 67, "Max Ranks" => 1, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 15, "Max Ranks" => 1, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 30, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 40, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 2,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 3, },
		"Picking Locks" 			=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 3, },
		"Stalking & Hiding" 		=> { "PTP" => 1,  "MTP" => 1,  "Max Ranks" => 3, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 1,  "Max Ranks" => 3, },
		"Climbing" 					=> { "PTP" => 1,  "MTP" => 0,  "Max Ranks" => 2, },
		"Swimming" 					=> { "PTP" => 2,  "MTP" => 0,  "Max Ranks" => 2, },
		"First Aid" 				=> { "PTP" => 1,  "MTP" => 2,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 1,  "MTP" => 0,  "Max Ranks" => 2, },
	},
	
	"Sorcerer" => {
		"Two Weapon Combat" 		=> { "PTP" => 12, "MTP" => 12, "Max Ranks" => 1, },
		"Armor Use" 				=> { "PTP" => 15, "MTP" => 0,  "Max Ranks" => 1, },
		"Shield Use" 				=> { "PTP" => 13, "MTP" => 0,  "Max Ranks" => 1, },
		"Combat Maneuvers" 			=> { "PTP" => 12, "MTP" => 8,  "Max Ranks" => 1, },
		"Edged Weapons" 			=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 1, },
		"Blunt Weapons" 			=> { "PTP" => 6,  "MTP" => 2,  "Max Ranks" => 1, },
		"Two-Handed Weapons" 		=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Ranged Weapons" 			=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Thrown Weapons" 			=> { "PTP" => 9,  "MTP" => 3,  "Max Ranks" => 1, },
		"Pole Arm Weapons" 			=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Brawling" 					=> { "PTP" => 10, "MTP" => 2,  "Max Ranks" => 1, },
		"Ambush" 					=> { "PTP" => 15, "MTP" => 14, "Max Ranks" => 1, },
		"Multi-Opponent Combat" 	=> { "PTP" => 15, "MTP" => 10, "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 8,  "MTP" => 0,  "Max Ranks" => 1, },
		"Dodging" 					=> { "PTP" => 20, "MTP" => 20, "Max Ranks" => 1, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 1,  "Max Ranks" => 2, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Spell Aiming" 				=> { "PTP" => 3,  "MTP" => 1,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 4,  "Max Ranks" => 3, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 3, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 6,  "Max Ranks" => 1, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 4,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 5,  "MTP" => 4,  "Max Ranks" => 1, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 1, },
		"Swimming" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 1, },
		"First Aid" 				=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 1, },
	},
	
	"Warrior" => {
		"Two Weapon Combat" 		=> { "PTP" => 2,  "MTP" => 2,   "Max Ranks" => 2, },
		"Armor Use" 				=> { "PTP" => 2,  "MTP" => 0,   "Max Ranks" => 3, },
		"Shield Use" 				=> { "PTP" => 2,  "MTP" => 0,   "Max Ranks" => 3, },
		"Combat Maneuvers" 			=> { "PTP" => 4,  "MTP" => 3,   "Max Ranks" => 2, },
		"Edged Weapons" 			=> { "PTP" => 2,  "MTP" => 1,   "Max Ranks" => 2, },
		"Blunt Weapons" 			=> { "PTP" => 2,  "MTP" => 1,   "Max Ranks" => 2, },
		"Two-Handed Weapons" 		=> { "PTP" => 3,  "MTP" => 1,   "Max Ranks" => 2, },
		"Ranged Weapons" 			=> { "PTP" => 2,  "MTP" => 1,   "Max Ranks" => 2, },
		"Thrown Weapons" 			=> { "PTP" => 2,  "MTP" => 1,   "Max Ranks" => 2, },
		"Pole Arm Weapons" 			=> { "PTP" => 3,  "MTP" => 1,   "Max Ranks" => 2, },
		"Brawling" 					=> { "PTP" => 2,  "MTP" => 1,   "Max Ranks" => 2, },
		"Ambush" 					=> { "PTP" => 3,  "MTP" => 4,   "Max Ranks" => 2, },
		"Multi-Opponent Combat" 	=> { "PTP" => 4,  "MTP" => 3,   "Max Ranks" => 2, },
		"Physical Fitness" 			=> { "PTP" => 2,  "MTP" => 0,   "Max Ranks" => 3, },
		"Dodging" 					=> { "PTP" => 4,  "MTP" => 2,   "Max Ranks" => 3, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 7,   "Max Ranks" => 1, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 8,   "Max Ranks" => 1, },
		"Spell Aiming" 				=> { "PTP" => 4,  "MTP" => 8,   "Max Ranks" => 1, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 10,  "Max Ranks" => 1, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 10,  "Max Ranks" => 1, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 15,  "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 10,  "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 120, "Max Ranks" => 1, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 15,  "Max Ranks" => 1, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 15,  "Max Ranks" => 1, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 30,  "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 40,  "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 1,  "MTP" => 3,   "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 4,   "Max Ranks" => 2, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 3,   "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 3,  "MTP" => 2,   "Max Ranks" => 2, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,   "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 3,  "MTP" => 0,   "Max Ranks" => 2, },
		"Swimming" 					=> { "PTP" => 2,  "MTP" => 0,   "Max Ranks" => 2, },
		"First Aid" 				=> { "PTP" => 1,  "MTP" => 2,   "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,   "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 2,  "MTP" => 3,   "Max Ranks" => 1, },
	},
	
	"Wizard" => {
		"Two Weapon Combat" 		=> { "PTP" => 12, "MTP" => 12, "Max Ranks" => 1, },
		"Armor Use" 				=> { "PTP" => 14, "MTP" => 0,  "Max Ranks" => 1, },
		"Shield Use" 				=> { "PTP" => 13, "MTP" => 0,  "Max Ranks" => 1, },
		"Combat Maneuvers" 			=> { "PTP" => 12, "MTP" => 8,  "Max Ranks" => 1, },
		"Edged Weapons" 			=> { "PTP" => 6,  "MTP" => 1,  "Max Ranks" => 1, },
		"Blunt Weapons" 			=> { "PTP" => 6,  "MTP" => 1,  "Max Ranks" => 1, },
		"Two-Handed Weapons" 		=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Ranged Weapons" 			=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Thrown Weapons" 			=> { "PTP" => 8,  "MTP" => 2,  "Max Ranks" => 1, },
		"Pole Arm Weapons" 			=> { "PTP" => 14, "MTP" => 3,  "Max Ranks" => 1, },
		"Brawling" 					=> { "PTP" => 10, "MTP" => 2,  "Max Ranks" => 1, },
		"Ambush" 					=> { "PTP" => 15, "MTP" => 10, "Max Ranks" => 1, },
		"Multi-Opponent Combat" 	=> { "PTP" => 15, "MTP" => 10, "Max Ranks" => 1, },
		"Physical Fitness" 			=> { "PTP" => 8,  "MTP" => 0,  "Max Ranks" => 1, },
		"Dodging" 					=> { "PTP" => 20, "MTP" => 20, "Max Ranks" => 1, },
		"Arcane Symbols" 			=> { "PTP" => 0,  "MTP" => 2,  "Max Ranks" => 2, },
		"Magic Item Use" 			=> { "PTP" => 0,  "MTP" => 1,  "Max Ranks" => 2, },
		"Spell Aiming" 				=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Harness Power" 			=> { "PTP" => 0,  "MTP" => 4,  "Max Ranks" => 3, },
		"Mana Control: Elemental" 	=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 3, },
		"Mana Control: Mental" 		=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Mana Control: Spiritual" 	=> { "PTP" => 0,  "MTP" => 12, "Max Ranks" => 1, },
		"Spell Research" 			=> { "PTP" => 0,  "MTP" => 8,  "Max Ranks" => 3, },
		"Elemental Lore" 			=> { "PTP" => 0,  "MTP" => 6,  "Max Ranks" => 2, },
		"Spiritual Lore" 			=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Sorcerous Lore" 			=> { "PTP" => 0,  "MTP" => 10, "Max Ranks" => 1, },
		"Mental Lore" 				=> { "PTP" => 0,  "MTP" => 20, "Max Ranks" => 1, },
		"Survival" 					=> { "PTP" => 3,  "MTP" => 2,  "Max Ranks" => 2, },
		"Disarming Traps" 			=> { "PTP" => 2,  "MTP" => 6,  "Max Ranks" => 1, },
		"Picking Locks" 			=> { "PTP" => 2,  "MTP" => 4,  "Max Ranks" => 2, },
		"Stalking & Hiding" 		=> { "PTP" => 5,  "MTP" => 4,  "Max Ranks" => 1, },
		"Perception" 				=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Climbing" 					=> { "PTP" => 4,  "MTP" => 0,  "Max Ranks" => 1, },
		"Swimming" 					=> { "PTP" => 3,  "MTP" => 0,  "Max Ranks" => 1, },
		"First Aid" 				=> { "PTP" => 2,  "MTP" => 1,  "Max Ranks" => 2, },
		"Trading" 					=> { "PTP" => 0,  "MTP" => 3,  "Max Ranks" => 2, },
		"Picking Pockets" 			=> { "PTP" => 3,  "MTP" => 3,  "Max Ranks" => 1, },
	},
}

@planner_profession_gis = {
	"Bard" => {
		"Strength" 		=> 25, 
		"Constitution" 	=> 20,
		"Dexterity" 	=> 25,
		"Agility" 		=> 20,
		"Discipline" 	=> 15,
		"Aura" 			=> 25,
		"Logic" 		=> 10,
		"Intuition" 	=> 15,
		"Wisdom" 		=> 20,
		"Influence" 	=> 30,
		"Prime 1"		=> "Influence",
		"Prime 2"		=> "Aura",
	},
	
	"Cleric" => {
		"Strength" 		=> 20,
		"Constitution" 	=> 20,
		"Dexterity" 	=> 10,
		"Agility" 		=> 15,
		"Discipline" 	=> 25,
		"Aura" 			=> 15,
		"Logic" 		=> 25,
		"Intuition" 	=> 25,
		"Wisdom" 		=> 30,
		"Influence" 	=> 20,
		"Prime 1"		=> "Wisdom",
		"Prime 2"		=> "Intuition",
	},

	"Empath" => {
		"Strength" 		=> 10,
		"Constitution" 	=> 20,
		"Dexterity" 	=> 15,
		"Agility" 		=> 15,
		"Discipline"	=> 25,
		"Aura" 			=> 20,
		"Logic" 		=> 25,
		"Intuition" 	=> 20,
		"Wisdom" 		=> 30,
		"Influence" 	=> 25,
		"Prime 1"		=> "Wisdom",
		"Prime 2"		=> "Influence",
	},

	"Monk" => {
		"Strength" 		=> 25,
		"Constitution" 	=> 25,
		"Dexterity" 	=> 20,
		"Agility" 		=> 30,
		"Discipline" 	=> 25,
		"Aura" 			=> 15,
		"Logic" 		=> 20,
		"Intuition" 	=> 20,
		"Wisdom" 		=> 15,
		"Influence" 	=> 10,
		"Prime 1"		=> "Agility",
		"Prime 2"		=> "Strength",
	},

	"Paladin" => {
		"Strength" 		=> 30,
		"Constitution" 	=> 25,
		"Dexterity" 	=> 20,
		"Agility" 		=> 20,
		"Discipline" 	=> 25,
		"Aura" 			=> 15,
		"Logic" 		=> 10,
		"Intuition" 	=> 15,
		"Wisdom" 		=> 25,
		"Influence" 	=> 20,
		"Prime 1"		=> "Wisdom",
		"Prime 2"		=> "Strength",
	},

	"Ranger" => {
		"Strength"		=> 25,
		"Constitution" 	=> 20,
		"Dexterity" 	=> 30,
		"Agility" 		=> 20,
		"Discipline" 	=> 20,
		"Aura" 			=> 15,
		"Logic" 		=> 15,
		"Intuition" 	=> 25,
		"Wisdom" 		=> 25,
		"Influence" 	=> 10,
		"Prime 1"		=> "Dexterity",
		"Prime 2"		=> "Intuition",
	},

	"Rogue" => {
		"Strength" 		=> 25,
		"Constitution" 	=> 20,
		"Dexterity" 	=> 25,
		"Agility" 		=> 30,
		"Discipline" 	=> 20,
		"Aura" 			=> 15,
		"Logic" 		=> 20,
		"Intuition" 	=> 25,
		"Wisdom" 		=> 10,
		"Influence" 	=> 15,
		"Prime 1"		=> "Dexterity",
		"Prime 2"		=> "Agility",
	},

	"Sorcerer" => {
		"Strength"		=> 10,
		"Constitution" 	=> 15,
		"Dexterity" 	=> 20,
		"Agility" 		=> 15,
		"Discipline" 	=> 25,
		"Aura"		 	=> 30,
		"Logic" 		=> 25,
		"Intuition" 	=> 20,
		"Wisdom" 		=> 25,
		"Influence" 	=> 20,
		"Prime 1"		=> "Aura",
		"Prime 2"		=> "Wisdom",
	},

	"Warrior" => {
		"Strength" 		=> 30,
		"Constitution" 	=> 25,
		"Dexterity" 	=> 25,
		"Agility" 		=> 25,
		"Discipline" 	=> 20,
		"Aura" 			=> 15,
		"Logic" 		=> 10,
		"Intuition" 	=> 20,
		"Wisdom" 		=> 15,
		"Influence" 	=> 20,
		"Prime 1"		=> "Constitution",
		"Prime 2"		=> "Strength",
	},

	"Wizard" => {
		"Strength" 		=> 10,
		"Constitution" 	=> 15,
		"Dexterity" 	=> 25,
		"Agility" 		=> 15,
		"Discipline" 	=> 20,
		"Aura" 			=> 30,
		"Logic" 		=> 25,
		"Intuition" 	=> 25,
		"Wisdom" 		=> 20,
		"Influence" 	=> 20,
		"Prime 1"		=> "Aura",
		"Prime 2"		=> "Logic",
	},
}

@planner_race_gis = {
	"Aelotoi" => {
		"Strength" 		=> 0,
		"Constitution" 	=> -2,
		"Dexterity" 	=> 3,
		"Agility" 		=> 3,
		"Discipline" 	=> 2,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 2,
		"Wisdom" 		=> 0,
		"Influence" 	=> -2
	},

	"Burghal Gnome" => {
		"Strength" 		=> -5,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 3,
		"Agility" 		=> 3,
		"Discipline" 	=> -3,
		"Aura" 			=> -2,
		"Logic" 		=> 5,
		"Intuition" 	=> 5,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0		
	},

	"Dark Elf" => {
		"Strength" 		=> 0,
		"Constitution" 	=> -2,
		"Dexterity" 	=> 5,
		"Agility" 		=> 5,
		"Discipline" 	=> -2,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0
	},

	"Dwarf" => {
		"Strength" 		=> 5,
		"Constitution" 	=> 5,
		"Dexterity" 	=> -3,	
		"Agility" 		=> -5,
		"Discipline" 	=> 3,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 3,
		"Influence" 	=> -2 
	},

	"Elf" => {
		"Strength" 		=> 0,
		"Constitution" 	=> -5,
		"Dexterity" 	=> 5,
		"Agility" 		=> 3,
		"Discipline" 	=> -5,
		"Aura" 			=> 5,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 3
	},

	"Erithian" => {
		"Strength" 		=> -2,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 0,
		"Agility" 		=> 0,
		"Discipline" 	=> 3,
		"Aura" 			=> 0,
		"Logic" 		=> 2,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 3
	},

	"Forest Gnome" => {
		"Strength" 		=> -3,
		"Constitution" 	=> 2,
		"Dexterity" 	=> 2,
		"Agility" 		=> 3,
		"Discipline" 	=> 2,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0
	},

	"Giantman" => {
		"Strength" 		=> 5,
		"Constitution" 	=> 3,
		"Dexterity" 	=> -2,
		"Agility" 		=> -2,
		"Discipline" 	=> 0,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 2,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0
	},

	"Half-Elf" => {
		"Strength" 		=> 2,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 2,
		"Agility" 		=> 2,
		"Discipline" 	=> -2,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 2
	},

	"Half-Krolvin" => {
		"Strength" 		=> 3,
		"Constitution" 	=> 5,
		"Dexterity" 	=> 2,
		"Agility" 		=> 2,
		"Discipline" 	=> 0,
		"Aura" 			=> -2,
		"Logic" 		=> -2,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> -2
	},

	"Halfling" => {
		"Strength" 		=> -5,
		"Constitution" 	=> 5,
		"Dexterity" 	=> 5,
		"Agility" 		=> 5,
		"Discipline" 	=> -2,
		"Aura" 			=> 0,
		"Logic" 		=> -2,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0
	},

	"Human" => {
		"Strength" 		=> 2,
		"Constitution" 	=> 2,
		"Dexterity" 	=> 0,
		"Agility" 		=> 0,
		"Discipline" 	=> 0,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 2,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0
	},

	"Sylvankind" => {
		"Strength" 		=> -3,
		"Constitution" 	=> -2,
		"Dexterity" 	=> 5,
		"Agility" 		=> 5,
		"Discipline" 	=> -5,
		"Aura" 			=> 3,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 3
	},
}

@planner_race_stat_bonuses = {
	"Aelotoi" => {
		"Strength" 		=> -5,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 5,
		"Agility" 		=> 10,
		"Discipline" 	=> 5,
		"Aura" 			=> 0,
		"Logic" 		=> 5,
		"Intuition" 	=> 5,
		"Wisdom" 		=> 0,
		"Influence" 	=> -5,
	},

	"Burghal Gnome" => {
		"Strength" 		=> -15,
		"Constitution" 	=> 10,
		"Dexterity" 	=> 10,
		"Agility" 		=> 10,
		"Discipline" 	=> -5,
		"Aura" 			=> 5,
		"Logic" 		=> 10,
		"Intuition" 	=> 5,
		"Wisdom" 		=> 0,
		"Influence" 	=> -5,		
	},

	"Dark Elf" => {
		"Strength" 		=> 0,
		"Constitution" 	=> -5,
		"Dexterity" 	=> 10,
		"Agility" 		=> 5,
		"Discipline" 	=> -10,
		"Aura" 			=> 10,
		"Logic" 		=> 0,
		"Intuition" 	=> 5,
		"Wisdom" 		=> 5,
		"Influence" 	=> -5,
	},

	"Dwarf" => {
		"Strength" 		=> 10,
		"Constitution" 	=> 15,
		"Dexterity" 	=> 0,	
		"Agility" 		=> -5,
		"Discipline" 	=> 10,
		"Aura" 			=> -10,
		"Logic" 		=> 5,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> -10, 
	},

	"Elf" => {
		"Strength" 		=> 0,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 5,
		"Agility" 		=> 15,
		"Discipline" 	=> -15,
		"Aura" 			=> 5,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 10,
	},

	"Erithian" => {
		"Strength" 		=> -5,
		"Constitution" 	=> 10,
		"Dexterity" 	=> 0,
		"Agility" 		=> 0,
		"Discipline" 	=> 5,
		"Aura" 			=> 0,
		"Logic" 		=> 5,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 10,
	},

	"Forest Gnome" => {
		"Strength" 		=> -10,
		"Constitution" 	=> 10,
		"Dexterity" 	=> 5,
		"Agility" 		=> 10,
		"Discipline" 	=> 5,
		"Aura" 			=> 0,
		"Logic" 		=> 5,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 5,
		"Influence" 	=> -5,
	},

	"Giantman" => {
		"Strength" 		=> 15,
		"Constitution" 	=> 10,
		"Dexterity" 	=> -5,
		"Agility" 		=> -5,
		"Discipline" 	=> 0,
		"Aura" 			=> -5,
		"Logic" 		=> -5,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 5,
	},

	"Half-Elf" => {
		"Strength" 		=> 0,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 5,
		"Agility" 		=> 10,
		"Discipline" 	=> -5,
		"Aura" 			=> 0,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 5,
	},

	"Half-Krolvin" => {
		"Strength" 		=> 10,
		"Constitution" 	=> 10,
		"Dexterity" 	=> 0,
		"Agility" 		=> 5,
		"Discipline" 	=> 0,
		"Aura" 			=> 0,
		"Logic" 		=> -10,
		"Intuition" 	=> 0,
		"Wisdom" 		=> -5,
		"Influence" 	=> -5,
	},

	"Halfling" => {
		"Strength" 		=> -15,
		"Constitution" 	=> 10,
		"Dexterity" 	=> 15,
		"Agility" 		=> 10,
		"Discipline" 	=> -5,
		"Aura" 			=> -5,
		"Logic" 		=> 5,
		"Intuition" 	=> 10,
		"Wisdom" 		=> 0,
		"Influence" 	=> -5,
	},

	"Human" => {
		"Strength" 		=> 5,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 0,
		"Agility" 		=> 0,
		"Discipline" 	=> 0,
		"Aura" 			=> 0,
		"Logic" 		=> 5,
		"Intuition" 	=> 5,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0,
	},

	"Sylvankind" => {
		"Strength" 		=> 0,
		"Constitution" 	=> 0,
		"Dexterity" 	=> 10,
		"Agility" 		=> 5,
		"Discipline" 	=> -5,
		"Aura" 			=> 5,
		"Logic" 		=> 0,
		"Intuition" 	=> 0,
		"Wisdom" 		=> 0,
		"Influence" 	=> 0,
	},
}

@planner_character_info = {}

class Planner_current_as		
	def initialize(value, tooltip_text)
		@value = value
		@update_text = tooltip_text
		@@tooltip_text += "\n#{@value} AS from #{@update_text}"
		@@total_value += @value
	end
	
	def self.slice_slice
		@@tooltip_text.slice!(0).slice!(0)
	end
	
	def self.reset_bonus_and_tooltip
		@@total_value = 0
		@@tooltip_text = ""
	end
end

class Planner_max_as		
	def initialize(stat_name, value, tooltip_text)
		@value = value
		@update_text = tooltip_text
		@stat_name = stat_name
		@@tooltip_text += "\n#{value} AS #{@stat_name}#{tooltip_text}"
		@@total_value += @value
	end
	
	def self.slice_slice
		@@tooltip_text.slice!(0).slice!(0)
	end
	
	def self.reset_bonus_and_tooltip(profession)
		@@total_value = 0
		@@total_value = -50 if profession =~ /Warrior|Rogue/
		@@tooltip_text = ""
	end
end

class Planner_player_service_bonus		
	def initialize(value, tooltip_text)
		@value = value
		@update_text = tooltip_text
		@@tooltip_text += "\n#{@value} bonus from #{@update_text}"
		@@total_value += @value
	end
	
	def self.slice_slice
		@@tooltip_text.slice!(0).slice!(0)
	end
	
	def self.reset_bonus_and_tooltip
		@@total_value = 0
		@@tooltip_text = ""
	end
end

class Planner_max_player_service_bonus		
	def initialize(stat_name, value, tooltip_text)
		@value = value
		@update_text = tooltip_text
		@stat_name = stat_name
		@@tooltip_text += "\n#{value} bonus from #{@stat_name}#{tooltip_text}"
		@@total_value += @value
	end
	
	def self.slice_slice
		@@tooltip_text.slice!(0).slice!(0)
	end
	
	def self.reset_bonus_and_tooltip
		@@total_value = 0
		@@tooltip_text = ""
	end
end

module Planner_Seeds
	def	seed(seed_value, skill_value)
		seed_current = seed_value
		seed_increment = seed_value + 1
		seed_rank = 0
		
		while skill_value >= seed_current
			seed_rank += 1 
			seed_current += seed_increment
			seed_increment += 1
		end
		seed_rank
	end
	
	module_function :seed
end

def create_planner_main_window
	@planner_window_main = Gtk::Window.new(:toplevel)
		.set_title("Character Planner")
		.set_border_width(10)
		.set_default_size(300, 300)
		.set_type_hint(Gdk::WindowTypeHint::UTILITY)
		.set_keep_above(true)
		.set_position(Gtk::WindowPosition::CENTER)
		
	screen = @planner_window_main.screen
	screen_width = screen.width
	screen_height = screen.height
	window_width = @planner_window_main.size[0]
	window_height = @planner_window_main.size[1]

	x = (screen_width - window_width) / 2
	y = 0

	@planner_window_main.move(x, y)
	
	main_notebook = Gtk::Notebook.new
	
	#First tab
	main_tab_name = Gtk::Label.new('Main')
	main_tab_grid_1 = Gtk::Grid.new
	info_label = Gtk::Label.new("#{Char.name}                    Current level #{Char.level}                    #{@planner_character_info["Profession"]}                    #{@planner_character_info["Race"]}")
	main_tab_grid_1.attach(info_label, 0, 0, 1, 1)
	
	level_spin_button_grid = Gtk::Grid.new
	main_tab_grid_1.attach(level_spin_button_grid, 0, 1, 1, 1)
	
	stats_grid = Gtk::Grid.new
	stats_headline_grid = Gtk::Grid.new
	save_load_reset_button_grid_grid = Gtk::Grid.new
	main_tab_grid_1.attach(stats_grid, 0, 2, 1, 1)
	main_tab_grid_1.attach(save_load_reset_button_grid_grid, 0, 3, 1, 1)
	main_tab_grid_1.attach(stats_headline_grid, 0, 4, 1, 1)
	
	skill_notebook_main_grid = Gtk::Grid.new
	main_tab_grid_1.attach(skill_notebook_main_grid, 0, 5, 1, 1)
	
	adjustment = Gtk::Adjustment.new(0, 0, 100, 1, 10, 0)
	level_spin_button = Gtk::SpinButton.new(adjustment, 1, 0)
	level_spin_button.set_numeric(true)
	level_spin_button.set_tooltip_text("Enter the level you are planning for.\nBe sure to hit \"enter\" if manually inputting a number.\nYou can also use mouse wheel and arrow keys to scroll through numbers.")
	
	level_spin_button_label = Gtk::Label.new("Level:     ")
	level_spin_button_label.set_tooltip_text("Enter the level you are planning for.\nBe sure to hit \"enter\" if manually inputting a number.\nYou can also use mouse wheel and arrow keys to scroll through numbers.")
	
	level_spin_button.value = @planner_character_info["Level"]
	
	planned_strength_label = Gtk::Label.new("Strength:     ")
	planned_constitution_label = Gtk::Label.new("Constitution:     ")
	planned_dexterity_label = Gtk::Label.new("Dexterity:     ")
	planned_agility_label = Gtk::Label.new("Agility:     ")
	planned_discipline_label = Gtk::Label.new("Discipline:     ")
	planned_aura_label = Gtk::Label.new("Aura:     ")
	planned_Logic_label = Gtk::Label.new("Logic:     ")
	planned_intuition_label = Gtk::Label.new("Intuition:     ")
	planned_wisdom_label = Gtk::Label.new("Wisdom:     ")
	planned_influence_label = Gtk::Label.new("Influence:     ")
	
	planned_strength_value_label = Gtk::Label.new("#{@planner_character_info["Starting Strength"]}")
	planned_constitution_value_label = Gtk::Label.new("#{@planner_character_info["Starting Constitution"]}")
	planned_dexterity_value_label = Gtk::Label.new("#{@planner_character_info["Starting Dexterity"]}")
	planned_agility_value_label = Gtk::Label.new("#{@planner_character_info["Starting Agility"]}")
	planned_discipline_value_label = Gtk::Label.new("#{@planner_character_info["Starting Discipline"]}")
	planned_aura_value_label = Gtk::Label.new("#{@planner_character_info["Starting Aura"]}")
	planned_Logic_value_label = Gtk::Label.new("#{@planner_character_info["Starting Logic"]}")
	planned_intuition_value_label = Gtk::Label.new("#{@planner_character_info["Starting Intuition"]}")
	planned_wisdom_value_label = Gtk::Label.new("#{@planner_character_info["Starting Wisdom"]}")
	planned_influence_value_label = Gtk::Label.new("#{@planner_character_info["Starting Influence"]}")
	
	level_spin_button_grid.attach(level_spin_button_label, 0, 0, 1, 1)
	level_spin_button_grid.attach(level_spin_button, 1, 0, 1, 1)
	
	all_stat_labels = [ planned_strength_label, planned_constitution_label, planned_dexterity_label, planned_agility_label, planned_discipline_label, planned_aura_label, planned_Logic_label, planned_intuition_label, planned_wisdom_label, planned_influence_label ]
		
	all_stat_value_labels = [ planned_strength_value_label, planned_constitution_value_label, planned_dexterity_value_label, planned_agility_value_label, planned_discipline_value_label, planned_aura_value_label, planned_Logic_value_label, planned_intuition_value_label, planned_wisdom_value_label, planned_influence_value_label ]
	
	row_position = 0
	all_stat_labels.each{ |label| stats_grid.attach(label, 0, row_position += 1, 1, 1) }
	
	row_position = 0
	all_stat_value_labels.each{ |label| stats_grid.attach(label, 1, row_position += 1, 1, 1) }
	
	total_ptps_label = Gtk::Label.new("PTPs: ")
	total_mtps_label = Gtk::Label.new("MTPs: ")
	
	current_ptps_label = Gtk::Label.new("PTPs: ")
	current_mtps_label = Gtk::Label.new("MTPs: ")
	
	blank_label = Gtk::Label.new("          ")
	
	skill_info_headline = Gtk::Label.new("Skill name:     PTP/MTP - Max ranks     Ranks per level    Max ranks wanted")
	stats_headline_grid.attach(skill_info_headline, 0, 1, 1, 1)
	
	stats_grid.attach(blank_label, 2, 1, 1, 1)
	
	stats_grid.attach(total_ptps_label, 3, 1, 1, 1)
	stats_grid.attach(total_mtps_label, 3, 2, 1, 1)
	
	stats_grid.attach(current_ptps_label, 3, 6, 1, 1)
	stats_grid.attach(current_mtps_label, 3, 7, 1, 1)
	
	stats_grid.attach(Gtk::Label.new, 0, 11, 1, 1)
	stats_grid.attach(Gtk::Label.new, 0, 13, 1, 1)
	
	@planner_all_ranks_per_level_entries = {}
	@planner_max_ranks_entries = {}
	@planner_labels_for_all_skills = {}
	
	reset_button = Gtk::Button.new(:label => "Reset")
	save_load_reset_button_grid_grid.attach(reset_button, 2, 0, 1, 1)
	reset_button.set_tooltip_text("Click to reset all inputs to 0.")
	
	reset_button.signal_connect("clicked") do
		@planner_all_ranks_per_level_entries.each{ |key,value| value.text = "" }
		@planner_max_ranks_entries.each{ |key,value| value.text = "" }
	end
	
	save_button = Gtk::Button.new(:label => "Save")
	save_load_reset_button_grid_grid.attach(save_button, 0, 0, 1, 1)
	save_button.set_tooltip_text("Save current skill goals and max ranks information.")
	
	save_button.signal_connect("clicked") do
		File.open("character_planner_#{checkname}.txt", "w") do |file|
			file.puts "# Ranks per level entries"
			@planner_all_ranks_per_level_entries.each do |key, value|
				file.puts "#{key}:: #{value.text}" if value.text.length > 0
			end
			file.puts "\n# Max ranks entries"
			@planner_max_ranks_entries.each do |key, value|
				file.puts "#{key}:: #{value.text}" if value.text.length > 0
			end
		end
	end
	
	load_button = Gtk::Button.new(:label => "Load")
	save_load_reset_button_grid_grid.attach(load_button, 1, 0, 1, 1)
	load_button.set_tooltip_text("Load saved information.")
	
	load_button.signal_connect("clicked") do
		file_name = "character_planner_#{checkname}.txt"
		if File.exist?(file_name)
			File.open("character_planner_#{checkname}.txt", "r") do |file|
				file.each_line do |line|
					if line.start_with?("# Ranks per level entries")
						@planner_current_hash = @planner_all_ranks_per_level_entries
					elsif line.start_with?("# Max ranks entries")
						@planner_current_hash = @planner_max_ranks_entries
					elsif line.include?(":: ")
						key, value = line.split(":: ")
						@planner_current_hash[key].text = value
					end
				end
			end
		end
	end
	
	def planner_create_entry(name, grid_name, row_number, column_number)
		@planner_all_ranks_per_level_entries[name] = Gtk::Entry.new
		@planner_all_ranks_per_level_entries[name].set_width_chars(5)
		@planner_all_ranks_per_level_entries[name].set_max_length(5)
		grid_name.attach(@planner_all_ranks_per_level_entries[name], column_number += 1, row_number, 1, 1)
		
		@planner_max_ranks_entries[name] = Gtk::Entry.new
		@planner_max_ranks_entries[name].set_width_chars(3)
		@planner_max_ranks_entries[name].set_max_length(3)
		grid_name.attach(@planner_max_ranks_entries[name], column_number += 1, row_number, 1, 1)
		
		grid_name.attach(@planner_labels_for_all_skills[name], column_number += 1, row_number, 1, 1) if @planner_labels_for_all_skills[name]
	end
	
	def planner_assign_skill_info(name, grid_name, row_number, column_number)
		@planner_labels_for_all_skills[name] = Gtk::Label.new('                    0')
		grid_name.attach(Gtk::Label.new(name), column_number, row_number, 1, 1)
		planner_create_entry(name, grid_name, row_number, column_number += 1)
	end
	
	skill_info_notebook = Gtk::Notebook.new
	
	#Combat Skills tab
	combat_skills_tab_grid = Gtk::Grid.new
	
	skill_info_notebook.append_page(combat_skills_tab_grid, Gtk::Label.new('Combat Skills'))
	#

	#General Skills tab
	general_skills_tab_grid = Gtk::Grid.new
	
	skill_info_notebook.append_page(general_skills_tab_grid, Gtk::Label.new('General Skills'))
	#
	
	#Magic Skills tab
	magic_skills_tab_grid = Gtk::Grid.new
	
	skill_info_notebook.append_page(magic_skills_tab_grid, Gtk::Label.new('Magic Skills'))
	#
	
	#Lore Skills tab
	lore_skills_tab_grid = Gtk::Grid.new
	
	skill_info_notebook.append_page(lore_skills_tab_grid, Gtk::Label.new('Lore Skills '))
	#
	
	skill_notebook_main_grid.attach(skill_info_notebook, 0, 0, 1, 1)

	row_number = -1
	starting_column_number = -1
	tab_to_add_skills_to = combat_skills_tab_grid

	@planner_all_skill_names.each{ |skill_name|
		@planner_labels_for_all_skills[skill_name] = Gtk::Label.new('                    0')
		column_number = starting_column_number.dup
		tab_to_add_skills_to.attach(Gtk::Label.new("#{@planner_skill_cost[skill_name]["Name"]}:     "), column_number += 1, row_number += 1, 1, 1)
		tab_to_add_skills_to.attach(Gtk::Label.new("#{@planner_skill_cost[skill_name]["PTP"]}/#{@planner_skill_cost[skill_name]["MTP"]} - #{@planner_skill_cost[skill_name]["Max Ranks"]}     "), column_number += 1, row_number, 1, 1)
		planner_create_entry(@planner_skill_cost[skill_name]["Name"], tab_to_add_skills_to, row_number, column_number) if skill_name !~ /Spell Research|Elemental Lore|Spiritual Lore|Sorcerous Lore|Mental Lore/
		if skill_name == "Dodging"
			row_number = -1
			starting_column_number = -1
			tab_to_add_skills_to = general_skills_tab_grid
		elsif skill_name == "Survival"
			row_number = -1
			starting_column_number = -1
			tab_to_add_skills_to = magic_skills_tab_grid
		elsif skill_name == "Spell Research"
			column_number -= 1
			if @planner_character_info["Profession"] == "Bard"
				planner_assign_skill_info("Minor Elemental", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Bard", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Cleric"
				planner_assign_skill_info("Major Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Cleric", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Empath"
				planner_assign_skill_info("Major Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Empath", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Monk"
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Minor Mental", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Paladin"
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Paladin", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Ranger"
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Ranger", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Rogue" || @planner_character_info["Profession"] == "Warrior"
				planner_assign_skill_info("Minor Elemental", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Sorcerer"
				planner_assign_skill_info("Minor Elemental", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Minor Spiritual", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Sorcerer", tab_to_add_skills_to, row_number += 1, column_number)
			elsif @planner_character_info["Profession"] == "Wizard"
				planner_assign_skill_info("Major Elemental", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Minor Elemental", tab_to_add_skills_to, row_number += 1, column_number)
				planner_assign_skill_info("Wizard", tab_to_add_skills_to, row_number += 1, column_number)
			end
			row_number = -1
			starting_column_number = -1
			tab_to_add_skills_to = lore_skills_tab_grid
		elsif skill_name == "Elemental Lore"
			planner_assign_skill_info("Air", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Earth", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Fire", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Water", tab_to_add_skills_to, row_number += 1, column_number)
		elsif skill_name == "Spiritual Lore"
			planner_assign_skill_info("Blessings", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Religion", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Summoning", tab_to_add_skills_to, row_number += 1, column_number)
		elsif skill_name == "Sorcerous Lore"
			planner_assign_skill_info("Demonology", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Necromancy", tab_to_add_skills_to, row_number += 1, column_number)
		elsif skill_name == "Mental Lore"
			planner_assign_skill_info("Divination", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Manipulation", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Telepathy", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Transference", tab_to_add_skills_to, row_number += 1, column_number)
			planner_assign_skill_info("Transformation", tab_to_add_skills_to, row_number += 1, column_number)
		end
	}
	
	@planner_all_ranks_per_level_entries.each{ |key,value| value.set_tooltip_text("Enter number of ranks per level you want for this skill.\nWhole numbers and fractions can be used.\nEnter + to add number of ranks to the total. Example if you enter 2+ then script will calculate 2 ranks per level + 2.\nEnter in the following format examples:\n1\n2.5\n3+") if !value.destroyed? }
	
	@planner_max_ranks_entries.each{ |key,value| value.set_tooltip_text("Enter the maximum number of ranks you want for this skill.\nLeave blank if you don't want a max.") if !value.destroyed? }
		
	def planner_update_spells_lores(all_skill_names_to_check, parent_skill_name, key, value, level_spin_button, text)
		total_skills_ranks = 0
		all_skill_names_to_check.each{ |spell_name| total_skills_ranks += @planner_labels_for_all_skills[spell_name].text.to_f if @planner_labels_for_all_skills[spell_name] && !@planner_labels_for_all_skills[spell_name].destroyed? && spell_name != key }
		value.text = @planner_skill_cost[parent_skill_name]["Max Ranks"].to_s if text.to_f > @planner_skill_cost[parent_skill_name]["Max Ranks"]
		check_level = level_spin_button.value.to_i.dup
		check_level = 99 if check_level == 100
		if @planner_add_skill_to_total
			new_skill_total = ((value.text.to_f * (check_level + 1)) + value.text.to_f).truncate
		else
			new_skill_total = (value.text.to_f * (check_level + 1)).truncate
		end
		max_ranks_possible = (@planner_skill_cost[parent_skill_name]["Max Ranks"] * (check_level + 1)) + @planner_skill_cost[parent_skill_name]["Max Ranks"]
		available_skill_ranks = max_ranks_possible - total_skills_ranks.to_i
		if new_skill_total > available_skill_ranks && (@planner_max_ranks_entries[key].text.length <= 0 || @planner_max_ranks_entries[key].text.to_i >= available_skill_ranks)
			@planner_labels_for_all_skills[key].set_text("                    #{available_skill_ranks.to_s}")
		elsif (new_skill_total > @planner_max_ranks_entries[key].text.to_i) && @planner_max_ranks_entries[key].text.length > 0
			@planner_labels_for_all_skills[key].set_text("                    #{@planner_max_ranks_entries[key].text}")
		else
			@planner_labels_for_all_skills[key].set_text("                    #{new_skill_total.to_s}")
		end
		@planner_labels_for_all_skills[key].set_text("                    0") if @planner_labels_for_all_skills[key].text.to_i < 0
	end
	
	def planner_calculate_skill_bonus(amount)
		10.times{
			@planner_temp_number_of_ranks -= 1
			@planner_total_bonus_amount += amount
			counter += 1
			break if @planner_temp_number_of_ranks == 0
		}
	end
	
	calculate_skill_cost_and_tps = proc{
		if level_spin_button.value.to_i == 100
			ptps_plus_post_cap_tps = @planner_total_ptps + @planner_total_post_cap_tps
			mtps_plus_post_cap_tps = @planner_total_mtps + @planner_total_post_cap_tps
			
			current_ptps_with_post_cap_tps = (@planner_current_ptps + @planner_total_post_cap_tps) - @planner_total_ptp_used
			current_mtps_with_post_cap_tps = (@planner_current_mtps + @planner_total_post_cap_tps) - @planner_total_mtp_used
			
			total_ptps_label.set_text("Total PTPs: #{ptps_plus_post_cap_tps.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			total_mtps_label.set_text("Total MTPs: #{mtps_plus_post_cap_tps.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			
			total_ptps_label.set_tooltip_text("Your total PTPs.\n#{@planner_total_ptps} from pre-cap.\n#{@planner_total_post_cap_tps} from post-cap.")
			total_mtps_label.set_tooltip_text("Your total MTPs.\n#{@planner_total_mtps} from pre-cap.\n#{@planner_total_post_cap_tps} from post-cap.")
			
			current_ptps_label.set_text("Current PTPs: #{current_ptps_with_post_cap_tps.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			current_mtps_label.set_text("Current MTPs: #{current_mtps_with_post_cap_tps.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			
			total_ptps_label.set_tooltip_text("Your remaining PTPs after subtracting skill costs.")
			total_mtps_label.set_tooltip_text("Your remaining MTPs after subtracting skill costs.")
		else
			total_ptps_label.set_text("Total PTPs: #{@planner_total_ptps.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			total_mtps_label.set_text("Total MTPs: #{@planner_total_mtps.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			total_ptps_label.set_tooltip_text("Your total PTPs.")
			total_mtps_label.set_tooltip_text("Your total MTPs.")
			
			if @planner_total_ptp_used > @planner_current_ptps && @planner_current_mtps > @planner_total_mtp_used
				needed_tp_points = @planner_total_ptp_used - @planner_current_ptps
				current_ptps_minus_costs = 0
				current_mtps_minus_costs = @planner_current_mtps - (@planner_total_mtp_used + (needed_tp_points * 2))
			elsif @planner_total_mtp_used > @planner_current_mtps && @planner_current_ptps > @planner_total_ptp_used
				needed_tp_points = @planner_total_mtp_used - @planner_current_mtps
				current_ptps_minus_costs = @planner_current_ptps - (@planner_total_ptp_used + (needed_tp_points * 2))
				current_mtps_minus_costs = 0
			else
				current_ptps_minus_costs = @planner_current_ptps - @planner_total_ptp_used
				current_mtps_minus_costs = @planner_current_mtps - @planner_total_mtp_used
			end			
			
			current_ptps_label.set_text("Current PTPs: #{current_ptps_minus_costs.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			current_mtps_label.set_text("Current MTPs: #{current_mtps_minus_costs.to_s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse}")
			current_ptps_label.set_tooltip_text("Your remaining PTPs after subtracting skill costs.")
			current_mtps_label.set_tooltip_text("Your remaining MTPs after subtracting skill costs.")
		end
	}
	
	def planner_add_up_skill_training_costs(level_spin_button, value, key)
		level_check = level_spin_button
		level_check = 99 if level_check == 100
		skill_ranks_to_quadruple = 0
		skill_ranks_to_double = 0
		skill_ranks_to_single = 0
		if value > ((level_check * 2) + 4)
			skill_ranks_to_quadruple = (value) - ((level_check * 2) + 4)
			skill_ranks_to_double = (value - skill_ranks_to_quadruple) - (level_check + 2)
			skill_ranks_to_single = (value - skill_ranks_to_quadruple - skill_ranks_to_double)
		elsif value > level_check + 2
			skill_ranks_to_double = (value) - (level_check + 2)
			skill_ranks_to_single = (value - skill_ranks_to_double)
		else
			skill_ranks_to_single = value
		end
		@planner_total_ptp_used += (@planner_skill_cost[key]["PTP"] * skill_ranks_to_single)
		@planner_total_ptp_used += ((@planner_skill_cost[key]["PTP"] * 2) * skill_ranks_to_double)
		@planner_total_ptp_used += ((@planner_skill_cost[key]["PTP"] * 4) * skill_ranks_to_quadruple)

		@planner_total_mtp_used += (@planner_skill_cost[key]["MTP"] * skill_ranks_to_single)
		@planner_total_mtp_used += ((@planner_skill_cost[key]["MTP"] * 2) * skill_ranks_to_double)
		@planner_total_mtp_used += ((@planner_skill_cost[key]["MTP"] * 4) * skill_ranks_to_quadruple)
	end
	
	def planner_add_up_costs_for_multiple_skills(all_skill_names_to_check, level_spin_button, parent_skill_name)
		total_skill_ranks_in_category = 0
		all_skill_names_to_check.each{ |skill_name| total_skill_ranks_in_category += @planner_labels_for_all_skills[skill_name].text.to_i }
		planner_add_up_skill_training_costs(level_spin_button.value.to_i, total_skill_ranks_in_category, parent_skill_name)
	end
	
	@planner_all_ranks_per_level_entries.each{ |key,value|
		value.signal_connect("changed") do
			text = value.text
			text.gsub!(/[^0-9.+]/, '')
			if text =~ /\+/
				@planner_add_skill_to_total = true
			else
				@planner_add_skill_to_total = nil
			end
			value.text = text
			if key =~ /^(Major Elemental|Minor Elemental|Bard|Major Spiritual|Minor Spiritual|Cleric|Empath|Minor Mental|Paladin|Ranger|Sorcerer|Wizard)$/
				all_skill_names_to_check = @planner_all_spell_skill_names
				parent_skill_name = "Spell Research"
				planner_update_spells_lores(all_skill_names_to_check, parent_skill_name, key, value, level_spin_button, text)
			elsif key =~ /^(Air|Earth|Fire|Water)$/
				all_skill_names_to_check = @planner_all_elemental_lore_names
				parent_skill_name = "Elemental Lore"
				planner_update_spells_lores(all_skill_names_to_check, parent_skill_name, key, value, level_spin_button, text)
			elsif key =~ /^(Blessings|Religion|Summoning)$/
				all_skill_names_to_check = @planner_all_spiritual_lore_names
				parent_skill_name = "Spiritual Lore"
				planner_update_spells_lores(all_skill_names_to_check, parent_skill_name, key, value, level_spin_button, text)
			elsif key =~ /^(Demonology|Necromancy)$/
				all_skill_names_to_check = @planner_all_sorcerous_lore_names
				parent_skill_name = "Sorcerous Lore"
				planner_update_spells_lores(all_skill_names_to_check, parent_skill_name, key, value, level_spin_button, text)
			elsif key =~ /^(Divination|Manipulation|Telepathy|Transference|Transformation)$/
				all_skill_names_to_check = @planner_all_mental_lore_names
				parent_skill_name = "Mental Lore"
				planner_update_spells_lores(all_skill_names_to_check, parent_skill_name, key, value, level_spin_button, text)
			else
				value.text = @planner_skill_cost[key]["Max Ranks"].to_s if text.to_f > @planner_skill_cost[key]["Max Ranks"]
				check_level = level_spin_button.value.to_i.dup
				check_level = 99 if check_level == 100
				if @planner_add_skill_to_total
					new_skill_total = ((value.text.to_f * (check_level + 1)) + value.text.to_f).truncate
				else
					new_skill_total = (value.text.to_f * (check_level + 1)).truncate
				end
				@planner_all_ranks_per_level_entries[key].text.to_i
				if (new_skill_total > @planner_max_ranks_entries[key].text.to_i) && @planner_max_ranks_entries[key].text.length > 0
					@planner_labels_for_all_skills[key].set_text("                    #{@planner_max_ranks_entries[key].text}")
				else
					@planner_labels_for_all_skills[key].set_text("                    #{new_skill_total.to_s}")
				end
			end
			
			@planner_skill_cost[key]["Ranks"] = @planner_labels_for_all_skills[key].text.to_i
			@planner_skill_cost[key]["Ranks"] += @planner_character_info["Ascension Skills"][key]
			
			@planner_temp_number_of_ranks = @planner_labels_for_all_skills[key].text.to_i.dup
			@planner_temp_number_of_ranks += @planner_character_info["Ascension Skills"][key]
			@planner_total_bonus_amount = 0
			all_bonus_amounts = [ 5, 4, 3, 2 ]
			all_bonus_amounts.each{ |amount| planner_calculate_skill_bonus(amount) if @planner_temp_number_of_ranks > 0 }
			@planner_total_bonus_amount += @planner_temp_number_of_ranks if @planner_temp_number_of_ranks > 0
			@planner_skill_cost[key]["Bonus"] = @planner_total_bonus_amount
			
			@planner_total_ptp_used = 0
			@planner_total_mtp_used = 0
			
			all_skill_names_to_check = @planner_all_spell_skill_names
			planner_add_up_costs_for_multiple_skills(all_skill_names_to_check, level_spin_button, "Spell Research")
			
			all_skill_names_to_check = @planner_all_elemental_lore_names
			planner_add_up_costs_for_multiple_skills(all_skill_names_to_check, level_spin_button, "Elemental Lore")
			
			all_skill_names_to_check = @planner_all_spiritual_lore_names
			planner_add_up_costs_for_multiple_skills(all_skill_names_to_check, level_spin_button, "Spiritual Lore")
			
			all_skill_names_to_check = @planner_all_sorcerous_lore_names
			planner_add_up_costs_for_multiple_skills(all_skill_names_to_check, level_spin_button, "Sorcerous Lore")
			
			all_skill_names_to_check = @planner_all_mental_lore_names
			planner_add_up_costs_for_multiple_skills(all_skill_names_to_check, level_spin_button, "Mental Lore")

			@planner_labels_for_all_skills.each{ |key,value|
				if value.text.to_i > 0 && !value.destroyed? && value.text
					if key !~ /^(Major Elemental|Minor Elemental|Bard|Major Spiritual|Minor Spiritual|Cleric|Empath|Minor Mental|Paladin|Ranger|Sorcerer|Wizard|Air|Earth|Fire|Water|Blessings|Religion|Summoning|Demonology|Necromancy|Divination|Manipulation|Telepathy|Transference|Transformation)$/
						planner_add_up_skill_training_costs(level_spin_button.value.to_i, value.text.to_i, key)
					end
				end
			}
			calculate_skill_cost_and_tps.call
			planner_update_all_info_on_stats_tab(level_spin_button.value.to_i)
		end
	}
	
	@planner_max_ranks_entries.each{ |key,value|
		value.signal_connect("changed") do
			text = value.text
			text.gsub!(/[^0-9]/, '')
			value.text = text
			temp_value = @planner_all_ranks_per_level_entries[key].text
			@planner_all_ranks_per_level_entries[key].text = ""
			@planner_all_ranks_per_level_entries[key].text = temp_value
		end
	}
	
	all_stat_labels.each{ |label| label.set_tooltip_text("Your base stats at the specified level. Does NOT include stats from ascension or enhancives.") }
	
	def planner_update_tps
		@planner_stat_name_and_current_values = @planner_all_stat_names_in_order.zip(@planner_all_planned_stat_values).to_h
		
		@planner_tp_strength = @planner_stat_name_and_current_values["Strength"]
		@planner_tp_constitution = @planner_stat_name_and_current_values["Constitution"]
		@planner_tp_dexterity = @planner_stat_name_and_current_values["Dexterity"]
		@planner_tp_agility = @planner_stat_name_and_current_values["Agility"]
		@planner_tp_discipline = @planner_stat_name_and_current_values["Discipline"]
		@planner_tp_aura = @planner_stat_name_and_current_values["Aura"]
		@planner_tp_logic = @planner_stat_name_and_current_values["Logic"]
		@planner_tp_intuition = @planner_stat_name_and_current_values["Intuition"]
		@planner_tp_wisdom = @planner_stat_name_and_current_values["Wisdom"]
		@planner_tp_influence = @planner_stat_name_and_current_values["Influence"]
		
		@planner_both_prime_stats.each do |stat|
			case stat
			when "Strength"
				@planner_tp_strength *= 2
			when "Constitution"
				@planner_tp_constitution *= 2
			when "Dexterity"
				@planner_tp_dexterity *= 2
			when "Agility"
				@planner_tp_agility *= 2
			when "Discipline"
				@planner_tp_discipline *= 2
			when "Aura"
				@planner_tp_aura *= 2
			when "Logic"
				@planner_tp_logic *= 2
			when "Intuition"
				@planner_tp_intuition *= 2
			when "Wisdom"
				@planner_tp_wisdom *= 2
			when "Influence"
				@planner_tp_influence *= 2
			end
		end

		@planner_new_ptps = ((@planner_tp_strength + @planner_tp_constitution + @planner_tp_dexterity + @planner_tp_agility + ((@planner_tp_aura + @planner_tp_discipline) / 2)) / 20) + 25
		@planner_new_mtps = ((@planner_tp_logic + @planner_tp_intuition + @planner_tp_wisdom + @planner_tp_influence + ((@planner_tp_aura + @planner_tp_discipline) / 2)) / 20) + 25
	
		@planner_total_ptps += @planner_new_ptps
		@planner_total_mtps += @planner_new_mtps
		
		@planner_current_ptps += @planner_new_ptps
		@planner_current_mtps += @planner_new_mtps
	end
	
	level_spin_button.signal_connect('value-changed') do		
		@planner_all_planned_stat_values = @planner_all_stat_starting_values.dup
		
		@planner_total_ptps = 0
		@planner_total_mtps = 0
		
		@planner_current_ptps = 0
		@planner_current_mtps = 0
		
		planner_update_tps

		for level in 1..level_spin_button.value.to_i do
			@planner_all_stat_growth_values.each_with_index do |stat_growth_value, index|
				grow_stat_interval = [@planner_all_planned_stat_values[index] / stat_growth_value, 1].max
				@planner_all_planned_stat_values[index] += 1 if level % grow_stat_interval == 0
				@planner_all_planned_stat_values[index] = 100 if @planner_all_planned_stat_values[index] > 100
			end
			planner_update_tps
		end
		
		@planner_all_ranks_per_level_entries.each{ |key,value|
			if value.text.length > 0 && !value.destroyed?
				original_text = value.text
				value.text = ""
				value.text = original_text
			end
		}

		@planner_all_planned_stat_values.each_with_index do |stat_current_value, index|
			all_stat_value_labels[index].set_text(stat_current_value.to_s)
		end
		
		calculate_skill_cost_and_tps.call
	end

	spin_button_original_value = level_spin_button.value.dup
	if level_spin_button.value == 0
		level_spin_button.value += 1
	else
		level_spin_button.value = 0
	end
	level_spin_button.value = spin_button_original_value
	
	main_notebook.append_page(main_tab_grid_1, main_tab_name)
	#
	
	#Second tab
	@planner_stats_tab_labels = {}
	@planner_stats_tab_grids = {}
	@planner_stats_tab_grids["Main Grid"] = Gtk::Grid.new
	@planner_stats_tab_grids["Main Headline"] = Gtk::Grid.new
	@planner_stats_tab_grids["Character Stats"] = Gtk::Grid.new
	@planner_stats_tab_grids["Other Stats"] = Gtk::Grid.new
	
	@planner_stats_tab_grids["Main Grid"].attach(@planner_stats_tab_grids["Main Headline"], 0, 0, 1, 1)
	@planner_stats_tab_grids["Main Grid"].attach(@planner_stats_tab_grids["Character Stats"], 0, 1, 1, 1)
	@planner_stats_tab_grids["Main Grid"].attach(@planner_stats_tab_grids["Other Stats"], 0, 2, 1, 1)
	
	@planner_stats_tab_labels["Main Headline"] = Gtk::Label.new("All stats on this page include ascension information and are based on the\nplanned level and skill goals set on the main page.")
	@planner_stats_tab_grids["Main Headline"].attach(@planner_stats_tab_labels["Main Headline"], 0, 0, 1, 1)
	@planner_stats_tab_grids["Main Headline"].attach(Gtk::Label.new, 0, 1, 1, 1)
	
	#List character stat information
	@planner_stats_tab_labels["Character Stats Headline Name"] = Gtk::Label.new("Name")
	@planner_stats_tab_labels["Character Stats Headline Stat Value"] = Gtk::Label.new("               Stat Value")
	@planner_stats_tab_labels["Character Stats Headline Stat Bonus"] = Gtk::Label.new("               Stat Bonus")
	@planner_stats_tab_grids["Character Stats"].attach(@planner_stats_tab_labels["Character Stats Headline Name"], 0, 0, 1, 1)
	@planner_stats_tab_grids["Character Stats"].attach(@planner_stats_tab_labels["Character Stats Headline Stat Value"], 1, 0, 1, 1)
	@planner_stats_tab_grids["Character Stats"].attach(@planner_stats_tab_labels["Character Stats Headline Stat Bonus"], 2, 0, 1, 1)
	
	def planner_update_all_current_stat_info(planned_level)
		@planner_stat_info_with_asc_value = {}
		@planner_stat_info_with_asc_bonus = {}

		row_number = 0
		@planner_all_stat_names_in_order.each{ |stat_name| 
			@planner_stat_info_with_asc_value[stat_name] = @planner_stat_name_and_current_values[stat_name] + @planner_character_info["Ascension Skills"][stat_name]
			@planner_stat_info_with_asc_value[stat_name] += 10 if @planner_character_info["Profession"] == "Monk" && planned_level >= 50
			@planner_stat_info_with_asc_bonus[stat_name] = ((@planner_stat_info_with_asc_value[stat_name].to_f - 50) / 2).truncate + @planner_race_stat_bonuses[@planner_character_info["Race"]][stat_name]
			if @planner_stats_tab_labels["Current #{stat_name} Name"].nil?
				@planner_stats_tab_labels["Current #{stat_name} Name"] = Gtk::Label.new(stat_name)
				@planner_stats_tab_grids["Character Stats"].attach(@planner_stats_tab_labels["Current #{stat_name} Name"], 0, row_number += 1, 1, 1)
				@planner_stats_tab_labels["Current #{stat_name} Name"].set_tooltip_text("Your stats at the level set in the Main tab.\nMonks get +10 to all stats at level 50.")
			end
		}
		
		row_number = 0
		@planner_stat_info_with_asc_value.each{ |stat_name,value|
			if @planner_stats_tab_labels["Current #{stat_name} Stat Value"].nil?
				@planner_stats_tab_labels["Current #{stat_name} Stat Value"] = Gtk::Label.new("               #{value}")
				@planner_stats_tab_grids["Character Stats"].attach(@planner_stats_tab_labels["Current #{stat_name} Stat Value"], 1, row_number += 1, 1, 1)
			else
				@planner_stats_tab_labels["Current #{stat_name} Stat Value"].set_text(value.to_s)
			end
		}
		
		row_number = 0
		@planner_stat_info_with_asc_bonus.each{ |stat_name,value|
			if @planner_stats_tab_labels["Current #{stat_name} Stat Bonus"].nil?
				@planner_stats_tab_labels["Current #{stat_name} Stat Bonus"] = Gtk::Label.new("               #{value}")
				@planner_stats_tab_grids["Character Stats"].attach(@planner_stats_tab_labels["Current #{stat_name} Stat Bonus"], 2, row_number += 1, 1, 1)
			else
				@planner_stats_tab_labels["Current #{stat_name} Stat Bonus"].set_text(value.to_s)
			end
		}
	end
	
	#
		
	#Calculate Melee AS
	@planner_stats_tab_labels["Melee AS"] = Gtk::Label.new("Melee AS:     0")
	@planner_stats_tab_labels["Max Possible Melee AS"] = Gtk::Label.new("Max possible Melee AS:     0")
	@planner_stats_tab_grids["Other Stats"].attach(Gtk::Label.new, 0, 0, 1, 1)
	@planner_stats_tab_grids["Other Stats"].attach(@planner_stats_tab_labels["Melee AS"], 0, 1, 1, 1)
	@planner_stats_tab_grids["Other Stats"].attach(Gtk::Label.new("                  "), 1, 1, 1, 1)
	@planner_stats_tab_grids["Other Stats"].attach(@planner_stats_tab_labels["Max Possible Melee AS"], 2, 1, 1, 1)
	if @planner_character_info["Profession"] =~ /Bard|Cleric|Monk|Ranger|Sorcerer|Warrior|Wizard/
		@planner_stats_tab_grids["Other Stats"].attach(Gtk::Label.new("                  "), 0, 2, 1, 1)
		if @planner_character_info["Profession"] == "Warrior"
			@planner_stats_tab_labels["Service Bonus"] = Gtk::Label.new("Weapon Service Bonus:     0")
			@planner_stats_tab_labels["Max Possible Service Bonus"] = Gtk::Label.new("Max Weapon Service Bonus:     0")
			@planner_stats_tab_labels["Service Bonus 2"] = Gtk::Label.new("Armor Service Bonus:     0")
			@planner_stats_tab_labels["Max Possible Service Bonus 2"] = Gtk::Label.new("Max Armor Service Bonus:     0")
		else
			@planner_stats_tab_labels["Service Bonus"] = Gtk::Label.new("Service Bonus:     0")
			@planner_stats_tab_labels["Max Possible Service Bonus"] = Gtk::Label.new("Max possible Service Bonus:     0")
			@planner_stats_tab_labels["Service Bonus 2"] = Gtk::Label.new
			@planner_stats_tab_labels["Max Possible Service Bonus 2"] = Gtk::Label.new
		end
		@planner_stats_tab_grids["Other Stats"].attach(@planner_stats_tab_labels["Service Bonus"], 0, 3, 1, 1)
		@planner_stats_tab_grids["Other Stats"].attach(Gtk::Label.new("                  "), 1, 3, 1, 1)
		@planner_stats_tab_grids["Other Stats"].attach(@planner_stats_tab_labels["Max Possible Service Bonus"], 2, 3, 1, 1)
			
		@planner_stats_tab_grids["Other Stats"].attach(@planner_stats_tab_labels["Service Bonus 2"], 0, 4, 1, 1)
		@planner_stats_tab_grids["Other Stats"].attach(Gtk::Label.new("                  "), 1, 4, 1, 1)
		@planner_stats_tab_grids["Other Stats"].attach(@planner_stats_tab_labels["Max Possible Service Bonus 2"], 2, 4, 1, 1)
	end
	
	def planner_update_melee_as(planned_level)
		Planner_current_as.reset_bonus_and_tooltip
		Planner_max_as.reset_bonus_and_tooltip(@planner_character_info["Profession"])
		
		#Strength
		Planner_current_as.new(@planner_stat_info_with_asc_bonus["Strength"], "Strength bonus")
		Planner_max_as.new("Strength bonus", 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Strength"], ": 100 Strength stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Strength"]} AS, Asc Strength 40 ranks: 20 AS.")
		#
	
		#Melee weapon skills
		all_melee_weapon_as = []
		@planner_all_melee_weapon_skill_names.each{ |weapon_name| all_melee_weapon_as.push(@planner_skill_cost[weapon_name]["Bonus"]) }
		Planner_current_as.new(all_melee_weapon_as.max, "weapon skill")
		
		melee_weapon_max_as_bonus = 251
		max_weapon_skill_ranks = 101
		if @planner_skill_cost["Edged Weapons"]["Max Ranks"] == 2
			melee_weapon_max_as_bonus += 101
			max_weapon_skill_ranks += 101
		end
		Planner_max_as.new("Weapon skill", melee_weapon_max_as_bonus, ": #{max_weapon_skill_ranks} Weapon ranks: #{melee_weapon_max_as_bonus - 50} AS, Asc Weapon 50 ranks: 50 AS.")
		#

		#Combat Maneuvers
		Planner_current_as.new((@planner_skill_cost["Combat Maneuvers"]["Ranks"] / 2), "CM")
		
		if @planner_skill_cost["Combat Maneuvers"]["Max Ranks"] == 2
			cm_max_as_bonus = 126
			max_cm_skill_ranks = 202
		else
			cm_max_as_bonus = 75
			max_cm_skill_ranks = 100
		end
		Planner_max_as.new("CM skill", cm_max_as_bonus, ": #{max_cm_skill_ranks} CM ranks: #{cm_max_as_bonus - 25} AS, Asc CM 50 ranks: 25 AS.")
		#
		
		#Society skills
		society_skill_names_known = ""
		society_as_bonus = 0
		
		#COL
		if Spell[9904].known?
			society_skill_names_known += "Sign of Striking, "
			society_as_bonus += 5
		end
		
		if Spell[9908].known?
			society_skill_names_known += "Sign of Smiting, "
			society_as_bonus += 10
		end
		
		if Spell[9912].known?
			society_skill_names_known += "Sign of Swords, "
			society_as_bonus += 20
		end
		
		#Voln
		if Spell[9805].known?
			society_skill_names_known += "Symbol of Courage, "
			society_as_bonus += 26
		end
		
		#GOS
		if Spell[9708].known?
			society_skill_names_known += "Sigil of Offense, "
			society_as_bonus += 20
		end
	
		Planner_current_as.new(society_as_bonus, "Society Skills: #{society_skill_names_known.chop.chop}")
		
		if Spell[9901].known?
			society_max_as_bonus = 35
		elsif Spell[9801].known?
			society_max_as_bonus = 26
		elsif Spell[9701].known?
			society_max_as_bonus = 20
		else
			society_max_as_bonus = 35
		end
		
		Planner_max_as.new("Society Skills", society_max_as_bonus, "")
		#
		
		#Spells
		if @planner_character_info["Profession"] =~ /Cleric|Empath/
			#Bravery
			skill_name = "Bravery (211)"
			spell_circle = "Major Spiritual"
			max_bonus = 15
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 11 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
		
			#Heroism
			skill_name = "Heroism (215)"
			max_bonus = 25
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 15 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
				
			#Blessings lore bonus for Heroism
			lore_name = "Blessings"
			skill_name = "#{lore_name} for Heroism"
			max_bonus = 25
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 15 ? (@planner_skill_cost[lore_name]["Ranks"] / 10) : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 200 #{lore_name} ranks: 20 AS, Asc #{lore_name} 50 ranks: 5 AS")
		end

		if @planner_character_info["Profession"] == "Cleric"
			#Benediction (307)
			skill_name = "Benediction (307)"
			spell_circle = "Cleric"
			max_bonus = 15
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 7 ? [((@planner_labels_for_all_skills[spell_circle].text.to_i - 7) / 2) + 5, max_bonus].min : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": Base: 5 AS, 27 Cleric ranks: 10 AS")
		end
		
		if @planner_character_info["Profession"] =~ /Bard|Rogue|Sorcerer|Warrior|Wizard/
			#Elemental Targeting (425)
			skill_name = "Elemental Targeting (425)"
			spell_circle = "Minor Elemental"
			max_bonus = 50
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 25 ? [((@planner_labels_for_all_skills[spell_circle].text.to_i - 25) / 2) + 25, max_bonus].min : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": Base: 25 AS, 75 Minor Elemental ranks: 25 AS")
		end
		
		if @planner_character_info["Profession"] == "Wizard"
			#Strength (509)
			skill_name = "Strength (509)"
			spell_circle = "Major Elemental"
			max_bonus = 15
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 9 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
		
			#Earth lore bonus for Strength
			lore_name = "Earth"
			skill_name = "#{lore_name} for Strength"
			max_bonus = 19
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 9 ? Planner_Seeds.seed(4, @planner_skill_cost[lore_name]["Ranks"]) : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 197 #{lore_name} ranks: 16 AS, Asc #{lore_name} 50 ranks: 3 AS")
		end
		
		if @planner_character_info["Profession"] == "Ranger"
			#Phoen's Strength (606)
			skill_name = "Phoen's Strength (606)"
			spell_circle = "Ranger"
			max_bonus = 10
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 6 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
		end
		
		if @planner_character_info["Profession"] == "Bard"
			#Kai's Triumph Song (1007)
			skill_name = "Kai's Triumph Song (1007)"
			spell_circle = "Bard"
			max_bonus = 20
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 7 ? [((@planner_labels_for_all_skills[spell_circle].text.to_i - 7)  + 10), max_bonus].min : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": Base: 10 AS, 17 Bard ranks: 10 AS")
			
			#Telepathy for Kai's Triumph Song
			lore_name = "Telepathy"
			skill_name = "#{lore_name} for Kai's"
			max_bonus = 15
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 7 ? Planner_Seeds.seed(3, @planner_skill_cost[lore_name]["Ranks"]) : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 100 #{lore_name}: 11 AS, Asc #{lore_name} 50 ranks: 4 AS")
		end
		
		if @planner_character_info["Profession"] == "Empath"
			#Empathic Focus (1109)
			skill_name = "Empathic Focus (1109)"
			spell_circle = "Empath"
			max_bonus = 15
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 9 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
		
			#Intensity (1130)
			skill_name = "Intensity (1130)"
			max_bonus = 55
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 30 ? [((@planner_labels_for_all_skills[spell_circle].text.to_i - 30) / 2) + 20, max_bonus].min : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": Base: 20 AS, 100 Empath ranks: 35 AS")
		end
		
		if @planner_character_info["Profession"] == "Paladin"
			#Dauntless (1606)
			skill_name = "Dauntless (1606)"
			spell_circle = "Paladin"
			max_bonus = 10
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 6 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
		
			#Patron's Blessing (1611)
			skill_name = "Patron's Blessing (1611)"
			max_bonus = 38
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 11 ? [(((@planner_labels_for_all_skills[spell_circle].text.to_i - 11) * 0.75).truncate + 10) / 2, max_bonus].min : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": Base: 5 AS, 100 Paladin ranks: 33 AS")
			
			#Zealot (1617)
			skill_name = "Zealot (1617)"
			max_bonus = 30
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 17 ? 30 : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, "")
			
			#Religion for Zealot (1617)
			lore_name = "Religion"
			skill_name = "#{lore_name} for Zealot"
			max_bonus = 21
			as_bonus = @planner_labels_for_all_skills[spell_circle].text.to_i >= 17 ? Planner_Seeds.seed(1, @planner_skill_cost[lore_name]["Ranks"]) : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 190 #{lore_name}: 19 AS, Asc #{lore_name} 41 ranks: 2 AS")
		end
		
		if @planner_character_info["Profession"] =~ /Warrior|Rogue|Paladin/
			#Weapon Specialization
			skill_name = "Weapon Specialization"
			max_bonus = 10
			as_bonus = @planner_character_info["CMAN Skills"][skill_name] * 2
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 2 AS per rank")
		end
		
		if @planner_character_info["Profession"] =~ /Warrior|Rogue|Monk|Paladin/
			#Weapon Specialization
			skill_name = "Surge of Strength"
			max_bonus = 16
			as_bonus = @planner_character_info["CMAN Skills"][skill_name] >= 1 ? ((@planner_character_info["CMAN Skills"][skill_name] * 4) + 12) / 2 : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 6 AS plus 2 AS per rank")
		end
		
		if @planner_character_info["Profession"] == "Warrior"
			#Weapon Bonding
			skill_name = "Weapon Bonding"
			max_bonus = 10
			as_bonus = planned_level >= 25 ? max_bonus : 0
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": 2 AS per rank")
		end
		
		if @planner_character_info["Profession"] =~ /Warrior|Rogue|Monk/
			#Martial Mastery
			skill_name = "Martial Mastery"
			max_bonus = 50
			
			all_melee_weapons = []
			@planner_all_melee_weapon_skill_names.each{ |weapon_name| all_melee_weapons.push(@planner_skill_cost[weapon_name]["Ranks"]) }
			top_three = all_melee_weapons.max(3)

			total_spells_known = @planner_labels_for_all_skills["Minor Spiritual"].text.to_i + @planner_labels_for_all_skills["Minor Elemental"].text.to_i + [(@planner_labels_for_all_skills["Monk"].text.to_i - 20), 0].max
			total_spells_known = [total_spells_known - 5, 0].max
			as_bonus = [(((top_three[1] + top_three[2]) / 8) * ((100.0 - (total_spells_known * 5)) / 100)).truncate, 0].max
			
			Planner_current_as.new(as_bonus, skill_name)
			Planner_max_as.new(skill_name, max_bonus, ": +1 AS/8 ranks of 2nd+3rd weapon skills -5%/spell known")
		end
		#

		Planner_current_as.slice_slice
		@planner_stats_tab_labels["Melee AS"].set_text("Melee AS:     #{Planner_current_as.class_variable_get(:@@total_value)}")
		@planner_stats_tab_labels["Melee AS"].set_tooltip_text(Planner_current_as.class_variable_get(:@@tooltip_text))
	
		Planner_max_as.slice_slice
		@planner_stats_tab_labels["Max Possible Melee AS"].set_text("Max Possible Melee AS:     #{Planner_max_as.class_variable_get(:@@total_value)}")
		@planner_stats_tab_labels["Max Possible Melee AS"].set_tooltip_text(Planner_max_as.class_variable_get(:@@tooltip_text))
	end
	#
	
	def planner_update_player_service_bonus(planned_level)
		Planner_player_service_bonus.reset_bonus_and_tooltip
		Planner_max_player_service_bonus.reset_bonus_and_tooltip
		
		if @planner_character_info["Profession"] == "Bard"
			
			loop_count = 0
			bonus_to_add = 0
			@planner_labels_for_all_skills["Bard"].text.to_i.times{
				loop_count += 1
				break if loop_count > planned_level + 1
				bonus_to_add += 2
			}
			
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Aura"], "Aura bonus")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Influence"], "Influence bonus")
			Planner_player_service_bonus.new((@planner_skill_cost["Magic Item Use"]["Ranks"] / 2), "Magic Item Use ranks / 2")
			Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Elemental"]["Ranks"] / 2), "Mana Control: Elemental ranks / 2")
			Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Mental"]["Ranks"] / 2), "Mana Control: Mental ranks / 2")
			Planner_player_service_bonus.new((@planner_skill_cost["Telepathy"]["Ranks"] / 2), "Telepathy ranks / 2")
			Planner_player_service_bonus.new(bonus_to_add, "Spell ranks to level * 2")
			Planner_player_service_bonus.new([(@planner_labels_for_all_skills["Bard"].text.to_i - (planned_level + 1)), 0].max, 'Bard spell ranks above level')

			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Aura Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Aura"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Aura"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Influence Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Influence"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Influence"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Magic Item Use', 126, ': 202 ranks: 101 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('EMC', 126, ': 202 ranks: 101 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('MMC', 126, ': 202 ranks: 101 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('Telepathy', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('Bard spells to level', 202, ': 101 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Bard spells above level', 101, ': 101 spells: 101 bonus')
		elsif @planner_character_info["Profession"] == "Cleric"
			loop_count = 0
			bonus_to_add = 0
			@planner_labels_for_all_skills["Cleric"].text.to_i.times{
				loop_count += 1
				break if loop_count > planned_level + 1
				bonus_to_add += 2
			}
			
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Wisdom"], 'Wisdom bonus')
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Influence"], 'Influence bonus')
			Planner_player_service_bonus.new((@planner_skill_cost["Magic Item Use"]["Ranks"] / 10), 'Magic Item Use ranks / 10')
			Planner_player_service_bonus.new((@planner_skill_cost["Arcane Symbols"]["Ranks"] / 10), 'Arcane Symbols ranks / 10')
			Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Spiritual"]["Ranks"] / 2), 'Mana Control: Spiritual ranks / 2')
			Planner_player_service_bonus.new(bonus_to_add, 'Spell ranks to level * 2')
			Planner_player_service_bonus.new([(@planner_labels_for_all_skills["Cleric"].text.to_i - (planned_level + 1)), 0].max, 'Cleric spell ranks above level')
			Planner_player_service_bonus.new(20, 'Shrine Bonus: +20 being in shrine room matching your CONVERT exactly')

			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Wisdom Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Wisdom"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Wisdom"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Influence Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Influence"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Influence"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Magic Item Use', 25, ': 200 ranks: 20 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('Arcane Symbols', 25, ': 200 ranks: 20 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('SMC', 176, ': 302 ranks: 151 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('Cleric spells to level', 202, ': 101 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Cleric spells above level', 202, ': 202 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Shrine Bonus', 20, ': Shrine Bonus: +20 being in shrine room matching your CONVERT exactly')
		elsif @planner_character_info["Profession"] == "Monk"
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(2 * @planner_stat_info_with_asc_bonus["Dexterity"], 'Dexterity bonus * 2')
			Planner_player_service_bonus.new(2 * @planner_stat_info_with_asc_bonus["Discipline"], 'Discipline bonus * 2')
			Planner_player_service_bonus.new((0.75 * @planner_skill_cost["Physical Fitness"]["Ranks"]).truncate, 'Physical Fitness ranks * 0.75')
			Planner_player_service_bonus.new(@planner_skill_cost["First Aid"]["Ranks"] / 2, 'First Aid ranks / 2')
			Planner_player_service_bonus.new((@planner_labels_for_all_skills["Minor Spiritual"].text.to_i + @planner_labels_for_all_skills["Minor Mental"].text.to_i) * 2, 'Spells * 2')
			Planner_player_service_bonus.new(@planner_skill_cost["Arcane Symbols"]["Ranks"], 'Arcane Symbols ranks')
			Planner_player_service_bonus.new(@planner_skill_cost["Mana Control: Mental"]["Ranks"], 'Mana Control: Mental ranks')
			Planner_player_service_bonus.new(@planner_skill_cost["Mana Control: Spiritual"]["Ranks"], 'Mana Control: Spiritual ranks')
			Planner_player_service_bonus.new(@planner_skill_cost["Telepathy"]["Bonus"], 'Telepathy bonus')

			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Dexterity Bonus', (50 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Dexterity"]) * 2, ": 100 stat (+10 Perfect Self): #{(30 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Dexterity"]) * 2} bonus, Asc 40 stat: 40 bonus")
			Planner_max_player_service_bonus.new('Discipline Bonus', (50 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Discipline"]) * 2, ": 100 stat (+10 Perfect Self): #{(30 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Discipline"]) * 2} bonus, Asc 40 stat: 40 bonus")
			Planner_max_player_service_bonus.new('Physical Fitness', 264, ': 302 ranks: 226 bonus, Asc 50 ranks: 38 bonus')
			Planner_max_player_service_bonus.new('First Aid', 126, ': 202 ranks: 101 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('Spells', 202, ': 101 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Arcane Symbols', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('MMC', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('SMC', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('Telepathy', 251, ': 101 ranks: 201 bonus, Asc 50 ranks: 50 bonus')
		elsif @planner_character_info["Profession"] == "Ranger"
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(2 * @planner_stat_info_with_asc_bonus["Wisdom"], 'Wisdom bonus * 2')
			Planner_player_service_bonus.new(2 * @planner_stat_info_with_asc_bonus["Intuition"], 'Intuition bonus * 2')
			Planner_player_service_bonus.new((0.75 * @planner_skill_cost["Survival"]["Ranks"]).truncate, 'Survival ranks * 0.75')
			Planner_player_service_bonus.new(@planner_skill_cost["Magic Item Use"]["Ranks"], 'Magic Item Use ranks')
			Planner_player_service_bonus.new(@planner_skill_cost["Harness Power"]["Ranks"], 'Harness Power ranks')
			Planner_player_service_bonus.new(@planner_skill_cost["Mana Control: Spiritual"]["Ranks"], 'Mana Control: Spiritual ranks')
			Planner_player_service_bonus.new(@planner_skill_cost["Blessings"]["Ranks"], 'Blessings ranks')
			Planner_player_service_bonus.new((@planner_labels_for_all_skills["Ranger"].text.to_i * 1.5).truncate, 'Ranger spells * 1.5')

			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Wisdom Bonus', (45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Wisdom"]) * 2, ": 100 stat: #{(25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Wisdom"]) * 2} bonus, Asc 40 stat: 40 bonus")
			Planner_max_player_service_bonus.new('Intuition Bonus', (45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Intuition"]) * 2, ": 100 stat: #{(25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Intuition"]) * 2} bonus, Asc 40 stat: 40 bonus")
			Planner_max_player_service_bonus.new('Survival', 264, ': 302 ranks: 226 bonus, Asc 50 ranks: 38 bonus')
			Planner_max_player_service_bonus.new('Magic Item Use', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('Harness Power', 252, ': 202 ranks: 202 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('SMC', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('Blessings', 151, ': 101 ranks: 101 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('Ranger spells', 303, ': 202 ranks: 303 bonus')
		elsif @planner_character_info["Profession"] == "Sorcerer"
			loop_count = 0
			bonus_to_add = 0
			@planner_labels_for_all_skills["Sorcerer"].text.to_i.times{
				loop_count += 1
				break if loop_count > planned_level + 1
				bonus_to_add += 2
			}
			
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Wisdom"], 'Wisdom bonus')
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Intuition"], 'Intuition bonus')
			Planner_player_service_bonus.new((@planner_skill_cost["Magic Item Use"]["Ranks"] / 10), 'Magic Item Use ranks / 10')
			Planner_player_service_bonus.new((@planner_skill_cost["Arcane Symbols"]["Ranks"] / 10), 'Arcane Symbols ranks / 10')
			
			highest_skill = [@planner_skill_cost["Mana Control: Elemental"]["Ranks"], @planner_skill_cost["Mana Control: Spiritual"]["Ranks"]].max
			if @planner_skill_cost["Mana Control: Elemental"]["Ranks"] == highest_skill
				Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Elemental"]["Ranks"] / 2), 'Mana Control: Elemental ranks / 2')
				Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Spiritual"]["Ranks"] / 4), 'Mana Control: Spiritual ranks / 4')
			else
				Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Spiritual"]["Ranks"] / 2), 'Mana Control: Spiritual ranks / 2')
				Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Elemental"]["Ranks"] / 4), 'Mana Control: Elemental ranks / 4')
			end
			
			Planner_player_service_bonus.new(bonus_to_add, 'Sorcerer spell ranks to level * 2')
			Planner_player_service_bonus.new([(@planner_labels_for_all_skills["Sorcerer"].text.to_i - (planned_level + 1)), 0].max, 'Sorcerer spell ranks above level')
			Planner_player_service_bonus.new(20, 'Workshop Bonus: +20 being in a workshop')

			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Wisdom Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Wisdom"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Wisdom"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Intuition Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Intuition"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Intuition"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Magic Item Use', 25, ': 200 ranks: 20 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('Arcane Symbols', 25, ': 200 ranks: 20 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('EMC', 126, ': 202 ranks: 101 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('SMC', 63, ': 202 ranks: 50 bonus, Asc 50 ranks: 13 bonus')
			Planner_max_player_service_bonus.new('Sorcerer spells to level', 202, ': 101 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Sorcerer spells above level', 202, ': 202 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Workshop Bonus', 20, ': Workshop Bonus: +20 being in a workshop')
		elsif @planner_character_info["Profession"] == "Warrior"		
			all_melee_weapons = []
			@planner_all_melee_weapon_skill_names.each{ |weapon_name| all_melee_weapons.push(@planner_skill_cost[weapon_name]["Ranks"]) }
			top_three = all_melee_weapons.max(3)
			
			loop_count = 0
			bonus_to_add = 0
			top_three[0].times{
				loop_count += 1
				break if loop_count > planned_level
				bonus_to_add += 2
			}
			
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Strength"], 'Strength bonus')
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Discipline"], 'Discipline bonus')
			Planner_player_service_bonus.new((@planner_skill_cost["Physical Fitness"]["Ranks"] / 10), 'Physical Fitness ranks / 10')
			Planner_player_service_bonus.new(20, 'Warrior Workshop Bonus: +20 being in a Warrior workshop')
			Planner_player_service_bonus.new(bonus_to_add, 'Highest weapon ranks to level * 2')
			Planner_player_service_bonus.new([(top_three[0] - planned_level), 0].max, 'Highest weapon ranks above level')
			Planner_player_service_bonus.new((top_three[1] + top_three[2]) / 2, '2nd+3rd highest weapon ranks / 2')
			
			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Strength Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Strength"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Strength"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Discipline Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Discipline"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Discipline"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Physical Fitness', 35, ': 300 ranks: 30 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('Warrior workshop Bonus', 20, ': +20 being in a warrior workshop')
			Planner_max_player_service_bonus.new('Highest weapon ranks to level', 200, ': 100 ranks: 200 bonus')
			Planner_max_player_service_bonus.new('Above level', 152, ': 102 ranks: 102 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('2nd+3rd highest weapon ranks', 252, ': 404 ranks: 202 bonus, Asc 100 ranks: 50 bonus')
			
			Planner_player_service_bonus.slice_slice
			@planner_stats_tab_labels["Service Bonus"].set_text("Weapon Service Bonus:     #{Planner_player_service_bonus.class_variable_get(:@@total_value)}")
			@planner_stats_tab_labels["Service Bonus"].set_tooltip_text(Planner_player_service_bonus.class_variable_get(:@@tooltip_text))
			
			Planner_max_player_service_bonus.slice_slice
			@planner_stats_tab_labels["Max Possible Service Bonus"].set_text("Max Weapon Service Bonus:     #{Planner_max_player_service_bonus.class_variable_get(:@@total_value)}")
			@planner_stats_tab_labels["Max Possible Service Bonus"].set_tooltip_text(Planner_max_player_service_bonus.class_variable_get(:@@tooltip_text))
			
			Planner_player_service_bonus.reset_bonus_and_tooltip
			Planner_max_player_service_bonus.reset_bonus_and_tooltip
			
			loop_count = 0
			bonus_to_add = 0
			@planner_skill_cost["Armor Use"]["Ranks"].times{
				loop_count += 1
				break if loop_count > planned_level
				bonus_to_add += 2
			}
			
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Strength"], 'Strength bonus')
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Discipline"], 'Discipline bonus')
			Planner_player_service_bonus.new((@planner_skill_cost["Physical Fitness"]["Ranks"] / 10), 'Physical Fitness ranks / 10')
			Planner_player_service_bonus.new(20, 'Warrior Workshop Bonus: +20 being in a Warrior workshop')
			Planner_player_service_bonus.new(bonus_to_add, 'Armor Use ranks to level * 2')
			Planner_player_service_bonus.new([(@planner_skill_cost["Armor Use"]["Ranks"] - planned_level), 0].max, 'Armor Use ranks above level')
			Planner_player_service_bonus.new((@planner_skill_cost["Shield Use"]["Ranks"] / 3), 'Shield Use ranks / 3')
			
			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Strength Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Strength"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Strength"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Discipline Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Discipline"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Discipline"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Physical Fitness', 35, ': 300 ranks: 30 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('Warrior workshop Bonus', 20, ': +20 being in a warrior workshop')
			Planner_max_player_service_bonus.new('Armor Use ranks to level', 200, ': 100 ranks: 200 bonus')
			Planner_max_player_service_bonus.new('Armor Use above level', 253, ': 203 ranks: 203 bonus, Asc 50 ranks: 50 bonus')
			Planner_max_player_service_bonus.new('Shield Use ranks', 117, ': 303 ranks: 101 bonus, Asc 48 ranks: 16 bonus')
			
			Planner_player_service_bonus.slice_slice
			@planner_stats_tab_labels["Service Bonus 2"].set_text("Armor Service Bonus:         #{Planner_player_service_bonus.class_variable_get(:@@total_value)}")
			@planner_stats_tab_labels["Service Bonus 2"].set_tooltip_text(Planner_player_service_bonus.class_variable_get(:@@tooltip_text))
			
			Planner_max_player_service_bonus.slice_slice
			@planner_stats_tab_labels["Max Possible Service Bonus 2"].set_text("Max Armor Service Bonus:       #{Planner_max_player_service_bonus.class_variable_get(:@@total_value)}")
			@planner_stats_tab_labels["Max Possible Service Bonus 2"].set_tooltip_text(Planner_max_player_service_bonus.class_variable_get(:@@tooltip_text))
		elsif @planner_character_info["Profession"] == "Wizard"
			loop_count = 0
			bonus_to_add = 0
			@planner_labels_for_all_skills["Wizard"].text.to_i.times{
				loop_count += 1
				break if loop_count > planned_level + 1
				bonus_to_add += 2
			}
			
			Planner_player_service_bonus.new(planned_level, "Level")
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Logic"], 'Logic bonus')
			Planner_player_service_bonus.new(@planner_stat_info_with_asc_bonus["Intuition"], 'Intuition bonus')
			Planner_player_service_bonus.new((@planner_skill_cost["Magic Item Use"]["Ranks"] / 10), 'Magic Item Use ranks / 10')
			Planner_player_service_bonus.new((@planner_skill_cost["Arcane Symbols"]["Ranks"] / 10), 'Arcane Symbols Use ranks / 10')
			Planner_player_service_bonus.new((@planner_skill_cost["Mana Control: Elemental"]["Ranks"] / 2), 'Mana Control: Elemental ranks / 2')
			Planner_player_service_bonus.new(bonus_to_add, 'Wizard spell ranks to level * 2')
			Planner_player_service_bonus.new([(@planner_labels_for_all_skills["Wizard"].text.to_i - (planned_level + 1)), 0].max, 'Wizard spell ranks above level')
			Planner_player_service_bonus.new(25, 'Familiar Bonus: +25 for having familiar with you')
			Planner_player_service_bonus.new(50, 'Workshop Bonus: +50 being in a workshop')

			Planner_max_player_service_bonus.new('Level', 100, '')
			Planner_max_player_service_bonus.new('Logic Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Logic"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Logic"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Intuition Bonus', 45 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Intuition"], ": 100 stat: #{25 + @planner_race_stat_bonuses[@planner_character_info["Race"]]["Intuition"]} bonus, Asc 40 stat: 20 bonus")
			Planner_max_player_service_bonus.new('Magic Item Use', 25, ': 200 ranks: 20 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('Arcane Symbols', 25, ': 200 ranks: 20 bonus, Asc 50 ranks: 5 bonus')
			Planner_max_player_service_bonus.new('EMC', 176, ': 302 ranks: 151 bonus, Asc 50 ranks: 25 bonus')
			Planner_max_player_service_bonus.new('Wizard spells to level', 202, ': 101 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Wizard spells above level', 202, ': 202 spells: 202 bonus')
			Planner_max_player_service_bonus.new('Familiar Bonus', 25, ': +25 for having familiar with you')
			Planner_max_player_service_bonus.new('Workshop Bonus', 50, ': Workshop Bonus: +50 being in a workshop')
		end
		
		if @planner_character_info["Profession"] != "Warrior"
			Planner_player_service_bonus.slice_slice
			@planner_stats_tab_labels["Service Bonus"].set_text("Service Bonus:     #{Planner_player_service_bonus.class_variable_get(:@@total_value)}")
			@planner_stats_tab_labels["Service Bonus"].set_tooltip_text(Planner_player_service_bonus.class_variable_get(:@@tooltip_text))
			
			Planner_max_player_service_bonus.slice_slice
			@planner_stats_tab_labels["Max Possible Service Bonus"].set_text("Max Possible Service Bonus:     #{Planner_max_player_service_bonus.class_variable_get(:@@total_value)}")
			@planner_stats_tab_labels["Max Possible Service Bonus"].set_tooltip_text(Planner_max_player_service_bonus.class_variable_get(:@@tooltip_text))
		end
	end
	
	#
	
	def planner_update_all_info_on_stats_tab(planned_level)
		planner_update_all_current_stat_info(planned_level)
		planner_update_melee_as(planned_level)
		planner_update_player_service_bonus(planned_level) if @planner_character_info["Profession"] =~ /Bard|Cleric|Monk|Ranger|Sorcerer|Warrior|Wizard/
	end

	planner_update_all_info_on_stats_tab(level_spin_button.value.to_i)
	
	main_notebook.append_page(@planner_stats_tab_grids["Main Grid"], Gtk::Label.new('Stats'))
	#
	
	#Second tab
	help_tab_grid_1 = Gtk::Grid.new
	help_info_label = Gtk::Label.new("
Most things in this script have tooltips that give more information.
Just hover your cursor over something you want to learn more about.
		
In the Main tab enter the level you are planning for.
You can manully input a number, be sure to hit Enter when done.
You can use mouse wheel and up/down arrow keys to change level by 1.
You can also use Page Up and Page Down keys to change the level by 10.

For each skill, the first box is how many ranks per level you want.
Enter + in the box to add the number entered to the total.
Examples of what to enter: 1, 2.5, 3, 1+, 2+, 2.75+, 3+
If you enter 2+ then script will calculate (2 * level) + 2.

The second box of each skill is the max number of ranks you want.
You can leave this blank if you don't want a max.
	")
	help_tab_grid_1.attach(help_info_label, 0, 0, 1, 1)
	
	main_notebook.append_page(help_tab_grid_1, Gtk::Label.new('Help'))
	#
	
	#Third tab
	plans_tab_grid_1 = Gtk::Grid.new
	plans_label = Gtk::Label.new("
Plan out Ascension skills
Plan out CMAN skills
Multiple save files
Have script enter skill information at at inn
More stats on the stats page
	")
	plans_tab_grid_1.attach(plans_label, 0, 0, 1, 1)
	
	main_notebook.append_page(plans_tab_grid_1, Gtk::Label.new('Plans'))
	#
	
	#Fourth tab
	change_log_tab_grid_1 = Gtk::Grid.new
	
	changes_made_label = Gtk::Label.new("
Version 1: Initial release!\n
Version 2: Script no longer crashes the FE if you try to load file
and there is no saved file.\n
Version 3: Added a Stats tab to track all sorts of nifty stats\n
	
	")
	change_log_tab_grid_1.attach(changes_made_label, 0, 0, 1, 1)
	
	main_notebook.append_page(change_log_tab_grid_1, Gtk::Label.new('Change Log'))
	#
	
	@planner_window_main.add(main_notebook)
	@planner_window_main.show_all
end

#Gather info start information
result = Lich::Util.quiet_command_xml("info start", /Level .* Stats for|This character was created/)

wanted_info = {
	"Race"						=> /Level \d+ Stats for .*, (.*) .*/,
	"Profession"				=> /Level \d+ Stats for .*, .* (.*)/,
	"Starting Strength"			=> /Strength \(STR\): (\d+)/,
	"Starting Constitution"		=> /Constitution \(CON\): (\d+)/,
	"Starting Dexterity"		=> /Dexterity \(DEX\): (\d+)/,
	"Starting Agility"			=> /Agility \(AGI\): (\d+)/,
	"Starting Discipline"		=> /Discipline \(DIS\): (\d+)/,
	"Starting Aura"				=> /Aura \(AUR\): (\d+)/,
	"Starting Logic"			=> /Logic \(LOG\): (\d+)/,
	"Starting Intuition"		=> /Intuition \(INT\): (\d+)/,
	"Starting Wisdom"			=> /Wisdom \(WIS\): (\d+)/,
	"Starting Influence"		=> /Influence \(INF\): (\d+)/,
}

result.each do |info|
	info = strip_xml(info)
	wanted_info.each do |attribute, regex|
		@planner_character_info[attribute] = $1 if info =~ regex
	end
end
#

@planner_skill_cost = @planner_cost_of_skills[@planner_character_info["Profession"]]

@planner_all_lore_names = [ "Air", "Earth", "Fire", "Water", "Blessings", "Religion", "Summoning", "Demonology", "Necromancy", "Divination", "Manipulation", "Telepathy", "Transference", "Transformation" ]

@planner_all_lore_names.each{ |skill_name| @planner_skill_cost[skill_name] = {}  }

#Gather experience information
result = Lich::Util.quiet_command_xml("experience", /Level\:|Your mind/)
result.each{ |info|
	info = strip_xml(info)
	@planner_character_info["Level"] = $1.to_i if info =~ /Level\: (\d+)/
	@planner_character_info["Normal Experience"] = $1.delete(",").to_i if info =~ /Experience: (\d{1,3}(?:,\d{3})*)(?=\D|$)/
}
#

#Gather ascension information
result = Lich::Util.quiet_command_xml("asc info", /your Ascension Abilities are as follows/)

@planner_character_info["Ascension Skills"] = {}
@planner_all_stat_names_in_order = [ "Strength", "Constitution", "Dexterity", "Agility", "Discipline", "Aura", "Logic", "Intuition", "Wisdom", "Influence" ]
@planner_all_non_standard_ascension_skills = [ "Health Regeneration", "Mana Regeneration", "Stamina Regeneration", "Acid Resistance", "Cold Resistance", "Crush Resistance", "Disintegration Resistance", "Disruption Resistance", "Electric Resistance", "Grapple Resistance", "Heat Resistance", "Impact Resistance", "Plasma Resistance", "Puncture Resistance", "Slash Resistance", "Steam Resistance", "Unbalance Resistance", "Vacuum Resistance", "Porter" ]
@planner_all_spell_skill_names = [ "Major Elemental", "Minor Elemental", "Bard", "Major Spiritual", "Minor Spiritual", "Cleric", "Empath", "Minor Mental", "Paladin", "Ranger", "Sorcerer", "Wizard" ]

all_arrays_to_add_ascension_skills = [ @planner_skill_cost, @planner_all_stat_names_in_order, @planner_all_non_standard_ascension_skills, @planner_all_spell_skill_names ]
all_arrays_to_add_ascension_skills.each{ |array_name| array_name.each{ |key,value| @planner_character_info["Ascension Skills"][key] = 0 } }

result.each do |info|
	info = strip_xml(info)
	if info =~ /(.*)\s+(\w+)\s+(\d+)\/\d+/
		asc_skill_name = $1.strip
		asc_mnemonic_name = $2.strip
		asc_skill_ranks = $3.to_i
		if asc_skill_name == "Polearm Weapons"
			asc_skill_name = "Pole Arm Weapons"
		elsif asc_skill_name == "Mental Lore - Manipu"
			asc_skill_name = "Manipulation"
		elsif asc_skill_name == "Elemental Mana Contr"
			asc_skill_name = "Mana Control: Elemental"
		elsif asc_skill_name == "Spirit Mana Control"
			asc_skill_name = "Mana Control: Spiritual"
		elsif asc_skill_name == "Multi Opponent Comba"
			asc_skill_name = "Multi-Opponent Combat"
		elsif asc_skill_name == "Disintegration Resis"
			asc_skill_name = "Disintegration Resistance"
		elsif asc_skill_name == "Disruption Resistanc"
			asc_skill_name = "Disruption Resistance"
		elsif asc_skill_name == "Elemental Lore - Air"
			asc_skill_name = "Air"
		elsif asc_skill_name == "Elemental Lore - Ear"
			asc_skill_name = "Earth"
		elsif asc_skill_name == "Elemental Lore - Fir"
			asc_skill_name = "Fire"
		elsif asc_skill_name == "Elemental Lore - Wat"
			asc_skill_name = "Water"
		elsif asc_skill_name == "Mental Lore - Divina"
			asc_skill_name = "Divination"
		elsif asc_skill_name == "Mental Lore - Telepa"
			asc_skill_name = "Telepathy"
		elsif asc_mnemonic_name == "mltransference"
			asc_skill_name = "Transference"
		elsif asc_mnemonic_name == "mltransform"
			asc_skill_name = "Transformation"
		elsif asc_skill_name == "Mental Mana Control"
			asc_skill_name = "Mana Control: Mental"
		elsif asc_mnemonic_name == "soldemonology"
			asc_skill_name = "Demonology"
		elsif asc_mnemonic_name == "solnecromancy"
			asc_skill_name = "Necromancy"
		elsif asc_mnemonic_name == "slblessings"
			asc_skill_name = "Blessings"
		elsif asc_mnemonic_name == "slreligion"
			asc_skill_name = "Religion"
		elsif asc_mnemonic_name == "slsummoning"
			asc_skill_name = "Summoning"
		elsif asc_mnemonic_name == "stalking"
			asc_skill_name = "Stalking & Hiding"
		end
		@planner_character_info["Ascension Skills"][asc_skill_name] = asc_skill_ranks
	end
end
#

#Gather CMAN info
@planner_character_info["CMAN Skills"] = {}
@planner_character_info["CMAN Skills"]["Weapon Specialization"] = 0
@planner_character_info["CMAN Skills"]["Surge of Strength"] = 0
result = Lich::Util.quiet_command_xml("cman info", /your Combat Maneuvers are as follows/)
result.each do |info|
	info = strip_xml(info)
	if info =~ /(.*)\s+(\w+)\s+(\d+)\/\d+/
		skill_name = $1.strip
		mnemonic_name = $2.strip
		skill_ranks = $3.to_i
		if mnemonic_name == "wspec"
			skill_name = "Weapon Specialization"
		end
		@planner_character_info["CMAN Skills"][skill_name] = skill_ranks
	end
end	
#

@planner_total_post_cap_tps = [(@planner_character_info["Normal Experience"] - 7572500) / 2500, 0].max
all_gi_info = [ "Strength", "Constitution", "Dexterity", "Agility", "Discipline", "Aura", "Logic", "Intuition", "Wisdom", "Influence" ]

all_gi_info.each{ |stat| @planner_character_info["#{stat} GI"] = @planner_profession_gis[@planner_character_info["Profession"]][stat] + @planner_race_gis[@planner_character_info["Race"]][stat] }

@planner_both_prime_stats = [ @planner_profession_gis[@planner_character_info["Profession"]]["Prime 1"], @planner_profession_gis[@planner_character_info["Profession"]]["Prime 2"] ]

@planner_all_stat_growth_values = [ @planner_character_info["Strength GI"], @planner_character_info["Constitution GI"], @planner_character_info["Dexterity GI"], @planner_character_info["Agility GI"], @planner_character_info["Discipline GI"], @planner_character_info["Aura GI"], @planner_character_info["Logic GI"], @planner_character_info["Intuition GI"], @planner_character_info["Wisdom GI"], @planner_character_info["Influence GI"] ]

@planner_all_stat_starting_values = [ @planner_character_info["Starting Strength"].to_i, @planner_character_info["Starting Constitution"].to_i, @planner_character_info["Starting Dexterity"].to_i, @planner_character_info["Starting Agility"].to_i, @planner_character_info["Starting Discipline"].to_i, @planner_character_info["Starting Aura"].to_i, @planner_character_info["Starting Logic"].to_i, @planner_character_info["Starting Intuition"].to_i, @planner_character_info["Starting Wisdom"].to_i, @planner_character_info["Starting Influence"].to_i ]

@planner_skill_cost.each{ |key,value| @planner_skill_cost[key]["Name"] = key }
@planner_skill_cost.each{ |key,value| @planner_skill_cost[key]["Bonus"] = 0 }
@planner_skill_cost.each{ |key,value| @planner_skill_cost[key]["Ranks"] = 0 }

@planner_all_skill_names = [ "Armor Use", "Shield Use", "Edged Weapons", "Blunt Weapons", "Two-Handed Weapons", "Ranged Weapons", "Thrown Weapons", "Pole Arm Weapons", "Brawling", "Two Weapon Combat", "Combat Maneuvers", "Multi-Opponent Combat", "Ambush", "Physical Fitness", "Dodging", "Climbing", "Swimming", "Disarming Traps", "Picking Locks", "Stalking & Hiding", "Perception", "First Aid", "Trading", "Picking Pockets", "Survival", "Arcane Symbols", "Magic Item Use", "Harness Power", "Spell Aiming", "Mana Control: Elemental", "Mana Control: Spiritual", "Mana Control: Mental", "Spell Research", "Elemental Lore", "Spiritual Lore", "Sorcerous Lore", "Mental Lore", ]

@planner_all_melee_weapon_skill_names = [ "Edged Weapons", "Blunt Weapons", "Two-Handed Weapons", "Pole Arm Weapons", "Brawling" ]

@planner_all_elemental_lore_names = [ "Air", "Earth", "Fire", "Water" ]
@planner_all_spiritual_lore_names = [ "Blessings", "Religion", "Summoning" ]
@planner_all_sorcerous_lore_names = [ "Demonology", "Necromancy" ]
@planner_all_mental_lore_names = [ "Divination", "Manipulation", "Telepathy", "Transference", "Transformation" ]

@planner_total_ptps = 0
@planner_total_mtps = 0

@planner_current_ptps = 0
@planner_current_mtps = 0

@planner_total_ptp_used = 0
@planner_total_mtp_used = 0

if @planner_window_main.nil? || @planner_window_main.destroyed?
	Gtk.queue {
		create_planner_main_window
		Gtk.main
	}
end