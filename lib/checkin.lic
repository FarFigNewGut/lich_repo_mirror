=begin
    simple checkin for profession guild
    
    Will withdraw 3x dues, run to the guild master and pay for 3 months and go back.
  
    author: Xanlin (Xanlin#4407 on discord)
    tags: guild
    game: GS
    version: 1
    
=end

module GuildCheckin
  VERSION = 20220823
  #------------------------------------------------------------------------------#
  # helpers
  #------------------------------------------------------------------------------#
  def self.go2tagwait(tag);
    return true if Room.current.tags.include?(tag);
    Script.run("go2","#{tag} _disable_confirm_");
    go_timeout = Time.now + 3;
    until Time.now > go_timeout or Room.current.tags.include?(tag);
      sleep 0.025;
    end;
  end;
  #------------------------------------------------------------------------------#
  @profession_guilds = {
   "Bard"    => { :initiation_fee => 2500,  :monthly_dues => 750},
   "Cleric"  => { :initiation_fee => 0,     :monthly_dues => 750},
   "Empath"  => { :initiation_fee => 0,     :monthly_dues => 500},
   "Monk"    => { :initiation_fee => 0,     :monthly_dues => 750},
   "Paladin" => { :initiation_fee => 0,     :monthly_dues => 750},
   "Ranger"  => { :initiation_fee => 0,     :monthly_dues => 1000},
   "Rogue"   => { :initiation_fee => 15000, :monthly_dues => 5000},
   "Savant"  => { :initiation_fee => 0,     :monthly_dues => 750},
   "Sorcerer"=> { :initiation_fee => 4500,  :monthly_dues => 1500},
   "Warrior" => { :initiation_fee => 10500, :monthly_dues => 3500},
   "Wizard"  => { :initiation_fee => 4500,  :monthly_dues => 1500},
  }
  #------------------------------------------------------------------------------#
  start_room = Room.current.id 
  (echo "profession error, profession #{Stats.prof.inspect} not found"; exit) if !@profession_guilds.keys.include?(Stats.prof);
  #------------------------------------------------------------------------------#
  checkin = proc{

    dues = @profession_guilds[Stats.prof][:monthly_dues] * 3
    Script.run('withdraw',"#{dues} silver")
    
    start_script 'go2', ["#{Stats.prof.downcase} guild guildmaster"]
    wait_while{ running?('go2') }

    3.times {fput "ask ##{GameObj.npcs[-1].id} about checkin";};
    Script.run("go2","#{start_room}") if start_room
  }

  checkin.call
end