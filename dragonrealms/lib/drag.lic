=begin
	Autodrag Script
		usage:  ;drag <person|object>
		It will only display the movement command but will execute a drag command.

author: Jydus
game: DR
version: 0.9
tags: auto-drag, movement, QoL		
=end
#todo: more testing



@dragObj = ""

if variable[1]
	@dragObj = variable[1]
else
	respond '--'
	respond "You need to set an object or person to drag."
	respond '--'
	exit
end

dragaction = proc { |client_string|
	if client_string =~ /^(?:<c>)?(north|northeast|east|southeast|south|southwest|west|northwest|n|ne|e|se|s|sw|w|nw|up|down|out)$/i
	
		if scr = (Script.running).find { |val| val.name == 'drag' }
			scr.downstream_buffer.shove("drag #{@dragObj} #{$1}") #if this script is still running send the command
			client_string = "drag #{@dragObj} #{$1}"
			do_client("#{client_string.chomp}\n") 
		else
			UpstreamHook.remove('dragact') #if the script isnt running remove the hook
		end
		nil #its a command that shouldnt be sent to the game
	elsif client_string =~ /^(?:<c>)?(go|climb|swim).(?:\w+\s)?(\w+)$/i
		if scr = (Script.running).find { |val| val.name == 'drag' }
			scr.downstream_buffer.shove("drag #{@dragObj} #{$1}") #if this script is still running send the command
			client_string.gsub!(/(go|climb|swim)/, "drag #{@dragObj}")
			do_client("#{client_string.chomp}\n") 
		else
			UpstreamHook.remove('dragact') #if the script isnt running remove the hook
		end
		nil #its a command that shouldnt be sent to the game
	else
		client_string #didnt find a command we should watch for send the string as normal
	end
}
UpstreamHook.remove('dragact')
UpstreamHook.add('dragact', dragaction)

before_dying {
	UpstreamHook.remove('dragact');
}


loop{
pause 10
echo "Auto-dragging #{@dragObj}"
}
