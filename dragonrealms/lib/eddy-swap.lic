=begin

  Modification of the tool-clerk script. Designed to get/put specified sets of items from/into your portal.

  Yaml will need to have a portal_store: section added with specified sets you want to use. You can also link existing sets (like crafting tools) if desired.
  Example configuration:

  <in your crafting section>
  alchemy_tools: &alchemy_tools
  - mortar
  - pestle
  - bowl
  - mixing stick
  - sieve
  
  portal_store:
    weapons:
    - broadsword
    - bar mace
    - javelin
  
    alchemy_tools: *alchemy_tools

  You can then run the script with either weapons or alchemy_tools as the "set" argument and it'll leverage those items.

=end
custom_require.call(%w[common equipmanager])

class Eddy
  def initialize
    arg_definitions = [
      [
        { name: 'set', regex: /\w+/i, optional: false, description: 'REQUIRED: Set of items you want to transfer. Build in portal_store section of yaml.' },
        { name: 'action', regex: /get|put/i, optional: false, description: 'REQUIRED: Designate whether you want to get items from portal/put items into portal. Must be get or put.' },
        { name: 'container', regex: /\w+/i, optional: false, description: 'REQUIRED: Container you want to put your items into/get items from.' }
      ]
    ]

    settings = get_settings

    args        = parse_args(arg_definitions)
    action      = args.action
    set         = settings.portal_store[args.set]
    container   = args.container

    if action.nil? || set.nil? || container.nil?
      DRC.message("Missing a required argument!")
      exit
    end
    
    portal_check = DRC.bput('tap my portal', 'You tap a', 'I could not find what you were referring to.')
    case portal_check
    when 'I could not find what you were referring to.'
      DRC.message("You need a portal to use this script!")
      exit
    end

    if action == 'get'
      get_items(set, container)
    elsif action == 'put'
      put_items(set, container)
    else
      echo 'Unknown action'
    end
  end

  def get_items(set, container)
    set.each do |item|
      DRCI.get_item?("#{item}", "portal")
      DRCI.put_away_item?("#{item}", container)
    end
  end

  def put_items(set, container)
    set.each do |item|
      DRCI.get_item?("#{item}", container)
      DRCI.put_away_item?("#{item}", "portal")
    end
  end
end

Eddy.new