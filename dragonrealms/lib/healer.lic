=begin
A modified version of E's fest-heal script

Dependency.lic must be installed.

This script runs in the background and heals people who whisper 'heal' to you then runs healme.lic to heal yourself. Any running scripts get paused once healing starts and then unpaused after healme.lic is finished. 

This script works in conjunction with the safe-room.lic script. To make use of it, tell other characters to use these settings: 

safe_room_id: 1234
safe_room_empath: Empath-name

where safe_room_id is the room_id of where your empath is usually hanging out and Empath-name is the name of your empath. This does not replace anyones safe_room setting, its just a very similar name. If your empath isn't around then people will run off to the npc empath like usual.

This is a WIP.. Known issues are:

* Some scripts mess up after being paused and unpaused (Ive noticed this with crafting scripts and performance in crossing-trainer)
* No whitelist! any yokel who can whisper heal to you is gonna get healed, whether you like it or not. 
* you cant pause scripts using ;p because this script will immediately unpause it (the easy solution is to pause this script first)
=end
no_pause_all
custom_require.call %w[events common common-arcana common-healing common-items]

class Healer
  include DRC
  include DRCH
  include DRCI
  include DRCA

  def empty_hands
    echo "Emptying hands" if debug?
    @left = checkleft
    echo "@left: #{@left}" if debug?
    @right = checkright
    echo "@right: #{@right}" if debug?
    fput('stow left') if checkleft
    fput('stow right') if checkright
  end

  def stop_training
    Script.running.find_all { |s| !s.paused? && !s.no_pause_all && s.name != 'healme'}.each(&:pause)
  end

  def start_training
    return if running?('healme')

    fput("get my #{@right}") if @right
    fput("get my #{@left}") if @left
    @left = nil
    @right = nil
    Script.running.find_all { |s| s.paused? && !s.no_pause_all && s.name != 'healme'}.each(&:unpause)
  end

  def ready_for_patient
    #return false if Script.running?('healme')
    return false if @last_heal_check && Time.now - @last_heal_check < 10
    health = check_health
    @last_heal_check = Time.now
    return false if health['diseased']
    return false if health['poisoned']
    return false if checkhealth < 70
    return false if !health['wounds'].empty?
    true
  end

  def heal_self
    return if Script.running?('healme')
    start_script('healme')
  end

  def heal_person
    name = @queue.first
    echo "Healing #{name}" if debug?
    @patient = name
    return if @touched && @touched >= Time.now

    unless @touched
      @touched = Time.now + 12
      pause 1
      waitrt?
      fput("touch #{name}")
      put("transfer #{name} vit quick")
      put("transfer #{name} vit quick")
      put("transfer #{name} vit quick")
      pause
      fput("transfer #{name} quick poison")
      fput("transfer #{name} quick disease")
      fput("transfer #{name} quick all")
      heal_self 
    end

    case bput("touch #{name}", "no injuries to speak of", 'leech on \w+ (right|left)?\s*\w+', "vitality", "Touch what")
    when /injuries/
      @queue.shift
      @touched = false
      @patient = false
      fput("whisper #{name} Done!")
      heal_self
    when /leech on \w+ ((right|left)?\s*\w+)/
      fput("tend #{name} #{$1}")
      pause
    when /touch what/i
      @queue.shift
      @touched = false
      @patient = false
    else
      @touched = Time.now + 12
    end
  end

  def debug?
    return UserVars.healer_debug
  end

  def initialize
    @right = nil
    echo "@right: #{@right}" if debug?
    @left = nil
    echo "@left: #{@left}" if debug?
    @queue = []
  end

  def run(line)
    fix_standing

    unless line
      pause 0.5
      return
    end

    if @queue.first && ready_for_patient
      heal_person
    elsif @patient
      heal_person
    elsif (@patient || @queue.first) && !ready_for_patient
      heal_self
    elsif @queue.empty? && !Script.running?('healme')
      start_training
    end

    if line =~ /^(\w+) whispers, "heal.*"$/
      stop_training
      empty_hands
      echo "$1: #{$1}" if debug?
      @queue << $1
      echo "@queue: #{@queue}" if debug?
    end
  end

end

healer = Healer.new

loop do
  healer.run(script.gets?)
end
