before_dying {kill_script "apwatch";UserVars.apstatus = "good"}

start_script "apwatch"
UserVars.apstatus = "good"
Ways = nil
if variable[1] != nil
	goto "start"
elsif variable[1] == nil
	goto "Help"
end

Help:
respond
respond "*****************************************"
respond "Please name Ending Stone!!!"
respond
respond "Auilusi - Aesry"
respond "Dor'na'torna - Arid Steppes/Hib/North P5"
respond "Rolagi - Crossing"
respond "Vellano - Fang Cove"
respond "Asharshpar'i - Leth Deriel"
respond "Besoge - Mer'Kresh"
respond "Tabelrem - Muspar'i"
respond "Tamigen - Raven's Point/South P5"
respond "Taniendar - Riverhaven"
respond "Marendin - Shard"
respond "Erekinzil - Taisgath"
respond "Dinegavren - Therenborough"
respond "Mintais - Throne City"
respond
respond "Asharshpar'i - Leth Deriel"
respond "Auilusi - Aesry"
respond "Besoge - Mer'Kresh"
respond "Dinegavren - Therenborough"
respond "Dor'na'torna - Arid Steppes/Hib/North P5"
respond "Erekinzil - Taisgath"
respond "Marendin - Shard"
respond "Mintais - Throne City"
respond "Rolagi - Crossing"
respond "Tabelrem - Muspar'i"
respond "Tamigen - Raven's Point/South P5"
respond "Taniendar - Riverhaven"
respond "Vellano - Fang Cove"
respond
respond "*****************************************"
respond

Exit:
exit

start:
if variable[1] =~ /ash|asha|ashar|ashars|asharsh|asharshp|asharshpa|asharshpar|asharshpari|asharshpar'i/
	Ways = "Asharshpar'i"
elsif variable[1] =~ /aui|auil|auilu|auilus|auilusi/
	Ways = "Auilusi"
elsif variable[1] =~ /b|be|bes|beso|besog|besoge/
	Ways = "Besoge"
elsif variable[1] =~ /dine|dineg|dinega|dinegav|dinegavr|dinegavre|dinegavren/
	Ways = "Dinegavren"
elsif variable[1] =~ /dor|dorn|dorna|dornat|dornato|dornator|dornatorn|dornatorna|dor'na'torna/
	Ways = "Dor'na'torna"
elsif variable[1] =~ /ema|emal|emale|emaler|emalerj|emalerje/
	Ways = "Emalerje"
elsif variable[1] =~ /ere|erek|ereki|erekin|erekinz|erekinzi|erekinzil/
	Ways = "Erekinzil"
elsif variable[1] =~ /mar|mare|maren|marend|marendi|marendin/
	Ways = "Marendin"
elsif variable[1] =~ /min|mint|minta|mintai|mintais/
	Ways = "Mintais"
elsif variable[1] =~ /ro|rol|rola|rolag|rolagi/
	Ways = "Rolagi"
elsif variable[1] =~ /tab|tabe|tabel|tabelr|tabelre|tabelrem/
	Ways = "Tabelrem"
elsif variable[1] =~ /tam|tami|tamig|tamige|tamigen/
	Ways = "Tamigen"
elsif variable[1] =~ /tan|tani|tanie|tanien|taniend|tanienda|taniendar/
	Ways = "Taniendar"
elsif variable[1] =~ /vel|vell|vella|vellan|vellano/
	Ways = "Vellano"
else
	goto "Help"
end
direction = "in"

if checkleft
	fput "stow left"
end
if checkleft
	fput "put #{checkleft} in my backpack"
end
if checkright
	fput "stow right"
end
if checkright
	fput "stow #{checkright} in my backpack"
end
pause
goto "entering"

entering:
fput "prep tele"
pause 10
fput "cast grazhir"
match "enter", "conduit"
match "entering", "fail"
matchwait

enter:
2.times{
waitrt?
fput "har 40"
pause 2
waitrt?
}
goto "Pow#{direction}"

Powin:
fput "pow"
heading = matchfindword "center of the microcosm is to the ?.", "From this ? point"
if heading == "vantage"
	goto "Pillars"
else
	goto "conduit"
end

Powout:
fput "pow"
heading = matchfindword "You are already at the ? of the conduit", "end of the conduit lies ?."
if heading == "end"
	goto "Shard"
else
	goto "conduit"
end

conduit:
waitrt?
if UserVars.apstatus == "bad"
	UserVars.apstatus = "good"
	goto "Pow#{direction}"
end
fput "#{heading}"
match "Shard", "the silvery-white shard #{Ways}"
match "Shard", "the silvery shard #{Ways}"
match "Pillars", "pillar"
match "Pow#{direction}", "obvious"
match "conduit", "...wait"
matchwait

Pillars:
direction = "out"
waitrt?
if Ways =~ /Asharshpar'i|Tamigen/
	multimove "down", "sw"
elsif Ways =~ /Auilusi|Dor'na'torna/
	multimove "down", "ne"
elsif Ways =~ /Besoge|Marendin/
	multimove "down", "e"
elsif Ways =~ /Dinegavren|Taniendar/
	multimove "down", "w"
elsif Ways =~ /Vellano/
	multimove "down", "se"
elsif Ways =~ /Emalerje/
	multimove "down", "s"
elsif Ways =~ /Erekinzil|Mintais/
	multimove "down", "nw"
elsif Ways =~ /Rolagi|Tabelrem/
	multimove "down", "n"
end
fput "focus #{Ways}"
waitfor "#{Ways} Conduit"
goto "Powout"

Shard:
waitrt?
fput "prep tele"
waitfor "spell pattern"
fput "focus #{Ways}"
waitrt?
move "cast #{Ways}"