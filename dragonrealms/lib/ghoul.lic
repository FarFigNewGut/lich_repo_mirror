#ghoul
=begin
	Auto-daubs all your bingo numbers! Win GS!
	
	Functions:
		- daub numbers as they are called by:
			;ghoul
		- daub all the numbers already called by:
			;ghoul catchup
		- auto yell GHOUL! when a certain number comes up by:
			;ghoul <letter> <number>
				ex: ;ghoul o 37

	Author: Alastir
	Original By: Drafix
	
  Version: 2.0
    Updated to Naidem
	Version: 0.1
		Fixed for Caligos Isle Ghoul

=end
=begin
A painted wooden ball floats out of the opening of the polished teak case's hopper and comes to a stop in front of Boring.  A ghostly voice calls out, "O 37" before the ball drifts back into a silver bin located within the polished teak case.  A corresponding rune on the case's callboard lights up with a sickly orange glow.
	| H |~| <pushBold/>16 <popBold/>| <pushBold/>17 <popBold/>| 18 | 19 | 20 | 21 | 22 | <pushBold/>

A painted wooden ball floats out of the opening of the runed mistwood cabinet's hopper and comes to a stop in front of Tselise.  An ethereal voice calls out, "G 15" before the ball drifts back into a silver bin located within the runed mistwood cabinet.  A corresponding rune on the cabinet's callboard lights up with a muted violet glow.
=end

#Using your charred bone dauber, you daub a space on your card.

$ghoul_first_daub = true

#An ethereal voice calls out, "The period of time for making the first mark on your game card has started.  If it was already daubed prior to this announcement, it will not be eligible to win this round."

if script.vars[1].nil?
  while (line = get)
  case line
    when /The period of time for making the first mark on your game card has started./
      fput "daub my card O free"
      fput "daub my card O free"
		when /An ethereal voice calls out, "(.*)" before the ball drifts back into/
			$ghoul_number = $1
			if $ghoul_first_daub == false
				fput "daub my card #{$ghoul_number}"
			else
        fput "daub my card O free"
        fput "daub my card O free"
				fput "daub my card #{$ghoul_number}"
        $ghoul_first_daub = false
			end
		when /Using your (.*) dauber, you daub a space on your card./
			fput "look my card"
		when /If you wish to continue and daub your card for the first time, repeat your daubing attempt within the next 30 seconds./
				fput "daub my card #{$ghoul_number}"
		#An ethereal voice calls out, "H 30" before the ball drifts back into a silver bin located within the plain wooden case.
    when /Tselise pushes something on the cabinet.  The hatch at the bottom of the silver bin suddenly opens, allowing the wooden balls within to tumble back into the main hopper.  Then, the glowing runes on the callboard become dark./
      $ghoul_first_daub = true
		end
	end
elsif script.vars[1] =~ /catchup/
	status_tags
	put "look case"
	count = 0
	while line = get
		if line =~ /^\| ([GHOUL]) \|~\| (.+)$/
			letter = $1
			line = $2
			numbers = line.scan(/<pushBold\/>(\d\d) <popBold\/>/).flatten
			numbers.each{|num| put "daub my card #{letter} #{num}"; sleep 0.2 if Char.name != 'Drafix'}
			count += 1
			break if count >= 5
		end
	end
elsif script.vars[1] =~ /^[GHOUL]$/i && script.vars[2] =~ /^\d{1,2}$/
	echo "Waiting for \"#{script.vars[1].upcase} #{script.vars[2]}\" before yelling GHOUL!"
	while line = get
		if line =~ /An ethereal voice calls out, "#{script.vars[1].upcase} #{script.vars[2]}" before the ball drifts back into a (.*) located within the(.*) case./
			put "say GHOUL!"
			break
		end
	end
end