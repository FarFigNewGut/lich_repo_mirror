=begin
    Watches for certain invasion mobs in your safe room. If theyre present, pause all scripts and walk to a back up safe room to wait it out. If safe room is all clear, unpauses all scripts 
=end

custom_require.call %w[common common-travel drinfomon]
no_pause_all

## Configure your settings below

# Aditional rooms to monitor, besides your safe_room setting. This can be empty 
safe_rooms = [
  820,
  1034,
]  
backup_saferoom = 985 # Room to move to when danger is detected
recheck_time = 380 #time in seconds before checking if safe room is all clear 
# Mobs to watch out for (needs to match the output from ;en echo DRRoom.npcs) 
$mobs = [
  'hafwa',
  'construct',
  'malchata',
  'youngling',
  'shooter',
]
## End Configure

def stop_training
  return if $paused
  Script.running.find_all { |s| !s.paused? && !s.no_pause_all && s.name != 'healme'}.each(&:pause)
  $paused = true
end

def start_training
  return unless $paused
  Script.running.find_all { |s| s.paused? && !s.no_pause_all && s.name != 'healme'}.each(&:unpause)
  $paused = false
end

def danger?
  !($mobs & DRRoom.npcs).empty?
end

settings = get_settings
safe_rooms << settings.safe_room
safe_rooms << settings.engineering_room
safe_rooms << settings.outfitting_room
safe_rooms << settings.alchemy_room
safe_rooms << settings.training_rooms
safe_rooms = safe_rooms.flatten.uniq.compact
echo "Watching for invasions in the following rooms: #{safe_rooms}"
$paused = false
loop do
  pause 1 
  if safe_rooms.include?(Room.current.id) && danger?
    echo "***INVASION! Moving to your backup saferoom***"
    danger_room = Room.current.id
    stop_training
    waitrt?
    DRC.fix_standing
    fput('avoid !drag')
    fput('avoid !hold')
    DRCT.walk_to(backup_saferoom)
    pause recheck_time
    DRCT.walk_to(danger_room)
  end
  start_training unless danger?
end
