=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#salt-circle
=end

custom_require.call(%w[common common-money])

class SaltCircle
  include DRC
  include DRCM

  @@skip = false

  unless DRStats.necromancer?
    echo '***MUST BE A NECROMANCER!***'
    exit
  end

  arg_definitions = [
    [
      { name: 'skipbank', regex: /(s|skip)/i, optional: true, description: 'Skip the bank withdrawl.' }
    ]
  ]

  args = parse_args(arg_definitions)

  @@skip = true if args.skipbank

  def initialize
    setup

    get_salt
    create_cicle

    UserVars.salt_circle_last = Time.now
  end
  
  def setup
    @settings = get_settings
    UserVars.salt_circle_last ||= Time.now - (24*(60*60))

    if Time.now - UserVars.salt_circle_last < (24*(60*60))
      echo "Not enough time has passed to tell the Immortals where to stick it!"
      exit
    end

    if !@settings.hometown.eql?('Shard') && DRSkill.getrank('Athletics') < 540
      echo "Taking the Gondola. Train better to avoid this in the future. This is gonna take a while...slacker."
    end
  end

  def get_salt
    EquipmentManager.new.empty_hands

    unless @@skip
      unless get_salt_donation_money('5000 copper dok', 'Shard')
        echo "Failed to get enough money, you are too broke for salt. Get a job..."
        exit
      end
    end

    wait_for_script_to_complete('go2', [9668])

    result = bput('give Niloa 5000 copper dok', 'Niloa smiles', 'Niloa frowns')
    if result =~ /you have already gotten a gift this andu/i
      UserVars.salt_circle_last = Time.now
      echo "***EXITING, resetting timer.***"
      exit
    end

    unless right_hand.eql?('glass vial')
        echo "***EXITING, no vial detected, you didn't have enough money, or something else went wrong!***"
        exit
    end
  end

  def get_salt_donation_money(amount_as_string, town)
    DRCT.walk_to(get_data('town')[town]['deposit']['id'])
    DRC.release_invisibility
    loop do
      case DRC.bput("withdraw #{amount_as_string}", 'The clerk counts', 'The clerk tells', 'The clerk glares at you.', 'You count out', 'find a new deposit jar', 'If you value your hands', 'Hey!  Slow down!', "You must be at a bank teller's window to withdraw money", "You don't have that much money")
      when 'The clerk counts', 'You count out'
        break true
      when 'The clerk glares at you.', 'Hey!  Slow down!'
        pause 15
      when 'The clerk tells', 'If you value your hands', 'find a new deposit jar', "You must be at a bank teller's window to withdraw money", "You don't have that much money", 'You do not have an account'
        break false
      end
    end
  end

  def create_cicle
    %w[red green black].each { |color|
      loop do
        result = bput('turn my glass vial', "\(\\w+\) colored salt", 'Your vial is empty', 'Turn what')
        if result =~ /\b#{color}\b/
          bput('pour my glass vial', 'You.* pour')
          break
        elsif result =~ /Your vial is empty/i || /Turn what/i
          echo "***EXITING, something went very wrong!"
          exit
        end
      end
    }

    bput("clean circle", "You carefully")
  end
end

SaltCircle.new