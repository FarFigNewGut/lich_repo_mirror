custom_require.call(%w[common common-items events])

class SmokeTraining
  include DRC
  include DRCI

  def initialize
    arg_definitions = [
      [
        { name: 'image', regex: /\w+/i, variable: true, description: 'smoke image to learn' },
        { name: 'cigar', regex: /\w+/i, variable: true, description: 'cigar noun' },
        { name: 'container', regex: /\w+/i, variable: true, description: 'container the cigars are in' },
        { name: 'lighter', regex: /\w+/i, variable: true, description: 'lighter noun' },        
      ]
    ]

    args = parse_args(arg_definitions)
    @image = args.image
    @lighter = args.lighter
    @cigar = args.cigar
    @container = args.container

    Flags.add('new-cig', 'That was the last of your')
    light_cig
    loop do
      smoke
    end
  end

  def smoke
    light_cig if Flags['new-cig']
    bput("inhale #{@cigar}", 'You take', 'What were')
    bput("exhale line #{@image}", 'You blow', 'You cast', 'You need to have inhaled')
    waitrt?
    fput('smoke list')
  end

  def light_cig
    case bput("get #{@cigar} from #{@container}", 'You get', 'What were', 'You need')
    when 'What were'
      echo 'Out of cigars, exiting.'
      Flags.delete('new-cig')
      exit
    end
    bput("get #{@lighter}", 'You get', 'What were', 'You are already')
    fput("point #{@lighter} at #{@cigar}")
    Flags.reset('new-cig')
  end
end

SmokeTraining.new
