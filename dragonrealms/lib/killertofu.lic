=begin

Hunting Script, designed for barbarians. Visit http://forum.gsplayers.com/showthread.php?83573-KillerTofu-Dragonrealms-Hunting for usage and info.

=end

hc = 1
trainc = 1
ecc = 2
left = checkleft
right = checkright
start_script('allpurpose')
#DO NOT ALTER

#################
#################START OF SET VARIABLES, SET THE VARIABLES YOURSELF, CONTINUE UNTIL YOU REACH END OF SET VARIABLES
#################

#Should work out of the box for most barbarians, just set weapons to train and choose weapons near the end of set variables

### A # at the beginning of a liner means it's there for you to read. Read it.

ta = "1"
oh = "0"
se = "0"
sb = "1"
bra = "1"
lt = "1"
le = "1"
lb = "1"
pole = "1"
stav = "1"
ht = "1"
the = "1"
thb = "1"
tm = "0"
#Set variable 1 to train weapon. Name corresponds to command used to check exp for that weapon. IE "exp se" refers to small edged.

bc = 1
lefthand2 = "dao"
righthand2 = "club"
balance = "jab left"
balancert = "0.8"
balance2 = "gouge"
balancert2 = "0.8"
balance3 = "jab"
balancert3 = "0.8"
#Set bc = 1 to keep balance and position during non combat phase by using high balanced attacked. Enter RT of weapon used.

parry = "stance set 80 100 0 100"
balanced = "stance set 60 60 60"
stance = "#{balanced}"
stance2 = "#{balanced}"
#Set your desired stance points, then set name of desired stance for use in combat variables

loot = 1
#Set loot = 1 to loot (requires KTlooter)

assess = 1
#Set assess = 1 to assess in combat and face the highest balanced enemy, increases defence and keeps critters alive

bodyparts = 0
bp = 1
#Set bodyparts = 1 to attempt to aim at certain body parts, used to keep critters alive. DO NOT ALTER BP

target = "gryphon"
#Set target = "critter"

al = "0"
outd = 1
hunt = "1"
hi = "0"

#Outd is for collecting rocks, hunt is for the hunt command, hi is for hiding, al is for alchemy (requires sunlight and a wayerd pyramid with jadice flowers

app = "1"
#Set app = 1 to appraise target in combat

hh = "1"
#Set to one to heal low level wounds using herbs, requires herbheal.lic

rr = "1"
roar = "anger"
#Set to 1 to use barbarian roars

fm = "1"
#set to 1 to use forms as for training
form = "swan"
#Warding training form
form2 = "pir"
#Augmentation training form

bform = "1"
#set to 1 to use form as buff
form3 = "swan"
form4 = "monkey"
#Set buff form, if using this you can leave one of the other forms blank

hs = "0"
#Set to 1 to switch helms in order to train multiple armors with little hinderance
h1 = "visored helm"
h2 = "scale bala"
h3 = "cowl"
h4 = "scale bala"
#Set different helm names

righthand = "dao"
lefthand = "shield"
#Set primary weapons (for travelling)

takemehunting = 0
tohuntarea = "tg"
fromhuntarea = "fg"
#This script will assist in getting you to your area. You must have the script stored written and stored as a lich file

huntroom = "8624"
huntroom2 = "8625"
huntroom3 = "8626"
huntroom4 = "8627"
huntroom5 = "8628"
huntroom6 = "8629"
huntroom7 = "8630"
huntroom8 = "8626"
huntroom9 = "8627"
huntroom10 = "8625"
searchrt = 3
rest = "3353"
#Common hunting rooms and resting spots are listed at the link in the description. If you're room is not mapped, start KT in it

justkill = "0"
#Set justkill = 1 to ignore training focus solely on killing creatures

start4:
goto "huntroom"
start5:

#JUSTKILL
justkill:
if "#{justkill}" == "1"
righthand = "dao"
lefthand = ""
stance = "#{stance}"
manuver = "parry"
combo1 = "slice"
combo1p = "2"
combo2 = "elbow"
combo2p = "2"
goto "killit"
else
end

#TACTICS
train1:
counter = 55
if "#{ta}" == "1"
exp = "tac"
righthand = "sch"
lefthand = "dao"
stance = "#{stance}"
manuver = "parry"
combo1 = "bob"
combo1p = "4"
combo2 = "weave"
combo2p = "3"
goto "analyze"
else
goto "trainnext"
end
trainxp1:
counter = 55
goto "analyze2"

#OFFHAND WEAPON
train2:
counter = 30
if "#{oh}" == "1"
exp = "off"
righthand = "sch"
lefthand = "dao"
stance = "#{stance}"
manuver = "parry"
combo1 = "jab left"
combo1p = "0.8"
combo2 = "jab left"
combo2p = "0.8"
goto "attack"
else
goto "trainnext"
end
trainxp2:
counter = 30
goto "attack3"

#SMALL EDGED
train3:
counter = 30
if "#{se}" == "1"
exp = "se"
righthand = "dao"
lefthand = "shield"
stance = "#{stance}"
manuver = "parry"
combo1 = "jab"
combo1p = "0.8"
combo2 = "jab"
combo2p = "0.8"
goto "attack"
else
goto "trainnext"
end
trainxp3:
counter = 30
goto "attack3"

#SMALL BLUNT
train4:
counter = 30
if "#{sb}" == "1"
exp = "sb"
righthand = "club"
lefthand = "shield"
stance = "#{stance}"
manuver = "parry"
combo1 = "jab"
combo1p = "0.8"
combo2 = "jab"
combo2p = "0.8"
goto "attack"
else
goto "trainnext"
end
trainxp4:
counter = 30
goto "attack3"

#BRAWL
train5:
counter = 30
if "#{bra}" == "1"
exp = "brawl"
righthand = "dao"
lefthand = ""
stance = "#{stance}"
manuver = "parry"
combo1 = "gouge"
combo1p = "0.8"
combo2 = "gouge"
combo2p = "0.8"
goto "attack"
else
goto "trainnext"
end
trainxp5:
counter = 30
goto "attack3"

#LIGHT THROWN
train6:
counter = 45
if "#{lt}" == "1"
exp = "lt"
righthand = "dao"
lefthand = "bola"
stance = "#{stance}"
manuver = "parry"
combo1 = "get #{lefthand}\n throw left"
combo1p = "0.8"
combo2 = "get #{lefthand}\n throw left"
combo2p = "0.8"
goto "attack"
else
goto "trainnext"
end
trainxp6:
counter = 45
goto "attack3"

#LARGE EDGED
train7:
counter = 50
if "#{le}" == "1"
exp = "le"
righthand = "sch"
lefthand = "shield"
stance = "#{stance}"
manuver = "parry"
combo1 = "jab"
combo1p = "2.8"
combo2 = "jab"
combo2p = "2.8"
goto "attack"
else
goto "trainnext"
end
trainxp7:
counter = 50
goto "attack3"

#LARGEBLUNT
train8:
counter = 45
if "#{lb}" == "1"
exp = "lb"
righthand = "hammer"
lefthand = "shield"
stance = "#{stance}"
manuver = "parry"
combo1 = "feint"
combo1p = "1.8"
combo2 = "feint"
combo2p = "1.8"
goto "attack"
else
goto "trainnext"
end
trainxp8:
counter = 45
goto "attack3"

#POLEARM
train9:
counter = 45
if "#{pole}" == "1"
exp = "pole"
righthand = "spear"
lefthand = "shield"
stance = "#{stance}"
manuver = "parry"
combo1 = "jab"
combo1p = "1.8"
combo2 = "jab"
combo2p = "1.8"
goto "attack"
else
goto "trainnext"
end
trainxp9:
counter = 45
goto "attack3"

#STAFF
train10:
counter = 45
if "#{stav}" == "1"
exp = "stave"
righthand = "nightstick"
lefthand = "shield"
stance = "#{stance}"
manuver = "parry"
combo1 = "feint"
combo1p = "0.8"
combo2 = "feint"
combo2p = "0.8"
goto "attack"
else
goto "trainnext"
end
trainxp10:
counter = 45
goto "attack3"

#HEAVY THROWN
train11:
counter = 50
if "#{ht}" == "1"
exp = "ht"
righthand = "dao"
lefthand = "hammer"
stance = "#{stance}"
manuver = "parry"
combo1 = "get #{lefthand}\n throw left"
combo1p = "2.8"
combo2 = "get #{lefthand}\n throw left"
combo2p = "2.8"
goto "attack"
else
goto "trainnext"
end
trainxp11:
counter = 50
goto "attack3"

#TWO-HANDED EDGED
train12:
counter = 50
if "#{the}" == "1"
exp = "2he"
righthand = "kaskara"
lefthand = ""
stance = "#{stance}"
manuver = "parry"
combo1 = "feint"
combo1p = "3.8"
combo2 = "feint"
combo2p = "3.8"
goto "attack"
else
goto "trainnext"
end
trainxp12:
counter = 50
goto "attack3"

#TWO-HANDED BLUNT
train13:
counter = 50
if "#{thb}" == "1"
exp = "2hb"
righthand = "sledge"
lefthand = ""
stance = "#{stance}"
manuver = "parry"
combo1 = "feint"
combo1p = "2.8"
combo2 = "feint"
combo2p = "2.8"
goto "attack"
else
goto "trainnext"
end
trainxp13:
counter = 50
goto "attack3"

#TARGETTED MAGIC
train14:
counter = 50
if "#{tm}" == "1"
exp = "tm"
righthand = ""
lefthand = "dao"
stance = "parry"
manuver = "parry"
combo1 = "tar fst 10"
combo1p = "10"
combo2 = "cast"
combo2p = "1"
goto "attack"
else
goto "trainnext"
end
trainxp14:
counter = 50
goto "attack3"

#RESTART
train15:
if "#{ecc}" == "4"
if "#{takemehunting" == "1"
start_script("#{fromhuntarea}")
kill_script("killer")
else
end
else 
ecc = ecc +1
trainc = 1
goto "start"
end


#####################
#####################END SET VARIABLES, DO NOT ALTER ITEMS BELOW
#####################

huntroom:
if "#{loot}" == "1"
start_script ('kts')
else
end
if "#{takemehunting}" == "1"
start_script "#{tohuntarea}"
else
goto "start"
end

pause
start_script("go2", [ "#{huntroom}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroom2", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom2:
pause 5
start_script("go2", [ "#{huntroom2}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroom3", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom3:
start_script("go2", [ "#{huntroom3}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroom4", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom4:
start_script("go2", [ "#{huntroom4}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroom5", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom5:
start_script("go2", [ "#{huntroom5}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroomfull", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom6:
start_script("go2", [ "#{huntroom6}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroom7", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom7:
start_script("go2", [ "#{huntroom7}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroom8", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait

huntroom8:
start_script("go2", [ "#{huntroom8}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
fput "search"
pause "#{searchrt}"
fput "look"
match "huntroomfull", "Also here:"
match "start", "Obvious paths:"
match "start", "Obvious exits:"
matchwait


huntroomfull:
echo CROWDED! HEADING TO TOWN
start_script('ktretreater')
start_script("go2", [ "#{rest}", '_disable_confirm_' ]);
wait_while{ running?('go2') }
exit

start:
start2:
if "#{loot}" == '1'
start_script ('ktsearcher')
goto "start3"
else
kill_script ('ktsearcher')
goto "start3"
end
start3:
if "#{fm}" == "1"
fput "exp ward"
match "form1b", "34/34"
match "form1b", "33/34"
match "form1b", "32/34"
match "form1b", "31/34"
match "form1b", "30/34"
match "form1b", "29/34"
match "form1b", "28/34"
match "form1a", "EXP HELP"
matchwait
else
goto "start5"
end

form1a:
fput "form #{form}"
goto "form2"

form1b:
#fput "form stop #{form}"
goto "form2"

form2:
fput "exp augm"
match "form2b", "34/34"
match "form2b", "33/34"
match "form2b", "32/34"
match "form2b", "31/34"
match "form2b", "30/34"
match "form2b", "29/34"
match "form2b", "28/34"
match "form2a", "EXP HELP"
matchwait

form2a:
fput "form #{form2}"
goto "form3"

form2b:
#fput "form stop #{form2}"
goto "form3"

form3:
if "#{bform}" == "1"
fput "form #{form3}"
fput "form #{form4}"
goto "start5"
else
goto "start5"
end

helmswitch:
pause
if "#{hc}" == "1"
fput "wear left\n stow left\n remove #{h1}"
pause
fput "stow #{h1}\n get #{h2}\n wear #{h2}"
head = "#{h2}"
hc = hc +1
trainc = 1
goto "start"
else
goto "helmswitch2"
end

helmswitch2:
if "#{hc}" == "2"
fput "wear left\n stow left\n remove #{h2}"
pause
fput "stow #{h2}\n get #{h3}\n wear #{h3}"
head = "#{h3}"
hc = hc +1
trainc = 1
goto "start"
else
goto "helmswitch3"
end

helmswitch3:
if "#{hc}" == "3"
fput "wear left\n stow left\n remove #{h3}"
pause
fput "stow #{h3}\n get #{h4}\n wear #{h4}"
head = "#{h4}"
hc = hc +1
trainc = 1
goto "start"
else
goto "helmswitch4"
end

helmswitch4:
if "#{hc}" == "4"
fput "wear left\n stow left\n remove #{h4}"
pause
fput "stow #{h4}\n get #{h1}\n wear #{h1}"
head = "#{h1}"
hc = 1
trainc = 1
goto "start"
else
hc = 1
goto "helmswitch"
end
	
attack:
ecounter = 0
attack2:
pause
fput "wear left\n stow left\n stow right\n get my #{righthand2}\n get my #{lefthand2}"
fput "#{stance}"
prepform:
if "#{bform}" == "1"
fput "form #{form2}\n form #{form3}\n form #{form4}"
pause
goto "heal"
else
goto "heal"
end
heal:
if "#{hh}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
start_script ('herbheal')
pause
goto "alchemy"
else
goto "alchemy"
end

alchemy:
if "#{al}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
start_script ('alchemy')
pause
goto "outd"
else
goto "outd"
end

outd:
if "#{outd}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
fput "exp outd"
match "roar", "34/34"
match "roar", "33/34"
match "roar", "32/34"
match "outd2", "EXP HELP"
matchwait
else
goto "roar"
end
outd2:
if "#{bra}" == "1"
fput "shove"
pause 4
else
end
fput "wear left\n stow left\n retre\n retre\n collect rock"
match "outd3", "You manage to collect"
match "outd4", "cluttered"
match "roar", "You really need to have at least one hand free to properly collect something."
match "roar", "You cannot collect anything while in combat!"
match "outd2", "...wait"
matchwait

outd3:
pause  15
fput "kick pile\n remove #{lefthand2}\n get #{lefthand2}"
goto "roar"

outd4:
fput "remove #{lefthand2}\n get #{lefthand2}"
outd = 0
goto "roar"

roar:
#start_script ('roar')
#goto "appraise"
if "#{rr}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
fput "exp deb"
match "appraise", "mind lock"
match "roar2", "EXP HELP"
matchwait
else
goto "appraise"
end
roar2:
pause
fput "roar quiet #{roar}"
pause 2

appraise:
if "#{app}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
fput "exp appra"
match "hide", "34/34"
match "hide", "33/34"
match "hide", "32/34"
match "hide", "31/34"
match "appraise2", "EXP HELP"
matchwait
else
goto "hide"
end

appraise2:
fput "appraise #{target}"
pause 5
fput "appraise #{target}"
pause 5
fput "appraise #{target}"
pause 5
goto "hide"

hide:
if "#{hi}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
fput "exp stealth"
match "hunt", "mind lock"
match "hide2", "EXP HELP"
matchwait
else
goto "hunt"
end

hide2:
pause
fput "retre\n retre\n"
pause
fput "retre\n retre\n"
pause
fput "hide"
end

hunt:
if "#{hunt}" == "1"
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
start_script ('hunt')
pause
goto "attackprep"
else
goto "attackprep"
end

attackprep:
fput "#{balance}"
pause "#{balancert}"
fput "#{balance2}"
pause "#{balancert2}"
fput "#{balance3}"
pause "#{balancert3}"
fput "#{stance}"
fput "stow right\n wear left\n stow left\n get my #{righthand}" 
fput "get my #{lefthand}\n remove my #{lefthand}\n #{manuver}"
goto "expcheck"

attack3:
if "#{assess}" == "1"
goto "assess"
else
goto "facedone"
end
assess:
fput "assess"
match "f1", "1: adeptly balanced"
match "f2", "2: adeptly balanced"
match "f3", "3: adeptly balanced"
match "f4", "4: adeptly balanced"
match "f1", "1: nimbly balanced"
match "f2", "2: nimbly balanced"
match "f3", "3: nimbly balanced"
match "f4", "4: nimbly balanced"
match "f1", "1: solidly balanced"
match "f2", "2: solidly balanced"
match "f3", "3: solidly balanced"
match "f4", "4: solidly balanced"
match "facedone", "What do you want to defend against?"
match "facedone", "You are also defending"
match "attack3", "at you."
matchwait

f1:
face = "first"
goto "face"

f2:
face = "second"
goto "face"

f3:
face = "third"
goto "face"

f4:
face = "fourth"
goto "face"

face:
fput "face #{face} #{target}"
goto "facedone"

facedone:
if "#{bodyparts}" == "1"
goto "bodyparts"
else
bp = ""
goto "attack4"
end

bodyparts:
attack4:
if "#{bp}" == "1"
bp = bp +1
abp = "chest"
goto "attack5"
elsif "#{bp}" == "2"
abp = "abdomen"
bp = bp +1
goto "attack5"
elsif "#{bp}" == "3"
abp = "back"
bp = bp +1
goto "attack5"
elsif "#{bp}" == "4"
abp = "left arm"
bp = bp +1
goto "attack5"
elsif "#{bp}" == "5"
abp = "left hand"
bp = 1
goto "attack5"
end

attack5:
fput "#{combo1} #{abp}"
pause "#{combo1p}"
fput "#{combo2} #{abp}"
counter = counter +1
#counter = counter.to_i + "#{combo1p}"	
#counter = counter.to_i + "#{combo2p}"
pause "#{combo2p}"
if "#{counter}" == "60"
goto "expcheck"
else
goto "attack3"
end
expcheck:
ecounter = ecounter +1
pause
if "#{ecounter}" == "#{ecc}"
goto "trainnext"
else
end
fput "exp #{exp}"
match "trainnext", "34/34"
match "trainnext", "33/34"
match "trainnext", "32/34"
match "trainxp#{trainc}", "EXP HELP"
matchwait

trainnext:
fput "get #{lefthand}"
if "#{bc}" == "1"
lefthand2 = "club"
righthand2 = "dao"
bc = bc +1
trainc = trainc +1
goto "train#{trainc}"
elsif "#{bc}" == "2"
lefthand2 = "club"
righthand2 = "dao"
bc = 1
trainc = trainc +1
goto "train#{trainc}"
end


analyze:
ecounter = 0
fput "wear left\n stow left\n stow right\n get my #{righthand}\n get my #{lefthand}"
fput "#{stance}"
fput "#{manuver}"
goto "tacticsexp2"
analyze2:
fput "advance #{target}\n gouge"
pause 0.8 
fput "advance #{target}\n analyze"
match "parseline", "Your analysis reveals"
match "parseline", "You reveal"
match "analyze2", "You must be closer to use tactical abilities"
match "pause6", "Analyze what"
match "analyze2", "You fail to find"
match "pause6", "There is nothing else to face"
match "analyze2", "...wait"
matchwait

pause6:
pause
goto "analyze2"

parseline:
pause 3

line = get
match = line.match(/by landing (.*)/)[1]

unless match.nil?
   my_arr = match.split(' ')
   
   my_arr.each { |action|
      #puts "Action is: #{action}."
      if action.include? 'claw'
         fput "claw left"
         pause
	elsif action.include? 'jab'
         fput "jab left"
         pause
	elsif action.include? 'lunge'
         fput "lunge left"
         pause
      elsif action.include? 'gouge'
         fput "gouge left"
         pause
	elsif action.include? 'swing'
         fput "swing left"
         pause
	elsif action.include? 'bash'
         fput "bash left"
         pause
	elsif action.include? 'slam'
         fput "slam left"
         pause
      elsif action.include? 'punch'
         fput "punch left"
         pause
      elsif action.include? 'elbow'
         fput "elbow left"
         pause
      elsif action.include? 'kick'
         fput "kick left"
         pause
      elsif action.include? 'slap'
         fput "slap left"
         pause
      elsif action.include? 'feint'
         fput "feint left"
         pause
      elsif action.include? 'draw'
         fput "draw left"
         pause
      elsif action.include? 'slice'
         fput "slice left"
         pause
      elsif action.include? 'thrust'
         fput "thrust left"
         pause
      elsif action.include? 'chop'
         fput "chop left"
         pause
      elsif action.include? 'sweep'
         fput "sweep left"
         pause
      else
      end
   }
   goto "tacticsexp"
end


tacticsexp:
counter = counter +1
pause
echo "#{counter}"
if "#{counter}" == "60"
goto "tacticsexp2"
else
goto "analyze2"
end
tacticsexp2:
ecounter = ecounter +1
pause
echo "#{ecounter}"
if "#{ecounter}" == "#{ecc}"
goto "trainnext"
else
end
fput "exp #{exp}"
match "trainnext", "mind lock"
match "trainnext", "nearly locked"
match "trainnext", "enthralled"
match "trainxp#{trainc}", "EXP HELP"
matchwait

killit:
pause
pause
fput "#{stance}"
fput "wear left\n stow left\n stow right\n get my #{righthand}\n remove my #{lefthand}\n get my #{lefthand}"
pause_script ('ktsearcher')
fput "#{manuver}"
pause
unpause_script ('ktsearcher')
killit2:
fput "#{combo1}"
pause "#{combo1p}"
fput "#{combo2}"
pause "#{combo2p}"
fput "#{combo1}"
pause "#{combo1p}"
fput "#{combo2}"
pause "#{combo2p}"
fput "#{combo1}"
pause "#{combo1p}"
fput "#{combo2}"
pause "#{combo2p}"
fput "#{combo1}"
pause "#{combo1p}"
fput "#{combo2}"
pause "#{combo2p}"
fput "#{combo1}"
pause "#{combo1p}"
fput "#{combo2}"
pause "#{combo2p}"
goto "killit2"
