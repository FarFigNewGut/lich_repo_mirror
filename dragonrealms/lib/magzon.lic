=begin
VERSION 6.3 Will now prompt you to setup auto-updating. MOAR modes, items, and better spots, Featuring new ;magz turnin technology, with ;magz task once and ;magz task only ... also now works much better for youngins who were having failure problems.

If you have not yet you will need to do a intial setup for dependency and such... GUIDE: https://github.com/rpherbig/dr-scripts/wiki/First-Time-Setup

You then need to have forage_container: pack and for branch/limb overflow forage_container_two: satchel in your YAML or it will default to backpack and then haversack if backpack is full. You can define a mech_safe_room: # as well so you braid where you want it to, that defaults to the NEGate.
EX. For this scripts new YAML lines: https://pastebin.com/M0tf9Mpq   My entire YAML: https://pastebin.com/i42SXmp2

Youll also want to sell Mags all the branches you can, before you run this. Once thats done and you have a proper YAML. This script will run forage tasks from Mags to train Trading, it will also keep Outdoorsmanship, Perception, Appraisal, Mech, Scholarship, Athletics, Performance, Arcana, Attunement, and any magics setup in your crafting_training_spells https://pastebin.com/GuQY2xF2 pretty much locked from level 5 or so....up to at least level 35 so far (see below). 

Youll need zills for (performance), compendium/textbook for ;first-aid, and a sanowret crystal for ;sanowret-crystal (arcana). You may want to ;e autostart('sanowret-crystal') so it launches on start up for you, but you will defintly want it running with this script if you have one.

Usage is: (;magzon help) or (;magzon task) or (;magzon task only) or (;magzon task once) or (;magzon turnin # item) or (;magzon getme # thing)

Help has a breakdown of the script as well as links for lich first time setup and yaml examples.

Task will loop doing task for Mags to lock trading while doing tons of other things, see help for more detail. You can use (;magzon task only), to idle between tasks instead of training all the other stuff and then exit once trading is locked, or you could (;magzon task once) to do one task then exit.

For turnin item just use the noun of what you are turning in from your  #{@forage_container}. EX: typing: ;magzon turnin 9 flower...would turn in 9 of whatever flowers to Mags. 

For getme thing it can currently be... tree(root), dirt, leaf, acorn, grasses, shark(tooth), rocks, stems, limbs, sticks, roots, branches, corn, rusty(nail), shoe(tack), sap, vines, apple, wild(carrot), blocil(berries) jadice(flower), nemoih(root), georin(grass), sufil(sap), red(flower), blue(flower)... EX: typing: ;magzon getme 11 blue .... would/should forage you 11 blue flowers and stow them in your  #{@forage_container}.')
=end

custom_require.call(%w[drinfomon events common common-items common-travel dependency])


class Foragetask
  include DRC
  include DRCI
  include DRCT


    $linktext = "PLEASE CLICK THIS IF YOU HAVE NOT ... to set auto-updating for when items and functions are added"

    case $frontend
    when "profanity"
    respond ";repository set-updatable magzon"
    #pause 5
    when "stormfront"
    linkify = '<d cmd=";repository set-updatable magzon">' + $linktext + '</d>'
    puts "#{linkify} to this script!"
    respond "Or enter:   ;repository set-updatable magzon"
    #pause 5
    else
    _respond ";repository set-updatable magzon"
    #pause 5
    end



  def initialize
    settings = get_settings
    @mech_safe_room = settings.mech_safe_room || "992"
    @forage_container = settings.forage_container || "backpack"
    @forage_container_two = settings.forage_container_two || "haversack"
    getmode
  end

  def getmode
    if variable[1] =~ /help|info/
      showhelp
    elsif variable[1] =~ /task/
      echo "You can now also do only tasks or just a single task with ;magzon task once and ;magzon task only"
      pause 3
      walk_to('954')
      gettask
    elsif variable[1] =~ /getme/
      number = variable[2]
      item = variable[3]
      echo "Going to get you #{number} of #{item}."
      set_target(item, number)
    elsif variable[1] =~ /turnin/
      number = variable[2]
      item = variable[3]
      echo "Turning in #{number} of #{item} to Mags."
      givemags(item, number)
    else
      echo('Usage is: (;magzon help) or (;magzon task) or (;magzon task only) or (;magzon task once) or (;magzon turnin # item) or (;magzon getme # thing)

Help has a breakdown of the script as well as tips and links for lich first time setup with yaml examples.

Task will loop doing task for Mags to lock trading while doing tons of other things, see help for more detail. You can use (;magzon task only), to idle between tasks instead of training all the other stuff and then exit once trading is locked, or you could (;magzon task once) to do one task then exit.

For turnin item just use the noun of what you are turning in from your  #{@forage_container}. EX: typing: (;magzon turnin 9 flower)...would turn in 9 of whatever flowers to Mags. 

For getme thing it can currently be... tree(root), dirt, leaf, acorn, grasses, shark(tooth), rocks, stems, limbs, sticks, roots, branches, corn, rusty(nail), shoe(tack), sap, vines, apple, wild(carrot), blocil(berries) jadice(flower), nemoih(root), georin(grass), sufil(sap), red(flower), blue(flower)... EX: typing: (;magzon getme 11 blue) .... Would forage you 11 blue flowers and stow them in your  #{@forage_container}.')
      exit
    end
  end
  
  def showhelp
    echo('VERSION 6.3 Will now prompt you to setup auto-updating. MOAR modes, items, and better spots, Featuring new ;magz turnin technology, with ;magz task once and ;magz task only ... also now works much better for youngins who were having failure problems.

If you have not yet you will need to do a intial setup for dependency and such. GUIDE: https://github.com/rpherbig/dr-scripts/wiki/First-Time-Setup

Youll also want to sell Mags all the branches you can, before you run this. Once thats done and you have a proper YAML. This script will run forage tasks from Mags to train Trading, it will also keep Outdoorsmanship, Perception, Appraisal, Mech, Scholarship, Athletics, Performance, Arcana, Attunement, and any magics setup in your crafting_training_spells https://pastebin.com/GuQY2xF2 pretty much locked up to at least level 30ish so far.

Youll need zills for performance, compendium/textbook for ;first-aid, and a sanowret crystal for ;sanowret-crystal arcana. You may want to ;e autostart sanowret-crystal so it launches on start up for you, but you will defintly want it running with this script if you have one.
')
  echo('

Usage is: (;magzon help) or (;magzon task) or (;magzon task only) or (;magzon task once) or (;magzon turnin # item) or (;magzon getme # thing)

Task will loop doing task for Mags to lock trading while doing tons of other things, see help for more detail. You can also ;magzon task only, to idle between tasks instead of training all the other stuff and then exit once trading is locked, or you could ;magzon task once to do one task then exit.

For turnin item just use the noun of what you are turning in from your  #{@forage_container}. EX: typing: ;magzon turnin 9 flower...would turn in 9 of whatever flowers to Mags. 

For getme thing it can currently be... tree(root), dirt, leaf, acorn, grasses, shark(tooth), rocks, stems, limbs, sticks, roots, branches, corn, rusty(nail), shoe(tack), sap, vines, apple, wild(carrot), blocil(berries) jadice(flower), nemoih(root), georin(grass), sufil(sap), red(flower), blue(flower) ect ect ect... EX: typing: ;magzon getme 11 blue .... Would forage you 11 blue flowers and stow them in your  #{@forage_container}.')
    exit
  end

  def gettask
    case bput('ask mags for task', /I need (\d+) bits of (\w+)/, /I need (\d+) pieces of wild (\w+)/, /I need (\d+) some (\w+)/, /I need (\d+) sprigs of (\w+)/, /I need (\d+) (\w+)/, "You are already on a task", "I am sorry, you must wait")
    when /I need (\d+) bits of (\w+)/
      number = Regexp.last_match(1).to_i
      item = Regexp.last_match(2)
      echo "Number is #{number} and item is #{item}."
      set_target(item, number)
    when /I need (\d+) pieces of wild (\w+)/
      number = Regexp.last_match(1).to_i
      item = Regexp.last_match(2)
      echo "Number is #{number} and item is #{item}."
      set_target(item, number)
    when /I need (\d+) some (\w+)/
      number = Regexp.last_match(1).to_i
      item = Regexp.last_match(2)
      echo "Number is #{number} and item is #{item}."
      set_target(item, number)
    when /I need (\d+) sprigs of (\w+)/
      number = Regexp.last_match(1).to_i
      item = Regexp.last_match(2)
      echo "Number is #{number} and item is #{item}."
      set_target(item, number)
    when /I need (\d+) (\w+)/
      number = Regexp.last_match(1).to_i
      item = Regexp.last_match(2)
      echo "Number is #{number} and item is #{item}."
      set_target(item, number)
    when "I am sorry, you must wait"
      if variable[2] =~ /only/
      echo "Running in task only mode so standing here for 35 seconds until next task"
      pause 35
      gettask
      elsif variable[2] =~ /once/
      echo "Running in task once mode so standing here for 35 seconds until next task to get one done"
      pause 35
      gettask
      else
        echo "Next task not ready... working on stuff while waiting for another task"
        do_wait
      end
    when "You are already on a task"
      echo "Already on a task... canceling it"
      cancel_task
    end
  end

  def do_wait
    fput('stand') if not standing?
    pause; waitrt?
    if variable[2] =~ /only/
      echo "Running in task only mode so standing here for 35 seconds until next task"
      pause 35
      gettask
    else
      if DRSkill.getxp('Mechanical Lore') > 29
        echo "Mech looks good so we are going to attunement"
        if DRSkill.getxp('Attunement') > 29
          echo "Attunement looks good so playing and waiting for next task"
          start_script('performance')
          pause 31
          kill_script('performance')
        else
          wait_for_script_to_complete('attunement')
          case DRC.bput("Perc Moon", 'Roundtime:', 'discern anything')
            when /discern anything/
              fput "close pouch"
              fput "perc moon"
            when /Roundtime/
            end
        end
      else
        walk_to(@mech_safe_room)
        wait_for_script_to_complete('mech-lore')
        walk_to('954')
      end
    end
    waitrt?
    gettask
  end

  def decline
    if variable[1] =~ /getme/
      echo('Usage is: (;magzon getme # thing) 
Where thing can currently be... tree(root), dirt, leaf, acorn, grasses, shark(tooth), rocks, stems, limbs, sticks, roots, branches, corn, rusty(nail), shoe(tack), sap, vines, apple, wild(carrot), blocil(berries) jadice(flower), nemoih(root), georin(grass), sufil(sap), red(flower), blue(flower)... EX: typing: ;magzon getme 11 blue .... Would forage you 11 blue flowers and stow them in your  #{@forage_container}.')
      exit
    elsif variable[1] =~ /turnin/
      echo('Usage is: (;magzon turnin # item)
Where item is just the noun of what you are turning in from your #{@forage_container} EX: typing: ;magzon turnin 9 flower...would turn in 9 of whatever flowers to Mags.')
      exit
    else
      case DRC.bput("Decline Task", 'I guess you do not wish to help','Please rephrase that')
        when /I guess you do not wish to help/
          if variable[2] =~ /only/
            echo "Declined for reasons above... Running in task only mode so standing here for 35 seconds until next task"
            pause 35
            gettask
          elsif variable[2] =~ /once/
            echo "Declined for reasons above... Running in task once mode so standing here for 35 seconds until next task to get one done"
            pause 35
            gettask
          else
            echo "Declined for reasons above... working stuff and waiting for another task"
            do_wait
          end
        when /Please rephrase that/
        echo "FIX ME! 74 SEEMS WE ARE TRYING TO DECLINE TASK WE ARE NOT OFFERED! FIX ME! 74"
        exit
        end
    end
  end
  
  def cancel_task
    case DRC.bput("ask mags about task cancel", 'wish to end your current', 'do not currently have a')
    when /do not currently have a/
      echo "FIX ME! 82 SEEMS WE ARE TRYING TO CANCEL A TASK WE ARE NOT ON! FIX ME! 82"
      exit
    when /wish to end your current/
      case DRC.bput("ask mags about task cancel", 'I see that you no longer wish to assist', 'do not currently have a')
      when /do not currently have a/
        echo "FIX ME! 87 SEEMS WE ARE TRYING TO CANCEL A TASK WE ARE NOT ON! FIX ME! 87"
        exit
      when /I see that you no longer wish to assist/
        if variable[2] =~ /only/
          echo "OLD task canceled running in task only mode so standing here for 35 seconds until next task"
          pause 35
          gettask
        elsif variable[2] =~ /once/
          echo "OLD task canceled running in task once mode so standing here for 35 seconds until next task to get one done"
          pause 35
          gettask
        else
          echo "OLD task canceled...working things while we wait for the next one"
          do_wait
        end
      end
    end
  end
  
  def set_target(target, number)
    case target
#Year round anyimes.
    when /dirt/
      room = "792"
      item = "dirt"
    when /leaves|leaf/
      room = "792"
      item = "leaf"
    when /acorns|acorn/
      room = "19343"
      item = "acorn"
      outdoor_req = 35
    when /grasses|grass/
      room = "1387"
      item = "grass"
    when /shark|sharktooth|shark tooth|sharkteeth|shark teeth/
      room = "712"
      item = "shark tooth"
    when /rock|rocks/
      room = "1387"
      item = "rock"
    when /stem|stems/
      room = "1387"
      item = "stem"
    when /limb|limbs/
      room = "19343"
      item = "limb"
    when /stick|sticks/
      room = "1387"
      item = "stick"
    when /root|roots/
      room = "19343"
      item = "root"
    when /branches|branch/
      room = "19343"
      item = "branch"
    when /corn/
      room = "19343"
      item = "corn"
    when /rusty|rustynail|rusty nail/
      room = "1387"
      item = "rusty nail"
    when /shoe|shoetack|shoe tack/
      room = "8263"
      item = "shoe tack"
    when /sap|saps/
      room = "792"
      item = "sap"
    when /vines|vine/
      room = "19343"
      item = "vine"
    when /briarberries/
      room = "1106"
      item = "briarberries"
      outdoor_req = 70
      time_forbidden = /winter|autumn/
    when /briarberry/
      room = "1106"
      item = "briarberry root"
      outdoor_req = 110
      time_forbidden = /winter|autumn/
    when /blue|blueflower|blue flower/
      room = "1387"
      item = "blue flower"
    when /red|redflower|red flower/
      room = "1387"
      item = "red flower"
    when /seolarn|seolarnweed|seolarn weed/
      room = "796"
      item = "seolarn weed"
    when /jadice|jadiceflower|jadice flower/
      room = "8250"
      item = "jadice flower"
      outdoor_req = 20
    when /tree|treeroot|tree root/
      room = "992"
      item = "tree root"
      outdoor_req = 30
    when /georin|georingrass|georin grass|georingrasses|georin grasses/
      room = "851"
      item = "georin grass"
      outdoor_req = 30
    when /nemoih|nemoihroot|nemoih root/
      room = "792"
      item = "nemoih root"
      outdoor_req = 60
    when /moss/
      room = "787"
      item = "moss"
      outdoor_req = 80
    when /plovik|plovikleaves|plovik leaves|plovikleaf|plovik leaf/
      room = "14156"
      item = "plovik leaves"
      outdoor_req = 90
    when /hulnik|hulnik grass/
      room = "1130"
      item = "hulnik grass"
      outdoor_req = 100
    when /riolur|riolur leaves/
      room = "1130"
      item = "riolur leaves"
      outdoor_req = 100
    when /honey|honey combs/
      room = "793"
      item = "honey comb"
      outdoor_req = 200
    when /cebi|cebi root/
      room = "793"
      item = "cebi root"
      outdoor_req = 275
#Not in WINTER's
    when /chamomile/
      room = "1130"
      item = "chamomile"
      outdoor_req = 80
      time_forbidden = /winter/
    when /rose|roses/
      room = "1130"
      item = "rose"
      outdoor_req = 70
      time_forbidden = /winter/
   when /weeds|weed/
      room = "992"
      item = "weed"
      time_forbidden = /winter/
    when /strawberries|strawberry/
      room = "793"
      item = "strawberry"
      time_forbidden = /winter/
    when /turnip|turnips/
      room = "793"
      item = "turnip"
      time_forbidden = /winter|spring/
    when /lavender/
      room = "793"
      item = "lavender"
      time_forbidden = /winter|spring/
    when /berries|berry/
      room = "8250"
      item = "berries"
      time_forbidden = /winter/
    when /wild|carrot|wild carrot|wild carrots|wildcarrot|carrots|wildcarrots/
      room = "793"
      item = "wild carrot"
      outdoor_req = 65
      time_forbidden = /winter/
    when /tea|tealeaves|tea leaves|tealeaf|tea leaf/
      room = "2446"
      item = "tea leaf"
      outdoor_req = 90
      time_forbidden = /winter|autumn/
    when /sufil|sufilsap|sufil sap/
      room = "8250"
      item = "sufil sap"
      time_forbidden = /winter|night|evening|sunset|sunrise/
    when /blocil|blocilberries|blocil berries|blocilberry|blocil berry/
      room = "8250"
      item = "blocil berries"
      outdoor_req = 150
      time_forbidden = /winter/
#Not in SPRING's
    when /apples|apple/
      room = "8241"
      item = "apple"
      time_forbidden = /summer|spring/
#Only found far from Xing
    when /Phelim|phelim|Phelimshell|phelimshell|Phelim shell|phelim shell/
      echo "Can only get this on M'riss."
      location_req = "Qi"
    when /lemon|lemons/
      echo 'Can only get this on Shard side and only in autumn'
      time_forbidden = /winter|spring|summer/
      location_req = "Shard"
    when /jasmine|jasmine flowers/
      location_req = "Shard"
    when /almond|almonds/
      item = "almond"
      time_forbidden = /summer|spring|winter/
      outdoor_req = 90
      location_req = "Shard"
#LOGS SUXOR
    when /log|logs/
      refusal_item = true
#CATCHALL
    else
      refusal_item = true
    end
    collect_item(item, number, room) if should_forage?(outdoor_req, time_forbidden, location_req, refusal_item)
  end

  def should_forage?(outdoor_req = nil, time_forbidden = nil, location_req = nil, refusal_item = nil)
    outdoor_req *= 1.3 if outdoor_req && DRC.bput("time", /sunset|evening|night|sunrise/, 'Anlas', /You.re positive/, /You have a feeling/) =~ /sunset|evening|night|sunrise/
    if outdoor_req && DRSkill.getrank('Outdoorsmanship') < outdoor_req
       echo "Declined because it takes #{outdoor_req}+ Outdoorsmanship"
       decline
       return false
    end
    if time_forbidden && DRC.bput("time", time_forbidden, 'Anlas', /You.re positive/, /You have a feeling/) =~ time_forbidden
       echo "Declined due to time or season"
       decline
       return false
    end
    if location_req
      echo "Declined due to a forage location outside of Zoluren."
      decline
      return false
    end
    if refusal_item
      echo "Declined due to a missing entry or not easily held item."
      decline
      return false
    end
    true
  end
  
  def givemags(item, number)
    walk_to('954')
    item_count = number.to_i
    item_count.times do
      case DRC.bput("get #{item} from my #{@forage_container}", 'What were you referring', 'You do not', 'You get')
      when /You get/
        bput("Give #{item} to Mags", 'You do not', 'The firewood peddler Mags')
      when /You do not/
        echo "#{item} is not in #{@forage_container} trying overflow #{@forage_container_two} "
        case DRC.bput("get #{item} from my #{@forage_container_two}", 'What were you referring', 'You do not', 'You get')
        when /You get/
          bput("Give #{item} to Mags", 'You do not', 'The firewood peddler Mags')
        when /You do not/
          echo "FIX ME! 229 SOMETHING IS WRONG CANNOT FIND ALL #{item}s TO TURN IN! FIX ME! 229"
          exit
        when /What were you referring/
          echo "FIX ME! 232 SOMETHING IS WRONG CANNOT FIND ALL #{item}s TO TURN IN! FIX ME! 232"
          exit
        end
      when /What were you referring/
        echo "#{item} is not in #{@forage_container} trying overflow #{@forage_container_two} "
        case DRC.bput("get #{item} from my #{@forage_container_two}", 'What were you referring', 'You do not', 'You get')
        when /You get/
          bput("Give #{item} to Mags", 'You do not', 'The firewood peddler Mags')
        when /You do not/
          echo "FIX ME! 242 SOMETHING IS WRONG CANNOT FIND ALL #{item}s TO TURN IN! FIX ME! 242"
          exit
        when /What were you referring/
          echo "FIX ME! 245 SOMETHING IS WRONG CANNOT FIND ALL #{item}s TO TURN IN! FIX ME! 245"
          exit  
        end
      end
    end
    
    if variable[1] =~ /turnin/
      echo "Turned in #{number} of #{item}."
      exit
    elsif variable[2] =~ /only/
      if DRSkill.getxp('Trading') > 33
        echo "Trading looks good and running in task only mode...so exiting"
        exit
      else
        echo "Running in task only mode so standing here for 35 seconds until next task"
        pause 35
        gettask
      end
    elsif variable[2] =~ /once/
      echo "Running in task once mode so stopping now!"
      exit
    end
    
    if DRSkill.getxp('Trading') > 32
      case DRC.bput("sk trading", 'Trading')
      when /Trading/
        echo "Trading looks good so taking a lap... study-art, followed by first-aid, then athletics, followed by pick(for pets) ... all with performance between and during when possible"
        start_script('performance')
        pause 31
        kill_script('performance')
        wait_while { running?("performance")}
        pause 2
        wait_for_script_to_complete('study-art')
        wait_while { running?("performance")}
        pause 2
        walk_to('954')
        start_script('performance')
        pause 31
        kill_script('performance')
        wait_while { running?("performance")}
        pause 2
        wait_for_script_to_complete('first-aid')
        wait_while { running?("performance")}
        pause 2
        start_script('performance')
        pause 31
        kill_script('performance')
        wait_while { running?("performance")}
        pause 2
        wait_for_script_to_complete('athletics')
        wait_while { running?("performance")}        
        walk_to('954')
        pause 2
        start_script('performance')
        pause 31
        kill_script('performance')
        wait_while { running?("performance")}
        pause 2
        wait_for_script_to_complete('pick')
        wait_while { running?("performance")}
        pause 2
        echo "Lap done... back to Mags tasks"
        walk_to('954')
        gettask
      end
    else
      case DRC.bput("sk trading", 'Trading')
      when /Trading/
        echo "Waiting to get another Task!"
        do_wait
      end
    end
  end
  
  def collect_item(item, number, room)
    if variable[1] =~ /getme/
      get_item(item, number, room)
    else
      case DRC.bput("Accept Task", 'The firewood peddler Mags', 'You have no offers to')
      when /You have no offers to/
        walk_to('954')
        gettask
      when /The firewood peddler Mags/
        if DRC.right_hand || DRC.left_hand
          fput('stow left')
          fput('stow right')
          get_item(item, number, room)
        else
          get_item(item, number, room)
        end
      end
    end
  end
  
  def get_item(item, number, room)
    sleep 1
    target_number = number.to_i
    walk_to(room)
    sleep 1
    item_count = 0
    attempt_count = 0
    echo "foraging for #{number} #{item}"
    while item_count < target_number do
      case DRC.bput("forage #{item}", 'You manage to find', 'Roundtime', 'You cannot forage while in combat')
      when /You manage to find/
        item_count = item_count + 1
        echo "Found #{item_count} #{item} of #{target_number}"
        waitrt
        case DRC.bput("put my #{item} in my #{@forage_container}", 'any more room in the', 'You put your', 'too heavy to go in there')
        when /any more room in the/
          echo "#{@forage_container} is full... switching to overflow #{@forage_container_two}"
          case DRC.bput("put my #{item} in my #{@forage_container_two}" , 'any more room in the', 'You put your', 'too heavy to go in there')
          when /any more room in the/
            echo "FIX ME! 305 OUT OF ROOM IN #{@forage_container} AND #{@forage_container_two}! FIX ME! 305"
            exit
          when /too heavy to go in there/
            echo "FIX ME! 308 OUT OF ROOM IN #{@forage_container} AND #{@forage_container_two}! FIX ME! 308"
            exit
          end
        when /too heavy to go in there/
          echo "#{@forage_container} is full... switching to overflow #{@forage_container_two}"
          case DRC.bput("put my #{item} in my #{@forage_container_two}" , 'any more room in the', 'You put your', 'too heavy to go in there')
          when /any more room in the/
            echo "FIX ME! 315 OUT OF ROOM IN #{@forage_container} AND #{@forage_container_two}! FIX ME! 315"
            exit
          when /too heavy to go in there/
            echo "FIX ME! 318 OUT OF ROOM IN #{@forage_container} AND #{@forage_container_two}! FIX ME! 318"
            exit
          end
        end
      when /Roundtime/
        attempt_count = attempt_count + 1
        echo "Thats #{attempt_count} of 5 max fails."
        if attempt_count > 4
          echo "FIX ME! 590 TOO MANY FAILED ATTEMPTS FOR #{item}, PLEASE LET PAHZON KNOW ABOUT THIS ... NOTE THE ITEM, TIME/SEASON, AND YOUR OUTDOOR SKILL FIX ME! 590"
          pause 5
          if variable[1] =~ /task/
            echo "In task mode so getting a new one"
            walk_to('954')
            cancel_task
          else
            echo "Looks like we can't get your #{item}, so exiting, sorry but if you take the time to let me (Pahzon) know... I will take the time to try and fix it, note the item/time/season and your outdoor skill"
            exit
          end
        end
      when 'You cannot forage while in combat'
        DRCT.retreat
      end  
    end
    if variable[1] =~ /getme/
      echo "Got all #{number} of #{item}."
      exit
    else
      givemags(item,number)
    end
  end
end
Foragetask.new