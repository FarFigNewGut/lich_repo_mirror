#Pop It!

box_nouns = Array[ 'box','chest','coffer','strongbox','trunk' ]

$script_pop_box_safe = false
	
def sigil
	if checkstamina 50 and checkmana < 400
		#fput 'sigil of power'
	end
end

def rapid
	waitrt?
	waitcastrt?
	if Spell[515].affordable? and !Spell[515].active?
		fput 'incant 515' if checkmana 15
		waitcastrt?
	end
end

def haste
	waitrt?
	waitcastrt?
	if Spell[506].affordable? and !Spell[506].active?
		fput 'incant 506' if checkmana 6
		waitcastrt?
	end
end

trapped = Regexp.union(
		/At first glance, the (.*) appears to be covered with hundreds of tiny metal scales./,
		/It appears that were the tumblers to be activated, the gem would be caught amongst them./,
		/Looking closely into the keyhole of the lock, you spy a small vial of liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with./,
		/Looking closely into the keyhole of the lock, you spy a small vial of fire-red liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with./,
		/Looking closely into the keyhole, you notice a pair of small metal rods a hair's width from touching each other./,
		/Peering closely into the lock, you spy a tiny translucent scarab wedged into the lock mechanism./,
		/Peering closely into the lock, you spy a glimmering opalescent scarab wedged into the lock mechanism./,
		/Peering closely into the lock, you spy a miniature (.*) scarab wedged into the lock mechanism./,
		/Peering closely into the lock, you spy a miniature sky-blue glaes scarab wedged into the lock mechanism./,
		/Peering closely into the lock, you spy a tiny onyx scarab wedged into the lock mechanism./,
		/Looking closely at the lock, you spy a miniature scarab wedged into the lock mechanism./,
		/Looking closely into the keyhole of the lock, you spy a small, dark crystal which seems imbedded in the locking mechanism./,
		/Peering closely into the lock, you spy a tiny vial placed just past the tumblers of the lock mechanism./,
		/Looking closer you see a gleaming sliver of metal recessed in the hole./,
		/Seems rather odd to have a (.*) designed to spring open when it is unlocked./,
		/The tube is capped with a thin membrane, but it seems likely that the tumblers would tear it off while turning./,
		/You notice a discolored oval ring around the outside of the (.*) which makes you suspicious./,
		/You notice some spiderweb-like scratches on the lock plate which seem/,
		/you notice that the lock casing is coated with a rough, grainy substance, and a small bladder is wedged between the tumblers of the lock./,
	)

not_trapped = Regexp.union(
		/You discover no traps./,
		/The lock appears to be free of all obstructions./,
		/There appears to be a plate over the lock, sealing it and preventing any access to the tumblers./,
		/It appears as though the tube used to be covered with a thin membrane, but it has torn mostly away, and greyish-green powder covers the area around it./,
		/You can see what appears to be a tiny hole next to the lock plate which doesn't belong there.  An occasional glint of red winks at you from within the hole./,
		/The scarab is surrounded by crimson glow./,
		)

TRAP_OUTCOMES = Regexp.union(trapped, not_trapped)

	
#NO POP:
#Near the lock mechanism, you notice a pair of small metal rods a hair's width from rubbing together.
#You notice what appears to be a tiny vial placed just past the tumblers of the lock mechanism. 


def detect
	Spell[402].cast if Spell[402].affordable? and !Spell[402].active?
	waitrt?
	waitcastrt?
	Spell[404].cast if Spell[404].affordable? and !Spell[404].active?
	waitrt?
	waitcastrt?
	result = dothistimeout ("detect my #{GameObj.right_hand.noun}", 2, TRAP_OUTCOMES)
	if result =~ /You discover no traps./
		gaze
	elsif result =~ /There appears to be a plate over the lock, sealing it and preventing any access to the tumblers./
		$script_pop_box_safe = true
	elsif result =~ /The lock appears to be free of all obstructions./
		$script_pop_box_safe = true
	elsif result =~ /It appears as though the tube used to be covered with a thin membrane, but it has torn mostly away, and greyish-green powder covers the area around it./
		#Disarm spore trap
		$script_pop_box_safe = true	
	elsif result =~ /You can see what appears to be a tiny hole next to the lock plate which doesn't belong there.  An occasional glint of red winks at you from within the hole./
		#Disarmed poison needle
		$script_pop_box_safe = true
	elsif result =~ /The scarab is surrounded by crimson glow./
		#Disarmed scarab
		$script_pop_box_safe = true
	elsif result =~ /At first glance, the (.*) appears to be covered with hundreds of tiny metal scales./
		disarm
	elsif result =~ /It appears that were the tumblers to be activated, the gem would be caught amongst them./
		disarm
	elsif result =~ /Looking closely at the lock, you spy a miniature scarab wedged into the lock mechanism./
		disarm
	elsif result =~ /Looking closely into the keyhole of the lock, you spy a small vial of fire-red liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with./
		disarm
	elsif result =~ /Looking closely into the keyhole of the lock, you spy a small vial of liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with./
		disarm
	elsif result =~ /Looking closely into the keyhole, you notice a pair of small metal rods a hair's width from touching each other./
		disarm
	elsif result =~ /Looking closely into the keyhole of the lock, you spy a small, dark crystal which seems imbedded in the locking mechanism./
		disarm
	elsif result =~ /Peering closely into the lock, you spy a glimmering opalescent scarab wedged into the lock mechanism./
		disarm
	elsif result =~ /Peering closely into the lock, you spy a miniature (.*) scarab wedged into the lock mechanism./
		disarm
	elsif result =~ /Peering closely into the lock, you spy a miniature sky-blue glaes scarab wedged into the lock mechanism./
		disarm
	elsif result =~ /Peering closely into the lock, you spy a tiny onyx scarab wedged into the lock mechanism./
		disarm
	elsif result =~ /Peering closely into the lock, you spy a tiny translucent scarab wedged into the lock mechanism./
		disarm
	elsif result =~ /Peering closely into the lock, you spy a tiny vial placed just past the tumblers of the lock mechanism./
		disarm
	elsif result =~ /Looking closer you see a gleaming sliver of metal recessed in the hole./
		disarm
	elsif result =~ /Seems rather odd to have a (.*) designed to spring open when it is unlocked./
		disarm
	elsif result =~ /The tube is capped with a thin membrane, but it seems likely that the tumblers would tear it off while turning./
		disarm
	elsif result =~ /You notice a discolored oval ring around the outside of the (.*) which makes you suspicious./
		disarm
	elsif result =~ /You notice some spiderweb-like scratches on the lock plate which seem/
		#Glyph trap
		fput "drop #{GameObj.right_hand.noun}"
	elsif result =~ /you notice that the lock casing is coated with a rough, grainy substance, and a small bladder is wedged between the tumblers of the lock./
		#Boomer
		fput "drop #{GameObj.right_hand.noun}"
	else
		echo 'I do not have information about this trap.'
		Script.pause
	end
end

cast_messaging = Regexp.union(
	/Cast Roundtime/,
	)

gaze_messaging = Regexp.union(
	/At first glance, the (.*) appears to be covered with hundreds of tiny metal scales./,
	/Looking closely into the keyhole of the lock, you spy a small vial of liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with./,
	/Looking closely into the keyhole, you notice a pair of small metal rods a hair's width from touching each other./,
	/Looking closely at the lock, you spy a miniature scarab wedged into the lock mechanism./,
	/Looking closely into the keyhole of the lock, you spy a small, dark crystal which seems imbedded in the locking mechanism./,
	/Peering closely into the lock, you spy a tiny vial placed just past the tumblers of the lock mechanism./,
	/Peering closely into the lock, you spy a tiny translucent scarab wedged into the lock mechanism./,
	/Peering closely into the lock, you spy a glimmering opalescent scarab wedged into the lock mechanism./,
	/Peering closely into the lock, you spy a miniature (.*) scarab wedged into the lock mechanism./,
	/Peering closely into the lock, you spy a miniature sky-blue glaes scarab wedged into the lock mechanism./,
	/Peering closely into the lock, you spy a tiny onyx scarab wedged into the lock mechanism./,
	/Seems rather odd to have a (.*) designed to spring open when it is unlocked./,
	/The inside chamber is lined with some unidentifiable substance./,
	/The tube appears to be filled with a greenish powder./,
	/You notice a discolored oval ring around the outside of the (.*) which makes you suspicious./,
	/you notice that the lock casing is coated with a rough, grainy substance, and a small bladder is wedged between the tumblers of the lock./,
	/You notice what appears to be a sharp sliver of metal nestled in a hole next to the lock plate./,
	/You notice what appears to be a sharp sliver of metal nestled in a hole next to the lock plate.  A crimson glow surrounds the needle./,
	/You see a tiny sphere imbedded in the lock mechanism./,
	/You can see a small crystal imbedded in the locking mechanism./
	)

OUTCOMES = Regexp.union(cast_messaging, gaze_messaging)

def gaze
	waitrt?
	waitcastrt?
	if Spell[515].active?
		if Spell[416].affordable?
			fput 'prep 416'
			result = dothistimeout ("cast my #{GameObj.right_hand.noun}", 2, OUTCOMES)
			if result =~ /Cast Roundtime/
			elsif result =~ /You notice what appears to be a sharp sliver of metal nestled in a hole next to the lock plate.  A crimson glow surrounds the needle./
				#Disarmed poison needle
			elsif result =~ /The scarab is surrounded by crimson glow./
				#Disarmed
	
			elsif result =~ /At first glance, the (.*) appears to be covered with hundreds of tiny metal scales./
				disarm
			elsif result =~ /Looking closely into the keyhole of the lock, you spy a small vial of liquid and a tiny hammer device which seems poised to shatter it if the lock is tampered with./
				disarm
			elsif result =~ /Looking closely into the keyhole, you notice a pair of small metal rods a hair's width from touching each other./
				disarm
			elsif result =~ /Looking closely at the lock, you spy a miniature scarab wedged into the lock mechanism./
				disarm
			elsif result =~ /Looking closely into the keyhole of the lock, you spy a small, dark crystal which seems imbedded in the locking mechanism./
				disarm
			elsif result =~ /Peering closely into the lock, you spy a tiny vial placed just past the tumblers of the lock mechanism./
				disarm
			elsif result =~ /Peering closely into the lock, you spy a tiny translucent scarab wedged into the lock mechanism./
				disarm
			elsif result =~ /Peering closely into the lock, you spy a glimmering opalescent scarab wedged into the lock mechanism./
				disarm
			elsif result =~ /Peering closely into the lock, you spy a miniature (.*) scarab wedged into the lock mechanism./
				disarm
			elsif result =~ /Peering closely into the lock, you spy a miniature sky-blue glaes scarab wedged into the lock mechanism./
				disarm
			elsif result =~ /Peering closely into the lock, you spy a tiny onyx scarab wedged into the lock mechanism./
				disarm
			elsif result =~ /Seems rather odd to have a (.*) designed to spring open when it is unlocked./
				disarm
			elsif result =~ /The inside chamber is lined with some unidentifiable substance./
				disarm
			elsif result =~ /The tube appears to be filled with a greenish powder./
				disarm
			elsif result =~ /You notice a discolored oval ring around the outside of the (.*) which makes you suspicious./
				disarm
			elsif result =~ /you notice that the lock casing is coated with a rough, grainy substance, and a small bladder is wedged between the tumblers of the lock./
				fput "drop #{GameObj.right_hand.noun}"
			elsif result =~ /You notice what appears to be a sharp sliver of metal nestled in a hole next to the lock plate./
				disarm
			elsif result =~ /You can see a small crystal imbedded in the locking mechanism./
				disarm
			elsif result =~ /You see a tiny sphere imbedded in the lock mechanism./
				disarm
			else
				Script.pause
			end
		end
	else
		rapid
		gaze
	end
end

def disarm
	loop {
		waitrt?
		waitcastrt?
		sigil
		if Spell[515].active?
			Spell[404].cast if Spell[404].affordable? and !Spell[404].active?
			waitcastrt?
			if Spell[408].affordable?
				fput 'prepare 408'
				result = dothistimeout "cast my #{GameObj.right_hand.noun}", 2, /The (.*) vibrates slightly but nothing else happens.|The (.*) pulses once with a deep crimson light!/
				if result =~ /The (.*) vibrates slightly but nothing else happens./
					
				elsif result =~ /The (.*) pulses once with a deep crimson light!/
					$script_pop_box_safe = true
					break
				end
			else
				respond 'No mana to cast'
				sleep 5
			end
		else
			rapid
		end
		}
end

def pop
	loop {
		waitrt?
		waitcastrt?
		sigil
		if Spell[515].active?
			Spell[403].cast if Spell[403].affordable? and !Spell[403].active?
			waitcastrt?
			if Spell[407].affordable?
				fput 'prepare 407'
				result = dothistimeout "cast my #{GameObj.right_hand.noun}", 2, /The (.*) vibrates slightly but nothing else happens.|You hear a soft click from the (.*) and it suddenly flies open.|But the coffer is already open./
				if result =~ /The (.*) vibrates slightly but nothing else happens./
					
				elsif result =~ /You hear a soft click from the (.*) and it suddenly flies open.|But the coffer is already open./
					break
				end
			else
				respond 'No mana to cast'
				sleep 5
			end
		else
			rapid
		end
		}
end

def loot
	multifput "loot my #{GameObj.right_hand.noun}",'get my coins'

	waitrt?
	result = dothistimeout "look in my #{GameObj.right_hand.noun}", 2, /There is nothing in there./
	if result =~ /There is nothing in there./
		if Room.current.id == 26833
			fput "put #{GameObj.right_hand.noun} in waste"
		elsif Room.current.id == 29623
			fput "put #{GameObj.right_hand.noun} in bin"
		elsif Room.current.id == 33352
			fput "put #{GameObj.right_hand.noun} in bin"
		else
			fput "drop #{GameObj.right_hand.noun}"
		end
	end
	
	multifput "look in my #{GameObj.right_hand.noun}"
		GameObj.right_hand.contents.each{ |item| 
			fput "get ##{item.id} in my #{GameObj.right_hand.noun}"
			result = dothistimeout "put ##{item.id} in my #{Vars.lootsack}", 10, /You (.*) (.*) in your (.*).|Your (.*) won't fit in the (.*)./
				if result =~ /You (.*) (.*) in your (.*)./
					if Room.current.id == 33352
						fput "put my #{GameObj.right_hand.noun} in bin"
					end
				elsif result =~ /Your (.*) won't fit in the (.*)./
					exit
				end
				}
end

box_nouns.each { |box|
	result = dothistimeout "get my #{box}", 5, /You remove|Get what?/
	if result =~ /You remove/
		rapid
		haste
		detect

		waitrt?
		waitcastrt?
		if $script_pop_box_safe == true
		else
			if GameObj.right_hand != nil
				1.times do gaze end
			end
		end
		
		loop do
			if GameObj.right_hand != nil
				pop
				break
			else
				break
			end
		end

		if GameObj.right_hand != nil
			loot
		end
		
	elsif result =~ /Get what?/
	else
		Script.pause
	end
	}
	

#rapid
#haste
#detect
#waitrt?

#if $script_pop_box_safe == true
#else
#	1.times do gaze end
#end

#respond 'Would you like to proceed?  Type YES if so.'
#waitfor "A good positive attitude never hurts."

#loop {
#	pop
#	break
#	}

		
	
